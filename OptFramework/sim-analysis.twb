<?xml version='1.0' encoding='utf-8' ?>

<workbook version='7.11' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 6100.11.0914.2256                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='7.11'>
      <aliases enabled='yes' />
      <column caption='Overheating Threshold (oC)' datatype='real' name='[Overheating Threshold (oC)]' param-domain-type='range' role='measure' type='quantitative' value='12'>
        <calculation class='tableau' formula='12.0' />
        <range max='12' min='1' />
      </column>
    </datasource>
    <datasource caption='out#csv (out.csv)' inline='true' name='csv.40819.501918912036' version='7.11'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='C:\cygwin\home\aferguso\models\NZEH-optimization\sim-output\' driver='' filename='out.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='out#csv' table='[out#csv]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[# Week (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Calculation12]' peg='0' size='1' />
      </column>
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[csv.40819.501918912036].[sum:Calculation8:qk]&quot;' value='Solar + Internal gains' />
        </aliases>
      </column>
      <column caption='#Max Zone temp (oC)' datatype='real' name='[Calculation10]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max(&#13;&#10;    max(&#13;&#10;         max([building:zone 01:air point:temperature (oC)],&#13;&#10;             [building:zone 03:air point:temperature (oC)])&#13;&#10;        ,&#13;&#10;         max([building:zone 04:air point:temperature (oC)],&#13;&#10;             [building:zone 05:air point:temperature (oC)])&#13;&#10;        )&#13;&#10;,&#13;&#10;max([building:zone 06:air point:temperature (oC)],&#13;&#10;    [building:zone 07:air point:temperature (oC)])&#13;&#10;)' />
      </column>
      <column caption='# Cooling (W, -ive)' datatype='real' name='[Calculation11]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-1 * [building:all zones:supplied energy:cooling (W)]' />
      </column>
      <column caption='# Week' datatype='real' name='[Calculation12]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='round([building:day:future (day)]/7,0)' />
      </column>
      <column caption='Electricity-use: Total (kWh)' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total fuel use:electricity:all end uses:quantity (kWh/s)]*3600' />
      </column>
      <column caption='# Elec-use-HVAC (kWh)' datatype='real' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[electrical net:loads:HVAC load (W)]/1000' />
      </column>
      <column caption='# Elec use Occupants (kWh)' datatype='real' name='[Calculation3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[electrical net:loads:occupant load (W)]/1000' />
      </column>
      <column caption='# Elec use total' datatype='real' name='[Calculation4]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation2]+[Calculation3]' />
      </column>
      <column caption='# Total heating load (GJ)' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[building:all zones:supplied energy:heating (W)]*3600/1E09' />
      </column>
      <column caption='building:zone 01:air point:temperature-range (oC)' datatype='real' name='[Calculation6]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([building:zone 01:air point:temperature (oC)])-min([building:zone 01:air point:temperature (oC)])' />
      </column>
      <column caption='# Zone 3 Overheating' datatype='real' name='[Calculation7]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[building:zone 03:air point:temperature (oC)]-[Parameters].[Overheating Threshold (oC)]' />
      </column>
      <column caption='# Total gains' datatype='real' name='[Calculation8]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[building:all zones:insolation:total (W)]+[building:all zones:internal gains:total (W)]' />
      </column>
      <column caption='# Total free cooling (W)' datatype='real' name='[Calculation9]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([building:zone 01:free cooling: (W)]+&#13;&#10;[building:zone 03:free cooling: (W)]+&#13;&#10;[building:zone 04:free cooling: (W)]+&#13;&#10;[building:zone 05:free cooling: (W)]+&#13;&#10;[building:zone 06:free cooling: (W)]+&#13;&#10;[building:zone 07:free cooling: (W)] )*-1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[building:all zones:insolation:total (W)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[building:all zones:internal gains:total (W)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[building:all zones:supplied energy:cooling (W)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[building:all zones:supplied energy:heating (W)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[building:day:future (day) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[building:day:future (day)]' peg='0' size='1' />
      </column>
      <column datatype='real' name='[building:day:future (day)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[building:hour:future (hours) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[building:hour:future (hours)]' peg='0' size='1' />
      </column>
      <column datatype='real' name='[building:hour:future (hours)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[building:month (-) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[building:month (-)]' peg='0' size='1' />
        <aliases>
          <alias key='1' value='January' />
          <alias key='2' value='February' />
          <alias key='3' value='March' />
          <alias key='4' value='April' />
          <alias key='5' value='May' />
          <alias key='6' value='June' />
          <alias key='7' value='July' />
          <alias key='8' value='August' />
          <alias key='9' value='September' />
          <alias key='10' value='October' />
          <alias key='11' value='November' />
          <alias key='12' value='December' />
        </aliases>
      </column>
      <column datatype='real' name='[building:month (-)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[building:zone 01:air point:temperature (oC)]' role='measure' type='quantitative'>
      </column>
      <column caption='building:zone 03:air point:temperature-range (oC) ' datatype='real' name='[building:zone 01:air point:temperature-range (oC) (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([building:zone 03:air point:temperature (oC)])-min([building:zone 03:air point:temperature (oC)])' />
      </column>
      <column caption='building:zone 05:air point:temperature-range (oC)' datatype='real' name='[building:zone 01:air point:temperature-range (oC) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([building:zone 05:air point:temperature (oC)])-min([building:zone 05:air point:temperature (oC)])' />
      </column>
      <column datatype='real' name='[building:zone 03:air point:temperature (oC)]' role='measure' type='quantitative'>
      </column>
      <column caption='building:zone 04:air point:temperature-range (oC)' datatype='real' name='[building:zone 03:air point:temperature-range (oC) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([building:zone 04:air point:temperature (oC)])-min([building:zone 04:air point:temperature (oC)])' />
      </column>
      <column datatype='real' name='[building:zone 04:air point:temperature (oC)]' role='measure' type='quantitative'>
      </column>
      <column caption='building:zone 06:air point:temperature-range (oC) ' datatype='real' name='[building:zone 04:air point:temperature-range (oC) 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([building:zone 06:air point:temperature (oC)])-min([building:zone 06:air point:temperature (oC)])' />
      </column>
      <column datatype='real' name='[building:zone 05:air point:temperature (oC)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[building:zone 06:air point:temperature (oC)]' role='measure' type='quantitative'>
      </column>
      <column caption='building:zone 07:air point:temperature-range (oC)  (copy)' datatype='real' name='[building:zone 06:air point:temperature-range (oC)  (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([building:zone 07:air point:temperature (oC)])-min([building:zone 07:air point:temperature (oC)])' />
      </column>
      <column datatype='real' name='[building:zone 07:air point:temperature (oC)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[building:zone 09:air point:temperature (oC)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[climate:dry bulb temperature (oC)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[total fuel use:electricity:all end uses:energy content (W)]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[total fuel use:natural gas:all end uses:energy content (W)]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Calculation10]' derivation='Avg' name='[avg:Calculation10:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation11]' derivation='Avg' name='[avg:Calculation11:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation2]' derivation='Avg' name='[avg:Calculation2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation3]' derivation='Avg' name='[avg:Calculation3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation8]' derivation='Avg' name='[avg:Calculation8:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation9]' derivation='Avg' name='[avg:Calculation9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 01:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 01:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 03:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 03:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 04:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 04:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 05:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 05:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 06:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 06:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 07:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 07:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 09:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 09:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[climate:dry bulb temperature (oC)]' derivation='Avg' name='[avg:climate:dry bulb temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation7]' derivation='Count' name='[cnt:Calculation7:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 03:air point:temperature (oC)]' derivation='Count' name='[cnt:building:zone 03:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 03:air point:temperature (oC)]' derivation='Count' name='[diff:cnt:building:zone 03:air point:temperature (oC):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[building:zone 01:air point:temperature (oC)]' derivation='Min' name='[min:building:zone 01:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 03:air point:temperature (oC)]' derivation='Min' name='[min:building:zone 03:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 05:air point:temperature (oC)]' derivation='Min' name='[min:building:zone 05:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation10]' derivation='Sum' name='[sum:Calculation10:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation11]' derivation='Sum' name='[sum:Calculation11:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation2]' derivation='Sum' name='[sum:Calculation2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation3]' derivation='Sum' name='[sum:Calculation3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation5]' derivation='Sum' name='[sum:Calculation5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation7]' derivation='Sum' name='[sum:Calculation7:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation8]' derivation='Sum' name='[sum:Calculation8:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation9]' derivation='Sum' name='[sum:Calculation9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:all zones:insolation:total (W)]' derivation='Sum' name='[sum:building:all zones:insolation:total (W):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:all zones:internal gains:total (W)]' derivation='Sum' name='[sum:building:all zones:internal gains:total (W):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:all zones:supplied energy:cooling (W)]' derivation='Sum' name='[sum:building:all zones:supplied energy:cooling (W):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:all zones:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:all zones:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 01:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 01:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 03:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 03:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 04:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 04:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 05:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 05:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 06:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 06:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 07:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 07:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[building:zone 09:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 09:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[climate:dry bulb temperature (oC)]' derivation='Sum' name='[sum:climate:dry bulb temperature (oC):qk]' pivot='key' type='quantitative' />
      <column-instance column='[total fuel use:electricity:all end uses:energy content (W)]' derivation='Sum' name='[sum:total fuel use:electricity:all end uses:energy content (W):qk]' pivot='key' type='quantitative' />
      <column-instance column='[total fuel use:natural gas:all end uses:energy content (W)]' derivation='Sum' name='[sum:total fuel use:natural gas:all end uses:energy content (W):qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#1f77b4'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:Calculation10:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#1f77b4'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:Calculation11:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#1f77b4'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:building:all zones:insolation:total (W):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#1f77b4'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:Calculation10:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#1f77b4'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:Calculation3:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#1f77b4'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:Calculation5:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#1f77b4'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:Calculation7:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#1f77b4'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:Calculation9:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#26456e'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:climate:dry bulb temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#2ca02c'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:Calculation8:qk]:1&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#2ca02c'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[cnt:building:zone 03:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#2ca02c'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[cnt:Calculation7:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#2ca02c'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[diff:cnt:building:zone 03:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#2ca02c'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:total fuel use:electricity:all end uses:energy content (W):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#9467bd'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[min:building:zone 05:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#9c0824'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:building:zone 09:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#aec7e8'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:Calculation9:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#aec7e8'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[min:building:zone 01:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#aec7e8'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[min:building:zone 03:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#aec7e8'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:Calculation11:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:building:zone 01:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:building:zone 03:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:building:zone 04:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:building:zone 05:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:building:zone 06:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:building:zone 07:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:building:zone 09:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#d62728'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:total fuel use:natural gas:all end uses:energy content (W):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#da3f31'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:building:zone 01:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#de4b3b'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:building:zone 03:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#de4b3b'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:building:zone 04:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#e35846'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:building:zone 05:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#eb6555'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:building:zone 06:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#f37263'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:building:zone 07:air point:temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:Calculation2:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:Calculation3:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:climate:dry bulb temperature (oC):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[cnt:Number of Records:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:building:all zones:supplied energy:heating (W):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:Calculation2:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:Calculation8:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#ff9896'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:building:all zones:internal gains:total (W):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#ffbb78'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:Calculation8:qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
            <map to='#ffbb78'>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:building:all zones:supplied energy:cooling (W):qk]&quot;</value>
                </tuple>
              </bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Overheating Threshold (oC)' datatype='real' name='[Overheating Threshold (oC)]' param-domain-type='range' role='measure' type='quantitative' value='12'>
          <calculation class='tableau' formula='12.0' />
          <range max='12' min='1' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='out#csv (out.csv)' name='csv.40819.501918912036' />
          </datasources>
          <datasource-dependencies datasource='csv.40819.501918912036'>
            <column datatype='real' name='[building:all zones:supplied energy:cooling (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[building:month (-) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[building:month (-)]' peg='0' size='1' />
              <aliases>
                <alias key='1' value='January' />
                <alias key='2' value='February' />
                <alias key='3' value='March' />
                <alias key='4' value='April' />
                <alias key='5' value='May' />
                <alias key='6' value='June' />
                <alias key='7' value='July' />
                <alias key='8' value='August' />
                <alias key='9' value='September' />
                <alias key='10' value='October' />
                <alias key='11' value='November' />
                <alias key='12' value='December' />
              </aliases>
            </column>
            <column datatype='real' name='[building:month (-)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[building:all zones:supplied energy:cooling (W)]' derivation='Max' name='[max:building:all zones:supplied energy:cooling (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:supplied energy:heating (W)]' derivation='Max' name='[max:building:all zones:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Automatic'>
            </mark>
          </pane>
        </panes>
        <rows>([csv.40819.501918912036].[max:building:all zones:supplied energy:cooling (W):qk] + [csv.40819.501918912036].[max:building:all zones:supplied energy:heating (W):qk])</rows>
        <cols>[csv.40819.501918912036].[building:month (-) (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='out#csv (out.csv)' name='csv.40819.501918912036' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.40819.501918912036'>
            <column caption='#Max Zone temp (oC)' datatype='real' name='[Calculation10]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(&#13;&#10;    max(&#13;&#10;         max([building:zone 01:air point:temperature (oC)],&#13;&#10;             [building:zone 03:air point:temperature (oC)])&#13;&#10;        ,&#13;&#10;         max([building:zone 04:air point:temperature (oC)],&#13;&#10;             [building:zone 05:air point:temperature (oC)])&#13;&#10;        )&#13;&#10;,&#13;&#10;max([building:zone 06:air point:temperature (oC)],&#13;&#10;    [building:zone 07:air point:temperature (oC)])&#13;&#10;)' />
            </column>
            <column caption='# Cooling (W, -ive)' datatype='real' name='[Calculation11]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-1 * [building:all zones:supplied energy:cooling (W)]' />
            </column>
            <column caption='# Week' datatype='real' name='[Calculation12]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='round([building:day:future (day)]/7,0)' />
            </column>
            <column caption='# Elec-use-HVAC (kWh)' datatype='real' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[electrical net:loads:HVAC load (W)]/1000' />
            </column>
            <column caption='# Elec use Occupants (kWh)' datatype='real' name='[Calculation3]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[electrical net:loads:occupant load (W)]/1000' />
            </column>
            <column caption='# Elec use total' datatype='real' name='[Calculation4]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]+[Calculation3]' />
            </column>
            <column caption='# Total heating load (GJ)' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[building:all zones:supplied energy:heating (W)]*3600/1E09' />
            </column>
            <column caption='building:zone 01:air point:temperature-range (oC)' datatype='real' name='[Calculation6]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 01:air point:temperature (oC)])-min([building:zone 01:air point:temperature (oC)])' />
            </column>
            <column caption='# Zone 3 Overheating' datatype='real' name='[Calculation7]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[building:zone 03:air point:temperature (oC)]-[Parameters].[Overheating Threshold (oC)]' />
            </column>
            <column caption='# Total gains' datatype='real' name='[Calculation8]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[building:all zones:insolation:total (W)]+[building:all zones:internal gains:total (W)]' />
            </column>
            <column caption='# Total free cooling (W)' datatype='real' name='[Calculation9]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([building:zone 01:free cooling: (W)]+&#13;&#10;[building:zone 03:free cooling: (W)]+&#13;&#10;[building:zone 04:free cooling: (W)]+&#13;&#10;[building:zone 05:free cooling: (W)]+&#13;&#10;[building:zone 06:free cooling: (W)]+&#13;&#10;[building:zone 07:free cooling: (W)] )*-1' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation10]' derivation='Avg' name='[avg:Calculation10:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[building:all zones:insolation:adverse (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:insolation:total (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:insolation:useful (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:internal gains:adverse (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:internal gains:total (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:internal gains:useful (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:supplied energy:cooling (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:day:future (day)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:hour:future (hours)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[building:month (-) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[building:month (-)]' peg='0' size='1' />
              <aliases>
                <alias key='1' value='January' />
                <alias key='2' value='February' />
                <alias key='3' value='March' />
                <alias key='4' value='April' />
                <alias key='5' value='May' />
                <alias key='6' value='June' />
                <alias key='7' value='July' />
                <alias key='8' value='August' />
                <alias key='9' value='September' />
                <alias key='10' value='October' />
                <alias key='11' value='November' />
                <alias key='12' value='December' />
              </aliases>
            </column>
            <column datatype='real' name='[building:month (-)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:time step (-)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 01:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column caption='building:zone 03:air point:temperature-range (oC) ' datatype='real' name='[building:zone 01:air point:temperature-range (oC) (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 03:air point:temperature (oC)])-min([building:zone 03:air point:temperature (oC)])' />
            </column>
            <column caption='building:zone 05:air point:temperature-range (oC)' datatype='real' name='[building:zone 01:air point:temperature-range (oC) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 05:air point:temperature (oC)])-min([building:zone 05:air point:temperature (oC)])' />
            </column>
            <column datatype='real' name='[building:zone 01:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 01:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 02:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 02:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 02:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 03:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column caption='building:zone 04:air point:temperature-range (oC)' datatype='real' name='[building:zone 03:air point:temperature-range (oC) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 04:air point:temperature (oC)])-min([building:zone 04:air point:temperature (oC)])' />
            </column>
            <column datatype='real' name='[building:zone 03:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 03:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 04:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column caption='building:zone 06:air point:temperature-range (oC) ' datatype='real' name='[building:zone 04:air point:temperature-range (oC) 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 06:air point:temperature (oC)])-min([building:zone 06:air point:temperature (oC)])' />
            </column>
            <column datatype='real' name='[building:zone 04:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 04:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 05:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 05:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 05:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 06:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column caption='building:zone 07:air point:temperature-range (oC)  (copy)' datatype='real' name='[building:zone 06:air point:temperature-range (oC)  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 07:air point:temperature (oC)])-min([building:zone 07:air point:temperature (oC)])' />
            </column>
            <column datatype='real' name='[building:zone 06:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 06:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 07:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 07:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 07:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 08:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 08:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 08:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 09:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 09:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 09:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:dry bulb temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:relative humidity (%)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:solar:diffuse horizontal radiation (W/m2)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:solar:direct normal radiation (W/m2)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[electrical net:loads:HVAC load (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[electrical net:loads:external load (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[electrical net:loads:occupant load (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[electrical net:loads:total load (W)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation10]' derivation='None' name='[none:Calculation10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation10]' derivation='Sum' name='[sum:Calculation10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation11]' derivation='Sum' name='[sum:Calculation11:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation12]' derivation='Sum' name='[sum:Calculation12:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation2]' derivation='Sum' name='[sum:Calculation2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation3]' derivation='Sum' name='[sum:Calculation3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation4]' derivation='Sum' name='[sum:Calculation4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation5]' derivation='Sum' name='[sum:Calculation5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation7]' derivation='Sum' name='[sum:Calculation7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation8]' derivation='Sum' name='[sum:Calculation8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation9]' derivation='Sum' name='[sum:Calculation9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:insolation:adverse (W)]' derivation='Sum' name='[sum:building:all zones:insolation:adverse (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:insolation:total (W)]' derivation='Sum' name='[sum:building:all zones:insolation:total (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:insolation:useful (W)]' derivation='Sum' name='[sum:building:all zones:insolation:useful (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:internal gains:adverse (W)]' derivation='Sum' name='[sum:building:all zones:internal gains:adverse (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:internal gains:total (W)]' derivation='Sum' name='[sum:building:all zones:internal gains:total (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:internal gains:useful (W)]' derivation='Sum' name='[sum:building:all zones:internal gains:useful (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:supplied energy:cooling (W)]' derivation='Sum' name='[sum:building:all zones:supplied energy:cooling (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:all zones:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:day:future (day)]' derivation='Sum' name='[sum:building:day:future (day):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:hour:future (hours)]' derivation='Sum' name='[sum:building:hour:future (hours):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:month (-)]' derivation='Sum' name='[sum:building:month (-):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:time step (-)]' derivation='Sum' name='[sum:building:time step (-):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 01:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 01:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 01:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 02:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 02:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 02:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 02:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 02:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 02:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 03:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 03:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 03:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 04:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 04:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 04:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 05:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 05:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 05:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 05:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 05:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 05:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 06:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 06:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 06:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 07:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 07:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 07:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 07:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 07:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 07:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 08:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 08:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 08:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 08:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 08:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 08:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 09:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 09:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 09:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 09:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 09:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 09:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:dry bulb temperature (oC)]' derivation='Sum' name='[sum:climate:dry bulb temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:relative humidity (%)]' derivation='Sum' name='[sum:climate:relative humidity (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:solar:diffuse horizontal radiation (W/m2)]' derivation='Sum' name='[sum:climate:solar:diffuse horizontal radiation (W/m2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:solar:direct normal radiation (W/m2)]' derivation='Sum' name='[sum:climate:solar:direct normal radiation (W/m2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[electrical net:loads:HVAC load (W)]' derivation='Sum' name='[sum:electrical net:loads:HVAC load (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[electrical net:loads:external load (W)]' derivation='Sum' name='[sum:electrical net:loads:external load (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[electrical net:loads:occupant load (W)]' derivation='Sum' name='[sum:electrical net:loads:occupant load (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[electrical net:loads:total load (W)]' derivation='Sum' name='[sum:electrical net:loads:total load (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total fuel use:test:all fuels:equipment:energy content (W)]' derivation='Sum' name='[sum:total fuel use:test:all fuels:equipment:energy content (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total fuel use:test:all fuels:space cooling:energy content (W)]' derivation='Sum' name='[sum:total fuel use:test:all fuels:space cooling:energy content (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total fuel use:test:all fuels:space heating:energy content (W)]' derivation='Sum' name='[sum:total fuel use:test:all fuels:space heating:energy content (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total fuel use:test:all fuels:ventilation:energy content (W)]' derivation='Sum' name='[sum:total fuel use:test:all fuels:ventilation:energy content (W):qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total fuel use:test:all fuels:equipment:energy content (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[total fuel use:test:all fuels:space cooling:energy content (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[total fuel use:test:all fuels:space heating:energy content (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[total fuel use:test:all fuels:ventilation:energy content (W)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:air point:temperature-range (oC) (copy 2)]' derivation='User' name='[usr:building:zone 01:air point:temperature-range (oC) (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:air point:temperature-range (oC) (copy)]' derivation='User' name='[usr:building:zone 01:air point:temperature-range (oC) (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:air point:temperature-range (oC) (copy)]' derivation='User' name='[usr:building:zone 03:air point:temperature-range (oC) (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:air point:temperature-range (oC) 1]' derivation='User' name='[usr:building:zone 04:air point:temperature-range (oC) 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:air point:temperature-range (oC)  (copy)]' derivation='User' name='[usr:building:zone 06:air point:temperature-range (oC)  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.40819.501918912036].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='quantitative' column='[csv.40819.501918912036].[none:Calculation10:qk]' included-values='in-range'>
            <min>26.010000000000002</min>
            <max>33.792503000000004</max>
          </filter>
          <slices>
            <column>[csv.40819.501918912036].[none:Calculation10:qk]</column>
            <column>[csv.40819.501918912036].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.40819.501918912036].[avg:Calculation10:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Bar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.40819.501918912036].[cnt:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Bar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.40819.501918912036].[avg:Calculation10:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.40819.501918912036].[cnt:Number of Records:qk] + [csv.40819.501918912036].[avg:Calculation10:qk])</rows>
        <cols>[csv.40819.501918912036].[building:month (-) (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
          </datasources>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Automatic'>
            </mark>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Temp unfilt'>
      <table>
        <view>
          <datasources>
            <datasource caption='out#csv (out.csv)' name='csv.40819.501918912036' />
          </datasources>
          <datasource-dependencies datasource='csv.40819.501918912036'>
            <column caption='# Cooling (W, -ive)' datatype='real' name='[Calculation11]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-1 * [building:all zones:supplied energy:cooling (W)]' />
            </column>
            <column caption='# Total gains' datatype='real' name='[Calculation8]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[building:all zones:insolation:total (W)]+[building:all zones:internal gains:total (W)]' />
            </column>
            <column caption='# Total free cooling (W)' datatype='real' name='[Calculation9]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([building:zone 01:free cooling: (W)]+&#13;&#10;[building:zone 03:free cooling: (W)]+&#13;&#10;[building:zone 04:free cooling: (W)]+&#13;&#10;[building:zone 05:free cooling: (W)]+&#13;&#10;[building:zone 06:free cooling: (W)]+&#13;&#10;[building:zone 07:free cooling: (W)] )*-1' />
            </column>
            <column datatype='real' name='[building:all zones:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[building:day:future (day) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[building:day:future (day)]' peg='0' size='1' />
            </column>
            <column datatype='real' name='[building:day:future (day)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[building:hour:future (hours) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[building:hour:future (hours)]' peg='0' size='1' />
            </column>
            <column datatype='real' name='[building:hour:future (hours)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 01:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 03:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 04:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 05:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 06:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 07:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 09:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:dry bulb temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation11]' derivation='Sum' name='[sum:Calculation11:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation8]' derivation='Sum' name='[sum:Calculation8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation9]' derivation='Sum' name='[sum:Calculation9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:all zones:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 01:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 03:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 04:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 05:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 05:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 06:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 07:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 07:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 09:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 09:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:dry bulb temperature (oC)]' derivation='Sum' name='[sum:climate:dry bulb temperature (oC):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.40819.501918912036].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:building:zone 01:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:building:zone 03:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:building:zone 04:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:building:zone 05:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:building:zone 06:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:building:zone 07:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:climate:dry bulb temperature (oC):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.40819.501918912036].[building:day:future (day) (bin)]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([climate:dry bulb temperature (oC)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[building:day:future (day) (bin)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.40819.501918912036].[:Measure Names]</column>
            <column>[csv.40819.501918912036].[building:day:future (day) (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.40819.501918912036].[sum:building:zone 09:air point:temperature (oC):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='1' field='[csv.40819.501918912036].[sum:Calculation8:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[csv.40819.501918912036].[sum:Calculation11:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f2e6e6' />
            <format attr='fill-below' id='refline0' value='#eaf7e1' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='line-pattern' id='refline0' value='dotted' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='rounding' id='annotation_0' value='medium' />
            <format attr='body-type' id='annotation_0' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Circle'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
            <reference-line axis-column='[csv.40819.501918912036].[Multiple Values]' formula='constant' id='refline0' label='Cool-threshold' label-type='custom' scope='per-pane' value='26' value-column='[csv.40819.501918912036].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.40819.501918912036].[Multiple Values]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Circle'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='2' y-axis-name='[csv.40819.501918912036].[sum:building:zone 09:air point:temperature (oC):qk]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='3' y-axis-name='[csv.40819.501918912036].[sum:Calculation8:qk]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Bar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='4' y-axis-name='[csv.40819.501918912036].[sum:Calculation8:qk]' y-index='1'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='GanttBar'>
              <size column='[csv.40819.501918912036].[sum:building:all zones:supplied energy:heating (W):qk]' />
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='5' y-axis-name='[csv.40819.501918912036].[sum:Calculation9:qk]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Bar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='6' y-axis-name='[csv.40819.501918912036].[sum:Calculation11:qk]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Bar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
        </panes>
        <rows>([csv.40819.501918912036].[Multiple Values] + ([csv.40819.501918912036].[sum:building:zone 09:air point:temperature (oC):qk] + ([csv.40819.501918912036].[sum:Calculation8:qk] + ([csv.40819.501918912036].[sum:Calculation8:qk] + ([csv.40819.501918912036].[sum:Calculation9:qk] + [csv.40819.501918912036].[sum:Calculation11:qk])))))</rows>
        <cols>[csv.40819.501918912036].[building:hour:future (hours) (bin)]</cols>
        <pages>
          <column>[csv.40819.501918912036].[building:day:future (day) (bin)]</column>
        </pages>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='1' text-width-delta='-18'>
            <formatted-text>
              <run fontsize='12'>Day </run>
              <run fontsize='12'>&lt;</run>
              <run fontsize='12'>Page Number</run>
              <run fontsize='12'>&gt;</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.6'>
                  <node-reference>
                    <fields>
                      <field>[csv.40819.501918912036].[building:hour:future (hours) (bin)]</field>
                    </fields>
                    <multibucket>
                      <bucket class='key'>
                        <tuple>
                          <value>1</value>
                        </tuple>
                      </bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-2252.6682129545461'>
                  <node-reference>
                    <axis>[csv.40819.501918912036].[sum:Calculation9:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[csv.40819.501918912036].[building:day:future (day) (bin)]</field>
                  </fields>
                  <multibucket>
                    <bucket class='key'>
                      <tuple>
                        <value>60</value>
                      </tuple>
                    </bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.6'>
                  <node-reference>
                    <fields>
                      <field>[csv.40819.501918912036].[building:hour:future (hours) (bin)]</field>
                    </fields>
                    <multibucket>
                      <bucket class='key'>
                        <tuple>
                          <value>6</value>
                        </tuple>
                      </bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-2911.1404598181825'>
                  <node-reference>
                    <axis>[csv.40819.501918912036].[sum:Calculation9:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[csv.40819.501918912036].[building:day:future (day) (bin)]</field>
                  </fields>
                  <multibucket>
                    <bucket class='key'>
                      <tuple>
                        <value>60</value>
                      </tuple>
                    </bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.3' y='-122' />
          </annotation>
        </annotations>
        <page-trail-options enabled='true' end='99' mark-type='manual' size='5' />
      </table>
    </worksheet>
    <worksheet name='Temp-filtered'>
      <table>
        <view>
          <datasources>
            <datasource caption='out#csv (out.csv)' name='csv.40819.501918912036' />
          </datasources>
          <datasource-dependencies datasource='csv.40819.501918912036'>
            <column caption='#Max Zone temp (oC)' datatype='real' name='[Calculation10]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(&#13;&#10;    max(&#13;&#10;         max([building:zone 01:air point:temperature (oC)],&#13;&#10;             [building:zone 03:air point:temperature (oC)])&#13;&#10;        ,&#13;&#10;         max([building:zone 04:air point:temperature (oC)],&#13;&#10;             [building:zone 05:air point:temperature (oC)])&#13;&#10;        )&#13;&#10;,&#13;&#10;max([building:zone 06:air point:temperature (oC)],&#13;&#10;    [building:zone 07:air point:temperature (oC)])&#13;&#10;)' />
            </column>
            <column caption='# Total gains' datatype='real' name='[Calculation8]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[building:all zones:insolation:total (W)]+[building:all zones:internal gains:total (W)]' />
            </column>
            <column caption='# Total free cooling (W)' datatype='real' name='[Calculation9]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([building:zone 01:free cooling: (W)]+&#13;&#10;[building:zone 03:free cooling: (W)]+&#13;&#10;[building:zone 04:free cooling: (W)]+&#13;&#10;[building:zone 05:free cooling: (W)]+&#13;&#10;[building:zone 06:free cooling: (W)]+&#13;&#10;[building:zone 07:free cooling: (W)] )*-1' />
            </column>
            <column datatype='real' name='[building:all zones:supplied energy:cooling (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[building:day:future (day) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[building:day:future (day)]' peg='0' size='1' />
            </column>
            <column datatype='real' name='[building:day:future (day)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[building:hour:future (hours) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[building:hour:future (hours)]' peg='0' size='1' />
            </column>
            <column datatype='real' name='[building:hour:future (hours)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[building:month (-) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[building:month (-)]' peg='0' size='1' />
              <aliases>
                <alias key='1' value='January' />
                <alias key='2' value='February' />
                <alias key='3' value='March' />
                <alias key='4' value='April' />
                <alias key='5' value='May' />
                <alias key='6' value='June' />
                <alias key='7' value='July' />
                <alias key='8' value='August' />
                <alias key='9' value='September' />
                <alias key='10' value='October' />
                <alias key='11' value='November' />
                <alias key='12' value='December' />
              </aliases>
            </column>
            <column datatype='real' name='[building:month (-)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 01:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 03:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 04:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 05:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 06:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 07:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 09:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:dry bulb temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation8]' derivation='Sum' name='[sum:Calculation8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation9]' derivation='Sum' name='[sum:Calculation9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:supplied energy:cooling (W)]' derivation='Sum' name='[sum:building:all zones:supplied energy:cooling (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:all zones:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 01:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 03:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 04:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 05:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 05:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 06:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 07:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 07:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 09:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 09:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:dry bulb temperature (oC)]' derivation='Sum' name='[sum:climate:dry bulb temperature (oC):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.40819.501918912036].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:building:zone 01:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:building:zone 03:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:building:zone 04:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:building:zone 05:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:building:zone 06:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:building:zone 07:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:climate:dry bulb temperature (oC):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.40819.501918912036].[building:day:future (day) (bin)]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Calculation10])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[building:day:future (day) (bin)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.40819.501918912036].[:Measure Names]</column>
            <column>[csv.40819.501918912036].[building:day:future (day) (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.40819.501918912036].[sum:building:zone 09:air point:temperature (oC):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='1' field='[csv.40819.501918912036].[sum:Calculation8:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[csv.40819.501918912036].[sum:building:all zones:supplied energy:cooling (W):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f2e6e6' />
            <format attr='fill-below' id='refline0' value='#eaf7e1' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='line-pattern' id='refline0' value='dotted' />
            <format attr='fill-above' id='refline1' value='#e37671' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#b40f1e' />
            <format attr='line-pattern' id='refline1' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Circle'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
            <reference-line axis-column='[csv.40819.501918912036].[Multiple Values]' formula='constant' id='refline0' label='Cool-threshold' label-type='custom' scope='per-pane' value='26' value-column='[csv.40819.501918912036].[Multiple Values]' z-order='1' />
            <reference-line axis-column='[csv.40819.501918912036].[Multiple Values]' formula='constant' id='refline1' label='Too Hot!' label-type='custom' scope='per-pane' value='30' value-column='[csv.40819.501918912036].[Multiple Values]' z-order='2' />
          </pane>
          <pane id='1' y-axis-name='[csv.40819.501918912036].[Multiple Values]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Circle'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='2' y-axis-name='[csv.40819.501918912036].[sum:building:zone 09:air point:temperature (oC):qk]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='3' y-axis-name='[csv.40819.501918912036].[sum:Calculation8:qk]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
                <column>[csv.40819.501918912036].[building:month (-) (bin)]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Bar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='4' y-axis-name='[csv.40819.501918912036].[sum:Calculation8:qk]' y-index='1'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='GanttBar'>
              <size column='[csv.40819.501918912036].[sum:building:all zones:supplied energy:heating (W):qk]' />
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='5' y-axis-name='[csv.40819.501918912036].[sum:Calculation9:qk]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Bar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='6' y-axis-name='[csv.40819.501918912036].[sum:building:all zones:supplied energy:cooling (W):qk]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Bar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
        </panes>
        <rows>([csv.40819.501918912036].[Multiple Values] + ([csv.40819.501918912036].[sum:building:zone 09:air point:temperature (oC):qk] + ([csv.40819.501918912036].[sum:Calculation8:qk] + ([csv.40819.501918912036].[sum:Calculation8:qk] + ([csv.40819.501918912036].[sum:Calculation9:qk] + [csv.40819.501918912036].[sum:building:all zones:supplied energy:cooling (W):qk])))))</rows>
        <cols>[csv.40819.501918912036].[building:hour:future (hours) (bin)]</cols>
        <pages>
          <column>[csv.40819.501918912036].[building:day:future (day) (bin)]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Total heating load'>
      <table>
        <view>
          <datasources>
            <datasource caption='out#csv (out.csv)' name='csv.40819.501918912036' />
          </datasources>
          <datasource-dependencies datasource='csv.40819.501918912036'>
            <column caption='# Total heating load (GJ)' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[building:all zones:supplied energy:heating (W)]*3600/1E09' />
            </column>
            <column datatype='real' name='[building:all zones:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation5]' derivation='Sum' name='[sum:Calculation5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:all zones:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total fuel use:electricity:all end uses:energy content (W)]' derivation='Sum' name='[sum:total fuel use:electricity:all end uses:energy content (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total fuel use:natural gas:all end uses:energy content (W)]' derivation='Sum' name='[sum:total fuel use:natural gas:all end uses:energy content (W):qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total fuel use:electricity:all end uses:energy content (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[total fuel use:natural gas:all end uses:energy content (W)]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.40819.501918912036].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:building:all zones:supplied energy:heating (W):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:total fuel use:electricity:all end uses:energy content (W):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[sum:total fuel use:natural gas:all end uses:energy content (W):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.40819.501918912036].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
              <text column='[csv.40819.501918912036].[sum:Calculation5:qk]' />
            </mark>
            <mark class='Icon'>
              <text column='[csv.40819.501918912036].[sum:Calculation5:qk]' />
            </mark>
            <mark class='Shape'>
              <text column='[csv.40819.501918912036].[sum:Calculation5:qk]' />
            </mark>
            <mark class='Square'>
              <text column='[csv.40819.501918912036].[sum:Calculation5:qk]' />
            </mark>
            <mark class='Circle'>
              <text column='[csv.40819.501918912036].[sum:Calculation5:qk]' />
            </mark>
            <mark class='Bar'>
              <text column='[csv.40819.501918912036].[sum:Calculation5:qk]' />
            </mark>
            <mark class='GanttBar'>
              <text column='[csv.40819.501918912036].[sum:Calculation5:qk]' />
            </mark>
            <mark class='Line'>
              <text column='[csv.40819.501918912036].[sum:Calculation5:qk]' />
            </mark>
            <mark class='Automatic'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.40819.501918912036].[sum:Calculation5:qk]</rows>
        <cols>[csv.40819.501918912036].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Zone-temps by month'>
      <table>
        <view>
          <datasources>
            <datasource caption='out#csv (out.csv)' name='csv.40819.501918912036' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.40819.501918912036'>
            <column caption='#Max Zone temp (oC)' datatype='real' name='[Calculation10]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(&#13;&#10;    max(&#13;&#10;         max([building:zone 01:air point:temperature (oC)],&#13;&#10;             [building:zone 03:air point:temperature (oC)])&#13;&#10;        ,&#13;&#10;         max([building:zone 04:air point:temperature (oC)],&#13;&#10;             [building:zone 05:air point:temperature (oC)])&#13;&#10;        )&#13;&#10;,&#13;&#10;max([building:zone 06:air point:temperature (oC)],&#13;&#10;    [building:zone 07:air point:temperature (oC)])&#13;&#10;)' />
            </column>
            <column caption='# Cooling (W, -ive)' datatype='real' name='[Calculation11]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-1 * [building:all zones:supplied energy:cooling (W)]' />
            </column>
            <column caption='# Week' datatype='real' name='[Calculation12]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='round([building:day:future (day)]/7,0)' />
            </column>
            <column caption='# Elec-use-HVAC (kWh)' datatype='real' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[electrical net:loads:HVAC load (W)]/1000' />
            </column>
            <column caption='# Elec use Occupants (kWh)' datatype='real' name='[Calculation3]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[electrical net:loads:occupant load (W)]/1000' />
            </column>
            <column caption='# Elec use total' datatype='real' name='[Calculation4]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]+[Calculation3]' />
            </column>
            <column caption='# Total heating load (GJ)' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[building:all zones:supplied energy:heating (W)]*3600/1E09' />
            </column>
            <column caption='building:zone 01:air point:temperature-range (oC)' datatype='real' name='[Calculation6]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 01:air point:temperature (oC)])-min([building:zone 01:air point:temperature (oC)])' />
            </column>
            <column caption='# Zone 3 Overheating' datatype='real' name='[Calculation7]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[building:zone 03:air point:temperature (oC)]-[Parameters].[Overheating Threshold (oC)]' />
            </column>
            <column caption='# Total gains' datatype='real' name='[Calculation8]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[building:all zones:insolation:total (W)]+[building:all zones:internal gains:total (W)]' />
            </column>
            <column caption='# Total free cooling (W)' datatype='real' name='[Calculation9]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([building:zone 01:free cooling: (W)]+&#13;&#10;[building:zone 03:free cooling: (W)]+&#13;&#10;[building:zone 04:free cooling: (W)]+&#13;&#10;[building:zone 05:free cooling: (W)]+&#13;&#10;[building:zone 06:free cooling: (W)]+&#13;&#10;[building:zone 07:free cooling: (W)] )*-1' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[building:zone 03:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 03:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[building:all zones:insolation:adverse (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:insolation:total (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:insolation:useful (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:internal gains:adverse (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:internal gains:total (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:internal gains:useful (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:supplied energy:cooling (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:day:future (day)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:hour:future (hours)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[building:month (-) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[building:month (-)]' peg='0' size='1' />
              <aliases>
                <alias key='1' value='January' />
                <alias key='2' value='February' />
                <alias key='3' value='March' />
                <alias key='4' value='April' />
                <alias key='5' value='May' />
                <alias key='6' value='June' />
                <alias key='7' value='July' />
                <alias key='8' value='August' />
                <alias key='9' value='September' />
                <alias key='10' value='October' />
                <alias key='11' value='November' />
                <alias key='12' value='December' />
              </aliases>
            </column>
            <column datatype='real' name='[building:month (-)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:time step (-)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 01:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column caption='building:zone 03:air point:temperature-range (oC) ' datatype='real' name='[building:zone 01:air point:temperature-range (oC) (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 03:air point:temperature (oC)])-min([building:zone 03:air point:temperature (oC)])' />
            </column>
            <column caption='building:zone 05:air point:temperature-range (oC)' datatype='real' name='[building:zone 01:air point:temperature-range (oC) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 05:air point:temperature (oC)])-min([building:zone 05:air point:temperature (oC)])' />
            </column>
            <column datatype='real' name='[building:zone 01:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 01:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 02:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 02:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 02:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 03:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column caption='building:zone 04:air point:temperature-range (oC)' datatype='real' name='[building:zone 03:air point:temperature-range (oC) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 04:air point:temperature (oC)])-min([building:zone 04:air point:temperature (oC)])' />
            </column>
            <column datatype='real' name='[building:zone 03:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 03:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 04:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column caption='building:zone 06:air point:temperature-range (oC) ' datatype='real' name='[building:zone 04:air point:temperature-range (oC) 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 06:air point:temperature (oC)])-min([building:zone 06:air point:temperature (oC)])' />
            </column>
            <column datatype='real' name='[building:zone 04:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 04:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 05:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 05:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 05:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 06:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column caption='building:zone 07:air point:temperature-range (oC)  (copy)' datatype='real' name='[building:zone 06:air point:temperature-range (oC)  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 07:air point:temperature (oC)])-min([building:zone 07:air point:temperature (oC)])' />
            </column>
            <column datatype='real' name='[building:zone 06:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 06:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 07:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 07:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 07:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 08:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 08:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 08:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 09:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 09:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 09:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:dry bulb temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:relative humidity (%)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:solar:diffuse horizontal radiation (W/m2)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:solar:direct normal radiation (W/m2)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[building:zone 03:air point:temperature (oC)]' derivation='Count' name='[cnt:building:zone 03:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[electrical net:loads:HVAC load (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[electrical net:loads:external load (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[electrical net:loads:occupant load (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[electrical net:loads:total load (W)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[building:zone 03:air point:temperature (oC)]' derivation='Min' name='[min:building:zone 03:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation10]' derivation='Sum' name='[sum:Calculation10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation11]' derivation='Sum' name='[sum:Calculation11:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation12]' derivation='Sum' name='[sum:Calculation12:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation2]' derivation='Sum' name='[sum:Calculation2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation3]' derivation='Sum' name='[sum:Calculation3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation4]' derivation='Sum' name='[sum:Calculation4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation5]' derivation='Sum' name='[sum:Calculation5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation7]' derivation='Sum' name='[sum:Calculation7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation8]' derivation='Sum' name='[sum:Calculation8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation9]' derivation='Sum' name='[sum:Calculation9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:insolation:adverse (W)]' derivation='Sum' name='[sum:building:all zones:insolation:adverse (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:insolation:total (W)]' derivation='Sum' name='[sum:building:all zones:insolation:total (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:insolation:useful (W)]' derivation='Sum' name='[sum:building:all zones:insolation:useful (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:internal gains:adverse (W)]' derivation='Sum' name='[sum:building:all zones:internal gains:adverse (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:internal gains:total (W)]' derivation='Sum' name='[sum:building:all zones:internal gains:total (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:internal gains:useful (W)]' derivation='Sum' name='[sum:building:all zones:internal gains:useful (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:supplied energy:cooling (W)]' derivation='Sum' name='[sum:building:all zones:supplied energy:cooling (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:all zones:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:day:future (day)]' derivation='Sum' name='[sum:building:day:future (day):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:hour:future (hours)]' derivation='Sum' name='[sum:building:hour:future (hours):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:month (-)]' derivation='Sum' name='[sum:building:month (-):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:time step (-)]' derivation='Sum' name='[sum:building:time step (-):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 01:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 01:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 01:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 02:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 02:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 02:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 02:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 02:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 02:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 03:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 03:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 03:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 04:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 04:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 04:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 05:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 05:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 05:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 05:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 05:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 05:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 06:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 06:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 06:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 07:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 07:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 07:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 07:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 07:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 07:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 08:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 08:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 08:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 08:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 08:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 08:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 09:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 09:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 09:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 09:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 09:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 09:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:dry bulb temperature (oC)]' derivation='Sum' name='[sum:climate:dry bulb temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:relative humidity (%)]' derivation='Sum' name='[sum:climate:relative humidity (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:solar:diffuse horizontal radiation (W/m2)]' derivation='Sum' name='[sum:climate:solar:diffuse horizontal radiation (W/m2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:solar:direct normal radiation (W/m2)]' derivation='Sum' name='[sum:climate:solar:direct normal radiation (W/m2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[electrical net:loads:HVAC load (W)]' derivation='Sum' name='[sum:electrical net:loads:HVAC load (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[electrical net:loads:external load (W)]' derivation='Sum' name='[sum:electrical net:loads:external load (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[electrical net:loads:occupant load (W)]' derivation='Sum' name='[sum:electrical net:loads:occupant load (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[electrical net:loads:total load (W)]' derivation='Sum' name='[sum:electrical net:loads:total load (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total fuel use:test:all fuels:equipment:energy content (W)]' derivation='Sum' name='[sum:total fuel use:test:all fuels:equipment:energy content (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total fuel use:test:all fuels:space cooling:energy content (W)]' derivation='Sum' name='[sum:total fuel use:test:all fuels:space cooling:energy content (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total fuel use:test:all fuels:space heating:energy content (W)]' derivation='Sum' name='[sum:total fuel use:test:all fuels:space heating:energy content (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total fuel use:test:all fuels:ventilation:energy content (W)]' derivation='Sum' name='[sum:total fuel use:test:all fuels:ventilation:energy content (W):qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total fuel use:test:all fuels:equipment:energy content (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[total fuel use:test:all fuels:space cooling:energy content (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[total fuel use:test:all fuels:space heating:energy content (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[total fuel use:test:all fuels:ventilation:energy content (W)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:air point:temperature-range (oC) (copy 2)]' derivation='User' name='[usr:building:zone 01:air point:temperature-range (oC) (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:air point:temperature-range (oC) (copy)]' derivation='User' name='[usr:building:zone 01:air point:temperature-range (oC) (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:air point:temperature-range (oC) (copy)]' derivation='User' name='[usr:building:zone 03:air point:temperature-range (oC) (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:air point:temperature-range (oC) 1]' derivation='User' name='[usr:building:zone 04:air point:temperature-range (oC) 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:air point:temperature-range (oC)  (copy)]' derivation='User' name='[usr:building:zone 06:air point:temperature-range (oC)  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.40819.501918912036].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='quantitative' column='[csv.40819.501918912036].[min:building:zone 03:air point:temperature (oC):qk]' included-values='in-range'>
            <min>16.587617999999999</min>
            <max>21.935732000000002</max>
          </filter>
          <slices>
            <column>[csv.40819.501918912036].[:Measure Names]</column>
            <column>[csv.40819.501918912036].[min:building:zone 03:air point:temperature (oC):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.40819.501918912036].[avg:building:zone 03:air point:temperature (oC):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='GanttBar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='1' y-axis-name='[csv.40819.501918912036].[min:building:zone 03:air point:temperature (oC):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='GanttBar'>
              <size column='[csv.40819.501918912036].[usr:Calculation6:qk]' />
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='2' y-axis-name='[csv.40819.501918912036].[avg:building:zone 03:air point:temperature (oC):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[csv.40819.501918912036].[cnt:building:zone 03:air point:temperature (oC):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='GanttBar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
        </panes>
        <rows>([csv.40819.501918912036].[min:building:zone 03:air point:temperature (oC):qk] + ([csv.40819.501918912036].[avg:building:zone 03:air point:temperature (oC):qk] + [csv.40819.501918912036].[cnt:building:zone 03:air point:temperature (oC):qk]))</rows>
        <cols>[csv.40819.501918912036].[building:month (-) (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='by-month'>
      <table>
        <view>
          <datasources>
            <datasource caption='out#csv (out.csv)' name='csv.40819.501918912036' />
          </datasources>
          <datasource-dependencies datasource='csv.40819.501918912036'>
            <column datatype='integer' name='[# Week (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation12]' peg='0' size='1' />
            </column>
            <column caption='# Cooling (W, -ive)' datatype='real' name='[Calculation11]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-1 * [building:all zones:supplied energy:cooling (W)]' />
            </column>
            <column caption='# Week' datatype='real' name='[Calculation12]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='round([building:day:future (day)]/7,0)' />
            </column>
            <column caption='# Total gains' datatype='real' name='[Calculation8]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[building:all zones:insolation:total (W)]+[building:all zones:internal gains:total (W)]' />
            </column>
            <column caption='# Total free cooling (W)' datatype='real' name='[Calculation9]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([building:zone 01:free cooling: (W)]+&#13;&#10;[building:zone 03:free cooling: (W)]+&#13;&#10;[building:zone 04:free cooling: (W)]+&#13;&#10;[building:zone 05:free cooling: (W)]+&#13;&#10;[building:zone 06:free cooling: (W)]+&#13;&#10;[building:zone 07:free cooling: (W)] )*-1' />
            </column>
            <column-instance column='[Calculation11]' derivation='Avg' name='[avg:Calculation11:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation8]' derivation='Avg' name='[avg:Calculation8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation9]' derivation='Avg' name='[avg:Calculation9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:supplied energy:heating (W)]' derivation='Avg' name='[avg:building:all zones:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 01:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 03:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 04:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 05:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 05:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 06:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 07:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 07:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 09:air point:temperature (oC)]' derivation='Avg' name='[avg:building:zone 09:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:dry bulb temperature (oC)]' derivation='Avg' name='[avg:climate:dry bulb temperature (oC):qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[building:all zones:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[building:hour:future (hours) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[building:hour:future (hours)]' peg='0' size='1' />
            </column>
            <column datatype='real' name='[building:hour:future (hours)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[building:month (-) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[building:month (-)]' peg='0' size='1' />
              <aliases>
                <alias key='1' value='January' />
                <alias key='2' value='February' />
                <alias key='3' value='March' />
                <alias key='4' value='April' />
                <alias key='5' value='May' />
                <alias key='6' value='June' />
                <alias key='7' value='July' />
                <alias key='8' value='August' />
                <alias key='9' value='September' />
                <alias key='10' value='October' />
                <alias key='11' value='November' />
                <alias key='12' value='December' />
              </aliases>
            </column>
            <column datatype='real' name='[building:month (-)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 01:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 03:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 04:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 05:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 06:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 07:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 09:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:dry bulb temperature (oC)]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.40819.501918912036].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[avg:building:zone 01:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[avg:building:zone 03:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[avg:building:zone 04:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[avg:building:zone 05:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[avg:building:zone 06:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[avg:building:zone 07:air point:temperature (oC):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.40819.501918912036].[avg:climate:dry bulb temperature (oC):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.40819.501918912036].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.40819.501918912036].[avg:building:zone 09:air point:temperature (oC):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='1' field='[csv.40819.501918912036].[avg:Calculation8:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[csv.40819.501918912036].[avg:Calculation11:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f2e6e6' />
            <format attr='fill-below' id='refline0' value='#eaf7e1' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='line-pattern' id='refline0' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Circle'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
            <reference-line axis-column='[csv.40819.501918912036].[Multiple Values]' formula='constant' id='refline0' label='Cool-threshold' label-type='custom' scope='per-pane' value='26' value-column='[csv.40819.501918912036].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.40819.501918912036].[Multiple Values]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Shape'>
              <shape column='[csv.40819.501918912036].[:Measure Names]' />
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='2' y-axis-name='[csv.40819.501918912036].[avg:building:zone 09:air point:temperature (oC):qk]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='3' y-axis-name='[csv.40819.501918912036].[avg:Calculation8:qk]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Bar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='4' y-axis-name='[csv.40819.501918912036].[avg:Calculation8:qk]' y-index='1'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
                <column>[csv.40819.501918912036].[building:month (-) (bin)]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='GanttBar'>
              <size column='[csv.40819.501918912036].[avg:building:all zones:supplied energy:heating (W):qk]' />
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='5' y-axis-name='[csv.40819.501918912036].[avg:Calculation9:qk]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Bar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='6' y-axis-name='[csv.40819.501918912036].[avg:Calculation11:qk]'>
            <view>
              <groups>
                <column>[csv.40819.501918912036].[:Measure Names]</column>
              </groups>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Bar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
        </panes>
        <rows>([csv.40819.501918912036].[Multiple Values] + ([csv.40819.501918912036].[avg:building:zone 09:air point:temperature (oC):qk] + ([csv.40819.501918912036].[avg:Calculation8:qk] + ([csv.40819.501918912036].[avg:Calculation8:qk] + ([csv.40819.501918912036].[avg:Calculation9:qk] + [csv.40819.501918912036].[avg:Calculation11:qk])))))</rows>
        <cols>[csv.40819.501918912036].[building:hour:future (hours) (bin)]</cols>
        <pages>
          <column>[csv.40819.501918912036].[# Week (bin)]</column>
        </pages>
        <page-trail-options end='99' mark-type='all' size='5' start='0' />
      </table>
    </worksheet>
    <worksheet name='elec-loads x hr'>
      <table>
        <view>
          <datasources>
            <datasource caption='out#csv (out.csv)' name='csv.40819.501918912036' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.40819.501918912036'>
            <column caption='#Max Zone temp (oC)' datatype='real' name='[Calculation10]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(&#13;&#10;    max(&#13;&#10;         max([building:zone 01:air point:temperature (oC)],&#13;&#10;             [building:zone 03:air point:temperature (oC)])&#13;&#10;        ,&#13;&#10;         max([building:zone 04:air point:temperature (oC)],&#13;&#10;             [building:zone 05:air point:temperature (oC)])&#13;&#10;        )&#13;&#10;,&#13;&#10;max([building:zone 06:air point:temperature (oC)],&#13;&#10;    [building:zone 07:air point:temperature (oC)])&#13;&#10;)' />
            </column>
            <column caption='# Cooling (W, -ive)' datatype='real' name='[Calculation11]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-1 * [building:all zones:supplied energy:cooling (W)]' />
            </column>
            <column caption='# Week' datatype='real' name='[Calculation12]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='round([building:day:future (day)]/7,0)' />
            </column>
            <column caption='# Elec-use-HVAC (kWh)' datatype='real' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[electrical net:loads:HVAC load (W)]/1000' />
            </column>
            <column caption='# Elec use Occupants (kWh)' datatype='real' name='[Calculation3]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[electrical net:loads:occupant load (W)]/1000' />
            </column>
            <column caption='# Elec use total' datatype='real' name='[Calculation4]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation2]+[Calculation3]' />
            </column>
            <column caption='# Total heating load (GJ)' datatype='real' name='[Calculation5]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[building:all zones:supplied energy:heating (W)]*3600/1E09' />
            </column>
            <column caption='building:zone 01:air point:temperature-range (oC)' datatype='real' name='[Calculation6]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 01:air point:temperature (oC)])-min([building:zone 01:air point:temperature (oC)])' />
            </column>
            <column caption='# Zone 3 Overheating' datatype='real' name='[Calculation7]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[building:zone 03:air point:temperature (oC)]-[Parameters].[Overheating Threshold (oC)]' />
            </column>
            <column caption='# Total gains' datatype='real' name='[Calculation8]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[building:all zones:insolation:total (W)]+[building:all zones:internal gains:total (W)]' />
            </column>
            <column caption='# Total free cooling (W)' datatype='real' name='[Calculation9]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([building:zone 01:free cooling: (W)]+&#13;&#10;[building:zone 03:free cooling: (W)]+&#13;&#10;[building:zone 04:free cooling: (W)]+&#13;&#10;[building:zone 05:free cooling: (W)]+&#13;&#10;[building:zone 06:free cooling: (W)]+&#13;&#10;[building:zone 07:free cooling: (W)] )*-1' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation2]' derivation='Avg' name='[avg:Calculation2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation3]' derivation='Avg' name='[avg:Calculation3:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[building:all zones:insolation:adverse (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:insolation:total (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:insolation:useful (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:internal gains:adverse (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:internal gains:total (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:internal gains:useful (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:supplied energy:cooling (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:all zones:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:day:future (day)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[building:hour:future (hours) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[building:hour:future (hours)]' peg='0' size='1' />
            </column>
            <column datatype='real' name='[building:hour:future (hours)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:month (-)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:time step (-)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 01:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column caption='building:zone 03:air point:temperature-range (oC) ' datatype='real' name='[building:zone 01:air point:temperature-range (oC) (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 03:air point:temperature (oC)])-min([building:zone 03:air point:temperature (oC)])' />
            </column>
            <column caption='building:zone 05:air point:temperature-range (oC)' datatype='real' name='[building:zone 01:air point:temperature-range (oC) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 05:air point:temperature (oC)])-min([building:zone 05:air point:temperature (oC)])' />
            </column>
            <column datatype='real' name='[building:zone 01:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 01:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 02:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 02:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 02:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 03:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column caption='building:zone 04:air point:temperature-range (oC)' datatype='real' name='[building:zone 03:air point:temperature-range (oC) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 04:air point:temperature (oC)])-min([building:zone 04:air point:temperature (oC)])' />
            </column>
            <column datatype='real' name='[building:zone 03:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 03:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 04:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column caption='building:zone 06:air point:temperature-range (oC) ' datatype='real' name='[building:zone 04:air point:temperature-range (oC) 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 06:air point:temperature (oC)])-min([building:zone 06:air point:temperature (oC)])' />
            </column>
            <column datatype='real' name='[building:zone 04:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 04:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 05:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 05:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 05:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 06:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column caption='building:zone 07:air point:temperature-range (oC)  (copy)' datatype='real' name='[building:zone 06:air point:temperature-range (oC)  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([building:zone 07:air point:temperature (oC)])-min([building:zone 07:air point:temperature (oC)])' />
            </column>
            <column datatype='real' name='[building:zone 06:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 06:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 07:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 07:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 07:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 08:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 08:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 08:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 09:air point:temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 09:free cooling: (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[building:zone 09:supplied energy:heating (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:dry bulb temperature (oC)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:relative humidity (%)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:solar:diffuse horizontal radiation (W/m2)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[climate:solar:direct normal radiation (W/m2)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[electrical net:loads:HVAC load (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[electrical net:loads:external load (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[electrical net:loads:occupant load (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[electrical net:loads:total load (W)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[building:month (-)]' derivation='None' name='[none:building:month (-):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation10]' derivation='Sum' name='[sum:Calculation10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation11]' derivation='Sum' name='[sum:Calculation11:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation12]' derivation='Sum' name='[sum:Calculation12:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation2]' derivation='Sum' name='[sum:Calculation2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation3]' derivation='Sum' name='[sum:Calculation3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation4]' derivation='Sum' name='[sum:Calculation4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation5]' derivation='Sum' name='[sum:Calculation5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation7]' derivation='Sum' name='[sum:Calculation7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation8]' derivation='Sum' name='[sum:Calculation8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation9]' derivation='Sum' name='[sum:Calculation9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:insolation:adverse (W)]' derivation='Sum' name='[sum:building:all zones:insolation:adverse (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:insolation:total (W)]' derivation='Sum' name='[sum:building:all zones:insolation:total (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:insolation:useful (W)]' derivation='Sum' name='[sum:building:all zones:insolation:useful (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:internal gains:adverse (W)]' derivation='Sum' name='[sum:building:all zones:internal gains:adverse (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:internal gains:total (W)]' derivation='Sum' name='[sum:building:all zones:internal gains:total (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:internal gains:useful (W)]' derivation='Sum' name='[sum:building:all zones:internal gains:useful (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:supplied energy:cooling (W)]' derivation='Sum' name='[sum:building:all zones:supplied energy:cooling (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:all zones:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:all zones:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:day:future (day)]' derivation='Sum' name='[sum:building:day:future (day):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:hour:future (hours)]' derivation='Sum' name='[sum:building:hour:future (hours):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:month (-)]' derivation='Sum' name='[sum:building:month (-):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:time step (-)]' derivation='Sum' name='[sum:building:time step (-):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 01:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 01:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 01:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 02:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 02:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 02:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 02:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 02:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 02:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 03:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 03:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 03:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 04:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 04:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 04:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 05:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 05:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 05:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 05:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 05:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 05:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 06:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 06:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 06:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 07:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 07:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 07:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 07:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 07:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 07:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 08:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 08:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 08:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 08:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 08:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 08:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 09:air point:temperature (oC)]' derivation='Sum' name='[sum:building:zone 09:air point:temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 09:free cooling: (W)]' derivation='Sum' name='[sum:building:zone 09:free cooling: (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 09:supplied energy:heating (W)]' derivation='Sum' name='[sum:building:zone 09:supplied energy:heating (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:dry bulb temperature (oC)]' derivation='Sum' name='[sum:climate:dry bulb temperature (oC):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:relative humidity (%)]' derivation='Sum' name='[sum:climate:relative humidity (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:solar:diffuse horizontal radiation (W/m2)]' derivation='Sum' name='[sum:climate:solar:diffuse horizontal radiation (W/m2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[climate:solar:direct normal radiation (W/m2)]' derivation='Sum' name='[sum:climate:solar:direct normal radiation (W/m2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[electrical net:loads:HVAC load (W)]' derivation='Sum' name='[sum:electrical net:loads:HVAC load (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[electrical net:loads:external load (W)]' derivation='Sum' name='[sum:electrical net:loads:external load (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[electrical net:loads:occupant load (W)]' derivation='Sum' name='[sum:electrical net:loads:occupant load (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[electrical net:loads:total load (W)]' derivation='Sum' name='[sum:electrical net:loads:total load (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total fuel use:test:all fuels:equipment:energy content (W)]' derivation='Sum' name='[sum:total fuel use:test:all fuels:equipment:energy content (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total fuel use:test:all fuels:space cooling:energy content (W)]' derivation='Sum' name='[sum:total fuel use:test:all fuels:space cooling:energy content (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total fuel use:test:all fuels:space heating:energy content (W)]' derivation='Sum' name='[sum:total fuel use:test:all fuels:space heating:energy content (W):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total fuel use:test:all fuels:ventilation:energy content (W)]' derivation='Sum' name='[sum:total fuel use:test:all fuels:ventilation:energy content (W):qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total fuel use:test:all fuels:equipment:energy content (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[total fuel use:test:all fuels:space cooling:energy content (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[total fuel use:test:all fuels:space heating:energy content (W)]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[total fuel use:test:all fuels:ventilation:energy content (W)]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:air point:temperature-range (oC) (copy 2)]' derivation='User' name='[usr:building:zone 01:air point:temperature-range (oC) (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 01:air point:temperature-range (oC) (copy)]' derivation='User' name='[usr:building:zone 01:air point:temperature-range (oC) (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 03:air point:temperature-range (oC) (copy)]' derivation='User' name='[usr:building:zone 03:air point:temperature-range (oC) (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 04:air point:temperature-range (oC) 1]' derivation='User' name='[usr:building:zone 04:air point:temperature-range (oC) 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[building:zone 06:air point:temperature-range (oC)  (copy)]' derivation='User' name='[usr:building:zone 06:air point:temperature-range (oC)  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.40819.501918912036].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <sort class='manual' column='[csv.40819.501918912036].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[avg:Calculation3:qk]&quot;</value>
                </tuple>
              </bucket>
              <bucket class='key'>
                <tuple>
                  <value>&quot;[csv.40819.501918912036].[sum:Calculation2:qk]&quot;</value>
                </tuple>
              </bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.40819.501918912036].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[csv.40819.501918912036].[avg:Calculation2:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='GanttBar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='3' y-axis-name='[csv.40819.501918912036].[avg:Calculation2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='GanttBar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='Bar'>
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
          <pane id='4' y-axis-name='[csv.40819.501918912036].[avg:Calculation2:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text'>
            </mark>
            <mark class='Icon'>
            </mark>
            <mark class='Shape'>
            </mark>
            <mark class='Square'>
            </mark>
            <mark class='Circle'>
            </mark>
            <mark class='Bar'>
            </mark>
            <mark class='Line'>
            </mark>
            <mark class='GanttBar'>
              <size column='[csv.40819.501918912036].[avg:Calculation3:qk]' />
              <color column='[csv.40819.501918912036].[:Measure Names]' />
            </mark>
          </pane>
        </panes>
        <rows>([csv.40819.501918912036].[avg:Calculation2:qk] + [csv.40819.501918912036].[avg:Calculation2:qk])</rows>
        <cols>[csv.40819.501918912036].[building:hour:future (hours) (bin)]</cols>
        <pages>
          <column>[csv.40819.501918912036].[none:building:month (-):ok]</column>
        </pages>
        <page-trail-options size='5' />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <zones>
        <zone h='100000' id='4' param='horz' type='layout-flow' w='100000' x='0' y='0'>
          <zone h='100000' id='2' type='layout-basic' w='77496' x='0' y='0'>
            <zone h='100000' id='1' name='Temp unfilt' show-title='true' w='77496' x='0' y='0'>
            </zone>
          </zone>
          <zone fixed-size='160' h='100000' id='7' is-fixed='true' type='layout-basic' w='22504' x='77496' y='0'>
            <zone h='16403' id='3' param='vert' type='layout-flow' w='22504' x='77496' y='0'>
              <zone h='16403' id='5' name='Temp unfilt' param='[csv.40819.501918912036].[:Measure Names]' type='color' w='22504' x='77496' y='0'>
              </zone>
            </zone>
            <zone h='83597' id='8' param='vert' type='layout-flow' w='22504' x='77496' y='16403'>
              <zone h='18276' id='6' name='Temp unfilt' type='currpage' w='22504' x='77496' y='16403'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' hidden='false' source-height='-1' />
    <window class='dashboard-pane' hidden='true' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='elec-loads x hr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[csv.40819.501918912036].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.40819.501918912036].[:Measure Names]</field>
          <field>[csv.40819.501918912036].[building:hour:future (hours) (bin)]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Total heating load'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.40819.501918912036].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.40819.501918912036].[building:hour:future (hours) (bin)]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Zone-temps by month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.40819.501918912036].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.40819.501918912036].[min:building:zone 03:air point:temperature (oC):qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.40819.501918912036].[building:month (-) (bin)]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Temp unfilt'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card looped='1' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='65'>
            <card pane-specification-id='1' param='[csv.40819.501918912036].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket class='key'>
              <tuple>
                <value>215</value>
              </tuple>
            </bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.40819.501918912036].[building:day:future (day) (bin)]</field>
          <field>[csv.40819.501918912036].[building:hour:future (hours) (bin)]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 1'>
      <active id='6' />
      <zones>
        <zone name='Temp unfilt'>
          <viewpoint>
            <current-page>
              <multibucket>
                <bucket class='key'>
                  <tuple>
                    <value>190</value>
                  </tuple>
                </bucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Temp unfilt' pane-specification-id='1' param='[csv.40819.501918912036].[:Measure Names]' type='color'>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='by-month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card looped='1' type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='1' param='[csv.40819.501918912036].[:Measure Names]' type='shape' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='65'>
            <card pane-specification-id='1' param='[csv.40819.501918912036].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket class='key'>
              <tuple>
                <value>30</value>
              </tuple>
            </bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.40819.501918912036].[# Week (bin)]</field>
          <field>[csv.40819.501918912036].[:Measure Names]</field>
          <field>[csv.40819.501918912036].[building:day:future (day) (bin)]</field>
          <field>[csv.40819.501918912036].[building:hour:future (hours) (bin)]</field>
          <field>[csv.40819.501918912036].[building:month (-) (bin)]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <tuple-selection>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[csv.40819.501918912036].[building:hour:future (hours) (bin)]</field>
                </x-fields>
                <y-fields>
                  <field>[csv.40819.501918912036].[avg:Calculation11:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[csv.40819.501918912036].[# Week (bin)]</field>
                <field>[csv.40819.501918912036].[avg:Calculation11:qk]</field>
                <field>[csv.40819.501918912036].[building:hour:future (hours) (bin)]</field>
                <field>[csv.40819.501918912036].[:Measure Names]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>30</value>
              <value>-986.81788285714288</value>
              <value>10</value>
              <value>&quot;[csv.40819.501918912036].[avg:Calculation11:qk]&quot;</value>
            </tuple>
          </tuple-reference>
        </tuple-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Temp-filtered'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='62'>
            <card pane-specification-id='1' param='[csv.40819.501918912036].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket class='key'>
              <tuple>
                <value>249</value>
              </tuple>
            </bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.40819.501918912036].[building:day:future (day) (bin)]</field>
          <field>[csv.40819.501918912036].[building:hour:future (hours) (bin)]</field>
          <field>[csv.40819.501918912036].[building:month (-) (bin)]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.40819.501918912036].[building:month (-) (bin)]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.40819.501918912036].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.40819.501918912036].[none:Calculation10:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.40819.501918912036].[building:day:future (day) (bin)]</field>
          <field>[csv.40819.501918912036].[building:month (-) (bin)]</field>
          <field>[csv.40819.501918912036].[none:Calculation10:qk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='elec-loads x hr' width='192'>
      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
      BE/FDPD/AZrg1J/E43IvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total heating load' width='111'>
      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
    </thumbnail>
    <thumbnail height='192' name='Zone-temps by month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Temp unfilt' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAAAXNSR0IArs4c6QAAAARnQU1B
      AACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAA
      AAlwSFlzAAASdAAAEnQB3mYfeAAANZVJREFUeF7tffd/m8eR/t1f8v3t0i65S7nESS6XOO5N
      7t2RHRc57rZc5CK5yEW2LMvqzZZkNUrsvRewE+xgR++9g72AfL6zL0gK5QUFUIRJivt+NB9S
      xGDL7Dwzs/vO7v77v80/AP594Xf+k0tgw0iAKf7c3Nx9s7Oz+zlxGWw0Hfg3BgDWafrJHy6B
      DScBDoCNMORzQZi1WkzNzAJz9G9uFl6HC1aLG8HgNMwaIwLD4/T3OfZx6CfReCAAl8sf8bfQ
      90Ofz85MQzE4iNHJacwGZzDsH6G/X/48xCcUCIfFDL3Ojtn577LPwsti/58YDcDvHxb4nXYz
      NCodtS8olDs7G/rcxz5fwYcDYAWFuVaLmpudRMGZMyirakRv5yDkPYNoLGtAdXkTGusrcOHY
      BTRJpCgpLIWspx81lWVob++Bpr8Xl85loqurFzXVlWhvk0HRr0JHkxRNTc2wGjQ4d+IcZJ1D
      6KpvQua5XPTLFOht7YakpprKL0VHnxpTY8NopP+nnbqIZmkXmhokaGxuh7xXiR76v0RSjaqy
      UnT19KGzsxeTxN9cV4PzJ05DUt+C9ro2VJSUobmlAx3tMgQZqFbo4QBYIUGu5WLmZqdQnVOM
      6qoK5KXlojCjAFmn8lGUVYrKikqkkxJnny9ETXEtSoivsqQU1RXNMKtUkJTUoSizGFWV1fSz
      kL5TjOxzeRgY0mPM50ZDaSOqC8qRn1aAstwyohJkn8khEDXi3LGjKKqQYsRLfOV1qCmSoDSz
      FOVUVnE2lZVNZf2Qg4aGDqo3E2W1zZA2NsDvdqOxsh7FWSUEjCJqaw4qimpRX9WC5oY6TAVX
      TtocACsny7VbEoU8Fp0OSq0edqsJKqUWNpMdLqcHeq0SavZ/ixNelxdmnRo56WmobexEwOcX
      /uZ2uqFSKeBwuaBSKGA22jAcGMb42Ch97oPFqIVWbYDZZKTy1PS7EV5vABaDDjanD7PTE5DJ
      umGzuuFhdVIdJpsdBuLVaUzwEa+BQjStVoPBIQ2C05PoIX7FkAJag4nCJwe1wSv0oX9QLYRk
      K/UsAmB6ehqjo6NXTSPDwxgZGeG0TmXgJ2utVqrgdHlWcAyH4SGrHqA5xVK64fd64PV4iWcY
      XhF+9rlH+Hzl9CsCAGNjY7gaYh00qNVwGgycuAzWhQ6saAjEvIhNr8ew1cqJy2Bd6AAHAFfU
      daGoqTKqHAAcABwAK/UmmIdAPPRLlaVOVbncA3APwD0A9wDccqfKwiZarttgpLfS7cjMqUJ7
      Sze8JvOPAszleQDK1XA76OUEvcBw2e0YHp0Q3kvwEIgDKVGFD+fzGk04fDIXf3zgPfzitjfw
      f49sx8WMCvjNlqsCQcBiobSPIRQW0Vvo6hbY6UVgdPuWBYA5SnxSyLqQk1GEsvxitLT2C0lO
      kxMTsNLbuuUIgX9n44Knu62XlH4H/uOmVxfpzmc+g7pfEaNLAQpZlX1y/HChBEdP56OzVQY/
      KbqY/jTVd+CeLbvwy9u34nd3v4Ptu07DIlfBp9PDQy/7XH2DWB4A6NW606xH1pksyhuRoLm+
      G5P0DsDpdFJmoSamMfZOGVSZBVBRDsqVSJNXCm1hBXTFlTBU1sFYVQ9TbSMsTa1EbbC3d8PR
      1RNB9vYu4TPGY5I0Ct8xVNZCV1QplCWUR7+z8syUXGVr7YCjuxfOvgG4B+WCMHwaLfzkhgNk
      jQLkfgNmojiCXTZYqTyhXFa+yQS/0SgMhlelgVuugKt/EE5ZX0z/ovt7Nf9nfRdk2SiFsaYh
      JKtyCcknJCc15QJdaYwU6fmoPXwWVftPY+hiLhRpORg8dYnoIvqO/IDegyfRs+87dO46iNZP
      96Hxg91oevcLNL+3C9IPvkJrFOVseQ/P/ecmPPnT2xfpxf++FyWvfBjD27jtC3xz5xY884u7
      8M+f34kP//YEqrfujOFref9L7L1rC5V3h1DmUz+5HS///A5kPvQSap58HdVPvCrQsgAwSym0
      PZ3t6JINoKW+jnJMLJdDIHoDOmyjXJEw0hVXoWnrJ2h64+Ol6fWP0PDKdtS/9AHqX3wftVve
      Qe1z70DyzFuoeeoNavgbqHriFVQ9+hIqw6jq8VeETjGSPPMmap99W/he/QvvCeUIRL/XPvc2
      av65FdX/eFUoo+rxl6k8EsQ/Xgt9n+qoe34bGl7dgea3P0Xrjt3o+GwfuvccRe+h0xg8mQbF
      hRyoKYmLAXSBtPllpDT5UJFiyCl7kikC4+07fJqU4RRk354QlKHtoz1oefdzQQb1L74HydNv
      hgZj82uhNlE/qh6L7Ft4P1fidzbol2X1VkhWJOfcx1/Dh7+7F6//4g588qeHUf78u2ik8Yim
      7M1v4I1fbcK/fnIrnv+PW/Hqf96J84++GlLs7V+hgxSe9bXzy0M4sWU7Hvr1A7jnvx/Anb9+
      CFtufg7NB06F5BNGXUfP4q17X8Vdv3lI4LvrNw/j48ffRu93FyL4Bug7B1/4SOAJp233vxbD
      y8p85Y4XcBfxbvr1g7iTyrzl90/g5M4jISNIRtNJma/LAkC8RCQ2B3CSixp1u+ClZKdxnw8T
      fn+I6PcxjwdjXm/M7+yzBRonnhGHE2MuN0bJo4zS7wGLFSNWG1lNC1lNE7xKNTwK1SJ5VWp4
      1Vp4yYr7tDrBqvr1BoFXsOhEzNqyv7HPmcX1yJXkAgdg7+yBTdoBcwNZxOoG6EqqBCsoWLWT
      ZNFIiWXfHEfn5/sFQDBgNLyyQwBK3ZYQMYAJ4N76MaRk6ZgitO74Gh30HaYMXbuPoPfASQzQ
      gDKAMG+oLSwPeaQ6SituJs/W0S0MiJsSwML7tqK/k6djfV+UFcmJyco8pMRr24/iF7e8hp/c
      9Ar+68438c2RDHhIbsPMC84T84iHvsvFz4hvIVz5CYUt71FoET1ptZGcn9y6LyKs+dUdbyKv
      QBIb1lC5dbVteOrNfbhp88d48YMjQmgT7WlZ/XuPZuInN18OlVg7trx7EC7y3uH8PvKyX+87
      j2dvexJHbrsbu269H488+AYaKbU6nG/FAWA36tFUWYnKYnKppJRmmhMEnA5hQ4Za1gu1Qg9d
      jwwtNPiyjj64aKOEnZTTSh3wO+ywUEaglFJndVoDgchCGYV6dNWSyzYa0F5dC6vehhHmXSiE
      GDYTJbKMyXgTCWcYD4UoomWGKYEQxlCbBWK/C8TCG6IwhVlUHsqSTLh+xmtNYPLH+s76dYX+
      s/YI4F+Ct56U73f3vEPK/yp+TgBgP2/e/IkQa4eXz2LtXfsv4mf0+e9vegHX3fyCwP8ygUcA
      S1hbTAS0+//1pQAAxvNT9vPW13E+vUy0zSy2t6q0UPWQURKZrC6UXU8KzCbJP6MyWbm/vust
      nEkriQ1Xqa26c6cxsOl6aO/4MzREvf98BO6uztQCwKAYoLzzRtpxZENTSRFyDx9E4d5vkLuP
      iFxYo6QFpRfTKcf7Ii5QmJB5Jg15ly7hyNffovzEUZzZ+RHSvvyG/p6OwizKWc/JRQ7ljLOf
      GafPQksA8taUw/rVR7B9vRPe2uq4ShvQqOHKSoN11w44Th6Gv68nrsL4afOH84djsH/zGdwF
      WQjotOK8pHieumrY9n4ukJd+jweaAIHZlX0R1s8/gOP4Afhp4SCewvp6umE/cQCWndvgTD+H
      gFq1dP1ffyLIwFNFChVHub2UmKg99wPUH7wJ5defwy5tEQVibY0Ut93zGj6+7SGcvn0Ttt76
      GO79x3basDIU0wZJeT123vcUKm6/CTW334iv7noY2bQXgHnpaAu8/2AaXrx9M05SmV/d9gCe
      fuIdyGijjZgM/P009zl5BJZPqP8XTiGgjJ0As+95CcyFR07h8F0P4MQd9+Dsjl2wU0QQ4y1I
      9qa3XxCUf5E2/R+cGedSCwAH8wBVlagoLEHZkYPIfPctlH/0PjK3vYGSXbvR3dyBTkkNKmnz
      hLS6CZXZ5WijjRrfv/kmJJ/uwOnXXkbJjo/RQLuByvIKUFRQgOr8KlQU5CMnLR06CU3anrpv
      sVOGzffAI6mMFSpZUvvx/dDd+/cQ711/gfm9V+FXxA4q+5vlg9ehIwExXt0DNwlgEPMwnlqa
      TD95b2T9NRUi9VMe+3cHobsvrP63XoB/sD+G1y8fgnnby0IbhfrvuR72Q19jmAY7emA9tVUw
      bL5cv/6xO+EpK4xVAAKF8dgBaKgsof93/i+0Lz0FNwEtukxLTy8annoc6juIh3gVd/wF9W++
      ATeFlNG8zqI8qO+/cbH/6k1/he3MiVhgkVc0fncE8rv+umiBB595FN7uSAvMyvcT2C0fvkn9
      n5f/3VTmnp0IiCRWelsaYXjmQSoz1Fb9w7fClZcR4zWZ8TO98WwkAEi+zos/pBYANrMRHpsZ
      ZrJ25gNfQfXZ+zCRpVJ9+j4Muz+Bq6MFXrsFTgtZUrsVbnL3zoYaqL/YAQNZavVnH9DPD2E+
      +i2cajmE8gQ+Ey2xamAlxVRTp1Wk2Atk2vMJuWAdPIx3nly9XdA+/1gEn/qhW2EvzY/gY/z2
      EhpU+iy8TN1Lm+Ea6InkJXAbyfKG87Hfjbs/jq2/rxvafz0eWf+DN8OWlx5bfzFNrB+8JYJX
      ++xDcHW3R9Wvg4kUI6Z+8hoePc1rwvrv7JdB/cITkbykuKZLZ2PrLy+Mkanm6Qfg7JTG9N+0
      59OY+vXvvwq3luZkYfW7h/qhe/WfMfVbL56Orb+6DOpHbife6+fp79CQkXG2NkXymmjTzZFv
      wspk/H+Hger3RNevHITu9WehIgOwSPfdAMvZ4xFlrvgcQG9Tweqn2L+/AepnHoDy/psWSfXI
      bTBVZwqfh5Mh8wSUpBzhvOrnH4FF1RrJ66IdQp+9BeV9N0aQbs8HsHpC9S6QZaAR6qfvJ74b
      LhNZdmPROeIhIIWRseAMVA9SO8N41c89BIuiZZ6PlUvfofp1X7wTWz+1iX0WXr9ZIYV6y8Nh
      ZVKbqY+srpj6yy5C9dAtkfWT7MyDTfNlsvZSGzxK6PZsj6lfu3MrrE55WP0amNXtUL/4WCQv
      9d+Q/X1U/VqYarKgIqMS0f9/3kdjWB/Zf68K+kOf0jgx+V+Wq/aj18PqD7XVou+C5tXNIb57
      /g4lKaqS1Z9+LKz+0HiZ6mkFjXRDeff1UGz6m8Cv3nw3GdGasP5TuV7aQXb0CyrrBoFPQd6F
      8WrffxFW20Dk+JtoT/MbT0N+x/9h6LY/E/0vFFS+4cKhsD5pV34VyOjUwDlBG2J8Sph2b4Pm
      9j9Bc8sfoLn1jzC8/iQcJlp+Yp+Hka25gMIOcquM97Y/0s8/w7DtOTjctC4ezjuuh7X8AnSk
      rIyXke6RW2CtzYop027ogP7Z+yNdIFkYa112bP1Vl6AltxseL+qffQAOY2ck76gWxj3vRZZJ
      bti4+104R7SRvAEVTPs+XAxrBHf9wsOwq1pi6ncYOgXZCGHKfLhm2vsBnH5lDG97+in03jUf
      1hBv/51/Rct3++Ag2UTIaoRAcOwLaFlYx2TF6v8Xq78ptn5zNwxbnxLGSBgr4jd9+Q6cXkWs
      rJpoBYvCOtXffyeQhkIRS95JOKPrJ1mZDpG3vPF/oPzbb6C6/jfQPkIeuE8SWz/phJbGivEp
      //pr4af+jadoC2bU+JMuWCWZUN/2pxAfkervv4Xpuy/hHNNFljushv7DVxb5BN6b/gALjXW4
      nFbcAywCgBpkvnSYBPD7UCOu/y0MX26DgxQjGgAOJ7lL6jDrjCCsm6+DOftErFBJAA5bL/Rv
      PkMC/a3Ar//gRRLUQEyZTr8Kxq+2QX3zH6C64XdQUzt0Wx6EXdcWw8uEygDAeNU3/Z4U4Tro
      n3+I9qLS0mQUAM3n9gnxp6AoxM8Uy3xmr3hbDe3QE5BZudpHbw2BbyxKUVn5pDy21mJoN28S
      ePVvPwu7viMW1PTdnbSOvvuWe6Gg/jDZHr7lLmz74jCsI1EKQOXa5Q3Q/vNeQU7qW66D6fx+
      OEkxY+RPY2IgWbExEhSFyjVdPBSrVEwBG/Kgov4vKKCSlEp0rJgCfvH2ZaVm5dJ8wdpeGgsq
      aqeavMNimcSreepe2KON5bgBpvSjUBLwwnn1n79FBmje8M6PFzOeWuYB54GyoIOm9CM/DgDs
      VnJBzz0Y0QA1uUFbb02sAMgqRAiAWYBPt8aChRTFnH8Sqlv+eNkCkLcwl6fFAoAEYti7I2IA
      tM+TBbTIYhVrqB6a8AFg9b//AhwiFthKiqqmydqCYNnv1pbC2PqprZbSc1CzEIANAimKnpTM
      4R6KVUCytPq92wXgCwpIrtrErGqUVWNWPp1OWqi5niaq8wPb+LfrcO7rPbBHW0DW/4O0lHkD
      WeB5Xg2FFTZlrAew9dEcjIUoYcqieZaMhTVKVlS/8chnkUpF39GRpXWQwocDy+Hoixl/JbPW
      Od/FGqC2EqgoTAmvn020bYrGGANk/H53bP3v/itWV8gA6na8HOkByAhYKi/+OACwaSgGfpji
      2jChMsW1NubFCMBcfCZioNh3NGS5GIii3ToDRgSqidfwzfYYZWHWQ/2PTTH1WxpyYwegiWLQ
      Wy+7VaH+LeQB7LQ0GuUBjMd3LVrKkFX5DYxHP4/xAEwBtC88Glk/gdVK4V60BTa3kgLc+ZdI
      Xpq/2Cg0ieAlJdce3BnTf83nFK5EWXY7eUoNmwOFW0ACg7nkXJz+XzYq7Dts7NgYRvffdG4/
      WeCQp1gMV75+L9azkALqP3ot0gPQ6pJY/+1mtmDxSESZuncoBBYLgdpLhFWoxRCIwjZz1nFR
      D8y8DfMkSgrDVBQ26Xe9A4czMlpIWQjk8MoFy7AY1zGlorjarm8XtwBsQhM2WLptW8DKiFYA
      AynbgqtedGtnaMUoKgZ1kKVnIIoAIFkZMWttqckQLHSEBXzyHtijFZCUTP/VuzEKqKfQLkYB
      6bvM4kYoIItBKyNjUNY/VdklyG+MrH/ggVtgiJ4vEAAMbBK6ECvPy4sNbHT9Qgjw2pOR/SeQ
      W+tzYj0gzXU0NOkPV2rdDrLq0fJnYZW2NVQu8yxsDvD0fbD1VMV6QOK19VZD+zKtRBHwVeQJ
      jRSrO2huGG0A2NhZyQtoKbTVPH4ndNtfgm2gVrRMFupYqmg5nHhZ2aaLh0XbKdRB5drVLbDQ
      vJEZvpg5JfGkDACsAXZVM/Q73yBF2ATdW8+AhQ8xkyUW17N4nVwbc8MqNhGj0EksVgyV2QIt
      TRjZhIaFDLp3toiCiimE6fyBy66VBoxNiqItgFAmKYBgrRcUi3gNh3bGxJWMlymwiizZogWi
      30VDMAoJDDQJDo9XNbSywxQoWgFUQ81of3jTYlgjp3ZI33oRZldsuGTrooS1R2+ntoYssJoW
      D8S8KpMzm/Cp2eoSeSkmK/2ut0WtqqCAZC11bz8njBXzsmzsYhR1QalogcGcfwomsrxCSBU9
      AV7wmkwByRCxcbf1SyhMiQyTor0LCw/ZWDhEJt8xvMQjhJPRoV/UAotoH8J4UgoAVjmLo5kl
      dXiosfEExRpEwmHzAyuFI2wFJ75QSWGpPKaIzHI7bFFhUljnHD46xKkiDYb9H9H6N1mKaIse
      NlA2mocwS6rd+jSMp/dQ+NMnqgAMrOac7wXrI1ggimnF5goCsGjwDRQzs8kYi0etneWi/bKN
      6tBSmI7KzY+i9u5bUf7qC+jtriPeyNUyYTBpwJmyGr5+H8zzMHmJTWwFXjICtp5qYZLKrKYY
      +CPidhojYaxE5j5XUqT1+vmyAMAOV7XRSyGLjdKf9fQCig4vXdgQs7gKlCQSUypAZiWWAt9C
      W8m9MtBc0arQagyLT4UYdQkLxBS7rrsZJ85dRHYFpXm7Rdz/fN1sEjukl6GrrxlqG5Utpvzh
      MmX1UvkpldtaGsMUtSUGAH6XhQ4wbYPZ5o57+hw7uq6X0qELKL+/LL8Uzc09CNLpvexQLYNj
      CTeXok6sRSUQVmwoJeQvj1HiFiWB/femt/DevtPQ08uktdjejdqmGADohzqw79AR1LX3xT2D
      ke0HkNbW0Km+DaikTRRsQ8zU9AzcdJydzhbfym0kIaudCjz42u6IdODf3PM2SqUNHABryBDG
      AMBl0SE/OxPNHQNxATAzOYZGAkD/kJxSmjtgsLrWdgi0CgIftAzglmd2RgDgP2lrXgYdM76R
      DMFa72sEANglBQ6TjrY5FqGxNb4HWGpDzNXMAYyUb6OhnBoWO691wV2pfeZhLd6nLYMs/FnY
      PHL7lk/RpYl9EXelsvjnIosBK2TUIgAwFvBAQpO1C+cvoJMuNkj2GGq2I2w5ALBTvFzZ0Yzn
      Pz6E+1/5Ep9/lwa5LXYJMNWKYA5ooKOEsysBkMX3Bh8tc1I8H5ODEzYwA+YBfEh7Zze98Dme
      2b4fFe2NYH1NdT94+YkDJioEmoNKJsWhfYdQLmlbEQCwSV+PnnaCUUwcb2Wjk6zi7c99umgp
      f37b6/j4KGVtiuS3pGJwmRJLqN8vfXYED77+lQDAIWtsIharm4HkLF0g8cQ7ewU6W1wq/C1e
      u6yUJKdyyAXAOFbIaqVCBhu1zAgAjPg9dENHI1oamzCkMiZ9B0G0B5DKOwWrfv3mD/Hom1+j
      qLle1GKmlZcL58FEHIvx/GdQxPECzEIzBZUTXclaG/1q9Jv6hdAqHgB7DX24+6UvFveasq17
      2w/+AAuFMdGKkU1zn/+5f9tiW//nvneQWSP+JnSjKtV66ncEAKanxjHYJ0MF7djSWUIT22Se
      cADoKT//uQ8PklJd3kB9x5bPICNvEC2ggsZaYZkwHAAPb/0aWlLaaF4WonxzNgO3PbcTrLwD
      l3IE6yomdOZZXtt1HDc8+REBcA8Km+ooaSw2BMmSVOGXd2yNqJ9NYNlENrxcBrZ39p6M4GNt
      fvub768IxPWkFBuprREAmBwfQUerFJIm2ohBtwMm+4QDoEvbg78+HnnY0X/d9SZ5AXrDGRUK
      sBdEW3efwC/v3CoA5n8f+wCXaGN9dHzNLPjJ/CL8ik4tWADLr+9+Cxcr6A1rVJnM8r/y+TH8
      NAyAtz67U3QSWkJLk2yJMhyA9738pRC6hJfL2vPpiQsRZbL27jx2XhRYG0mR1mtfIyfBI34Y
      TVZM09WUy3nCAaCwD+Hel3dFKNWfH3kfjQOxyXBMeGyOcKmyAoczcoV43CqyEsTmBK9+cSzG
      ArPVlmjL3mvsEyx/uFIzK59Ltw/GehUV3trzPQErBMA/Pfy+EOeLTXClik6hXz+75XWB7nmJ
      DnuiUG+9KsBGb/eyUiESWQZlypNRXSUo4S9ufwPXPfQevj2fBUv0zqkkJoZMydkE9adh59Kw
      ZcZ9aVkxyqpiL6Jej3wR9YcH30UtgUts0NUUbrG5yP60bFqRIg8Yp52sX8y7HcvOx3Eitqy5
      1ErQRlewtd7/lAGAddxGCtum7EIW3QNb2yMFWxu/WoEw5du8ba8QLv2KQqpndxxAH1n76HKZ
      UubQhPXGf34sTLB//8C7+Or0JZiWWLG52rbx7ye+/LhWZJVSAKSqk3JKFmOhTD5duKy0R+0Z
      CPMozGO0EwBZTk51VzNX/iS8barGbq2Vuy4BsNaEyNuz/iz/wphxAHCreNVh6Xo2ABwAHAAc
      AMu5Iingps0wJhtUA/10KJKXZ4NyIK1LIC3PA9COsN6WWhTQuZ5VReVobpBhJjgrXGGvt/MN
      H+s5JNhobV8eAMjee+mGmOrSWpTTjrCmRhmmZ4Lw+bwcANwTrCtPsGwATI2PweX0QKOQ0+78
      UNrEctOhN5rV4f1dO6tGywaA2NtgDoC1M7AcZImNBQcAD1nWVciy0sDmAOAA4ABYzjIoD4ES
      c7ErbbF4eSsrd+4BuAfgHoB7gJW1KtxKrx95cg/APQD3ANwDrB+Lxb3Lyo4V9wDcA3APwD3A
      yloVbqXXjzyv2gPM0anQCw9/E7x+Bp6DNDRWVwWAEa8D1WWVsLsDPBeIh1LrMpS6KgAYB4dQ
      V16HgQEDBwAHwMYDgMOgoT0B+VDr7BwAHADrGwAsfh8dHU2Y2OaXgN8HvU4Prz8gfM/v90Nt
      lMNMV9pz4jJYDzqwGAIxALArjpai0dER9La1oLO9G2UFhaivbUR3Zy+krZ3w+PwwmUwwmU0Y
      HRvhxGWwLnQgqTnA3GwQ3Y0SlOZVoZZi/4wTZ3Dwm+NQGZ2gpVQBPF5vaH8wf7gE1oMEkgIA
      65BNo0BTbQsKcwrokrxclJdUoq65XdgTzLyIz+dbD/3mbeQSECSQNABmpqYwPj4Bl8OJ4eER
      TE5OIRAICLdEcgBwrVpvEkgaAEt1kANgvQ0/by8HANeBDS0BDoANPfy88xwAXAc2tAQ4ADb0
      8PPOcwBwHdjQElgWANiN8rNE7GeIQjLkq0AbWpfWZeeTBwAdjNvX1oyKilp0tvZioK8fDs/l
      dGj+Imxd6sGGbfQyADCDusI8nD97EYe/+hYFZU2YorfAMzMz8Hg8cLvdG1aYvOPrTwLLAEAQ
      HbUS5GdlI+tiHmpqamCi+wFYLhDLCOW5QOtPCTZyi5MHAElrYnSYLL2PFH4ckxPjGJuY5HOA
      jaxF67jvywJAvP7ySfA61oQN2nQOgA068LzbIQlwAHBNSEgCUxT2qhtKoajOEyWdtBozU6FQ
      eD09HADrabRWsa2+cQ/S207ih+ZDopTXnYbxqfFVbOHyqo4BAFvNmaKc/5lgMOkS+RwgaZGt
      +hdmJyYQpNU7UaIdfnPzeuCb8OJSz1mc7jwuSrkDGRifXhsAmKGtu6NGPUYNOlGadLsW5R4D
      AKOyHxkXLqGhQ47LR14lNk4cAInJaa1wzZJyy5oLUJN3WJRqC4/B4wgdebOeAKA3DSCnZB+y
      S74VpXZZmZDBIDoHMGsGkJmVj55BHQfAWtHUFLUjSHu8y1XFca362e7vYQ4Y1x0AVG4Ffug8
      Ebdf9bqaeACYg1LWhkK6+1ett8YFQHBmCmPj45T7M0NvgKcXwyXuAVKkqSkqlgMgahUoSMqs
      7utGRnoWeofieYA5yKQN9Aa4lk6Fa0CrtAMO77AwRBwAKdLUFBXLARAFALbhXa/oR9r5NLTJ
      FOIeIDiFvMxMFBXk4eDnu5FbXC/kAjHldzgccLkuTzBSNG682BWSAAeAyHsAdU8rTh35DmXV
      reIAoGzQ/s4WlBYXorq8Hu10UJbe6hJiqsnJSX4sygop549RDAeACABM6kEU5OUir6gCLt+I
      6DgEgzOCss/MBMFWEhaWTHkI9GOo7crVkSoAjDgsMEglMLTUiJJHI1+5ToiUdBWTYEDZ34Hs
      3CykXcxAv8qUVEM5AJIS16ozpwoACmsfztYdINovSi3KKooukl1kT1xcVwUANhH2eNxCavM0
      WfhkHg6AZKSVOt45epk5R3OyuDT/citVAJC7BmkJMv4yZJOhbm0CYGLEj+72drS0SKEzOZIe
      IQ6ApEWWki9Y1b1ozj0el3S9TUK9qw4AmjeOWkzwKQfFSTWE6ZHQCmMyz7I9wCzF9oMdTTjw
      7QFU1ncm7aQ4AJIZptTxDjh6474EYqkMUtPaAABLu2noykd6+beilFmxH2aHOmlBLRsArCYL
      TVAqCorR1NrPAZC06NfGF9YNAGhFsUpdFhesZ7q+g8GnS1qoywZAcGoC9WWlKCosRXe/mgMg
      adGn8Avs9A3adx2XwpIXOQCWmQoxR4iU97QhPT0drb08GS6F6px00WM+NzqKz0Cae0KUemuy
      KR9/Qij3WgTA9PgYjG110DaWi5Kpo2Gx/8v2ANO0oUGnHEAZeQGZXBPXA8zRXGE4MIyR4VGM
      UerpOB2Rzh4+B0harxP+gmfMjTTZDzjdQenIIpQ/kIXJmWsXAIFxHzJbT+FM/QFRym0/g9Gp
      0HurZQPArBgQ3u729PTC6vDEHRyrVk4p0zkozS6GhC7L8AxT3jh/E5ywMi+HUQBADwEgTj5+
      /uA1DoBJP9J7z8ftf3b/RYxOj14dABwGLXq6h2Cz2RAYGRMdp9mZSUiKc3Ds0Ckc3fMtcgpr
      MDY1zXOBlqPVSXyHA+BHAMDk+Aj6+nuhpPBnamZWdHjYPWFWuh61QdIIWdcAVOQ1jLbQYVg8
      BEpCo5Nk5QD4EQAw7LFh37e78Mn2Xega1PNVoCSVdDnss5RTFaSth2I0S3su2Ftd9nAA/AgA
      CE5Poqm5BjnptPNfa016PLkHCImM7aOdo9TyuLSQikCLCd0NuZDkHRGl+sIT8LnMHAAkgcCP
      MQdgkmZv5xgt5+EACEnNpOhCU97xuKTvlwp8M7MzKFUUxJ3Ynes+CduwhQPgxwTAchR/4Tsc
      ACFJ9Ni6lkxFaDdzALBs0Nkk3gSnxAPQyiU/F+hqEB/nuxwAiWWDrjYAWP0cABwAK34qRKLp
      0NcsAILsxAivNy6xw5iu5Yd7gA3uAeQDDSgtOBCXtOrOa1n/+RwgwQ0x69QDzMFlNUGp1MJm
      ccJFJ0H4598aL0yC280tS04C++wyDgC+CrTqk+DlzQFo4qBVDqEoKxdnjpxBWWUzhscnI26I
      uRYBMBHwQllbBHlVrijp22rBtpPyVSDg2p4DsGNR2ltQXlmNs0e/Qz6dHuEdGY+4IywVAJih
      dFi/Wk5b54ZEaYQOQ114a5oK9+IacSCt7UTc05GLejLofKTQ8eB8DnANzwFYLlB/dztkvX3Q
      a81w2Ig8fmHgUxkCubxm5FQeRHrZXlGqll4iEIbSslPxuEaduCA7HTe0KxzK4QCYPx362vYA
      S2hXKgFgH7HhfPepuApYrMjHdDAUgqTi4QBI/Hh0DoAUTII5APh+gJXeD7C8STD3AKJeiIdA
      ly/I4B5glT0AOxAqXoox+zv7PNmHh0A8BLqiziQ7B2B7i72qQTh66Yh1EXINdGNmPLTNLZkQ
      SDvUSunFh+OSTt52xb5EM3AAcAAs6gTb/zs7S/l87KiOeVrOKtAUbeIubb2AC1XfilJm7VG4
      A/akAdBlbV/yRVy3tUMoc5aOGTF1NkJVUyhKmvoSTPhDe6M5ADgA5gEwR5dodNIFGfXoau1B
      f28/7J6A8FmyHoCtmxcMZcdV1gt0CoJrzJkyAEzTi6uSnkycaTwoSmnSY3AEQhuDOAA4AEIA
      oE0crVWNkNDpcQc++wYFZU3CBRnrEgC0bFosz4sLwPOyU3DQ8isHQHKX5F3bk2B6E9xZX4vC
      3ALkZRRCIqmByeHlAOAvwhavSV2XAGB3A7Mj0RMhl8MOk8kCp8MFt8sJp8sjfM/n88FqtaJO
      0YSj9afjUqumQ+D3Un5NekduXL6TTeehdxoFXo1dj+8bz8XlzeoqgC/gE3gbVdIl629StYba
      S/xZnQVxeb9vOgct1ct49Q4jWHvi9SujI0/oD+NtUbcvWX+dolng8w/7UdpXinPSc6KU1pYG
      nZ3uuiVes8tCsroUl7dAVgAvzVcYr8wgi8vH6mpSheoPDAdQ3l8el/dC2wWSu0bgtXqsyOjI
      iMub150Hty9Uf5+xj/jOx+VtUDZghA5UG6aTnysHKuPynW89D6VVKZRp99qR2ZkZlzenKwdO
      n0vgHTAN4vwS9dfKazEyEqp/cUMMi9/HaIkwGRomgVcXF6GjRy58LxAICGcK7S3twXWfFsSl
      U7WDAr/DG8Dm45K4fDfsLkWX1i7wSpUWXP9lSVzeZ0/W0QAMC7yHK/uWrP9IVb/A5x8ewfnG
      Iewp6RKl/eUyaOjIF8Yro3bcvb8CN+4uEaUXfmiAk/rDeL+rGViy/m/LegS+YRosSY8J2Y0a
      Ucpr1tLpyD6B1+4OoFCqi8tb2WkQ+sN4B/SuuHysrg6FTeAbofrrepeu32AL1e+geV5Ra/z6
      yzsMZFBC9csN7iXrb5NbBT7BWPWZ4/LmNmmhs3oFXhddxFjcFr/+0nY9PP7Q+KtMbuTEkSnr
      f8ughepm9Y9d3Y6wEbcD9eV1aKnrptTWy5Pgz4sH8f+2FcWlY7WhI6/949O480BDXL5fflyO
      HlMoz6hN58HPPyyLy3v/kSaMTs4IvPurlPjJ9tK4dLBaNT+hpykNW9FaghYYx6ZmhLZ0Gbyi
      JLcN03n7oVtPDtWoluz/FyVDAh/jb1f5Ud7tEqWqHjclGobeWfhHZ1DU7kROi12Uqol34Swn
      lXUsLh/7fo8udOY+q79x0BuXN7/VAbsvlF8VGJ9BcUf8+itlbkxOh+aCWvv4kvV3aUKLJkzu
      LXJfXN48qQNWbyjBcGQiiNLO+PUzGY5PhS50MTjHkRtHTqz/TObsnmxGV7UlcnLEh7L8Qkjb
      B4QzhBZWgVYbAHr3GBqUrrhk8IifereIiqv8JVEAsGqY0rCBEyd2QkcIVBwAaxAADEI+N4UI
      EyGUrhUAXKX+XvXXkwFAopVxAKxFAESNHgdASCAcABskBIq2XskCYHhiBs/+0I6/fFUjSrft
      r8cQxdbsSWYOkKhVTRVfl8GH43WauCTVxj95O16buAe4Bj0AmwQ5hydh8Y2LktU/QTn+oYnV
      egJAKoDFAXANAiAZRdnoABgZD6KBVmwkvR5Ralf6F40FXwX6kVaBrjYE4gBIXAJsyW46OEd3
      N8+K0gx9tvBwAHAAJK5Z1yAnB0AKAcAu0mOnRwu3kbNU6Pmfy1kGTUb3NnoIlIyszG667XPA
      G5fUttB7EP4iTORF2Mz0lJDSMDF/8V2E4En5Za21aJJ2o6OxDtK2bjTVVGNAaRDYkl0FSmZQ
      OQASlxZ7d8ZConi08HKNAyAKACOUTNQgIcVulaJZ2k75F6Fb99jDLL3baUdzdTUKc/JRXiBB
      6cU8VJeGUiGmaHOJx+OBm16MJfomOPEh5atAycgqUV4OgCgAjI/4IW1uQnFxOTR6G1mQUG5F
      CABBWIwGukRPhvLiYpTkFaKsuBLF9LOVUiGCBBAhw5MOxeUASFQFV5ePAyAaAAEPCrIzkVtY
      BqM1dPFd9DPs9wlZf+znMGXT+b0ejE9E3hPMAbC6ip1o7RwAUQCYHBumcEaCUydPoa1PvexL
      8lIBgH6LH/dRxudt++pF6c102WI2YKIKsNH5OACiAOCxGWmnVxHaO7sxMCiHx3d5DpCIsqRy
      EjxDMzvf2DS8Y1OixNIq2Fo5fxKXAAdAFABm6ZgSp9WMocFB6IwWmthengMkItZUAiCR+jlP
      chLgABBZBg14nRgaGsSgnLaijSd32CwHQHIKuNrcHAAiABjsakZ6+iV89/0P6FEYkxojDoCk
      xLXqzBwAIgBwmDXIy8tFZ+8gRujii2QeDoBkpLX6vBwAMQCYw2BHE3LyiqHSWdbUKtDqq8u1
      1wIOgCgATE2MQz3Qi6yMTHQPaDgArj2dj+gRB4BIKoSkvAyXLl4iAGhjABCkN8MzdJzg9PQM
      ZugcoRlaJZqenEQw6mS4VLwHuMZ1cVW6xwEQBQCW3amRy4Q5QEt36KSHhcdj06O8sAadTfWo
      rKpHY2UFamubISktRff8SzM+B1gVPV52pWxH3qBxBM10NIkYSRV++Og4FvZsmGNR7CY1cnOy
      0avQhQRLGaBOuw1Wkx6F6QWoLW1AdU4xSvMkKEujZLiyeiEZbpIO1nI6nSlLhlv2KPMvLikB
      ljm61LlIC0ZwwwBAM9SFXPIAje29IQ9AVsLrcWOEcn9a61rRUluD0rIaVJUUo4o8QVlBITpk
      CkGIE3QDfKqS4bger64ENgwAXFY9aiUSyLWmSImTgrMQh8X8E5T8NkkT5smpaUzQUXTT82+M
      eQi0ukqaytqTAYCJNuRU0Elx8YiFXexZkyfD6YZ60NTYhKb2Pr4KlEqNWmdlJwMANrmemJqN
      S2xv85oFwNiwDwMD7NILX9JDxD1A0iJbN19IBgCJdmq1PQBrZ8zZoFMTdBS3xYrRseTeArPC
      OAASHfr1x7faABibnBUO8mWHAIsRW8VaOJw30cNxRQGg7WvF3oNHUSudnwQnMVYcAEkIa52x
      spOn9Y5xOi5+TJSMronF07ET7RoLhGx0+nO8MjV0yvToZCgjmaW6szbEI3ZczMKK1VUBwEsX
      QmTn5kGpD92NlczDAZCMtDhvqiRwVQDQ9kmxZ/8hSKQ9fBKcqhHi5aZUAlcFAP2QDCWl5dCZ
      HUk3knuApEXGv5ACCSwbAAG68aWxqhoVFdVQUwiU7A5DDoAUjCYvMmkJLBsAk2MjaG9qQldX
      L+xOX0TFwZkpuOwuOGwmGEw22M1G2JxuWAzsbqbQiw0OgKTHin8hBRJYNgCmJ8ag12qhVmvo
      UKzQPU7sYUlyVt0gLp7JRkV+NqVCSFBVWIri7GK6IqkEzc29wgoAu6CMp0KkYER5kUlJYPkA
      mBxHT1sTzpw+g5bOQSEEYgdiqeVDsFosqMyvgkqpQnFmOgqyylB8KZ9ygSrRXE8nw1GKNDsV
      jtHX5XLhQrt4dLJBm1SHODOXQDISWDYAWCXavg6cp/3AFZL2xTkAOwx3ls4M1av0UAwNQNY3
      hMGeLgwqNJC1t0NvcUaEQEa6hI6d5RmPbHTxBX+4BFIlgWUDYJY2u/TSuaD1tfXoHYzdEHOl
      Bi/MAa7Exz/nEkilBJYPADoXSCZtwKVLGZANJR+mcACkclh52YlKYNkAYCdAqwY6hf0ADQv7
      ARKtlfg4AJIQFmdNmQSWDQCnQYuu9h7KBh2A03N5FSjRlnIAJCopzpdKCQTGZqAwj0IehxZu
      n2dtiMgGNSsGUFVeh97ePlgdyV/lyQGQymHlZadCAhEAmBwbhc3uQMA/TNcgJfsemIdAqRgg
      XmZqJRABgGG3DYcP78W+PUehNoaWNpN5uAdIRlqcdy1IIAIAU3Q/QFb2eRzYcxgd/XwZdC0M
      EG9DaiUQsyNsgt4Gjw6PCm92k324B0hWYpx/tSUQAwDxBs3BaTGgv18Jo1YFhUoHvXKI7hEz
      0bJpP6xOr/A1DoDVHk5ef7ISSAgA01OTMJDil+UXoiirFKXZRSjJoWQ4OiirvKAczQ0yulBv
      FiMjI8JNkfzhElgvErgyAOhkOK1SjrrKSpRWSlBTXEFZoEUookzQooxCuiWylI5RkQlnA/l8
      Pg6A9TLyvJ2CBK4MAMZFINDI+9FP94YZdRqodbQnQKOCwWyDRiGHw+3nIRBXqHUpgcQAkGDX
      +BwgQUFxtjUjAQ6ANTMUvCGrIQEOgNWQOq9zzUiAA2DNDAVvyGpIgANgNaTO61wzEuAAWDND
      wRuyGhJYBMAU3fnFXmRdDbH3AFarNaEyhoeHE+Jj7UkFLysz0XIT5UumrRu9/mRllaheJjtW
      iwBgS5jj4+NXRYFAAHa7PaEy2OkR7AiVROpkoBodHb0iL+t8ovWzN9aMEqnfZrMJYL0Sbyrr
      Z2VfqX7WRtbWK/Gxz5PpP5MpG9srlcvGiI3VlfjY52zsmQ4kwpuK+pmxdrlcCb4IS9A3sdMj
      JukGmfCHHahlppyh6fmbJBc+Y4CbmQlLuKOXbRa9FhqdlW4OiayQXb3EziZaeILTk1AOKWjX
      2nAEo1j9c3NBut/MLJwqHP7E1E9nYFiN7CWfWbi5JPyJrn82OA21cnDxBeACr1j9Aa8LnZ2d
      cHoj2yrctkN0+aH6aUeeQmVAUKR+VnZ4/+VDQ3D5IstkMmJtXXzo/y5SSLfLDfngEF18PrX4
      EZN9eP2hcTJjnPaEmA2RY8DGNLz+sWE/rGY7dEolTBb34ukhYvW7CZAuhwtD9BLVP3K5bdH1
      M5laSE9YXWajhWRwuRvR9Y+PBEL1q+nFLJ1IssAqVr+H7rdz0QFucjrNxBcYuyxDuvGU9X9F
      5wBiOAl4rEg/nY7AWPhgx3LOzc5AOdiHsmIJJqOUNZo7SOFaV2MDGqQDV4Sm32nBue8vwDty
      efDFvsTqlxTmoLSqmcC69GYgv8OCjPRM4TLxKz0TYwGUFRbA6o5U1ujvzc1OoyonCxczSjA2
      FToSPN4TcFH9WZmorGmJMRbh35mZmkB5dhZdZFiH8vxSyJXm+GW6LTROGVArBpF+vgBT8WRA
      oFJ0NqMgrwa9XR2oqpQiXmuZoarMy0FXtxINFZWQDRri1j/stVP9lzA00Idzp7MxMRNvDOag
      7mlFTmYpCi6lkQ70ItK0Xa6CgbqmIA+lhZXIyMyF2Rabp7YAgH2E8GBKaGYyWF9SHfSPTi1d
      /sx0sLW2Oljf1hOkxLoleelC72B/R1uwubX/Cm0OBnulNcG9Xx0I6my+pXmpVr1aGSwvKgkO
      jy/dVrdFH7yYlhZskHbSFclLt3XM7whKGqXBmSvJNzgVrC8qDubmFAX9hIClxmJybDhYU1ES
      rKqXXrH+oY72YE1ZXbAsvzQ4OGSIXy6NU11xdZBCo2B1UW1wcpoVLd63gN0clFQ2BatLioNd
      A+ol26qUdQVlPYpgW319sGdAF5+X+t9QXB4sycsKfvvNiaB7eCIu74jLGqwpbwzKB/qDleU1
      QfLucXk1fbJgWUF5MO1iWrCrXx7D9/8Bdclzdr18fxkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='by-month' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAAAXNSR0IArs4c6QAAAARnQU1B
      AACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAA
      AAlwSFlzAAASdAAAEnQB3mYfeAAANOZJREFUeF7tfVdzY0uS3vwIKULSi94UIUXof+h5nxR6
      2p1Q6EmhfdKuNOtHq5nVzr3T13Tf2923fZNsWoAGtCDoQO+9gwcI772h+ZR5gAOiyQNLkM0m
      63RUAERXnqrKyq8qqyoz61e/Eo/gwGPnwMXFxb+j9GeUfi2S4MFjkQEAfyphn4X//Pz8lJJ4
      BAceEwdyMgB+za0mRDzq54JYcHb2ORvOz85wenqG84sL4s0Fzk5PKZ2V5RP/H+es9pzmsjil
      d9f60CCF09wp+LPqQ3lKu/NMasOpRMa/n5/n38HtzbfrcT7EizMBgJK+99sOsLi4hXSGhJOE
      jYU57PNhe34NDncY8WgAS9o5WK1epFIpJNNpMEASiTiy2SxymQSWJ1YRjCVIyPj3BHIkePwu
      FsBsJi3RnWZT0PX34sDqkcAV9rpgNjmRK+bLIE3vTiVTBUBewGkzYnJ4Gma7D2ckuOlUkuqZ
      k97L9cxR+Sn6LZVMIhEP42B7D5lTAnQ2ic21BegGtQjFUogGggiH41Ldgh4Hjo2OmgD7ECEi
      AHClV0/2l/HTD6+gIWHRa5ews7yBycEpDLUPYmZqFv197Xj5xxcY65tCd0s72rsGsbo0h56u
      TximfF4SqI7nb9HWrsbiwgJ6erowptNjcXoD6zOL6O3ohH5pFX7K9/rbF5gan8PO6i763reh
      9V0v5ifWsTG7hL7OTgyPDOPdmzdY2jETyLKY12ox3NWD169aMDu3QnXpQd/gGObHqZ4rWxjr
      16CvfwDdbS0Ym1vD5oIeDm8EAbsB09NTVN4P6FINQq+bg7Z3EB/etWFmYQMzummkco9z8hcA
      uAIA58EWNJppaAdU6HqnwnDPIH2q0fO+F/0dvZiZnUf7z2/R+Zr+7tFhok+Lgc5uzOn1GOiZ
      QDIRwWjXGGaGJ6Fq68P84hJ629Toa9dg4FMvOt8NwEOjby4Th47yL4xPYlg9AnVrL7SaCcoz
      AE17H7reD2BpZhLf/v6PGJ/bwVkuSfnHoR+eIGDO0Tv7oJ2Yw6i6H+qPvRhRDdG7VdjYOsIQ
      gbFFrcPW8gSMdi9O9ncxN03g+0D10evQ/a6bkgoz2nlM6VYwPTKAaLp2VewhzQQCAFd6MxH0
      YXZaj/W9I5gPd6CnUduwZ4LxwAznyQmN6lNYWVyTfrOSynJidpCqsYyPb39Bt2ocgaAfdlIp
      XLYTOGw2zM7OwEDfd9cWiXaD3mNFJEqqVDwGh/EEXqeVZpYZHB0cY3dnF9urS8V84VAAi/o5
      ODxh0vvPsLmkx/a2AW6Hm959grXlOazvH8F6vEf1XMDxvgkBfwibK0vY2jdgdW4OgWga8aAT
      +vlF+ntBmn3sFjvVwwSXwwPT/iHmaLY4LawJHpJw19KWawDgBZZI9fEg6LFhbmae1I3QrfIu
      TsAJRRI1lXGWS8HpdNFagRfDp6SaeZGl9cDVvk1Eg/AHGWD1tfmh5KfNgctFMC3izn204PN4
      PE1LbrcbZqMRDotFJMGDpsiA0+Fomny6XK7Pd4EaQTbvdgR8XhpJokjGo1S5gLRLwe/i7Tcb
      ASDqdIokeNAUGUiFL2cslr2g3wtfMIJUgmXPT1vL12e6cnL92QzQ6DnAaSaF9YV5dHUM0jbd
      EH2q4PTHi3vOdpMJMZdLJMGDpshAOhIpqvdn2TQ2FxdI5jSYol2zrnYVqaLRWtR/WT6bcw4Q
      dpnx8ZdW9LWNYnlyGkcGLzKZDFilMh8fI+n333mKkyongPfwBp4w9WsgEKAzk5wkxBGvDS2/
      tNDO2ChWJmdwcOi+WwCcppPY2dxAf7cGQ6o+dHeoYXNHpBNHPsxxWK1I0O6IYXsbFqMNqWgM
      mdjnKUQLthgtxhjdCWqc/8SD9JU8Mk06EoafdkJK/z8ZpMWck0BHNBFad0RpNyRB4BMAeHgA
      SIZC0qEjyxdrHztbm7QlrcGwqp9kTwWLM3S3ALg4O4XNbKKT0gAiQS+MJltxW40r6bTbsDGh
      xdiwDqOaYQKBAbsbm/DRzoTpYBt7ewfQ94/SrHGCY9raG+omNeqtCgcHR7AcHcB4dITD7R34
      3LRtt7uN471tqN52Y3fvED6nHTsbtL24vUV797OwGfYx1tmF7U0jIjRSBGnrstEUIlo5hUl/
      L00R+ltOiusbUneiJek+A7G0ntL3Jq1VSnl0lX+lvK23fxIEAPm5oB0uu8UEu9OPaMgHAw2w
      uSumLJXQcOvnABIAbGZo+zSwOnw0XZ1gjE4zNb1qOhXtQ+enLnS1tqHjVQdmaM99uKMdbW87
      8Oq7l/jwqhWvn76EqvMTfvfb30PVP4zXz75He7ea/v8F/X8bOj92QN3Tg9Y37eggUHS0d6Dt
      xXPMrxzCTQJsN5tvNdmuvL90t+uEdn3k5KTvTpoJObnuQZLrwvUqrWdp/W+bd42+P0jqdLOe
      uwEAzQA7c5MYGdJisK+XTkg70K9SYVA9iJ72Lqjp2H+gtR+ry5tYGdeiv70Xo3TqqevSQPVB
      g9WZcXz//55gQjcL9fu3ePuhk047xzDVO4K+T93oo3epPqnpBFWDnk+f0PnmNTa3TIiTCsSj
      GY9EjYxqZUewkpmBR7LSESxAW3Ry8tN3Tj5KXru9mDx0QPalU2l95HryZ2n96x2Zr+b/bAYl
      PtU1g1bos1TJIvimQLgbAFCH8xrAtLcLG6lHflJbDnZ3wWcElqN9GI5NpPM7aQ0QQtzvoRNS
      o6TjBxxOEhoSXtrmMuzuwedy44jfYbGRUDklmqCL1Cb6zUdriIDTA7flGIb9A0R8AURJBWIh
      5hGXO1YGQjl1hKd/KQ99+klgi8BxUd3K7OCU0pSWwb9XUnvyaodTUrEkcBbUpao0lLdIQ99r
      yc/vD1L75UGgIk1hwOAyfMQDFtpqfOP/53xcBgMrXBD2cjzg35lX/H4vyYabEn/nxO9Sqh/X
      nQcNnrnCtEZs1nMnADCTUDrdJik5nEYS+CMcHR7g6OgQh6TjHx0ewmg8KuaR80qfHqI5McJI
      NAbKz3mZ1kDrArPp8r1y3lIazn98cID9/T0cHuxL302mQ5w4DThxGa992h3HVA7lIboDomF6
      A5VltR5TvQ1wXqMxwOEwEM0hHfbROoVoTIYj6W+7/SoNlcnlUnKcGCjfISwmptmXaPlvLj9f
      t8u8/J3LdtD/mQrlHCjRlNJRPZnGRvU2Uv2N3J49qht98ne7jcpRaD+XbTZT3xCvmF/7B3vS
      92OJB9Q/Cu1nGpOR+pHqdED5OfF37iMblXNJU9J+ojk+pvcTv7gMKdH3g8N92IhvSu3nco6I
      htvucjubJf+8kG7ONmi5GvEawEId7k1ZpeSOWWCykECbSHAKyUCLYrPdCE8in+dqckWJxkzA
      oXylNBYH0STL0EQsMJov88vfrQRAbxUaLqc02d1mxXpxPZ3hfDlSfkPhk9rl8JWnOQkSDeX5
      jIboHf4KNPR/V+tloHecBCxl62b3Eg3VqZRn/I6TYPlybDToGJnP1KZiP9F3Z6gMDfGSecpl
      mCyf07ioD5T6k/vMSoMa18VUUg73Mfd1ORoLyQjT+EgjaNZzZwDwpWmao8SdLHWILDDcQaTy
      MMNdJExyvtJPFqZrNBLDjXBHrddpUjbYPRVoYgo0VLcTqW5Ul9K6UTlWh0kCjVLdZJpSYeZ3
      2Fwm+KgeZdtTAKcMGqbhOivSSO0xSYOABJyCUPPfDhJypTK8RMN1MFtLaCg/84z5qVQOD0AW
      aivTyO3hepnob6kchfZ44laYyU+B80htkepWKKcMjZv4X1qvUpAyP5Xaw2CS2k994/V+xQBw
      8ujHyKeOYGZbT2jEYaGjpCjMBcGURgumsZtoRmEaHj2IpowwS6Ap0HAHmYlOoqGO4k67ymQe
      daxOk9SB/F7uIKbLj1LK5XiTNqn+ct24frLwlC2HaLgNRUFhoSzMblweC+HVuvFvUl1k4WJB
      KNDwu5TAKQlmQZD5/ZLwFGi4zoo0JeVwW6QZoEDDs2BZABTKkXhGSW5POXByn8mzSykN95cE
      zsJgWfrJsiEPACGy2G3Wc+czAAOAG8+dYCOB4ymXO5F/c0XKjLIBc56G81NixrLKJM0AFQDA
      DGMaTjy6Sp1TBgDS7ETvZZCw6mBzmiX1gvMznVdBMJnGzipDQeXhukk0ElBZ1VKYAQojs0RD
      5XDdTgozHA8IPHJfBycBjfKV0sh15d+VBJPfwzw20cDCeblu8qxoKzPTcH2lviC+cV4r8YBn
      EblcxZmGaBicDBQGicTvwgBVTpgZnBLAmIblgHjF5VYEAIOGByaaOcN1AOA0m0EymS6LlzsH
      AKs5zDBWK+RRlhnG38sJs5N0VplGHmWZ0dKIqTCac0fxVMr/L0/p/P4iTTlhLgik3IlcLxZw
      7hylkZkFjwFsJTMQCcwkLJxYECoBQAIy5ZPBKdNKAFAAjSzMnI/rxO+Wvhf+VgRNQZiZzxae
      Aan9TMepLGhYBSoIo6TWkMDx3/xdmgEURmZJbeJ3Ur2sXA4POlwm/VZuBuA+4/xOBiYPMETj
      ZB4ST3gAUSyHaLjNPhosQpHaZ4Co14peOieanJqDP5y4BoSmASDDvqhp9qPNkq9pquhjKi+C
      5Ubx1MtC4wpZJJWHhZ5nBR51lTqS6SSGUeOdRMN0DCIeXXiUKkfD72UazsvJTTpkNRpe0HLH
      2akzikLKI1SZ6V8CGnUYq1eSYBZUOv6sRMP1YFAVaVhgKJVTM6SZhkdkrgvVTX4/q4LSukFB
      MBmc/D7mKw8GsnAx78uNzMxLfp8rTBsLxAsvL/6Jjw4/HeKVEUyZxk35g9SPXsobLPRPuTUd
      00jgYHWH+4f6NES0Diqv3CDI7XFSfg/VL5r5fBs0L3sZ8poryF7Bxz9Hv/MW6yj5XqvUGqKP
      koXyOVkr+KRdroMjAwLh6M13gXKpKCaGyOWvbwKLU1p0dvbBF0kVrUF5F6i0kzzMVGIAJ+4g
      7hDFEbakY1k94s7hRbRMV270l8tixjINC4Ak/FRWpXK4Yzgv0zAouSz+XqkcHrHlNnB5DAgW
      fm6jomAyoGnUZOHkvNwuLqsqDQ0CTMODAA8c/Ml/V6ob5+PFMy8gWbBYIPnv6jRm+EmQQ5Tc
      lKTBqcysyW3kd5/QYOMhHrsJPG4CKat15QYniS9cHxrxJTkgPp/Qd28ZkMl8DNO7fdTmcPhy
      BsilY5gaHiT/aB35XevQSXZonlB+pOeIFzG/kywLXuPZT69wbPcjEfFjfnoeO3QOtb6+joXF
      jZsD4Ow0R/Y+JvSSiUP/p1EsTkxRpAHyQCKDpRDZbRisB4p6LXeEJJBldkuu6cIkbPKsUZG5
      JcDh98sCUBMN1UUSMBJKFhhFPf7KiMt5JOGnjmS6amDmdnkTNKIxyEhQeHStBmZ5JmTQMA1/
      1kIjCSfld7FQUv1qofERKN08cLDg80hdRs2U+8dPPAtR+7k9J7ReY0EOKe3OlfAtQv8fJRqe
      NYKUP0zfYyEr/ErrpgJdkHgWorqEonRgSafBHA3jnGTP5bCgr1tF/tQjWJqYprOlS2vQCAFG
      RcELXv38CjtHdGDnsmF6Zp2iZkQwTVbL3lDi5gDIJiPoafkI/comxsm8YYCs8syOkFTBeDwO
      o42M1pSmafFbY3ypccCQeR4iEMRZ0EiAaukHFs4A56VywkTLQleJjvPEaHSWhJOS9DcLc4V6
      BkjQuT5XUyWaYntSXlrYJiVnq1wqBnVbK6aWNihAwZAke0brpYrE/gJ+cpKxkyoUS2TgMe9B
      NzFL/t0OMs4cgcUTuTkA0vEQZiZ1WNvaJZc3A1ZWtykeTT7KwNU1QC0dIPJUFtRahKR0dI7S
      iB6K28gZv7IgMw0LPufnMjixgMp/l+sXzsNCfzXVU896+jyWCxYXs5lEGPopHVY3d8js3ohl
      Cg+TyskRLi4QonhLB/vHcJF5fZwAwDOG6YBM9/vUmFunuEm505sDoIq5qXQSXE8DRd7yAGCh
      qiaQpfyTR2T+jQFQbRbg2YJHcy5DTvx3Nbq77LNSAFSSvSStFcZ1k+hu/4Be9RCpdHlPMrdl
      Dz3qXorZ1AO7rwkzQKMA4GnwtkaJu+yQuyyrqG5UWGRfHf1lvZr5HeGzlkoqVGHkl2cA+fMu
      21itrNoB4MHoUB80fX0YGR7DES2CT8mLzEehaIYH+zE4qoPLF/xCM0BhJKtlWi5lCAtAvaNR
      I0BrBJg8etZLV09b5NGf21PLLMCjf5x0cVk1YV7z3/WUWU0Yv8T/1woAVs17O9+hpa0dPb39
      tAkQRYp+W5zRS5HyJiYnMT23+mUAIOuW3JHcobUwkkcy7kCmqSU/52GhkRdo9dBI9apx0Sjr
      zrzQrLZgLK0Dt7segSxdkDLYqpUVkHR4FvjPU70grZVvd5WvVgBEvXYMDmvJyvQQ09oR7Bry
      VqR8VhUkk+pgKIzsl1oDsIBxx5TqqNUYKAtAXpetDQT8flmXrbXjmYZBU8/sxHlZKGsZmeV2
      Mo2cqrWdwV+6OK11Fqj23q/x/2sFwAWFTHGdWLCzswOD2UqBwfKL47Nchk6g6cyCwvd8EQCw
      8MrCVTqtV+qM0g4vpa9EU/ruWrbz5BlD2gZkfbmGRSPT8Gwmt6fWcqT20Pu5jrWUI6kzvDjl
      /XNONIBIi9MqW5Rfo4BXq3OtAJB2Ic9y5EBFpiMcRCGbDw/vMm3j+++f4OX7DtoGDd+9CsSd
      x4LCQiALWrXRNi9Yl6pSLbOANLsUtv5qHTFLZyRWgarV6+ruSq27NKVCL/OgGpivLkzv4wK1
      mvA24//rAUDEY6Fo30/wwy8fsGPKH5CF3VZyye2GVr+IWCpztwCQR7zS6Z93JiRBK7M7wTTS
      6FfIx3klFaXCWkDW/YMEGhlo+f3w8qqTLLw8osvClVfVyq9RGCSsx3Od5MVmtTUH10fOI+vn
      922rsRmCelvvqAcAbCox2t+FD529FJU7byLhMe1SAK0OjI3r+b6EuwVAo0yRhbj0s9KxuTzi
      s7ogg02eecrVQRbMq3vgLNjlaCQzAAIVqyJy4r8rLez5/3hm+uzgqEZ1q1H+PSS6egAQ9VjR
      1amCfnYRgUhSAkDE64CGAim0fGyjnaHY1wGAu+pAJTXjrsoW5dS2G1gPAGI+B1o/tmBAMwZ3
      MB+uMxH2Y2luFqqOLljcZQ7C2GxUMjaqMW58IhKA1eyC78SMtfUdYQoh7Jxq3qquF/hXAZCM
      hqS7GvwuK1bXtpEumkIAqZgfQ/0qdNNFIg5/BBzEzbizAZ12UrpTgWYFpRngApa9Zbxv68T0
      /BayZ5UvUbuglfb8qAofKYbPFAWvGlQPSMZw0qVuBCIzRTSot5Eif22j4WPkUzQbkGzMpIjP
      FBluWddHV0n1YVozgiGSvVJjuKjfjs7uLqhUPTi0eckWKIOl8SG8evmWrovSkN+DojXoBQ5W
      JvDPT75D+8A40nSxQrUnTO5zmp4xaCmg1YIubw7NcUE59s8RWeA9xo4Sbb4dEHujdLMOOcaz
      uT0/UbcNA10jGFeRT8AVc+ggDb4vnr2GbnQSR0aPlN+xv4qfv3uKH77/GaaTkPIMcGIgg6HO
      dgzTfVTZGmItJgIusspbxYp+HO10l1YlhxghGLcjGI+Fr9dUIIpHq59YwRpFH/xE4dFlhxgW
      9hD5CkyOTqHz/Qes79olAARJTV+gG33GRifITbKMCuS1m+liNR3aP/Ujnq1+gRp730hXfFZx
      iXwsnSTaeXsgvwoAXq+y7F11iWRhz6VTiNHVsMlYlPwB8s7xbtMO1ORAM0WxaMPx9NUZ4ILC
      CroxNzmOborZOTW3gVyNC2ElNUn4A9yeIDxWkNWzC5Sie51Xl1awTBe4rK7vSwvkWNBFAZU7
      6fraBbrPWeEcIBbyY1k/gRby8hqiqzQzNahA5dYIAgACAM0Gaj0ACJ4cUzDlFrS3vMFPP7/D
      nsULt3kH3z/5Bj++/girV9EU4hwrY3149uQZXv7SiXimugokACAEvdmCXu599QAgl47TZeQU
      ZXxgGNs7e6zyIJ0IQTukxgiZQiQzuasq0DldMnGAGbord4sunljfPrrRHbJiBhDAaDYw6gFA
      xG2hSBE9mNEvwF84CbYfrqOVfmv5+BarO8bru0AxumljdmYCGq0WxzY3zmm/tdFHAEAA4IsB
      gOQ2Qnc4f3xHLpF9w3D5Y5IYh+m37s4OtLS2YmZ+/ToA2F7aSiGvh0YGMLO6L2YAcap7r85x
      ap0Bssk4aTMGjNClLD106MWBsfhxHm+hu2cAS8sbiCauWYOe02V2axgenyaC4I1Gfy5MzABi
      BvhSM0AmEcF4fw+e0alv64cP2DfnD8JOSAV69eYjtLoy1qAcb4WPmZvxCAAIAHwpALD8xoJO
      9NJ9dH0DFKvKlY8X5DRsSwdms3MriCSunQM0Q+wv3yEAIADwpQCQTcZoO3+aQnYyAEY5Cpwk
      mHE6B+hTd2N8YpFM2ZsIgIsL8sG0UYg8LxnCFTAgACAAcJsASMUo9KbBXLQ+Lh2+M4kYjHSl
      0hDNAKVrADe5RD759g+Sl1hTXSJTYS+GewhtvTo6ccsb0AkACADcHgDOsTk9QXb9dKe0+fqt
      MWyek6DgWGMDfeQT0AajI0DWo2fwkJmPfmoK+vlVJVOIxlWgiNOGybFFTKrGEU2fFa1B90nn
      sgWOKR3lU7DwvdynQl57HXnl91+jkd5bpWy5nJK88nuU38dtKv/eIo1of9P6X4pWzdagmSTm
      BiaxQtGeN7ZsioKbpdihG8tL6O/qxLbBhbNsCjNDdKN894B0Z0AgqmgM1xgI0rEA+sl+qE8z
      SVNS3l5b9gdQuvhM/KZ8wZ/gS2W+RDL+gj/AObbmpvCptRMGGt2VnmwyStagA+gf0SJUMIZL
      hEPkT55ELBBCrJlrAIrIjrDfR/6ulzdxCBVIqEC3pwIB2XQCHrdP8ayKA+Eatpfx+kMbujta
      aQZwSjGBlibGMDg4jqkJPTzBuPAJbnYHiffdLuhrPQjLETi2VpcwMT2Dudl52gWKSy6RR+uL
      +PC+Bb0DY81VgZSmIDED3K4wPEaw1QqAcoq8bXcFrZ/UFEp9E9HkHccFeowdJtrc3EGgEQCk
      6aKWOFmC8q2RbqsBPR2d6NdoxQwghLO5wnkX/KwHAEnamh8bHkZ/bw8Ghqbo+qYwAi4HRvrV
      GBybFifBd9FhoozmgqweAITpjrC2jg6y/mzFu/efJIcYp3GbIkWoyEy6vbkHYWIN0NyOFsBR
      5mc9AEjFghgZ6MUI7fg4XfkAuUm6Z3iIjOQ02mmxBhBC9vWBth4A8EHYhEaNl+T+6PDl/QF8
      dGVXL5lI9w4Nwh0S26D3ytZdALI6IGsFAEeL8NH9AF0f3+D569ZiuBQXBcdtaflEwbGeoWdA
      J84BhNBVF7r7xKNaAZAhQzlVy3u8fvEWcwuHRQNNthHKZjLIUKLgbc0BgBSmjtI5+RKUxhMV
      5wBfl3DdJ0Gv1yk+L4PndH9w3hCTvwc8DowPqvGhVU1xQFPXlqkknzcHwBnFW1ydmsT+oRkz
      wwOYoFhCZ4VYQgIAAgDNBtW1GYAE3X60Df30Bg7X58kBZgThRD5sogyEeDSKdCZ/Q0zpc2MA
      8LWTiWgYQ+2t0A7roRuZgValBdkYiZvihS/xrayvQiU3xbPGkaHob9vzFMWwbZDig2oxq9Xh
      2OSryaLzZgAg5B3vbmDP4MD+gp5Moedoy0lLPgFjIF9jKXhpKEQOC9aDW2FEs0cW8b6vY7YK
      JNxkzRmRBtigx47F5S34HBScmYRfq6YguYMjMFqUrUObPgPIL/SSJ5jN7sYihVRc3DgkZ/r8
      /wgV6OsQqq8J/NdjgwJpWvAe7Jlg2t/A6NgMBXO7ru6UOae6+Rqg0lwjACAA0Gxw1boLVIsO
      dDMVqIYSBAAEAAQA6OSt2UwQ73u8wBIzgNhdedQDigCAAIAAQA3qdy1ZxBpAgOmrA5OYAYTQ
      fnVC28w1mwCAAIAAQC36TQ15hAokwPTVgenWZoBcLnceCATg8/maljiC197BDiwug0iCB02R
      AQddcNEsGSX5vDwJprDo52xfQUBoWmKba6fT2bT3NbNu4l3N6+evlZckn7dvCuHx5C8mEI/g
      wH3jwJ2sAQQA7lu3i/rIHBAAELLwqDkgAPCou180XgBAyMCj5oAAwKPuftF4AQAhA4+aAwIA
      j7r7ReMFAIQMPGoOCAA86u4XjRcAEDLwqDkgAPCou180XgBAyMCj5oAAwKPuftF4AQAhA4+a
      AwIAj7r7ReMFAIQMPGoOCAA86u4XjS8DgAu6TNiE+ZlpzK7s4VQO9dwAvzg2qHCIaYBxgqTI
      gdOzUykUupzOzs9uxJ140Iu1pSWMT8zSRRqKLpHnWJ/U4NmzV/ikGkcy13iBAgA36qtHT3xO
      d1BE41GEoqFiSqQSN+KLy7CJ509/xruP3TB7wso+wSfGPWgGh7G0ul9mBrhAiC4nWJ7fhp3y
      Dg+OY397F1abG+vLywjStfT8CADcqK8EcVUOXMB/Ysbq0h4sh5sYHp7A3tYO7HYP1kgOI8nL
      q5LkVyVCHgwPDWFqehFhusroV/zQBWO/JmHN3y6Gc8wP96FXM4atXYMiAPgCsoPVabx71YNp
      zTimRsfR/vI9Xj59j7m1Y4mGokwglUrB5XJVbYbIIDhQKwdYrjjaCIvrBalDW7NjaHnfj4m+
      MUwNj6Ht5zd4+ewDlrfNOKOL864+tr0VtH5S0c0yG4gqqUC5TBp7y3NobW3D+NQKsoVb966+
      KB32oL9zGJMD49BrJ/Dx2XP88OQ5RqaWkSMarqTf74fD4ai1bSKf4EBVDrBcBYNBKdQOP3Gv
      AwPdoxhXa6Gngfj990/x9PuXGJ9bvzZ4nxGN23KMjrY29PaPwR9JXp0BLpCg+5eMu5vo6uyo
      CIBcMkKLiR0Y9jag6tFgc2UNJosLS/PTOPFHhQpUtStFhmZwIB0NYp02aw63lqBSD2NjeZVU
      cRcWZqfgCX++XsgmE/DYLRhQ9RAARpUAkFeBVsf78d033+PV224ksuUXwcX7gXk6ku5p5ftZ
      83cGizVAM7pXvKMWDpSXw+vUJwfr+Pm7H/HD989hcoaU1gAXsB/uYGJ4GH2aSSTS+ammkUcs
      ghvhmqC5TQ5ESWWa1U2iu6sXDuVdoAss6TRoIT3puyffoX9ssew6oFpFBQCqcUj8/11z4OR4
      A+/ef8SLn3/A6w99yjPA4eYC+gZ60TswgNGJBWTKLISrVV4AoBqHxP/fNQcCThP6+tVQ9/dh
      aGhU+RzgnLaX4rEYXS+fLa62G6moAEAjXBM0t8oBWp8mE3EkUmm6Zf7aOcAFwj4Xtre2sEXJ
      YHLgTJhC3Gp/iJffHQcyiSj2d7Yl2d7bPyYQZK/PAPFwAMuztK//8SOGtHMNqz9iF+juOlaU
      VBsHsukEDrbW0PGpFR1d/fCGE8onwStjffjpyU94+UtnzdfOK1VBqEC1dYzIdXcccOyv4tWP
      L+jQ9mcYHMHrAGAzB5fZiN3NTSwsbUmnuo0+AgCNck7Q3Q4HLhD1uyW7tVn9AgLXT4LpaDno
      RsvPz2kbtJ1UoHlkTgUAbqczxFvvmgOnmSTGutvx+tUH9KiH4AnGFVQgmgH2VvToIFOI4cn5
      hs8AxBrgrrtXlFcLB3z2Y3R1tKOnfxC+iMIa4JwcELaXp8lWgs4BhnVIixmgFr6KPF8BBy7I
      ZMdtPSCbITXNAGqcBKJXZwAyc15agcXqhN1mQyAUw3WD0tpbKtYAtfNK5Lx9DnhMR9jZNsB5
      YofT40fu9OwqAM4w092Fzs4+jI2NkUPMHnLiHOD2e0aUcCccMK/Pkw9LmyTbk9MLSg4x5A9s
      tiKu4EnTSA3FDNAI1x4uDfv35k7petYKifPc1hP1euD1RoqvV3CKJ1dHtwNj01NYmV9D9IZA
      EAC4ra78+t7LJsuxROwz/95SX1/5O+eRzemb3co0nQTr9ZNYWFiGwxlir7LrDjHW3VX877/7
      Df72L/8OQxNr4hyg2b0g3vfFOBD1O/HkD/8Hf/Wbv8ErcqMMxlIKphB0DvCu9TWeffsjhidW
      xTboF+suUXCzOZCjc4BhTSd+evoTPrZqEIgqAIDdupKpJJLxJLK5m+ljQgVqdheK992UA5lM
      CslkEul0lgI3XFOBSl9/gXQyjXMFz/paKyEAUCunHkc+juJQS7rkBkUXyWVwlk0X0/lZ4x6K
      pVzOkXN9JptT9geIBLwwHB9RvJU1uAPRsmcBF1SZvc0lrG/uw3RkRjgUxOGRseiNLwDwcAU7
      k80glU5VTGkSXHlByzZmYVKvfR5rxRSiPHKEHqbJxINIR7zFlEvFikz1nhgwO7cEs9EMry8M
      49EBRXvLx6Qq92SSMZgMBmytr+PI6FC2BtWPqNClUuH7756gtWccqTKnwblEGJ1vXmJYO42e
      1y3o6R7GrvGEZo28czyHrnC73Q9XCh5IyzI0yibTpPZWSClSHUp3Z1j4YyRMlRJHcSvSsGod
      8SMWdFZMnKcUNFcBkE1GpZhTFxdnWB7tw8c2FSY1g2j7oIJOv4F0lUiG1v1lfGjtwJuXP+Kn
      l63KLpHH20toa2/D1NwCNneOysYHPaNRwG42Y6izBU9++494+vQdjCd+SSzS6bQk/Ha7/YGI
      ycNtBo/U8WS8YmJw3Gh7kgCQjYc+G81LR3b5O+e5jCpyhkjIjZDPXkwBr5P28r3Ikuz5TpxY
      nhrFmx9/wO/+4Q/QUaTCag5cIbeVbIFaoRmfwNrqujIAPNZjtLx5jfHZddoGLW8McUpMmdGN
      Y2BwhKJITMJiNmBkYqaIQqECPVzQ1N2yGwAg6LVDTolYMF80qUdH2xvo6VGTDE5iZ8+IyfER
      2H2XB11KdUzQDDPQ0YYO9QhCStug9GbYjrbx6cMbqIdnq2yDXrBfJS8mpOi9jNxsLivFB+JH
      AKBuMXm4BA0AoNoa4IxOlFPk28sq0RkZuvHfp1X8VyJ0FqDp/oS3rSqyBlWIDOc2HaDl4zs8
      ++YFTK6gMIZ7uCJ5ty27BQDU24Bk2Ifejk8UGOsp9MuHSsZwQISc4seG1fjhDz9hx8AL2sbt
      QcUMUG8XfT35eTvynBbPFdMpR2cuyM89AECWdpAWZ8bx8senGJlcRzp7WiYsChkkeZw27O+b
      xAUZX49M3l1NeUcnGkA04KyY4mEvDaAFj8J7AABp6cB3DoR82NnaU44O3UwuihngZtyUY15W
      +7xZKQ1QkzBHKM6+z22pmIKkb3OMqfyitf5doGprgAZq/hmJuCPsphy8ZXreR/eH/RVTMBKk
      hd/NTFbqbgYLM50BKW1jlv6WoR0bFmIBgLo5LAhkDlCs7Yr/rnKKd+GqndDyoVZRNeHdOtLV
      z7KpKolOWOX1oABAbQIqVKBLPrHASdt1lRLbytxg04FLYxOFaodaPLMULwQimkTU/9lhU+nB
      k/w9EnSB/cWLo7mYAaqDQADgkkc86rK6Ui2xt9RdP3E6HAp6bRVTmBa8AgB19owAQJ0M+0LZ
      +baf6vp8QLLkFDNAHZ0kAFAHs5qU9YLUFNbpKyeaZUpULQGAz26JbFJP8OJKXJR9M2ZK103x
      9VOVU/GwiUqL0Gmni2LgV0peMgg7lQ6p8o8AgADAzQT1lqg5lF8mFqicyF6+qJtTPbKkziTp
      Bs9KKRXxkTpzuXUqAPBAAMAzDu+CVEu8E3PXj3SYVYNHVKlqEqXFqZOcPiolt8tEBoiXTiC5
      VLS6Pk+7PgIAkoaibArRLOG4axWId1AisRAi0cqJbcnv+smk4ojSVmLFRLbvp2RfU1RN0nGk
      aDSvlHjxWuomKABQe88+OADwwi+vMvgrprOSEbN2dt0sZzIRgZ/cASulAG1F5sg5RX5OCQBV
      d2eiPgGABrvmXgOAVQZy2q+aSg+Ozk8zJDC+qkLDp553/ZxmElXrlWZhLlmcCgBU9gm+aR/e
      GQBYFUrS6SOfQFZK2ZLpn9UUL93p6vHYK6YEjazy0wgAJKBVO6GVfFAvzcJZ1arWFm5v6VpD
      AOABGsPxQmpvZR7zK5s43D6En3w1t7b3i26U8hogR4IdILe2ahEB4qS/XwpzDjwiVlMBWLBu
      AoA03RvlpbpVS5xPfqJUT5PloGIyWw8p/kz8Up0RM0DdPsHVrEH9DgN0FJDBcHgMx4kPe1sb
      HO2t5onhxjNAmnYpxnpHMNzdi/c//IK2tgEc273XXCIZAGw666Edi0opGgkUK5/NkFO9ywy3
      01gxlYImQ0LmdlanSVKMSPlJ0eLUTfvmlcsxketdqTAnkaAFa+XkkWLZFPV5AYDmAoCiQiyN
      6KAbHEMHRSR5+4KCOCzu1hXJ8MYASIW8GOufwISqH0//7z/hxYuP2LdchkGRZwDepcjUMJrn
      SoTsjHRh3suuJmg5WijKDy9uk2SnXo2G99eLgknrgWQVYeb/Py1ZN/AaotrMxGsR9pYSALgl
      c+iLU8xpdJjTTaPl2XN8808/YHR6ta5YtjcGwPlpGjMjAxgcpYi7dJ3SicOK8Sk9uZrl99lv
      AoBz0rPvQgVi0FQXZi9FKLsczQUA7oM/wAXMe6voaFdjeX4Rh8c2zM/oYPOGG1OBKIjVeSQS
      QSgUqiv5fT54vD74/WRRGAzCR38Hg/l38N9GoxGBgA9uuxkuGx3RV0het7NYdsBPR/o10Pg8
      rhIab000fi/Fmim00+/zVK0X15nzFWmIvlpbuO4Bn7dIw/WsiYbaLZfjI35Uo2G+Mn9lGteJ
      jWI1HVdMDgv3CZlAF3jgctRAYzUhWKDh24PWlhewsjhbMa0uzUv9L5VDsuC0WarW7YTysNzk
      5SeAE5v5MxoX3e4i1ztAMufxeMGfAaLxE+/4s1YZDgQClwdhFNbknINZpVIU7q7mlMQh3brx
      qbUb89OztAA+wqR2HA5vSHpHIpGQAmNFozHYHS5Y7c6KyecLFMuORqOw1UDjD+TL4hSJME3l
      MrgOgWC4SBMKR6rWi2k4n1xOkOht9FvFRPUIU31kGq5ntfZze7ndMg3zoxoN85X5K9PsG8wU
      8WCjYlpc30Gw0B4OFLt9YMTM0nrFtLSxSweM+bq9fPUG//5P/hz/8b99WzH9h//yV/hff/sP
      UjDaeDyOte2DquWs0iZKjPJyObFYDCube5/R7B+b87IVj0A/3A91/yj02hkc7h9ANzmLSDxR
      s/ySfN7wJJj0sPlBHWbHJ/Hp+Vv8+O1LLG6Zi5EkLneByMneF4TLE6iYorHLnZYsxRpye6vT
      xBOXq/5MJks0lcvgOiQo6K/8cATsSDReNZVGyubtzTSVVS1xrBr54XpWaz+3l9t9uduUqErj
      IZpcSRTveDJFd7tFKqZgJMaRkaVieHt332iDfmW7YlqhXb5MNm9A99OLX/Cv/vM/4t/+paZi
      +jf/9Wf8+V/+jVQG82xz31i1nI19A7l45lXoHMWaWt89/ozm2HIi/V+GnPK1vP7s1eD1t0/x
      C13qbiu5/aUWPejGawDwQmRIi4kRLVp//gUvn7+HRjuLTCE+49cAgFoY1Yw8DAAW8ErJ4wvd
      GAD11vWrBQD5G4+oxzCm7seLb75Hy4cOLO4Y6grjc3MAELdPTHsYGhzHwc4eXTvjo6i7S3AF
      8xF8BQAuxZFHXI6gVy2dl1xKyDMMz4qVUozucZBH83qF/2ueAfgMamN+GpP6Zeyu7dA6wIeF
      5RWkChswtfCiKQCoVJAAQC3d8GXzfK0zQDO4JgDQDC5+5e8QAPjVr35FTPg1oeFyxdakTr3p
      DOD1h6TFc6VUuqBtZBHcpKZ+ta9hANicXmwfmiumQ7NdWpTel0VwMxh+ZzNA3hguLe2+VEql
      OyDcMaenZxzAtGIqxa0AQGNiwfFfmY/Vkvz2+7AL1FhLP6e6MwA0o7K1vEMAoBYu3TzPgwZA
      juLXWAyHWF5ewgYdSoSidM1Ngzy7a48wAYAGO6pOsgcMgHM62V3C4PAE2VYYcXx0iP0Dc8MR
      ogUA6pSsryT7AwYAhcmj6GXLZOPx4e17TM9t12Vdd7X/vgQAeMFc7cCpdOH8lcjcvarmfQPA
      KRkqGveOydbIAX8gQrdFHiKWugz7Uo55CmuAC7iNe3j3+jUGRnU4tlA8yEb1Hyr1rgHA5UkH
      TZnK6SYHR/dKEr9QZX56/hL/4j/9d/zrP/uxYvqXf/LX+B//8zdNNYU4MjsKt0ReCqbLvI1n
      //wCuoFBtLf0Ymp+C9kyN5uWskxxEZygcNyLM5N4/vQHdA7pkbsBAu4aAF9IHh5dsXNzc/iL
      v/o7/MXf/LZy+uu/h7q3t6kA2CJbofwtkVnkyMloY21dsgAd7ujDcFcbfv/bb6FfPajJJEJx
      BjhYnUNnhxrzy2uSNWYkHKvpZUpSIADw6LBRtsHNNobjgjjOEluM5shBaXF8Bquz89gjgzvt
      6DBcoUtHKblSrCqZDnYxodNifGIa+wbbVWvQC/gcFkzrJjA6OooRrQ67h1acNRiyWwBAAEDm
      wG0AoJS7p2QRyzeVsgXuKd2RoHRbZIpMqI2Hh1hdXcE27XDuHRiUzaH5BWzLz8ZYN1gC3Pka
      QIjb/eXAbQOg1pa7jFt48uRbPH/7CRZ3WPmibLfVSOcAy5ibm4fJ7ml4ISxmgFq75eHnuy8A
      CFNwstb3r9FHTjRx8t0lS6CrtkDnmB1Vo6evFz89e4qWrlEkyRyhkUcAoBGuPUya+wKAZOGm
      +HbVEIdQUVaBPI5jqFRdmJxbgtlGN4M0qAcJADxMYW6kVfcBAJkkuege7aGrrR2jOnKfTKSV
      Z4DViRH0D2qxuXPc8CkwM0kAoBFReZg09wEAZ7kcUuRvfLy9hQPa3MkoXZR9zp42eh0+fGzD
      BMVZyRZ8RxvpFgGARrj2MGnuAwBkzvpsVrjcEaXw6BcIulzYppAX3Z2d0NUCALq9JEZO2HEp
      MkEW4aCfr6CXyhIAeJjC3Eir7hMAuP5nFHcqlc5cPwdwmY8wMqhBT3c3puc3i3E+yzXa5zjE
      yyevoB8jD33tPMa0esTS+cgGAgCNiMrDpLkPADinaBPsY8JP0G3H1p7iOQCFyVifQ2+fmiI8
      TCNTxqaCQxdaLRYpKJOmVYUxVSf+/je/w8quTTo74BhDfGTNcYHEIzhwmwA4o3OrOAUHOCUd
      n+28spmMdCB29UnQDpB+ZgYra1twuvxkL3SqfA5wuLmAHlUPBsf1yJRZAzAAOEJYPBHHFAXI
      nRkdw9T0IgGnD75IUhr92V7D7b6MFSrE4PFy4NYAQEFyt5f0UHX2Y5yik2ysU4Cs8WmEk9dv
      ATqlYMUH22v41PIe7ymQc0h5G/QCduMOurs6MLm4UcMu0AVi4Wh+DZCmMB7hIBL0KVSgxyvs
      Si1vFgB2j8wUATAimT3whk04FITX44FuaACdr9/i9//wBJtHTkULhmTYi56Wd+jq0WBp64DX
      qsrboGuzWtoG1aCrbxipXOO+8mINIEAgc6BZANg3WKVQi/y+HEX53t7YwBip6519Wkxr1LR5
      0we1ZoxOeS8j7Ml1yCSjWJ2fRcvbV3jZoqIZQPEcAAg4rTSVbFDMSA5z2HgnCgA0zruHRskC
      y8K7TCNvpbRnsNQUGlHmDwfI2l6Zw8zcAozHFMA3FIPFdKR4UYaPDni7KJr0+tYuTCYjNjd3
      ldcAGzQDzFHI6R71CBKFMIeNdIgAQCNce7g0WVqkVounynnkMbdSbNBGuMT3KbsphP/ayjIt
      hDdgd/mUTSFipCutr63AaP+6PMIaYYqgub8c4J0cm9NDnoknxeShWFE3eS54c4Z2iTJSUjSG
      yzsa8A7OTV0HxQxwk64StLfBAadhi6wcWvHqxTO8bR1QVoFM2/N4/fETdDNrZbdBa6mcAEAt
      XBJ57pIDvhMD+gZoodzfC41mRBkAx+vT+Oa779A1NFn2IKyWSgsA1MIlkecuORDzn6C3pwsa
      Cv3jDUTKOMSYd9HRrcLKxlEN5wDlqy8AcJddK8qqhQO2vRW0tKmwSLfoRBPXbIH4FefY0g/i
      H7/5Iz50DyEpdoFq4avI8xVwIJemW3osBqi7OkkNGkMgmlSeAY7W5qGla48OKQYLB05t9BEz
      QKOcE3S3wYF40IuF6SmoyNCzX6NVAsAFwmTAtkO3+42PT1BsUOEQcxsdId75ZTiQSycpKsQu
      NH0qaMamJI+w/w+1ojblrD0qrAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Temp-filtered' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='144' name='Sheet 8' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAACQCAYAAACRfFAzAAAAAXNSR0IArs4c6QAAAARnQU1B
      AACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAA
      AAlwSFlzAAASdAAAEnQB3mYfeAAAArRJREFUeF7t0wENADAIBDH8m2YCUHBLp+BzdDOeAgoo
      oIACCiiggAKfF1hPgUCB8w0Dm01UYMGFIFkA3OTZjAaXgWQBcJNnMxpcBpIFwE2ezWhwGUgW
      ADd5NqPBZSBZANzk2YwGl4FkAXCTZzMaXAaSBcBNns1ocBlIFgA3eTajwWUgWQDc5NmMBpeB
      ZAFwk2czGlwGkgXATZ7NaHAZSBYAN3k2o8FlIFkA3OTZjAaXgWQBcJNnMxpcBpIFwE2ezWhw
      GUgWADd5NqPBZSBZANzk2YwGl4FkAXCTZzMaXAaSBcBNns1ocBlIFgA3eTajwWUgWQDc5NmM
      BpeBZAFwk2czGlwGkgXATZ7NaHAZSBYAN3k2o8FlIFkA3OTZjAaXgWQBcJNnMxpcBpIFwE2e
      zWhwGUgWADd5NqPBZSBZANzk2YwGl4FkAXCTZzMaXAaSBcBNns1ocBlIFgA3eTajwWUgWQDc
      5NmMBpeBZAFwk2czGlwGkgXATZ7NaHAZSBYAN3k2o8FlIFkA3OTZjAaXgWQBcJNnMxpcBpIF
      wE2ezWhwGUgWADd5NqPBZSBZANzk2YwGl4FkAXCTZzMaXAaSBcBNns1ocBlIFgA3eTajwWUg
      WQDc5NmMBpeBZAFwk2czGlwGkgXATZ7NaHAZSBYAN3k2o8FlIFkA3OTZjAaXgWQBcJNnMxpc
      BpIFwE2ezWhwGUgWADd5NqPBZSBZANzk2YwGl4FkAXCTZzMaXAaSBcBNns1ocBlIFgA3eTaj
      wWUgWQDc5NmMBpeBZAFwk2czGlwGkgXATZ7NaHAZSBYAN3k2o8FlIFkA3OTZjAaXgWQBcJNn
      MxpcBpIFwE2ezWhwGUgWADd5NqPBZSBZANzk2YwGl4FkAXCTZzMaXAaSBcBNns1ocBlIFgA3
      eTajwWUgWQDc5NmMfhYOgc/nB8wBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      AXBFp61sgY3vAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAAAXNSR0IArs4c6QAAAARnQU1B
      AACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAA
      AAlwSFlzAAASdAAAEnQB3mYfeAAAIuFJREFUeF7tnYdzXNmV3ucvcLar7HLZ6yp7a2utsVZW
      WO1qV9rS2pLs1Y7k1WpKa2lmpZE0ntGMZkajCSAJEiQAJoDIRAaIHIhMBILIkcixkTMa3cip
      c+7+fO5DIAACRCMSDZxX9Ug0cPuF+87vnXNu+O4rr/DGNcA1wDXANXDBawDA/7Db7V68cx1c
      FBtwOBzXNrEXN00Q8MY1cGFqgGxexwBcmMfNN7qzBhgAtokLXQMXFgCH3QLtqgoWm2MPA3DA
      pNPDYDRBp9JtK2ez0O809DetDkaz9VQNyGGj61bpsetlO+ww6A2wWO3SNZkNapisth3XR/dl
      MND1q6HVGuDYuH27TbpPq317fViMGhgtO49xqrd8oie7sAAYVaNIuuWL0aU9DNhhhaKnH8ND
      Q8gIyMTIon79QTgwP9CMrNgn6GvrxfiMGnshdJxPTrugwGCPHKvTg0gKKMTSLkZpUs2grKgc
      yhUjndqBiY4i1NQPwbLlAi36RVQVP0Z5ThwSEkthWL99u1kNWX0vVk3b62OquwSV1X0wn8ZN
      HmeFOXmsCwuAYaUfQb95D0mPKlBV04llvRHLCiVmF3UwrC5icmwO81MKzEyNIPbqA/TNaaBd
      kqO++gkKMxIQ5ZuDsZEpzC0sY1w2gKbGGtS2dENjssGiX0FHYzlqGpswIBuHSrUA5fQMTGY9
      5EMdaK6rQ22bDD2dzSitb8Wi1kzeZgntTytQWtOEWRW9oZfmCbAOVFVXoGdsCk0PI+H+cRj6
      eloR8PswFFaVo31gAubNl7MDwy15SKuWwbpurKZlObLScyGXgFjbFD0liHvyFLLiaHhf9kdB
      cSXaCSyTha5tYArLSwsYaO9CTU0FOocV0C8rkZuehbFFg5Mm5VrFLjAAA/D66a/gn5CDhPBQ
      xD2qQ1ViGvIrhyFvqURMcBFK4lORX1yHGAKgc2wMGQ/uISErC5G3fw8Pr3jkhSXhcVkd/D78
      FOGJKbh5+Q7KZXI0PHoA/+gEpCfcw+cf+GBkdhYK5TSFXJMIuf4eIlMewvOTj3A7LAHh/r54
      VNGOJ6nhCHqQgIRof/glknepzIDbxzeREh+GK56JKE4KxeXfhaK3pxFXf/V7JKQl4oY7ATGn
      kyzOYdOg+P59PB1aWPssYhu7DuXxD1DdqVjzUg4Dqh9EoaxjHP0lcXjvl+5IzcpGgF84Gro6
      EeORiIa6fFz6zVWkpsbg0tU4KDSrqEmNR1nLJHZER65l6Xtc7QUGgN7sl8IxtmrG0lgjYskI
      8iJTkFc+hMnmckQGFKD4QTLyimolABpaahByNRpKnRWTjYUI80lFTkgCCktqEeoWAtnUDBlg
      HB7TGz3J3RONI6vQLvQh+koUpjRrr2mjagJJIdfRP69CyYNreNIpx2DVAyQ+fIgoOraMwind
      Qj8i3GNRU5SF+yFPyAv1IMQ9GW1PnyA+pBgzE13wd4uBYkmJxOsxaJevrhm8YR5JHjHonJxH
      NxlxUFAsmvrkaMy6h9y6gbVY37yCrLsP8HRwFoNlBP6DGgqBTGjJjkFGdhEirsTjac1jBHhn
      YH5xDOH0eVytRUdBMDKruhmAc4H8+k0YVobg/+51VPVNob0yFWHhGahMjUNcWjVaCtPgdy9v
      GwAtvR2I8PJB4/AUGnLD4XsrcR2AOkReicPw/DxKQuPxpKEHOUG3kVXbhyGKwb0/9sfkqpHC
      HzMMBEBKqCeGFjUoT7iO8h4lhqpjkZBNxugThMKWAYx1l+GeXypaS/IRG1WLpZlehLqnoK3h
      CaL9cyAf6cL9q+mY18wg+UYsOjYAMC8h42Yk2saWoFldgFyuhEqrQl1yCIoaRtcAsKlREBCN
      mh4FBkrTcNMrGaOKCWRE3ENheQ3dhwCgBOE+RVheHUekewIBoEZzZgQe1Q4wAOcJALN2Bo+C
      IuATEIA7oXGQKRaxNNqCgDteCA6LRmFuCzoqatDS3o/ytArIlzUYbMmHn68nAkMCkZ1ZjabH
      VWjr6kdpaiVmVCp0FVeha2QBc6NtCA/ywl2/G/D4MAgDE8Po7umFRjOP2uIMTKsNkFU9hEy+
      jOneCtS0yiAfbERE4E143wtBdf8kZnrbUVHWD83KFIpTazE53onYQD80dXSjOK0eKsMKajIq
      ME45y5oLsKKtMBoFHZObj8luXMSj1IfokavWf2dHf0UyHlKyq+isR8y9+/C664uo7DIsLlMC
      nVqFwb4ulOS1Q6ubp/uqwuzKPB6Th+ocWzmVZP+0bezChkCilcRus8FqtdJuW4+RHZuf7RTw
      Oux2euuJcnbp7w5qZrRaLbDS96jipF3E2pt/F7+zGdFRmY6cRyUoykxCQFQhVilTFWWlc4rv
      iJ/WvyuOKc4hXtE2OraFrkccUzquCLo3ji/93bp2XrqezWNtaZ1ZnpIhI7eMEnrRkuPATH8d
      sjOqoLasNYuKTTM/hIeZhZhRm2Cj+7BYrLBtXJu4z43zSvVjx9xQIzJTyugenh3jtI30JM93
      gQE4qWq1QzUzLL01H2Y8wejc6TSTSk7AZsLk6ARWdGYJgHl5NyZmV7e9uUX/h3JiAguqZy1D
      L6qJRUUPRpXL5/LtL+57VwDEW8ZMMSvvXAfn3QaMRuPzY4F0Oh1GRkYwRJ1Ah9sH0d/Xj0Hx
      /cEByGQyyCgGlj7v2Ds6OtDf33/I8xz2+vh7h3uup19vPT096O7uPkn72H0w3EYceuD/qUt9
      RdGLlIBUTK4YIG99ghvXb8D7Zjg10a1I8e7WY46OjlKXvHbb7w58zh3H5O9vr2NXro/FxUVM
      T0+fmH1QHnS8o0GXJzoR5P07/OJHl9GnnMND39tIL+9CeVIkHmS1PtelPkYdTMLj8MY1sFsN
      LC0tYWZm5sQq59iTYMPqEsYHnuLuR/fQP6dC26M4+Hj44hY171XIlNjZlsAAnNizPRcHdjkA
      RK2blqiT6fd+6J9dQkVMKGKSipCfGIX43GaYdhDAAJwLOz2xm3BtAGYWUHQ/EsUtI+irSEFE
      0mNITdRbNgbgxGznXBz4xQCs9eXY1vtpNvp2nn3evwqOPQQSpzTToK8E3wSMLRug7K1EkIcn
      dbuH0BiUeQ6B9n8mXGJLDewNgANqamxJCKTBg34P0DWxTD35rQj09YGPbwy6aYiIMyO4TwQA
      B7UE6bV6aXKFw26FenkJyyua5yZbiPtkD8D2/qIa2BMAmwG1j5KQXdKKpoKHiIgsRG64P6Kz
      alGeGoWIxHoYnOi8PhEADvJIGYCD1NbFKysAUCgU60NU1oaJSBsNIVGrVdAajGgrjkN03BM0
      FNDQk1uhCAoOQd7T4c15ES+qNQbg4tmUS92x6Adob2+XOsJE56yBpnNubCK6mGivgKenD5pG
      lTSsOw5BgUnIjI+mJvcGGNkDuNSz5ovdpQaEB1Aqqfl8y+DDDQ8w3VOPu94BqOufgdWiQ2VM
      rDRse5xmxt2PSINaDInaZ2MPsF8N8d9fag3slQPYjKvIuPc7/Oo9N/gFBKKwphWj3ZUI9rqF
      u55+KGgc4xDopT45Pvmx1MBeAIjwZ3lODjGURuyzS6s0TN2CRcUU5FNzpIbhRPxDV8ge4Fge
      Ex/kpGrAJTvCDlIZ3Ap0kNq6eGUZgIv3zPmOt9QAA8DmcKFrgAG40I+fb54BYBu40DXAAFzo
      x88375IAWM0mEoIiuREz6W1ST57ozl5cXt21bdYVW4HEaBQx0M9Cw3CFcrKBZE+0JCqrMVql
      /8XvbOdRR/Al8OhaANBAJaN2DoX3Q0nvcoAEotoRRNqXnlc/w8/fdkPTxOpzVfgyAJC0fmgX
      RmwlnXFhyGbqOBGdJ8J4hazIDAnUCtGpvmk1OqdWUT9CqsqDCyjsnkFOhxLRtWMIrRyBZ0Ef
      ruT24Dcp7XgrvhXv0f83i/qR0DCJkt45tNI8aHEclcEiHV+cS5oX/RKMyRVP6VIAWA0qFKcH
      4L3X30J0TicsNH7DZjGiuywVQbH5UBmf15k/LgA2jFq8jYWxLWhMUNCkfGF8A7MayJQqtNCY
      cWHIeZ3TyGxTILx6FIFlw7j2qBefZnbj14lt+GlME/4+vAGvhdTje4G1+CvfKnzjTgW+7FWG
      L14vwR9eeYw/vvYEf3KjFF/1LsNf3K2Uyoiy/4v2/+lfgz+7XYEveDzBf6VyX79Vge8G1OD1
      yEb8NrUDd58MIr1lCrXDC+gluBQreul6paHjazpYvLlqM6idlMvUSzMojb6PhLwuaSyGaVWO
      WN87qBta3HzrWSy0yAMpQWg0GgwMDBx5UvzYgg63Hw/gEzLi3ySLN3EL/iGqCT+4v2bEf0lG
      +qc3yyWDfJWMWBivMOiv0e++fqtcMuJv+lTi2/eq8R0y1p+Qsb4Z24yP0jvxeVa3dOzA8mE8
      qCcdzdYp5HdNo6x/DnXDi5I2Z++0iqQT9ZiifXRBi+bxZRTJZqj8OLwL+/BuUjv+NqQO3/Kp
      ks73Jc9SvOpRIoHyGl3jW3Et+IzOE0znyGpXoIH0PccI3Fm1EWq9CZYVBbA4dLK7Wklmd/bo
      cykPIIFL0oC18eGbAMwPVOOmfyqWtkwGFoY/Qepk4+PjELpAR1WFaKU3+/cCa/CnZFzCgL8f
      XIef0Zv8F2RYkhFny8gQ++FfOoTImjEkN8mR3a6UjFi8ibsVKslLzJJamvAcK3ozVumtLOJ5
      HeUyW0OXg7yeRR4gQiq1kcaoaE0YmddK0DwkiIIrRnA5VyZd4/8OqpWuXUD5FfIqYv8GQfmj
      8Kd4L6kZ3oFBiLnzIQrvvoHWu9/HlM+fY9X3S9D5vgqz7x/D4fuHgO9/Odqe8zY9O8tBbu9U
      yro4AHZ0lYQhIK+OlvTZ/e1yHCGQCHuEFxAGJt7ESgp9hCEvUywvjNhARrhz6Z9TeXovOImo
      DgGHuEYRqvXPkGL0wDwSKXcQHkeES/8Q1Yjv+Ffjy1ey8IXPM/BltxR8wy0e33aLwk8u+eDj
      y5/B78pbeOj+GiqufgtdV7+E6Wv/CTqPfwOTx7+ExeNfwObxz+Dw+KeAxz958Z7yOgHgxPjh
      U6441wPAboaMpL1L6kfJ6M3oKkpEVfvknrHtcQBwys/kxE63JsBLIxTpH5GUC68xStpKHfff
      QIn7txHt/hN4XHkfv7zsiR9cCpRA+ApB8Uef5+BP3NLxl24P8P1LIfjZpVv45PKnuHfll0i8
      8iMUu/81Wq5+FX1XX4X82n/G0rV/DyMBYic47ASHAMTBALzyynGtEyxyAaukYEwvFVI8FrP0
      99oYgH14MqmB6L+WjNTm8c9hpre60eNfYf7af8DA1S+g/uqfIc/9e7SYxU9x5fKHeJOM/7tu
      YfimWyy+7paI/+6WSt4jE//N7SH+wi0Of0OA/N9Ld/Du5atS+aAr/4g09x+gPOITmki+KDUa
      zFAoKFrChGeVlKtf4uZ6HuCAlcUAOAfAi0IYB4U3VoLD4PGvobr2bzF77Q/Qd+1V1F39czwi
      OOLdfwx/CpUuX/4Ib1/ywI8u+eOvaJWZr7kl4atuydL+lSuZlIOUSon6/wl9il9SQ4JoGRPh
      WBQ1+Yqm3xpafqmHWtMEICJ0E7mNFF7uudLmAY1hl+IMwNHr0LWPsO4B9o3h94nxRbgjAFm9
      9u8wd+0/SqFQz9UvotL9m1IOcd+fFvPI7cb7lHu8QS1gotXqm5SIf5FazL54o0RK0KUWszvU
      WuZXjR9HNEh9H9fzaQUb6g8Rib3o9xAtYIO0oKBowRINCEf1IAyAa5vv0a/+mADYCyDhPTZy
      AIfVvJmYT1H/xCC1jLXLV1BOrWUp1HIWQK1oollYtFyJFirR8iaakEWz7h+5F0ugiKZd0Zz8
      N9QS9w41/w5Tw8RRNgbgKLV3Hr57wgBsgvGCJFhKzEWv+ZbhHyJBH1vUoouakGupabege1rq
      J7lTPICPH3bhDWqG/nUCzdOlfpGjbAzAUWrvPHz3DADgbDWKfg/RZ6Kn5FnkB2I/6pgoBsDZ
      2j+v5VwIgJN4BAzASdSqKx2TAXCt9QEOalvcDHr0ZtCjthBJ33fRjrCN1W82a3F9tSBn7ZBl
      UZytqZdVjj3AHh7AAe3cMDIiwxAaloZ+GllroMXDC1NCEXA/HG00xsuZKRkMwMsybGfPywDs
      DgCpQ9c/SkBqXi1qspIREVeJlsepCIhOR0t9FZ42j9Jw/P0rmQHYv45ebgkGQFok73ltUBpI
      SLL7Kr2Yb5KM6Mg8PAyNQnRyHkorazCnMjn13BgAp6rpJRa64AC8UB3aYaMFWJ7C+8ZN1HbT
      kI27V3DlfiLSowOQmFkLw47ViHZ7igzAS7Rtp059wQHYc30AWmtofqgF97zvoaxzEhaTBgVh
      4ciuH4Ki6zGi4lLhjBNgAJyywpdYiAHYNQewmVaR5fcJ3v6tO8Iio1HW2I2J3lpEh/sRFNeR
      XtEHixMDWRmAl2jbTp2aAdgVAAfNXpuVD0iryIt9cnqBVpGxYE4+hP6hEZoI9fz8cw6BnLK4
      M1aIAeCOsDNmkqd7OQyAawHgoCmR422t6Bmco5lgZgy1lSIuJgJPGvpg3mXiBPcEc0/wi2rA
      pcYC2S0GdNZm4KMfvoEI0gVaUfYh+PYdFFdVIC+zAkv6k9MFOt3X8imejT2A63gAq1GHntZK
      xN2+jfjcToy1lMLvThIqn9ZhRLm8rWt6YwwHewAX8gC0NCktzX6yuzjHls2lPIC4boeVFjAW
      ukAEgKwsET//xBvJqTEI8ouDQr2mO6NSqTA8PCztbW1tR9YFOsX38emf6qx4AKEZVB8IZP/q
      ZPfqOyS8atysZ5cDYFMYiwAYrivA3aBHWFQpkRRwHbKZtTVebTYbTCYS0KVdQHBUYazTt8pT
      PONZAUAYZdLf7a8vtJ/+0H5/j/0uYH42i8wlAXiaEoPUQhk0S3JkJQTiQUQAbgakYW6XvmkO
      gVwkBGIAnHzriSXs52cxv6wjpUkHVHMTaGtpgnxetas4FgPAAGybz+DyHsBJTjaKMQAMAAOg
      0x0QmwtUnHMA12kGPYxZsgdgD8AegD3A3hSwB2APcBjPcm6+wwAwAOfGmA9zIwwAA3AYuzk3
      32EAGIBzY8yHuREGgAE4jN2cm+8wAAzAuTHmw9wIA8AAHMZuzs13GAAG4NwY82FuhAFgAA5j
      N+fmOwwAA3BujPkwN8IAMACHsZtz8x0GYE8AHHYrVEuLWFhahWVDcIHkEvUandMrV7Iw1lkn
      hQHYAwDSBe2uRCDpgt708EMJrVIpJBc0090IoM/9c2uzD/fbTgSArYsWCFVfMQXSRv/vtvFo
      0H0eEQOwpzz607J81PUqMFJfiMjQEqgNGpSnhOCN1z9Gp9K5IfbHDoDdqkNnURHq2yZh0i4g
      NzEA3rd8EJ9WC/Uugu0MAAOw33BoYSNqtRoajUZ6ma5tDtisVljI6IsS7+FBdiMmBhqRHp+C
      2x/dQdfLAMBm0qK2IArvvvYzRK7rAiVEBKK2rReK2VXstqA4A8AA7AeATCbD5OQk5HI5jMZn
      ihHC3p4+SsTNwEQMTo4hNyEYTypK4fmOOyr7Zp1aofJYPYDNbMTkcBeygvwkWZTp3nrc+sAN
      3l5euJ9QAdW6BxBhkZXoFfvIyMjZVIUQi+Oa9SA3drL7FgmQXVHgEGj3EMhuQV95Jjw8Q9Ex
      Ooul2WGk+N3CzRuX8MNvfR83ksqgNu2/QMCxAiA9QJtxTRcorws69QqUikWoF4cQcvkqembX
      EhOhCzQ0NITBwUG0traeTQCMq2v6N7HfOdm9xoe8+QvW8mEAdpdHp+eTG3YFH3x8CZ6eXsgo
      bYSe9NCt2hnkRWVgdPFlJcFbANASADMLGmiXhxBFCxkML60tWyOS5I0lb0ZHR88mALoF4P7X
      Tl4HJ+f/MQBbtYKcVoUgY7eYpJBI7BaKJtaWA1jLDYQDd2Y7AQ9gQnNmErJK+rAw2o1gP9IE
      uuGFiKxK6GgV8Z3bmc0BGIDtj4p1gZzhaY1Ao4Yydp2ZPLsVS/NKjE8ooTGuySIyALQm79Y3
      HnuA7fXhtAdw1h5fXO74PcABr4s9AIdA+7UCzczMHNCqnC/OAOxVVxwCcQjkPEeHL8kegD0A
      e4CzqAvEHoA9wOHf685/kz0AewD2AOwB9n5jcEcYzwdw3p8cY0kOgTgEOkZz2vNQHAJxCMQh
      EIdAHAJtdA5yR9hp+B0nzsEhEIdATpjJkYtwCMQhEIdAHAJxCMQh0JGdyfEegEMgDoGO16J2
      PxqHQBwCcQjEIRCHQBwCnYa/OcA5OATiEOgA5rKtqF2a8P5s9pfNYqEpay6mC8QAMACHAcBi
      XEZFXDyKa4YlGRS7WYvK5EgU1I+5liwKA8AAHBQAm1GFkoxAvPN3/4go0gWyktrBjKwO77/5
      BmLzZfT5+SNyEsxJ8LlJgu1WC+mzTKI4MliSRdFrZvE4NRWh128hqaBnEwChB2QwGKRdyKPo
      OAnmJPjcJMEbsii5Heitz0Dao3JkB/oiMqMZhvU8QMjcCTkUIYrV3t7OALAu0LOJ8QcYC+Sw
      CyVoDdSkBm2zO0iEQXxW02e9U6pw4q1z/HOC1wGIz2lERUIA3C9fwls//Fv8+P2b6FaqnnvT
      cQjEIdDhQiA75vrrEeLpDe/rgajqVkDZW4PgG/T5RjBqekka0YkY/vgBsJvRWZiNopohmC1W
      mI0aNGWno6BqEBaidOfGADAAhwLAZkBdcTYq2scwUJ2PyOA8PM7PQlXnBPoq8hAVRTpUThBw
      /ACQLpDVbCbjf6biazWbtnzejgADwADsB8DExAT0er20C0XBtc0BM9mZyahDeXoQYh8+Je0p
      8VmLkpQAxGU3w/QCxckNKzwBAJzwO1uKMAAMwH4AdHV1QdiJAGGbOrTFgPbSDHj5RGFgTgsb
      iRm3FqfD614MhuZf0voABzN/SDfGrUAsjrsJgbNJsMOK4boC3PAMQfvYPEykTD5YnQdPr1B0
      TizCbHUi/jmRJPiABDAA7AH28wC7KcPZjCskw/8Z3v3tpwSBF1IfFSHO5xO8+8FnBIEXsspb
      YNxfHf0EWoEYgIMpSrM26OG0Qanp2GTQSivHiF1vIJVo/bPPBhNp0zphi5wD7FVJPBSCh0I4
      AdCRi3AIxCHQYUKgIxve+gHYA7AHWAtBUl6n1X3Me9sVrw9wXMxxPwCvD7BjjYRDrRBzPPbI
      HoA9AHuAV9Y3osHreLhy/iicA3AOwDkAD4fe+43B4rgsjuu8PznGktwMys2gx2hOex6KQyAO
      gTgE4hCIQ6BzMyPsgG6DPQB7APYA7AHYA7AHOKDrOOninARzEnwYG3M4LJju78Xw+CJsJi3a
      akuQkpqDzpE51gXa2uO58TOPBj3caNDDGOcu3znWnmA7jRfpa87Hp3//c0TmdGBZPoTCrBJU
      leTilmcylDrLc5fAOQDnAOcmB7DSfMyO+iJE0ASF+NwumgRvh1mvQmdZNryuxTEA7AH2nyvh
      7Iyws+gB4HDAbtGjNj5cEsYSSnBmzRyKYkJw/XY65o1r09Q2dIGENhDrArEHODceQLLuDWEs
      AsBEs/YNRgv0KyOIuByG0RWTVISV4baMhuQc4PzkABsA1CdFITm/GzMD7YiITERyfCz8Ywux
      Ynp+ojLnAOwBzpcHoLmay0o5lHNqml9hwEBXE8orGqBY0u06R5MBYADOFwAHTE4YAAaAAeCe
      YO4J5p7gA7qOky7OPcFnvyeYwm2zieRQSAJFkp2lVkiLyQSTySJ+dGo71o4wp864oxCHQBwC
      HS4EsmNptBURt2/j9s1QNAzMQzXfR+JYt+F1Kxy9lIM6szEAe9USe4Cz7QFIHbq2MB3FDQOQ
      leciIrwYdVmJSC9sQE12DBJz2mB2wgswAAzAmZ8UL5fLKawRoY3pmTo0xThGWmHIaNSjLicc
      MYnFyL8fj5LmCUw0lSAhrBRalkZ0xgnuUYY9wJnxAB0dHdJqQmLkgFhWa2OzW03oq82H560Q
      dE8qURIaj9LmSUw2lyIhlAE4gvXTVxmAMwOAEMd10Btf7Jubw4aJllJ4ewWhZXSBluE1oCkt
      HslFLWgpSkZ8WhNMHAIdgQEG4EwBsPNJCnXoDP+P8ev3PoH3zVukBt0M5Xgr7l27iqvX7qFV
      vuTUw+ccgHOAM58D7CaP7qAmUJ16GQsLC9Ku1hooP7BBu7KM5RVaLMPJdlAGgAFwSQCcer07
      UYgBYAAYAJZG3IUCzgHOdA7gxMvdqSLsAdgDsAdgD8AegNcHIApYHXoLCBwCcQjkVBC1b6Ed
      HRg7yvNgOB4Md7jBcPsanlMFjj0HcNCc4P7qKrR2K2ExruJpXiqC/cJR1jIGszRmdfvGADAA
      5wYAu1mHptIEvP/azxBBukBTfdUIj0hHV2stfEkWRa5hXaBtD1tMAuFJ8ednUrzNpMdwTyNS
      /XwQT6oQWs0q5lZ1NEe4HUHXwzGpWluETYzpINcj7WKAE68UzyvFH3ileKcCnP0LHXsItFUW
      RegC6ZemkBh4G9GFzTDa1kIglUqFoaEhaW9tbWUAqFt/z41XiHGxFWK26ALpVmeRfj8AkVm1
      UK2LYokHLd78QhtI7GKYK3sABuAceQATGtPjkV7Ug57yB/j1m+/AJzgcablFWNhlhgInwZwE
      n5skeD3Ah45G5K2oDdAsKdDXK4NMJsPgyDj0luffdAwAA3C+ANg/79hWggFgABgA1gXiJJh1
      gQ7oOk66OA+F4KEQJ21j4vgcAnEIxCEQh0AcAnEIdBr+5gDn4BCIQ6ADmMuhi3IIxCEQh0Ac
      AnEIxCHQoZ3IyXyRQyAOgU7GsrYflUMgDoGOEgI5HFaszCzAYLbROEwNBvt60Dswseuog93s
      +fhHgx6QGgaAATgsADazHv0N+bjyCw90Ti2j90kyrnv64e61m8isGMTzs0+eN04GYC9gOQQ6
      8yHQ6lQv4iK88eFPr6BtfBaPIwKQ+KgJNXmJiElvgPEFg2w3bo4BYADOvCzK4OAg5ufnJQlE
      i+XZe91GPxtXx3D/Ux+0y1cwUp8Dzw/c4O7lj+K2CTihji6G5us2VFFYFWIrDOwBzowH2AsA
      cYE2zeQaABOzqIiMRGZJN/prMhAcmgnN2gTEF24MAHuAM+8BdhPH3XhsmwBMLqKVQp+4tMeo
      yopHRFoZ9M8vS/3c02YAGACXBsBuWkF9QSUUK0YYVuUoiI1CZFQmhue0u65LvfNxnwgADpKp
      tm+RQNn5eetFcCsQtwIdthVov/DGmb8fOwA2sxoNDzNQ0TBGGu2A1axCfdpDVDVNSJ93bgwA
      A3BuALAZ1SjPvo93fvAGInM6YdKrUJoZhLdfexMx+TIIlQgGgLSANrr9WRdoe12I+oj9LmDW
      bprJ0tKS66hC2CwmzMqHkB8WiATSBRKr+s3IB5EbHICkgp5NAGw2G8xms/T34eFhVoVgWZRn
      ILgyABK2W2RRpDc+redaFRO6DQChCyQMX+gCtbW1MQAMwFkHwAHN4iwmlYuYGJKhQzYGw27x
      jJMAiGIbq/6xMhznAGc+B3DY9KhICEZqdj58PnfDjdthqKKl6XftabaZ0JabjjwaiyElveQR
      mrNSkV81zEnw1th/42fWBj372qB2qwr5QXcQFR6KG0EZSI+JRF7DOHbvZ3DAbNDDYNroiN75
      eXsazK1A7AHOvAcALUo80lyIu77hqG3vRklOKRQqkzPNrPuWYQAYgNMAQCyraqIXs5DhFLve
      aIboqtqnH8COVeUY6isrUV5ehtKyclRUVND+FIpF53ra9iOAAWAAThYAB7SLCjSWlyAuzAfe
      3t7S7hMah6LKZkyv6F40GM6OxfE+PM7OwI1Pf4tL/jHIzkjFdfr5cZti9xxgP4vf8XcGgAE4
      SQDsNh06KqtQUlwH5aIaBoNB2hcVQygqKEZNbc/+o0HtNjWyQ3yQVtGGqYkRJIfdRVHLJAOw
      W1J70N9xEnyySTCFPiuKERQX1mFWZ4ZVO4+yJ5UYnVPBRirlRoNR9/8Bc6Rz9vj9L50AAAAA
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
