/*
 GenOpt command file for general optimization run. Baseline.
*/

Vary{

  // ==========================================
  // Parameters that configure the simulation 
  // ==========================================
  
  Parameter { 
    Name = GOtag:Opt-Choice_Files; 
    Ini    = 1; 
    Values = "CA_Pre-1946_Gas.choices ,  CA_Pre-1946_Elect.choices ,  CA_Pre-1946_Oil.choices ,  CA_1946-1983_Gas.choices ,  CA_1946-1983_Elect.choices ,  CA_1946-1983_Oil.choices ,  CA_1984-1995_Gas.choices ,  CA_1984-1995_Elect.choices ,  CA_1984-1995_Oil.choices ,  CA_1996-2005_Gas.choices ,  CA_1996-2005_Elect.choices ,  CA_1996-2005_Oil.choices ,  CA_2006-2011_Gas.choices ,  CA_2006-2011_Elect.choices ,  CA_2006-2011_Oil.choices ,  CA_2012-2019_Gas.choices ,  CA_2012-2019_Elect.choices ,  CA_2012-2019_Oil.choices ,  CA_2020-2024_Gas.choices ,  CA_2020-2024_Elect.choices ,  CA_2020-2024_Oil.choices ,  CA_2025-onwards_Gas.choices ,  CA_2025-onwards_Elect.choices ,  CA_2025-onwards_Oil.choices";
  }
  Parameter { 
    Name = GOtag:Opt-Location; 
    Ini    = 1; 
    Values = "Vancouver,Kamloops, Calgary, Edmonton, Regina, Winnipeg, Toronto, Ottawa, Montreal, Quebec, Fredricton, Halifax";
  }
  
  Parameter { 
    Name = GOtag:OPT-HRV_ctl; 
    Ini    = 1; 
    Values = "ERSp3ACH, EightHRpDay";
  }

  Parameter { 
    Name = GOtag:Opt-ElecLoadScale; 
    Ini    = 1; 
    Values = "NoReduction, NGERSNoReduction19";
  }

  Parameter { 
    Name = GOtag:Opt-DHWLoadScale; 
    Ini    = 1; 
    Values = "OldERS, No-Reduction";
  }
  
}

OptimizationSettings{
  MaxIte = 100000;
  MaxEqualResults = 1000;
  WriteStepNumber = true;
}


//Algorithm{
// Main                       = PSOIW;
//  NeighborhoodTopology      = vonNeumann;
//  NeighborhoodSize          = 24; // Disregarded for vonNeumann topology
//  NumberOfParticle          = 23;
//  NumberOfGeneration        = 2000;
//  Seed                      = 628;
//  CognitiveAcceleration     = 2; // 0 < CognitiveAcceleration
//  SocialAcceleration        = 3; // 0 < SocialAcceleration
//  MaxVelocityGainContinuous = 1.0;
//  MaxVelocityDiscrete       = 1.0; // 0 < MaxVelocityDiscrete
//  InitialInertiaWeight      = 1.2;    // 0 < InitialInertiaWeight
//  FinalInertiaWeight        = 0;      // 0 < FinalInertiaWeight
//}

Algorithm{
  Main = Mesh;
  StopAtError = true; 
}
