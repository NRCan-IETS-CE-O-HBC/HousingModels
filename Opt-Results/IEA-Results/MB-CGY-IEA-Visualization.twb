<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0408.1805                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='ERS equip mod' datatype='real' name='[ERS House Volume (m³) (copy)]' param-domain-type='any' role='measure' type='quantitative' value='24.376999999999999'>
        <calculation class='tableau' formula='24.376999999999999' />
      </column>
      <column caption='Escillation Rate: Gas' datatype='real' default-format='p0.00%' name='[Escillation Rate: Electricity (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.02'>
        <calculation class='tableau' formula='0.02' />
        <range max='1.0' min='0.0' />
      </column>
      <column caption='Focus on fuel' datatype='string' name='[Focus on ERS (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Electricity&quot;'>
        <calculation class='tableau' formula='&quot;Electricity&quot;' />
        <members>
          <member value='&quot;Electricity&quot;' />
          <member value='&quot;Natural gas&quot;' />
        </members>
      </column>
      <column caption='Municipal Taxes' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='0.0069646999999999999'>
        <calculation class='tableau' formula='0.0069646999999999999' />
        <range max='1.0' min='0.0' />
      </column>
      <column caption='Escillation Rate: Electricity' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <range max='1.0' min='0.0' />
      </column>
      <column alias='Upgrade costs' caption='Examine:' datatype='string' name='[Parameter 10]' param-domain-type='list' role='measure' type='nominal' value='&quot;UpgCosts&quot;'>
        <calculation class='tableau' formula='&quot;UpgCosts&quot;' />
        <aliases>
          <alias key='&quot;ElecConservation&quot;' value='Electricity conservation' />
          <alias key='&quot;HomeOwnerSavings&quot;' value='Homeowner Savings (PITE)' />
          <alias key='&quot;UpgCosts&quot;' value='Upgrade costs' />
        </aliases>
        <members>
          <member alias='Upgrade costs' value='&quot;UpgCosts&quot;' />
          <member alias='Homeowner Savings (PITE)' value='&quot;HomeOwnerSavings&quot;' />
          <member alias='Electricity conservation' value='&quot;ElecConservation&quot;' />
        </members>
      </column>
      <column caption='jp-InstalledPV_kW' datatype='real' hidden='true' name='[Parameter 11]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <range granularity='1.0' max='15.0' min='0.0' />
      </column>
      <column caption='Adjust-PV-line' datatype='real' name='[Parameter 12]' param-domain-type='any' role='measure' type='quantitative' value='20000.0'>
        <calculation class='tableau' formula='20000.0' />
      </column>
      <column caption='Amoritization period ' datatype='real' default-format='n#,##0&quot; yrs&quot;;-#,##0&quot; yrs&quot;' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25.0'>
        <calculation class='tableau' formula='25.0' />
        <range min='1.0' />
      </column>
      <column caption='Base Case heating fuel type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Fuel neutral&quot;'>
        <calculation class='tableau' formula='&quot;Fuel neutral&quot;' />
        <members>
          <member value='&quot;Natural gas&quot;' />
          <member value='&quot;Electricity&quot;' />
          <member value='&quot;Fuel neutral&quot;' />
        </members>
      </column>
      <column caption='Base Energy amount' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='103.19'>
        <calculation class='tableau' formula='103.19' />
      </column>
      <column caption='ERS House Volume (m³)' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='653.0'>
        <calculation class='tableau' formula='653.0' />
      </column>
      <column caption='ERS DHW Mod ' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='11.473000000000001'>
        <calculation class='tableau' formula='11.473000000000001' />
      </column>
      <column caption='Utilities: Assessment year' datatype='real' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <members>
          <member value='0.0' />
          <member value='5.0' />
          <member value='10.0' />
          <member value='15.0' />
          <member value='20.0' />
          <member value='25.0' />
        </members>
      </column>
      <column caption='PV costs ($/W installed)' datatype='real' default-format='c&quot;$&quot;#,##0.000;-&quot;$&quot;#,##0.000' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='1.6058029014507254'>
        <calculation class='tableau' formula='1.6058029014507254' />
        <range max='10.0' min='0.0' />
      </column>
      <column caption='Focus on ERS' datatype='integer' name='[Parameter 8]' param-domain-type='range' role='measure' type='quantitative' value='83'>
        <calculation class='tableau' formula='83' />
        <range max='100' min='76' />
      </column>
      <column caption='BuilderMarkup' datatype='real' default-format='p0%' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='6555.0'>
        <calculation class='tableau' formula='6555.0' />
      </column>
      <column caption='Interest rate (%)' datatype='real' default-format='p0.00%' name='[generation Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.035000000000000003'>
        <calculation class='tableau' formula='0.035000000000000003' />
        <range max='1.0' min='0.0' />
      </column>
    </datasource>
    <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' inline='true' name='csv.41709.530460324073' version='8.2'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='C:\cygwin\home\jpurdy\HousingModels.git\trunk\Opt-Results\IEA-Results' driver='' filename='CloudResultsAllData.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='CloudResultsAllData#csv' table='[CloudResultsAllData#csv]' type='table' />
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[csv.41709.530460324073].[avg:EnergyCoolingGJ:qk]&quot;' value='Cooling' />
          <alias key='&quot;[csv.41709.530460324073].[avg:EnergyDHWGJ:qk]&quot;' value='Water heating' />
          <alias key='&quot;[csv.41709.530460324073].[avg:EnergyHeatingGJ:qk]&quot;' value='Space heating' />
          <alias key='&quot;[csv.41709.530460324073].[avg:EnergyPlugGJ:qk]&quot;' value='Plug loads' />
          <alias key='&quot;[csv.41709.530460324073].[avg:EnergyVentGJ:qk]&quot;' value='Ventilation' />
        </aliases>
      </column>
      <column caption='Annual savings, 20% markup' datatype='real' name='[Annual savings, 10% markup (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;-&#13;&#10;(  [Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]&#13;&#10;  +[Calculation_7830311143752081])*1.20&#13;&#10;&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column caption='Annual savings, 30% markup' datatype='real' name='[Annual savings, 20% markup (copy) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;-&#13;&#10;(  [Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]&#13;&#10;  +[Calculation_7830311143752081])*1.30&#13;&#10;&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column caption='Annual savings, 40% markup ' datatype='real' name='[Annual savings, 30% markup (copy) (copy) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;-&#13;&#10;(  [Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]&#13;&#10;  +[Calculation_7830311143752081])*1.40&#13;&#10;&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column caption='DHWR-table-calc' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(AVG([Calculation_2640311145556471])) - LOOKUP(ZN(AVG([Calculation_2640311145556471])))) / ABS(LOOKUP(ZN(AVG([Calculation_2640311145556471]))))' scope-isolation='false'>
          <table-calc ordering-field='' ordering-type='Field' tc-options='Fixed'>
            <address>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column caption='Upgrade CostAdjuster by Fuel type ($)' datatype='integer' name='[Calculation_0000328154041002]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([Parameters].[Parameter 2] = &quot;Natural gas&quot; OR &#13;&#10;     ( [Parameters].[Parameter 2] = &quot;Fuel neutral&quot; AND [Calculation_4270328153916499] = &quot;Natural gas&quot; ) ) then 0&#13;&#10;&#13;&#10;&#13;&#10;else 1600&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Cost of ownership --- difference from base case ($/year), no markup' datatype='real' name='[Calculation_0040311143954202]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]+[Calculation_7830311143752081]-([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column caption='jp-kWOfPVforGJSavings' datatype='real' name='[Calculation_0170508115519187]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [GOtag:Opt-Location] = &quot;Calgary&quot; then [Energy savings (%) (copy)]/ 4.733 &#13;&#10;elseif [GOtag:Opt-Location] = &quot;Winnipeg&quot; then [Energy savings (%) (copy)]/ 4.60476&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Fuel Switch' datatype='string' name='[Calculation_0540328160719477]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [Parameters].[Parameter 2] = [Calculation_4270328153916499] ) then &quot;No&quot; &#13;&#10;Else &quot;Yes&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Adjusted ElecFurn cost' datatype='integer' name='[Calculation_1010313135857628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [GOtag:Opt-HVACSystem] = &quot;elec-baseboard&quot; ) then 4950 - 1600&#13;&#10;else 0 &#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [GOtag:Opt-Location]=&quot;Winnipeg&quot; then (6.85*12 +([FuelEleckWh]-[Calculation_6370505145552871])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;elseif [GOtag:Opt-Location]= &quot;Calgary&quot; then (17.55*12 +([FuelEleckWh]-[Calculation_6370505145552871])*0.1224)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='jp-CostofPV' datatype='real' name='[Calculation_1550508115949750]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_0170508115519187]*1000)*[Parameters].[Parameter 7]&#13;&#10;//if( [Energy savings (GJ)] &lt; 48 ) then null &#13;&#10;//else ([jp-kWOfPVforGJSavings]*1000)*[PV costs ($/W installed)]-[Adjust-PV-line]&#13;&#10;//end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
      </column>
      <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
      </column>
      <column caption='Electricity savings-range (kWh/yr)' datatype='real' name='[Calculation_2250403105642621]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([Calculation_3280402162812085])-min([Calculation_3280402162812085])' scope-isolation='false' />
      </column>
      <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
      </column>
      <column caption='Electricity: total benefit to utility - range' datatype='real' name='[Calculation_2710403111306845]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([Calculation_8140403110609232])-min([Calculation_8140403110609232])' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Water conservation package ($)' datatype='integer' name='[Calculation_2900312105624061]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([GOtag:DHWLoadScale]=&quot;Low-Flow&quot; ) then 80&#13;&#10;else 0&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Non PV costs' datatype='real' name='[Calculation_3340312154727269]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1760312105551885]-[PVSizekW]*([Parameters].[Parameter 7]*1000)' scope-isolation='false' />
      </column>
      <column caption='Best+fuel' datatype='string' name='[Calculation_3690403141636492]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_8750403103901360]+&quot;\&quot;+[Calculation_4270328153916499]' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Bad-point\\Electricity&quot;' value='Non-cost-effective, electric heating' />
          <alias key='&quot;Bad-point\\Natural gas&quot;' value='Non-cost-effective, gas heating s' />
          <alias key='&quot;Good\\Electricity&quot;' value='Cost-effective, electric heating' />
          <alias key='&quot;Good\\Natural gas&quot;' value='Cost-effective, gas heating' />
        </aliases>
      </column>
      <column caption='Energy savings (%)' datatype='real' name='[Calculation_3710312133127667]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [GOtag:Opt-Location]= &quot;Calgary&quot; then (89.849-[EnergyTotal]-[Calculation_9440311154155886]+4.733*[Parameters].[Parameter 11])/89.849&#13;&#10;elseif [GOtag:Opt-Location]=&quot;Winnipeg&quot; then (106.65-[EnergyTotal]-[Calculation_9440311154155886]+4.60476*[Parameters].[Parameter 11])/106.65&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Cost of Borrowing ($)' datatype='real' name='[Calculation_3730311142712896]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(( [Calculation_3950311142640640] * ( 1 + [Calculation_3950311142640640] ) ^ ([Parameters].[Parameter 1] * 12 ) )  &#13;&#10;/&#13;&#10;( (1 + [Calculation_3950311142640640]  ) ^ ( [Parameters].[Parameter 1] * 12 ) - 1 )&#13;&#10;* [Calculation_1760312105551885] ) &#13;&#10;* [Parameters].[Parameter 1] * 12' scope-isolation='false' />
      </column>
      <column caption='MonthlyInterestRate (%)' datatype='real' name='[Calculation_3950311142640640]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[generation Parameter]/12' scope-isolation='false' />
      </column>
      <column caption='calc-ers' datatype='real' name='[Calculation_4080312115913460]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='rank_percentile(max([Calculation_2640311145556471]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Base-or-upgrade' datatype='string' name='[Calculation_4130311125228917]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ([Calculation_2160328153208285]=&quot;130777&quot; or [Calculation_2160328153208285]=&quot;144923&quot;) then &quot;BASE&quot;&#13;&#10;ELSE &quot;UPGRADE&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='SHOW-ERS-Filter' datatype='string' name='[Calculation_4250401113310063]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [Calculation_4480331150059234] = &quot;ERS&quot;+str([Parameters].[Parameter 8]) ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Pv costs' datatype='real' name='[Calculation_4270312154807625]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Parameters].[Parameter 7]*1000)' scope-isolation='false' />
      </column>
      <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Utilities: Adjusted Base case charges ($/year)' datatype='real' name='[Calculation_4380312104008812]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Parameters].[Parameter 2] = &quot;Natural gas&quot; OR &#13;&#10;     ( [Parameters].[Parameter 2] = &quot;Fuel neutral&quot; AND [Calculation_4270328153916499] = &quot;Natural gas&quot; )&#13;&#10;    ) then &#13;&#10;    if [GOtag:Opt-Location]=&quot;Winnipeg&quot; then&#13;&#10;      (905*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;       +&#13;&#10;       563.4*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6])&#13;&#10;    elseif [GOtag:Opt-Location]=&quot;Calgary&quot; then&#13;&#10;      ( 1635*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;       +&#13;&#10;        517*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6])&#13;&#10;    end&#13;&#10;else &#13;&#10;    if [GOtag:Opt-Location]=&quot;Winnipeg&quot; then 2108.43*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;    elseif [GOtag:Opt-Location]=&quot;Calgary&quot; then 3235.*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;    end&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='ERS-int' datatype='string' name='[Calculation_4480331150059234]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;ERS&quot;+str(int([Calculation_8430311144549035]))' scope-isolation='false' />
      </column>
      <column caption='Limit-by-Parameter' datatype='integer' name='[Calculation_4730403095905672]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='index()' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Wall-insulation-type' datatype='string' name='[Calculation_4800326161225524]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot; OR&#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R325-Wall&quot;     ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='OptCriteria' datatype='real' name='[Calculation_4950311164239763]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[UtilBillNetDoll]+[UpgradeCostDoll]/25' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Adjust ACH cost ($)' datatype='real' name='[Calculation_5080312144736857]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Calculation_4800326161225524] = &quot;OC&quot; ) then &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then 0&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -3049&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -3260&#13;&#10;    end&#13;&#10;else &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;    end&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Wall+ACH' datatype='string' name='[Calculation_5420326152016626]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4130311125228917]+&quot; : &quot;+[GOtag:Opt-MainWall]+&quot; &amp; &quot;+[GOtag:Opt-AirTightness]' scope-isolation='false' />
      </column>
      <column caption='Annual savings to homewoner: Base-case-reference' datatype='real' name='[Calculation_5440312091758636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_4130311125228917] = &quot;BASE&quot; then [Calculation_2640311145556471]&#13;&#10;else -100000&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades- Adj upg cost range' datatype='real' name='[Calculation_5660403112505970]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([Calculation_1760312105551885])-min([Calculation_1760312105551885])' scope-isolation='false' />
      </column>
      <column caption='jp_PVGen-kWh' datatype='real' name='[Calculation_6370505145552871]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [GOtag:Opt-Location]= &quot;Calgary&quot; then (4.733*[Parameters].[Parameter 11])*277.8&#13;&#10;elseif [GOtag:Opt-Location]=&quot;Winnipeg&quot; then (4.60476*[Parameters].[Parameter 11])*277.8&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='$ spent on PV per GJ saved' datatype='real' name='[Calculation_6370508123230093]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1550508115949750]/[Energy savings (%) (copy)]' scope-isolation='false' />
      </column>
      <column caption='Filter-gas-options' datatype='string' name='[Calculation_6670331150314929]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4130311125228917]+&quot;:&quot;+[Calculation_4270328153916499]+&quot;:&quot;+[Calculation_4480331150059234]+&quot;:&quot;+[GOtag:DHWLoadScale]+&quot;:&quot;+[GOtag:ElecLoadScale]+&quot;:&quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
      </column>
      <column caption='ERS-HDD-byRegion' datatype='integer' name='[Calculation_6940311144727088]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF     [GOtag:Opt-Location] = &quot;Calgary&quot;    THEN  5200&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Edmonton&quot;   THEN  5400&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Halifax&quot;    THEN  4100&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Ottawa&quot;     THEN  4600&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Toronto&quot;    THEN  3650&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Quebec&quot;     THEN  5200&#13;&#10;ELSEIF  [GOtag:Opt-Location]= &quot;Montreal&quot;   THEN  4250&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Vancouver&quot;  THEN  2925&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Winnipeg&quot;   THEN  5900&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Regina&quot;     THEN  5750&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Fredricton&quot; THEN  4650&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Whitehorse&quot; THEN  6900&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Energy savings for base (%)' datatype='real' name='[Calculation_7130313100558856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -0.5&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='PaybackOK?' datatype='string' name='[Calculation_7140311130548537]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [SimplePaybackYrs] &gt; 0 ) then &quot;OK&quot;&#13;&#10;else &quot;BAD!&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='jp - $ per GJ saved' datatype='real' name='[Calculation_7240508122755062]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1760312105551885]/[Energy savings (%) (copy)]' scope-isolation='false' />
      </column>
      <column caption='ERS DHW adj' datatype='real' name='[Calculation_7350403120027264]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [GOtag:DHWLoadScale] = &quot;Low-Flow&quot; ) then 19/16&#13;&#10;else 1 &#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='UTILITIES: Total adjusted bill ($/year)' datatype='real' name='[Calculation_7370312102644552]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1130312101746663]+[UTILITIES: Adjusted Electricity Bill  (copy)]' scope-isolation='false' />
      </column>
      <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
      </column>
      <column caption='Annual cost of borrowing ($/year)' datatype='real' name='[Calculation_7830311143752081]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3730311142712896]/[Parameters].[Parameter 1]' scope-isolation='false' />
      </column>
      <column caption='HVAC+PV' datatype='string' name='[Calculation_7860313141128771]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[GOtag:Opt-HVACSystem]+&quot; &amp; &quot;+[GOtag:Opt-StandoffPV]' scope-isolation='false' />
        <aliases>
          <alias key='&quot;CCASHP &amp; SizedPV|5kW&quot;' value='CCASHP &amp; 5kW PV' />
          <alias key='&quot;GSHP &amp; SizedPV|5kW&quot;' value='GSHP &amp; 5 kW PV' />
          <alias key='&quot;basefurnace &amp; NoPV&quot;' value='Gas Furnace &amp; NoPV' />
          <alias key='&quot;basefurnace &amp; SizedPV|5kW&quot;' value='Gas Furnace &amp; 5kW of PV' />
          <alias key='&quot;elec-baseboard &amp; NoPV&quot;' value='Electric Furnace &amp; NoPV' />
          <alias key='&quot;elec-baseboard &amp; SizedPV|5kW&quot;' value='Electric Furnace &amp; 5 kW of PV' />
        </aliases>
      </column>
      <column caption='Electricity: total benefit to utility' datatype='real' name='[Calculation_8140403110609232]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' scope-isolation='false' />
      </column>
      <column caption='Upgrades: PV cost adjustment ($)' datatype='real' name='[Calculation_8190312105315011]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Parameter 11]*([Parameters].[Parameter 7]*1000-4687)' scope-isolation='false' />
      </column>
      <column caption='Annual Savings to Homeowner --- range' datatype='real' name='[Calculation_8270403112829760]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([Calculation_2640311145556471])-min([Calculation_2640311145556471])' scope-isolation='false' />
      </column>
      <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
      </column>
      <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Electric conservation package ($)' datatype='integer' name='[Calculation_8710312105714395]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [GOtag:ElecLoadScale] = &quot;NGERSNoReduction19&quot; ) then 0 &#13;&#10;else 140&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Main Wall adjust cost (No air sealing credit) ' datatype='integer' name='[Calculation_8710326154745859]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [GOtag:Opt-MainWall] &#13;&#10;  when &quot;BaseR20&quot; then 0 &#13;&#10;  when &quot;DblStud-R37-Wall&quot; then   1350&#13;&#10;  when &quot;DblStud-R52-Wall&quot; then   1350&#13;&#10;  when &quot;Stud-R21-2x4&quot; then       0 &#13;&#10;  when &quot;Stud-R275-Wall&quot; then    619&#13;&#10;  when &quot;Stud-R305-Wall&quot; then    555&#13;&#10;  when &quot;Stud-R275MW-Wall&quot; then   505&#13;&#10;  when &quot;Stud-R325-Wall&quot; then    65&#13;&#10;  when &quot;AdvFrm-R20-Wall&quot; then   110&#13;&#10;  else -9000000&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Estimated-ers-range' datatype='real' name='[Calculation_8710402163702414]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([Calculation_8430311144549035])-min([Calculation_8430311144549035])' scope-isolation='false' />
      </column>
      <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='EnergyPVGJ' datatype='real' name='[Calculation_9440311154155886]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[EnergyPVkWh]*3600/1E06' scope-isolation='false' />
      </column>
      <column caption='Breakeven' datatype='string' name='[Calculation_9470403125230887]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='//if ( [Annual savings, 40% markup ] &gt; 0 ) then &quot;40%+&quot;&#13;&#10;if ( [Annual savings, 20% markup (copy) (copy)] &gt; 0 ) then &quot;Builder markup is 30%+&quot;&#13;&#10;elseif ( [Annual savings, 10% markup (copy)] &gt; 0 ) then &quot;Builder markup is 20%+&quot;&#13;&#10;elseif ( [Cost of ownership --- difference from base case ($/year), no markup (copy)] &gt; 0 ) then &quot;Builder markup is 10%+&quot;&#13;&#10;elseif ( [Calculation_2640311145556471] &gt; 0 ) then &quot;Builder markup is 0%+&quot;&#13;&#10;else &quot;Homeowner won&apos;t break even&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='ERS+Fuel' datatype='string' name='[Calculation_9830403103027661]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4480331150059234]+&quot; = &quot;+ [Calculation_4270328153916499]' scope-isolation='false' />
      </column>
      <column caption='Show Fuel' datatype='string' name='[Calculation_9940401113855898]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = [Parameters].[Focus on ERS (copy)] ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot; &#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Annual savings, 10% markup' datatype='real' name='[Cost of ownership --- difference from base case ($/year), no markup (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;-&#13;&#10;(  [Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]&#13;&#10;  +[Calculation_7830311143752081])*1.10&#13;&#10;&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column caption='Electricity savings (kWh/yr) (bin)' datatype='integer' name='[Electricity savings (kWh/yr) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[Calculation_3280402162812085]' peg='0' size='1000' />
      </column>
      <column caption='Electricity: total benefit to utility (bin)' datatype='integer' name='[Electricity: total benefit to utility (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[Calculation_8140403110609232]' peg='0' size='1000' />
      </column>
      <column caption='Energy savings (GJ)' datatype='real' name='[Energy savings (%) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [GOtag:Opt-Location]= &quot;Calgary&quot; then (89.849-[EnergyTotal]-[Calculation_9440311154155886]+4.733*[Parameters].[Parameter 11])&#13;&#10;elseif [GOtag:Opt-Location]=&quot;Winnipeg&quot; then (106.65-[EnergyTotal]-[Calculation_9440311154155886]+4.60476*[Parameters].[Parameter 11])&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Energy savings (GJ) (bin)' datatype='integer' name='[Energy savings (GJ) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Energy savings (%) (copy)]' peg='0' size='5' />
      </column>
      <column caption='Energy savings for base (GJ)' datatype='real' name='[Energy savings for base (%) (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -0.5&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Cost of base case ($)' datatype='real' name='[Energy savings for base (%) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -50000&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Energy savings for base (GJ) (bin)' datatype='integer' name='[Energy savings for base (GJ) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[Energy savings for base (%) (copy 2)]' peg='0' size='10' />
      </column>
      <column datatype='real' name='[EnergyCoolingGJ]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[EnergyDHWGJ]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[EnergyHeatingGJ]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[EnergyPlugGJ]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[EnergyVentGJ]' role='measure' type='quantitative'>
      </column>
      <column caption='EstimatedERS (What I think it shoiuld be) (bin)' datatype='integer' name='[EstimatedERS (What I think it shoiuld be) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[EstimatedERS (copy)]' peg='0' size='1' />
        <aliases>
          <alias key='75' value='ERS 75' />
        </aliases>
      </column>
      <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
        <aliases>
          <alias key='75' value='ERS 75' />
          <alias key='76' value='ERS 76' />
          <alias key='77' value='ERS 77' />
          <alias key='80' value='80' />
        </aliases>
      </column>
      <column caption='EstimatedERS (What I think it shoiuld be)' datatype='real' name='[EstimatedERS (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100-&#13;&#10;([EnergyPlugGJ]+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+[Parameters].[ERS House Volume (m³) (copy)]&#13;&#10;)*20&#13;&#10;&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
      </column>
      <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
          <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
          <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
        </aliases>
      </column>
      <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[GOtag:Opt-DHWSystem (copy) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[GOtag:Opt-DHWSystem (copy)]'>
          <bin value='&quot;BaseDHW&quot;'>
            <value>&quot;BaseDHW&quot;</value>
            <value>&quot;ElectricStorage&quot;</value>
            <value>&quot;GasInstantaneous&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[GOtag:Opt-DHWSystem (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[GOtag:Opt-DHWSystem]' />
      </column>
      <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
          <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
        </aliases>
      </column>
      <column datatype='string' name='[GOtag:Opt-DWHRandSDHW (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[GOtag:Opt-DWHRandSDHW]'>
          <bin value='&quot;1-plate&quot;'>
            <value>&quot;1-plate&quot;</value>
            <value>&quot;1-plate-DWHR-4-36&quot;</value>
            <value>&quot;1-plate-DWHR-4-60&quot;</value>
            <value>&quot;2-plate&quot;</value>
            <value>&quot;2-plate-DWHR-4-36&quot;</value>
            <value>&quot;2-plate-DWHR-4-60&quot;</value>
          </bin>
          <bin value='&quot;DWHR-4-36&quot;'>
            <value>&quot;DWHR-4-36&quot;</value>
            <value>&quot;DWHR-4-60&quot;</value>
            <value>&quot;none&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
          <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
          <alias key='&quot;none&quot;' value='Base case' />
        </aliases>
      </column>
      <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
          <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
        </aliases>
      </column>
      <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
          <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
          <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
          <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
        </aliases>
      </column>
      <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;NoPV&quot;' value='No PV' />
          <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
        </aliases>
      </column>
      <column datatype='string' name='[ID (copy 2)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;B&quot;+str([batch])+&quot;:&quot;+str([ID])+&quot;:&quot;+str([row])+&quot;:&quot;+str([Simulation_Number])+&quot;:&quot;' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[ID (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[ID]' />
      </column>
      <column datatype='string' name='[ID-filter (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [ID] = 27073 ) then &quot;Base Case (ERS 76 code)&quot;&#13;&#10;elseif ( [ID] = 48198 ) then &quot;Money Saver (ERS 76)&quot; &#13;&#10;elseif ( [ID] = 48208 ) then &quot;ERS 80&quot; &#13;&#10;elseif ( [ID] = 45338 ) then &quot;ERS 83 --- lowest operating cost&quot; &#13;&#10;elseif ( [ID] = 40768 ) then &quot;ERS 83 --- lowest upgrade cost&quot; &#13;&#10;elseif ( [ID] = 34248 ) then &quot;ERS 86 --- lowest upgrade cost&quot; &#13;&#10;elseif ( [ID] = 15157 ) then &quot;ERS 86 --- lowest operating cost&quot; &#13;&#10;elseif ( [ID] = 37382 ) then &quot;CCASHP: Optimum design today&quot;&#13;&#10;elseif ( [ID] = 37382 ) then &quot;CCASHP: Optimum design in 2040&quot;&#13;&#10;elseif ( [ID] = 16848 ) then &quot;GSHP: Optimum design today&quot;&#13;&#10;elseif ( [ID] = 16437 ) then &quot;GSHP: Optimum design in 2040&quot;&#13;&#10;elseif ( [ID] = 48198 ) then &quot;Gas heating: Optimum design today&quot; &#13;&#10;elseif ( [ID] = 48198 ) then &quot;Gas heating: Optimum design in 2040&quot; &#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column datatype='string' name='[ID-filter (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_8470312121221798]' default='&quot; &quot;'>
          <bin value='&quot;ERS 76, electric, base case&quot;'>
            <value>&quot;ERS 76, electric, base case&quot;</value>
            <value>&quot;ERS 76, gas, Base Case, gas heat&quot;</value>
            <value>&quot;ERS 83, electric, Durable&quot;</value>
            <value>&quot;ERS 83, electric, cheapest&quot;</value>
            <value>&quot;ERS 83, gas, Cheapest&quot;</value>
            <value>&quot;ERS 83, gas, Most affordable&quot;</value>
            <value>&quot;ERS 83, gas, durable &quot;</value>
            <value>&quot;ERS 86, elec, cheapest &quot;</value>
            <value>&quot;ERS 86, elec, durable &quot;</value>
            <value>&quot;ERS 86, gas, affordable &quot;</value>
            <value>&quot;ERS 86, gas, cheapest &quot;</value>
            <value>&quot;ERS 86, gas, durable &quot;</value>
            <value>&quot;ERS 89, electric, GSHP&quot;</value>
            <value>&quot;ERS 89, electric, cheapest&quot;</value>
            <value>&quot;ERS 89, electric, durable&quot;</value>
            <value>&quot;ERS 89, gas, durable &quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot; &quot;' value='Other' />
          <alias key='&quot;ERS 76, electric, base case&quot;' value='Display' />
        </aliases>
      </column>
      <column caption='ID-string (intereting...)' datatype='string' name='[ID-string (Interesting points (copy)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_2160328153208285]' default='&quot;99999&quot;'>
          <bin value='&quot;100567&quot;'>
            <value>&quot;100567&quot;</value>
            <value>&quot;102332&quot;</value>
            <value>&quot;107631&quot;</value>
            <value>&quot;108820&quot;</value>
            <value>&quot;114270&quot;</value>
            <value>&quot;115642&quot;</value>
            <value>&quot;115943&quot;</value>
            <value>&quot;122591&quot;</value>
            <value>&quot;124250&quot;</value>
            <value>&quot;130777&quot;</value>
            <value>&quot;130840&quot;</value>
            <value>&quot;131290&quot;</value>
            <value>&quot;131404&quot;</value>
            <value>&quot;132280&quot;</value>
            <value>&quot;132360&quot;</value>
            <value>&quot;144923&quot;</value>
            <value>&quot;148168&quot;</value>
            <value>&quot;155642&quot;</value>
            <value>&quot;65013&quot;</value>
            <value>&quot;85933&quot;</value>
            <value>&quot;86735&quot;</value>
            <value>&quot;91653&quot;</value>
            <value>&quot;97876&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;100567&quot;' value='Interesting' />
          <alias key='&quot;99999&quot;' value='Other' />
        </aliases>
      </column>
      <column datatype='string' name='[ID-string (Interesting points]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_2160328153208285]' default='&quot;99999&quot;'>
          <bin value='&quot;100567&quot;'>
            <value>&quot;100567&quot;</value>
            <value>&quot;65013&quot;</value>
          </bin>
          <bin value='&quot;102332&quot;'>
            <value>&quot;102332&quot;</value>
            <value>&quot;107631&quot;</value>
            <value>&quot;115642&quot;</value>
            <value>&quot;115943&quot;</value>
            <value>&quot;131404&quot;</value>
            <value>&quot;132360&quot;</value>
            <value>&quot;155642&quot;</value>
          </bin>
          <bin value='&quot;108820&quot;'>
            <value>&quot;108820&quot;</value>
            <value>&quot;114270&quot;</value>
            <value>&quot;122591&quot;</value>
            <value>&quot;124250&quot;</value>
            <value>&quot;131290&quot;</value>
            <value>&quot;148168&quot;</value>
            <value>&quot;91653&quot;</value>
          </bin>
          <bin value='&quot;130777&quot;'>
            <value>&quot;130777&quot;</value>
            <value>&quot;144923&quot;</value>
          </bin>
          <bin value='&quot;130840&quot;'>
            <value>&quot;130840&quot;</value>
            <value>&quot;132280&quot;</value>
            <value>&quot;85933&quot;</value>
            <value>&quot;86735&quot;</value>
            <value>&quot;97876&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;100567&quot;' value='GSHP' />
          <alias key='&quot;102332&quot;' value='Cheapest' />
          <alias key='&quot;108820&quot;' value='Durable' />
          <alias key='&quot;130777&quot;' value='Base' />
          <alias key='&quot;130840&quot;' value='Affordable' />
          <alias key='&quot;99999&quot;' value='Other' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Simulation_Number]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Step_Number]' role='dimension' type='ordinal'>
      </column>
      <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;   if [GOtag:Opt-Location]=&quot;Winnipeg&quot; then   (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;   elseif [GOtag:Opt-Location]= &quot;Calgary&quot; then (28.44*12 + [FuelNaturalGasM3] * 0.1363 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;   end&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
      </column>
      <column datatype='real' name='[UpgradeCostDoll]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[Upgrades: Adjust ACH cost ($) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Adjusted Upgrade cost ($, no markup) (bin)' datatype='integer' name='[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[Calculation_1760312105551885]' peg='0' size='6000' />
        <aliases>
          <alias key='0' value='Less than $6,000' />
          <alias key='1' value='$6,000-$12,000' />
          <alias key='2' value='$12,000-$18,000' />
          <alias key='3' value='$18,000-$24,000' />
          <alias key='4' value='$24,000-$30,000' />
          <alias key='5' value='$30,000-$36,000' />
          <alias key='6' value='$30,000-$35,000' />
        </aliases>
      </column>
      <column datatype='real' name='[UtilCostElecDoll]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[UtilCostGasDoll]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[batch (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[batch]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[batch]' role='dimension' type='ordinal'>
      </column>
      <column caption='generation (bin)' datatype='integer' name='[generation (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[generation]' peg='0' size='25' />
      </column>
      <column aggregation='Sum' datatype='real' name='[generation (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[generation]' />
      </column>
      <column datatype='real' name='[generation]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[row (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[row]' />
      </column>
      <column-instance column='[Calculation_1760312105551885]' derivation='Avg' name='[avg:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2640311145556471]' derivation='Avg' name='[avg:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3710312133127667]' derivation='Avg' name='[avg:Calculation_3710312133127667:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EnergyCoolingGJ]' derivation='Avg' name='[avg:EnergyCoolingGJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EnergyDHWGJ]' derivation='Avg' name='[avg:EnergyDHWGJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EnergyHeatingGJ]' derivation='Avg' name='[avg:EnergyHeatingGJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EnergyPlugGJ]' derivation='Avg' name='[avg:EnergyPlugGJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EnergyVentGJ]' derivation='Avg' name='[avg:EnergyVentGJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1760312105551885]' derivation='Avg' name='[diff:avg:Calculation_1760312105551885:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1550508115949750]' derivation='Min' name='[diff:min:Calculation_1550508115949750:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[diff:min:Calculation_1760312105551885:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[csv.41709.530460324073].[Calculation_4270328153916499]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[diff:min:Calculation_1760312105551885:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[diff:min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_7370312102644552]' derivation='Min' name='[diff:min:Calculation_7370312102644552:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[csv.41709.530460324073].[Calculation_4270328153916499]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5440312091758636]' derivation='Max' name='[max:Calculation_5440312091758636:qk]' pivot='key' type='quantitative' />
      <column-instance column='[UpgradeCostDoll]' derivation='Max' name='[max:UpgradeCostDoll:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1550508115949750]' derivation='Min' name='[min:Calculation_1550508115949750:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2640311145556471]' derivation='Min' name='[min:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3280402162812085]' derivation='Min' name='[min:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3340312154727269]' derivation='Min' name='[min:Calculation_3340312154727269:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7240508122755062]' derivation='Min' name='[min:Calculation_7240508122755062:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8140403110609232]' derivation='Min' name='[min:Calculation_8140403110609232:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy savings for base (%) (copy)]' derivation='Min' name='[min:Energy savings for base (%) (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Min' name='[min:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3690403141636492]' derivation='None' name='[none:Calculation_3690403141636492:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_7860313141128771]' derivation='None' name='[none:Calculation_7860313141128771:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_9470403125230887]' derivation='None' name='[none:Calculation_9470403125230887:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
      <column-instance column='[batch]' derivation='None' name='[none:batch:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_2640311145556471]' derivation='Avg' name='[pcdf:avg:Calculation_2640311145556471:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1130312101746663]' derivation='Sum' name='[sum:Calculation_1130312101746663:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3730311142712896]' derivation='Sum' name='[sum:Calculation_3730311142712896:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4380312104008812]' derivation='Sum' name='[sum:Calculation_4380312104008812:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7130313100558856]' derivation='Sum' name='[sum:Calculation_7130313100558856:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7370312102644552]' derivation='Sum' name='[sum:Calculation_7370312102644552:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EstimatedERS (copy)]' derivation='Sum' name='[sum:EstimatedERS (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Sum' name='[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[UtilCostElecDoll]' derivation='Sum' name='[sum:UtilCostElecDoll:qk]' pivot='key' type='quantitative' />
      <column-instance column='[UtilCostGasDoll]' derivation='Sum' name='[sum:UtilCostGasDoll:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4080312115913460]' derivation='User' name='[usr:Calculation_4080312115913460:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[csv.41709.530460324073].[EstimatedERS (bin)]' ordering-type='Field' />
      </column-instance>
      <group name='[GOtag:Opt-AirTightness &amp; GOtag:Opt-MainWall (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GOtag:Opt-AirTightness]' />
          <groupfilter function='level-members' level='[GOtag:Opt-MainWall]' />
        </groupfilter>
      </group>
      <group name='[GOtag:Opt-StandoffPV &amp; ERS-int (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GOtag:Opt-StandoffPV]' />
          <groupfilter function='level-members' level='[Calculation_4480331150059234]' />
        </groupfilter>
      </group>
      <group name='[ID-string &amp; ERS-int (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2160328153208285]' />
          <groupfilter function='level-members' level='[Calculation_4480331150059234]' />
        </groupfilter>
      </group>
      <group name='[OC-ext-ins-systems]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[GOtag:Opt-MainWall]' member='&quot;Stud-R21-2x4&quot;' />
          <groupfilter function='member' level='[GOtag:Opt-MainWall]' member='&quot;Stud-R275-Wall&quot;' />
          <groupfilter function='member' level='[GOtag:Opt-MainWall]' member='&quot;Stud-R305-Wall&quot;' />
        </groupfilter>
      </group>
      <group caption='Valid Wall / ACH combinations' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Calculation_5420326152016626]' member='&quot;BASE : BaseR20 &amp; Typical23&quot;' />
          <groupfilter from='&quot;UPGRADE : BaseR20 &amp; Cdn1ACH&quot;' function='range' level='[Calculation_5420326152016626]' to='&quot;UPGRADE : Stud-R21-2x4 &amp; PassiveHouse&quot;' />
          <groupfilter function='member' level='[Calculation_5420326152016626]' member='&quot;UPGRADE : Stud-R275-Wall &amp; Cdn1ACH&quot;' />
          <groupfilter function='member' level='[Calculation_5420326152016626]' member='&quot;UPGRADE : Stud-R275-Wall &amp; PassiveHouse&quot;' />
          <groupfilter from='&quot;UPGRADE : Stud-R275MW-Wall &amp; Cdn1ACH&quot;' function='range' level='[Calculation_5420326152016626]' to='&quot;UPGRADE : Stud-R305-Wall &amp; PassiveHouse&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\cygwin\home\jpurdy\HousingModels.git\trunk\Opt-Results\IEA-Results\LEEP-MB-optimization-data (CloudResultsAllData.csv).tde' schema='Extract' tablename='Extract' update-time='5/8/2014 2:04:40 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1010313135857628]' formula='if ( [GOtag:Opt-HVACSystem] = &quot;elec-baseboard&quot; ) then 4950 - 1600&#13;&#10;else 0 &#13;&#10;end' />
            <calculation column='[Calculation_2160328153208285]' formula='str([ID])' />
            <calculation column='[Calculation_2900312105624061]' formula='if ([GOtag:DHWLoadScale]=&quot;Low-Flow&quot; ) then 80&#13;&#10;else 0&#13;&#10;end' />
            <calculation column='[Calculation_3280402162812085]' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' />
            <calculation column='[Calculation_3690403141636492]' formula='[Calculation_8750403103901360]+&quot;\&quot;+[Calculation_4270328153916499]' />
            <calculation column='[Calculation_4130311125228917]' formula='if ([Calculation_2160328153208285]=&quot;130777&quot; or [Calculation_2160328153208285]=&quot;144923&quot;) then &quot;BASE&quot;&#13;&#10;ELSE &quot;UPGRADE&quot;&#13;&#10;END' />
            <calculation column='[Calculation_4270328153916499]' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' />
            <calculation column='[Calculation_4800326161225524]' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot; OR&#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R325-Wall&quot;     ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' />
            <calculation column='[Calculation_4950311164239763]' formula='[UtilBillNetDoll]+[UpgradeCostDoll]/25' />
            <calculation column='[Calculation_5080312144736857]' formula='if ( [Calculation_4800326161225524] = &quot;OC&quot; ) then &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then 0&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -3049&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -3260&#13;&#10;    end&#13;&#10;else &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;    end&#13;&#10;end' />
            <calculation column='[Calculation_5420326152016626]' formula='[Calculation_4130311125228917]+&quot; : &quot;+[GOtag:Opt-MainWall]+&quot; &amp; &quot;+[GOtag:Opt-AirTightness]' />
            <calculation column='[Calculation_6940311144727088]' formula='IF     [GOtag:Opt-Location] = &quot;Calgary&quot;    THEN  5200&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Edmonton&quot;   THEN  5400&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Halifax&quot;    THEN  4100&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Ottawa&quot;     THEN  4600&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Toronto&quot;    THEN  3650&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Quebec&quot;     THEN  5200&#13;&#10;ELSEIF  [GOtag:Opt-Location]= &quot;Montreal&quot;   THEN  4250&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Vancouver&quot;  THEN  2925&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Winnipeg&quot;   THEN  5900&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Regina&quot;     THEN  5750&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Fredricton&quot; THEN  4650&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Whitehorse&quot; THEN  6900&#13;&#10;END' />
            <calculation column='[Calculation_7130313100558856]' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -0.5&#13;&#10;end' />
            <calculation column='[Calculation_7140311130548537]' formula='if ( [SimplePaybackYrs] &gt; 0 ) then &quot;OK&quot;&#13;&#10;else &quot;BAD!&quot;&#13;&#10;end' />
            <calculation column='[Calculation_7350403120027264]' formula='if ( [GOtag:DHWLoadScale] = &quot;Low-Flow&quot; ) then 19/16&#13;&#10;else 1 &#13;&#10;end' />
            <calculation column='[Calculation_7380401093918234]' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' />
            <calculation column='[Calculation_7860313141128771]' formula='[GOtag:Opt-HVACSystem]+&quot; &amp; &quot;+[GOtag:Opt-StandoffPV]' />
            <calculation column='[Calculation_8140403110609232]' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' />
            <calculation column='[Calculation_8470312121221798]' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' />
            <calculation column='[Calculation_8710312105714395]' formula='if ( [GOtag:ElecLoadScale] = &quot;NGERSNoReduction19&quot; ) then 0 &#13;&#10;else 140&#13;&#10;end' />
            <calculation column='[Calculation_8710326154745859]' formula='case [GOtag:Opt-MainWall] &#13;&#10;  when &quot;BaseR20&quot; then 0 &#13;&#10;  when &quot;DblStud-R37-Wall&quot; then   1350&#13;&#10;  when &quot;DblStud-R52-Wall&quot; then   1350&#13;&#10;  when &quot;Stud-R21-2x4&quot; then       0 &#13;&#10;  when &quot;Stud-R275-Wall&quot; then    619&#13;&#10;  when &quot;Stud-R305-Wall&quot; then    555&#13;&#10;  when &quot;Stud-R275MW-Wall&quot; then   505&#13;&#10;  when &quot;Stud-R325-Wall&quot; then    65&#13;&#10;  when &quot;AdvFrm-R20-Wall&quot; then   110&#13;&#10;  else -9000000&#13;&#10;end' />
            <calculation column='[Calculation_8750403103901360]' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' />
            <calculation column='[Calculation_9440311154155886]' formula='[EnergyPVkWh]*3600/1E06' />
            <calculation column='[Electricity savings (kWh/yr) (bin)]' formula='SYS_NUMBIN([Calculation_3280402162812085],1000)' />
            <calculation column='[Electricity: total benefit to utility (bin)]' formula='SYS_NUMBIN([Calculation_8140403110609232],1000)' />
            <calculation column='[Energy savings for base (%) (copy)]' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -50000&#13;&#10;end' />
            <calculation column='[GOtag:Opt-DHWSystem (copy) (group)]' formula='CASE [GOtag:Opt-DHWSystem (copy)]&#10;  WHEN &quot;BaseDHW&quot; THEN &quot;BaseDHW&quot;&#10;  WHEN &quot;ElectricStorage&quot; THEN &quot;BaseDHW&quot;&#10;  WHEN &quot;GasInstantaneous&quot; THEN &quot;BaseDHW&quot;&#10;  ELSE [GOtag:Opt-DHWSystem (copy)]&#10;END' />
            <calculation column='[GOtag:Opt-DHWSystem (copy)]' formula='[GOtag:Opt-DHWSystem]' />
            <calculation column='[ID (copy 2)]' formula='&quot;B&quot;+str([batch])+&quot;:&quot;+str([ID])+&quot;:&quot;+str([row])+&quot;:&quot;+str([Simulation_Number])+&quot;:&quot;' />
            <calculation column='[ID (copy)]' formula='[ID]' />
            <calculation column='[ID-filter (copy)]' formula='if ( [ID] = 27073 ) then &quot;Base Case (ERS 76 code)&quot;&#13;&#10;elseif ( [ID] = 48198 ) then &quot;Money Saver (ERS 76)&quot; &#13;&#10;elseif ( [ID] = 48208 ) then &quot;ERS 80&quot; &#13;&#10;elseif ( [ID] = 45338 ) then &quot;ERS 83 --- lowest operating cost&quot; &#13;&#10;elseif ( [ID] = 40768 ) then &quot;ERS 83 --- lowest upgrade cost&quot; &#13;&#10;elseif ( [ID] = 34248 ) then &quot;ERS 86 --- lowest upgrade cost&quot; &#13;&#10;elseif ( [ID] = 15157 ) then &quot;ERS 86 --- lowest operating cost&quot; &#13;&#10;elseif ( [ID] = 37382 ) then &quot;CCASHP: Optimum design today&quot;&#13;&#10;elseif ( [ID] = 37382 ) then &quot;CCASHP: Optimum design in 2040&quot;&#13;&#10;elseif ( [ID] = 16848 ) then &quot;GSHP: Optimum design today&quot;&#13;&#10;elseif ( [ID] = 16437 ) then &quot;GSHP: Optimum design in 2040&quot;&#13;&#10;elseif ( [ID] = 48198 ) then &quot;Gas heating: Optimum design today&quot; &#13;&#10;elseif ( [ID] = 48198 ) then &quot;Gas heating: Optimum design in 2040&quot; &#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' />
            <calculation column='[ID-filter (group)]' formula='CASE [Calculation_8470312121221798]&#10;  WHEN &quot;ERS 76, electric, base case&quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 76, gas, Base Case, gas heat&quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 83, electric, Durable&quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 83, electric, cheapest&quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 83, gas, Cheapest&quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 83, gas, Most affordable&quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 83, gas, durable &quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 86, elec, cheapest &quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 86, elec, durable &quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 86, gas, affordable &quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 86, gas, cheapest &quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 86, gas, durable &quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 89, electric, GSHP&quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 89, electric, cheapest&quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 89, electric, durable&quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  WHEN &quot;ERS 89, gas, durable &quot; THEN &quot;ERS 76, electric, base case&quot;&#10;  ELSE &quot; &quot;&#10;END' />
            <calculation column='[ID-string (Interesting points (copy)]' formula='CASE [Calculation_2160328153208285]&#10;  WHEN &quot;100567&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;102332&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;107631&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;108820&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;114270&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;115642&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;115943&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;122591&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;124250&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;130777&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;130840&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;131290&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;131404&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;132280&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;132360&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;144923&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;148168&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;155642&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;65013&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;85933&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;86735&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;91653&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;97876&quot; THEN &quot;100567&quot;&#10;  ELSE &quot;99999&quot;&#10;END' />
            <calculation column='[ID-string (Interesting points]' formula='CASE [Calculation_2160328153208285]&#10;  WHEN &quot;100567&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;65013&quot; THEN &quot;100567&quot;&#10;  WHEN &quot;102332&quot; THEN &quot;102332&quot;&#10;  WHEN &quot;107631&quot; THEN &quot;102332&quot;&#10;  WHEN &quot;115642&quot; THEN &quot;102332&quot;&#10;  WHEN &quot;115943&quot; THEN &quot;102332&quot;&#10;  WHEN &quot;131404&quot; THEN &quot;102332&quot;&#10;  WHEN &quot;132360&quot; THEN &quot;102332&quot;&#10;  WHEN &quot;155642&quot; THEN &quot;102332&quot;&#10;  WHEN &quot;108820&quot; THEN &quot;108820&quot;&#10;  WHEN &quot;114270&quot; THEN &quot;108820&quot;&#10;  WHEN &quot;122591&quot; THEN &quot;108820&quot;&#10;  WHEN &quot;124250&quot; THEN &quot;108820&quot;&#10;  WHEN &quot;131290&quot; THEN &quot;108820&quot;&#10;  WHEN &quot;148168&quot; THEN &quot;108820&quot;&#10;  WHEN &quot;91653&quot; THEN &quot;108820&quot;&#10;  WHEN &quot;130777&quot; THEN &quot;130777&quot;&#10;  WHEN &quot;144923&quot; THEN &quot;130777&quot;&#10;  WHEN &quot;130840&quot; THEN &quot;130840&quot;&#10;  WHEN &quot;132280&quot; THEN &quot;130840&quot;&#10;  WHEN &quot;85933&quot; THEN &quot;130840&quot;&#10;  WHEN &quot;86735&quot; THEN &quot;130840&quot;&#10;  WHEN &quot;97876&quot; THEN &quot;130840&quot;&#10;  ELSE &quot;99999&quot;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Upgrades: Adjust ACH cost ($) (copy)]' formula='if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;end' />
            <calculation column='[batch (copy)]' formula='[batch]' />
            <calculation column='[generation (bin)]' formula='SYS_NUMBIN([generation],25)' />
            <calculation column='[generation (copy)]' formula='[generation]' />
            <calculation column='[row (copy)]' formula='[row]' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='308498' timestamp-start='2014-05-08 14:04:39.781000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.378764' group-percentage='0.0808241' measure-ordering='alphabetic' measure-percentage='0.350238' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='circle'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Cost to borrow funds for upgrade ($) (copy) (copy):qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Calculation_3730311142712896:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Cost to borrow funds for upgrade ($) (copy):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[generation (bin)]' type='palette'>
            <map to='#1c5794'>
              <bucket>176</bucket>
            </map>
            <map to='#1c5895'>
              <bucket>175</bucket>
            </map>
            <map to='#1c5897'>
              <bucket>174</bucket>
            </map>
            <map to='#1c5998'>
              <bucket>173</bucket>
            </map>
            <map to='#1c5a98'>
              <bucket>172</bucket>
            </map>
            <map to='#1c5a99'>
              <bucket>171</bucket>
            </map>
            <map to='#1c5b9a'>
              <bucket>170</bucket>
            </map>
            <map to='#1c5c9b'>
              <bucket>169</bucket>
            </map>
            <map to='#1c5d9b'>
              <bucket>168</bucket>
            </map>
            <map to='#1c5d9c'>
              <bucket>167</bucket>
            </map>
            <map to='#1c5e9d'>
              <bucket>166</bucket>
            </map>
            <map to='#1c5f9e'>
              <bucket>165</bucket>
            </map>
            <map to='#1c609e'>
              <bucket>164</bucket>
            </map>
            <map to='#1c609f'>
              <bucket>163</bucket>
            </map>
            <map to='#1c61a0'>
              <bucket>162</bucket>
            </map>
            <map to='#1c62a0'>
              <bucket>161</bucket>
            </map>
            <map to='#1c63a1'>
              <bucket>160</bucket>
            </map>
            <map to='#1c63a2'>
              <bucket>159</bucket>
            </map>
            <map to='#1c64a3'>
              <bucket>158</bucket>
            </map>
            <map to='#1c65a3'>
              <bucket>157</bucket>
            </map>
            <map to='#1c66a4'>
              <bucket>156</bucket>
            </map>
            <map to='#1c66a5'>
              <bucket>155</bucket>
            </map>
            <map to='#1c67a5'>
              <bucket>154</bucket>
            </map>
            <map to='#1c68a6'>
              <bucket>153</bucket>
            </map>
            <map to='#1c69a7'>
              <bucket>152</bucket>
            </map>
            <map to='#1c69a8'>
              <bucket>151</bucket>
            </map>
            <map to='#1c6aa8'>
              <bucket>150</bucket>
            </map>
            <map to='#1c6ba9'>
              <bucket>149</bucket>
            </map>
            <map to='#1c6caa'>
              <bucket>147</bucket>
            </map>
            <map to='#1c6caa'>
              <bucket>148</bucket>
            </map>
            <map to='#1c6dab'>
              <bucket>146</bucket>
            </map>
            <map to='#1c6eac'>
              <bucket>145</bucket>
            </map>
            <map to='#1c6fad'>
              <bucket>143</bucket>
            </map>
            <map to='#1c6fad'>
              <bucket>144</bucket>
            </map>
            <map to='#1c70ae'>
              <bucket>142</bucket>
            </map>
            <map to='#1c71af'>
              <bucket>141</bucket>
            </map>
            <map to='#1c72b0'>
              <bucket>139</bucket>
            </map>
            <map to='#1c72b0'>
              <bucket>140</bucket>
            </map>
            <map to='#1c73b1'>
              <bucket>138</bucket>
            </map>
            <map to='#1d558f'>
              <bucket>180</bucket>
            </map>
            <map to='#1d5591'>
              <bucket>179</bucket>
            </map>
            <map to='#1d5692'>
              <bucket>178</bucket>
            </map>
            <map to='#1d5693'>
              <bucket>177</bucket>
            </map>
            <map to='#1d73b1'>
              <bucket>137</bucket>
            </map>
            <map to='#1e538c'>
              <bucket>183</bucket>
            </map>
            <map to='#1e548d'>
              <bucket>182</bucket>
            </map>
            <map to='#1e548e'>
              <bucket>181</bucket>
            </map>
            <map to='#1e74b1'>
              <bucket>136</bucket>
            </map>
            <map to='#1f5187'>
              <bucket>187</bucket>
            </map>
            <map to='#1f5188'>
              <bucket>186</bucket>
            </map>
            <map to='#1f5289'>
              <bucket>185</bucket>
            </map>
            <map to='#1f528b'>
              <bucket>184</bucket>
            </map>
            <map to='#1f75b1'>
              <bucket>135</bucket>
            </map>
            <map to='#204f83'>
              <bucket>190</bucket>
            </map>
            <map to='#204f85'>
              <bucket>189</bucket>
            </map>
            <map to='#205086'>
              <bucket>188</bucket>
            </map>
            <map to='#2075b1'>
              <bucket>134</bucket>
            </map>
            <map to='#2076b1'>
              <bucket>133</bucket>
            </map>
            <map to='#214d7e'>
              <bucket>194</bucket>
            </map>
            <map to='#214d80'>
              <bucket>193</bucket>
            </map>
            <map to='#214e81'>
              <bucket>192</bucket>
            </map>
            <map to='#214e82'>
              <bucket>191</bucket>
            </map>
            <map to='#2176b2'>
              <bucket>132</bucket>
            </map>
            <map to='#224b7b'>
              <bucket>197</bucket>
            </map>
            <map to='#224b7c'>
              <bucket>196</bucket>
            </map>
            <map to='#224c7d'>
              <bucket>195</bucket>
            </map>
            <map to='#2277b2'>
              <bucket>131</bucket>
            </map>
            <map to='#234976'>
              <bucket>201</bucket>
            </map>
            <map to='#234977'>
              <bucket>200</bucket>
            </map>
            <map to='#234a78'>
              <bucket>199</bucket>
            </map>
            <map to='#234a7a'>
              <bucket>198</bucket>
            </map>
            <map to='#2378b2'>
              <bucket>130</bucket>
            </map>
            <map to='#244772'>
              <bucket>204</bucket>
            </map>
            <map to='#244774'>
              <bucket>203</bucket>
            </map>
            <map to='#244875'>
              <bucket>202</bucket>
            </map>
            <map to='#2478b2'>
              <bucket>129</bucket>
            </map>
            <map to='#25456f'>
              <bucket>207</bucket>
            </map>
            <map to='#254670'>
              <bucket>206</bucket>
            </map>
            <map to='#254671'>
              <bucket>205</bucket>
            </map>
            <map to='#2579b2'>
              <bucket>128</bucket>
            </map>
            <map to='#26456e'>
              <bucket>208</bucket>
            </map>
            <map to='#2679b3'>
              <bucket>127</bucket>
            </map>
            <map to='#267ab3'>
              <bucket>126</bucket>
            </map>
            <map to='#277ab3'>
              <bucket>125</bucket>
            </map>
            <map to='#287bb3'>
              <bucket>124</bucket>
            </map>
            <map to='#297cb3'>
              <bucket>123</bucket>
            </map>
            <map to='#2a7cb3'>
              <bucket>122</bucket>
            </map>
            <map to='#2b7db4'>
              <bucket>121</bucket>
            </map>
            <map to='#2c7db4'>
              <bucket>120</bucket>
            </map>
            <map to='#2d7eb4'>
              <bucket>118</bucket>
            </map>
            <map to='#2d7eb4'>
              <bucket>119</bucket>
            </map>
            <map to='#2e7fb4'>
              <bucket>117</bucket>
            </map>
            <map to='#2f80b4'>
              <bucket>116</bucket>
            </map>
            <map to='#3080b5'>
              <bucket>115</bucket>
            </map>
            <map to='#3181b5'>
              <bucket>114</bucket>
            </map>
            <map to='#3281b5'>
              <bucket>113</bucket>
            </map>
            <map to='#3382b5'>
              <bucket>111</bucket>
            </map>
            <map to='#3382b5'>
              <bucket>112</bucket>
            </map>
            <map to='#3483b5'>
              <bucket>110</bucket>
            </map>
            <map to='#3584b6'>
              <bucket>109</bucket>
            </map>
            <map to='#3684b6'>
              <bucket>108</bucket>
            </map>
            <map to='#3785b6'>
              <bucket>107</bucket>
            </map>
            <map to='#3885b6'>
              <bucket>106</bucket>
            </map>
            <map to='#3986b6'>
              <bucket>105</bucket>
            </map>
            <map to='#3a87b7'>
              <bucket>104</bucket>
            </map>
            <map to='#3b88b7'>
              <bucket>103</bucket>
            </map>
            <map to='#3c89b8'>
              <bucket>102</bucket>
            </map>
            <map to='#3d8ab9'>
              <bucket>101</bucket>
            </map>
            <map to='#3f8bba'>
              <bucket>100</bucket>
            </map>
            <map to='#408cbb'>
              <bucket>99</bucket>
            </map>
            <map to='#418dbc'>
              <bucket>98</bucket>
            </map>
            <map to='#438ebc'>
              <bucket>97</bucket>
            </map>
            <map to='#448fbd'>
              <bucket>96</bucket>
            </map>
            <map to='#4590be'>
              <bucket>95</bucket>
            </map>
            <map to='#4691bf'>
              <bucket>94</bucket>
            </map>
            <map to='#4893c0'>
              <bucket>93</bucket>
            </map>
            <map to='#4994c1'>
              <bucket>92</bucket>
            </map>
            <map to='#4a95c1'>
              <bucket>91</bucket>
            </map>
            <map to='#4c96c2'>
              <bucket>90</bucket>
            </map>
            <map to='#4d97c3'>
              <bucket>89</bucket>
            </map>
            <map to='#4e98c4'>
              <bucket>88</bucket>
            </map>
            <map to='#5099c5'>
              <bucket>87</bucket>
            </map>
            <map to='#519ac6'>
              <bucket>86</bucket>
            </map>
            <map to='#529bc6'>
              <bucket>85</bucket>
            </map>
            <map to='#539cc7'>
              <bucket>84</bucket>
            </map>
            <map to='#559ec8'>
              <bucket>83</bucket>
            </map>
            <map to='#569fc9'>
              <bucket>82</bucket>
            </map>
            <map to='#57a0ca'>
              <bucket>81</bucket>
            </map>
            <map to='#59a1cb'>
              <bucket>80</bucket>
            </map>
            <map to='#5aa2cb'>
              <bucket>79</bucket>
            </map>
            <map to='#5ba3cc'>
              <bucket>78</bucket>
            </map>
            <map to='#5da4cd'>
              <bucket>77</bucket>
            </map>
            <map to='#5ea5ce'>
              <bucket>76</bucket>
            </map>
            <map to='#5fa6cf'>
              <bucket>75</bucket>
            </map>
            <map to='#60a7d0'>
              <bucket>74</bucket>
            </map>
            <map to='#62a8d0'>
              <bucket>73</bucket>
            </map>
            <map to='#63aad1'>
              <bucket>72</bucket>
            </map>
            <map to='#64abd2'>
              <bucket>71</bucket>
            </map>
            <map to='#66acd3'>
              <bucket>70</bucket>
            </map>
            <map to='#67add4'>
              <bucket>69</bucket>
            </map>
            <map to='#67aed4'>
              <bucket>68</bucket>
            </map>
            <map to='#68aed4'>
              <bucket>67</bucket>
            </map>
            <map to='#68afd5'>
              <bucket>66</bucket>
            </map>
            <map to='#69b0d5'>
              <bucket>65</bucket>
            </map>
            <map to='#6ab1d6'>
              <bucket>63</bucket>
            </map>
            <map to='#6ab1d6'>
              <bucket>64</bucket>
            </map>
            <map to='#6bb2d6'>
              <bucket>62</bucket>
            </map>
            <map to='#6bb3d7'>
              <bucket>61</bucket>
            </map>
            <map to='#6cb4d7'>
              <bucket>60</bucket>
            </map>
            <map to='#6cb5d8'>
              <bucket>59</bucket>
            </map>
            <map to='#6db5d8'>
              <bucket>58</bucket>
            </map>
            <map to='#6eb6d8'>
              <bucket>57</bucket>
            </map>
            <map to='#6eb7d9'>
              <bucket>56</bucket>
            </map>
            <map to='#6fb8d9'>
              <bucket>55</bucket>
            </map>
            <map to='#6fb8da'>
              <bucket>54</bucket>
            </map>
            <map to='#70b9da'>
              <bucket>53</bucket>
            </map>
            <map to='#71badb'>
              <bucket>52</bucket>
            </map>
            <map to='#71bbdb'>
              <bucket>51</bucket>
            </map>
            <map to='#72bcdb'>
              <bucket>50</bucket>
            </map>
            <map to='#72bcdc'>
              <bucket>49</bucket>
            </map>
            <map to='#73bddc'>
              <bucket>48</bucket>
            </map>
            <map to='#73bedd'>
              <bucket>47</bucket>
            </map>
            <map to='#74bfdd'>
              <bucket>46</bucket>
            </map>
            <map to='#75bfdd'>
              <bucket>45</bucket>
            </map>
            <map to='#75c0de'>
              <bucket>44</bucket>
            </map>
            <map to='#76c1de'>
              <bucket>43</bucket>
            </map>
            <map to='#76c2df'>
              <bucket>42</bucket>
            </map>
            <map to='#77c3df'>
              <bucket>40</bucket>
            </map>
            <map to='#77c3df'>
              <bucket>41</bucket>
            </map>
            <map to='#78c4e0'>
              <bucket>39</bucket>
            </map>
            <map to='#79c5e0'>
              <bucket>38</bucket>
            </map>
            <map to='#79c6e1'>
              <bucket>37</bucket>
            </map>
            <map to='#7ac6e1'>
              <bucket>36</bucket>
            </map>
            <map to='#7ac7e1'>
              <bucket>35</bucket>
            </map>
            <map to='#7cc8e1'>
              <bucket>34</bucket>
            </map>
            <map to='#7dc8e1'>
              <bucket>33</bucket>
            </map>
            <map to='#7fc8e1'>
              <bucket>32</bucket>
            </map>
            <map to='#81c9e1'>
              <bucket>31</bucket>
            </map>
            <map to='#82c9e0'>
              <bucket>30</bucket>
            </map>
            <map to='#84c9e0'>
              <bucket>29</bucket>
            </map>
            <map to='#85cae0'>
              <bucket>28</bucket>
            </map>
            <map to='#87cae0'>
              <bucket>27</bucket>
            </map>
            <map to='#89cbe0'>
              <bucket>26</bucket>
            </map>
            <map to='#8acbdf'>
              <bucket>25</bucket>
            </map>
            <map to='#8ccbdf'>
              <bucket>24</bucket>
            </map>
            <map to='#8eccdf'>
              <bucket>23</bucket>
            </map>
            <map to='#8fccdf'>
              <bucket>22</bucket>
            </map>
            <map to='#91ccde'>
              <bucket>21</bucket>
            </map>
            <map to='#93cdde'>
              <bucket>20</bucket>
            </map>
            <map to='#94cdde'>
              <bucket>19</bucket>
            </map>
            <map to='#96cdde'>
              <bucket>18</bucket>
            </map>
            <map to='#98cedd'>
              <bucket>17</bucket>
            </map>
            <map to='#99cedd'>
              <bucket>16</bucket>
            </map>
            <map to='#9bcedd'>
              <bucket>15</bucket>
            </map>
            <map to='#9ccfdd'>
              <bucket>14</bucket>
            </map>
            <map to='#9ecfdd'>
              <bucket>13</bucket>
            </map>
            <map to='#a0cfdc'>
              <bucket>12</bucket>
            </map>
            <map to='#a1d0dc'>
              <bucket>11</bucket>
            </map>
            <map to='#a3d0dc'>
              <bucket>10</bucket>
            </map>
            <map to='#a5d0dc'>
              <bucket>9</bucket>
            </map>
            <map to='#a6d1db'>
              <bucket>8</bucket>
            </map>
            <map to='#a8d1db'>
              <bucket>7</bucket>
            </map>
            <map to='#aad1db'>
              <bucket>6</bucket>
            </map>
            <map to='#abd2db'>
              <bucket>5</bucket>
            </map>
            <map to='#add2da'>
              <bucket>4</bucket>
            </map>
            <map to='#afd2da'>
              <bucket>3</bucket>
            </map>
            <map to='#b0d3da'>
              <bucket>2</bucket>
            </map>
            <map to='#b2d3da'>
              <bucket>1</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:batch:ok]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>5</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>6</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold'>
              <bucket>9</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray'>
              <bucket>8</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>2</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>1</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink'>
              <bucket>7</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>4</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>3</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal'>
              <bucket>10</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[ID-string (Interesting points]&#10;[none:Calculation_8470312121221798:nk]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>&quot;130840&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>&quot;99999&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>&quot;102332&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;130777&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;100567&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>&quot;108820&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Calculation_7860313141128771:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;basefurnace &amp; NoPV&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;GSHP &amp; NoPV&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;GSHP &amp; SizedPV|5kW&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;basefurnace &amp; SizedPV|5kW&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;elec-baseboard &amp; NoPV&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;elec-baseboard &amp; SizedPV|5kW&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CCASHP &amp; NoPV&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;CCASHP &amp; SizedPV|5kW&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-Ceilings:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;CeilR50&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;CeilR70&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;CeilR80&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CeilR60&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:ElecLoadScale:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;NGERSNoReduction19&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;NGERSReducedA16&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_8470312121221798:nk]' type='palette'>
            <map to='#09622a'>
              <bucket>&quot;ERS 83, gas, Most affordable&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;CCASHP: Optimum design today&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;ERS 80&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;ERS 83 --- lowest operating cost&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;ERS 83 --- lowest upgrade cost&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;ERS 86 --- lowest operating cost&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;GSHP: Optimum design in 2040&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;GSHP: Optimum design today&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Gas heating: Optimum design today&quot;</bucket>
            </map>
            <map to='#1c66a4'>
              <bucket>&quot;ERS 86, gas, cheapest &quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Electric Furnace: Most affordable ERS 89 option&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Gas furnace: Cheapest ERS 80 option&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Gas furnace: Most affordable&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Gas furnace: Most affordable ERS 80 option&quot;</bucket>
            </map>
            <map to='#207a36'>
              <bucket>&quot;ERS 83, gas, durable &quot;</bucket>
            </map>
            <map to='#26456e'>
              <bucket>&quot;ERS 86, gas, durable &quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Base Case, electric heat (ERS 76 code)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;CCASHP Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ERS 80: Most affordable &quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ERS 83, Cheapest, gas heat&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;</bucket>
            </map>
            <map to='#339444'>
              <bucket>&quot;ERS 83, gas, Cheapest&quot;</bucket>
            </map>
            <map to='#3a87b7'>
              <bucket>&quot;ERS 86, gas, affordable &quot;</bucket>
            </map>
            <map to='#71badb'>
              <bucket>&quot;ERS 86, elec, durable &quot;</bucket>
            </map>
            <map to='#7eb172'>
              <bucket>&quot;ERS 83, electric, Durable&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;ERS 76, electric, base case&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Gas Furnace: Cheapest ERS 80 option&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;ERS 83, Durable, gas heat &quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gas furnace: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;ERS 83, Most affordable, gas heat&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Electric Furnace: Most affordable ERS 83 option&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Electric Furnace: Most affordable ERS 86 option&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gas furnace: Cheapest &amp; Most affordable ERS 80 option&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gas furnace: Cheapest &amp; Most affordable ERS 83 option&quot;</bucket>
            </map>
            <map to='#9c0824'>
              <bucket>&quot;ERS 89, gas, durable &quot;</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>&quot;ERS 86, elec, cheapest &quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;ERS 76, gas, Base Case, gas heat&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Gas Furnace: Most affordable ERS 80 option&quot;</bucket>
            </map>
            <map to='#bccfb4'>
              <bucket>&quot;ERS 83, electric, cheapest&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot; &quot;</bucket>
            </map>
            <map to='#ca1618'>
              <bucket>&quot;ERS 89, electric, GSHP&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Base Case, gas heat (ERS 76 code) &quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;ERS 83, Cheapest, electric heat&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Electric Furnace: Cheapest ERS 83 option&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Base Case (ERS 76 code)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;ERS 83, electric, Most affordable&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;ERS 83, gas, Durable&quot;</bucket>
            </map>
            <map to='#e96150'>
              <bucket>&quot;ERS 89, electric, durable&quot;</bucket>
            </map>
            <map to='#f58173'>
              <bucket>&quot;ERS 89, electric, cheapest&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;HIDE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Calculation_8470312121221798:nk]' type='shape'>
            <map to=':filled/times'>
              <bucket>&quot;ERS 76, electric, base case&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 76, gas, Base Case, gas heat&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 83, electric, Durable&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 83, electric, cheapest&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 83, gas, Cheapest&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 83, gas, Most affordable&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 83, gas, durable &quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 86, elec, cheapest &quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 86, elec, durable &quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 86, gas, affordable &quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 86, gas, cheapest &quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 86, gas, durable &quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 89, electric, GSHP&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 89, electric, cheapest&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 89, electric, durable&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 89, gas, durable &quot;</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>&quot; &quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[EstimatedERS (bin)]' type='palette'>
            <map to='#26456e'>
              <bucket>96</bucket>
            </map>
            <map to='#e5e5e5'>
              <bucket>75</bucket>
            </map>
            <map to='#e6e2e2'>
              <bucket>76</bucket>
            </map>
            <map to='#e8e0e0'>
              <bucket>77</bucket>
            </map>
            <map to='#eadddd'>
              <bucket>78</bucket>
            </map>
            <map to='#ecdbdb'>
              <bucket>79</bucket>
            </map>
            <map to='#edd9d9'>
              <bucket>80</bucket>
            </map>
            <map to='#efd6d6'>
              <bucket>81</bucket>
            </map>
            <map to='#f0d4d4'>
              <bucket>82</bucket>
            </map>
            <map to='#f2d1d2'>
              <bucket>83</bucket>
            </map>
            <map to='#f3ced0'>
              <bucket>84</bucket>
            </map>
            <map to='#f5ccce'>
              <bucket>85</bucket>
            </map>
            <map to='#f6c9cb'>
              <bucket>86</bucket>
            </map>
            <map to='#f7c7c9'>
              <bucket>87</bucket>
            </map>
            <map to='#f8c4c6'>
              <bucket>88</bucket>
            </map>
            <map to='#f9c2c4'>
              <bucket>89</bucket>
            </map>
            <map to='#fbbfc2'>
              <bucket>90</bucket>
            </map>
            <map to='#fcbcbf'>
              <bucket>91</bucket>
            </map>
            <map to='#fdb7ba'>
              <bucket>93</bucket>
            </map>
            <map to='#fdbabd'>
              <bucket>92</bucket>
            </map>
            <map to='#feb4b8'>
              <bucket>94</bucket>
            </map>
            <map to='#ffb2b6'>
              <bucket>95</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[ID-string (Interesting points]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;130840&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;102332&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;100567&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;99999&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;108820&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;130777&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[ID-string (Interesting points (copy)]' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>&quot;100567&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;99999&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_8750403103901360:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;bad point&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bad-point&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Good-point&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_9470403125230887:nk]' type='palette'>
            <map to='#1c73b1'>
              <bucket>&quot;Builder markup is 20\%+&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;40\%+&quot;</bucket>
            </map>
            <map to='#26456e'>
              <bucket>&quot;Builder markup is 30\%+&quot;</bucket>
            </map>
            <map to='#2c69b0'>
              <bucket>&quot;30\%+&quot;</bucket>
            </map>
            <map to='#67add4'>
              <bucket>&quot;Builder markup is 10\%+&quot;</bucket>
            </map>
            <map to='#6ba3d6'>
              <bucket>&quot;20\%+&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;never breakseven&quot;</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>&quot;Builder markup is 0\%+&quot;</bucket>
            </map>
            <map to='#b5c8e2'>
              <bucket>&quot;0\%+&quot;</bucket>
            </map>
            <map to='#b5dffd'>
              <bucket>&quot;10\%+&quot;</bucket>
            </map>
            <map to='#c81518'>
              <bucket>&quot;Homeowner won&apos;t break even&quot;</bucket>
            </map>
            <map to='#c81518'>
              <bucket>&quot;No breakeven&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_3690403141636492:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Good\\Electricity&quot;</bucket>
            </map>
            <map to='#d5dfeb'>
              <bucket>&quot;Bad-point\\Electricity&quot;</bucket>
            </map>
            <map to='#f4d9c3'>
              <bucket>&quot;Bad-point\\Natural gas&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Good\\Natural gas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Electricity savings (kWh/yr) (bin)]' type='palette'>
            <map to='#1696ac'>
              <bucket>0</bucket>
            </map>
            <map to='#18a188'>
              <bucket>1</bucket>
            </map>
            <map to='#1f83b4'>
              <bucket>-1</bucket>
            </map>
            <map to='#29a03c'>
              <bucket>2</bucket>
            </map>
            <map to='#54a338'>
              <bucket>3</bucket>
            </map>
            <map to='#6f63bb'>
              <bucket>18</bucket>
            </map>
            <map to='#8061b4'>
              <bucket>17</bucket>
            </map>
            <map to='#82a93c'>
              <bucket>4</bucket>
            </map>
            <map to='#9658b1'>
              <bucket>16</bucket>
            </map>
            <map to='#adb828'>
              <bucket>5</bucket>
            </map>
            <map to='#b446b3'>
              <bucket>15</bucket>
            </map>
            <map to='#c04aa7'>
              <bucket>14</bucket>
            </map>
            <map to='#c94d8c'>
              <bucket>13</bucket>
            </map>
            <map to='#d23e4e'>
              <bucket>12</bucket>
            </map>
            <map to='#d8bd35'>
              <bucket>6</bucket>
            </map>
            <map to='#e75727'>
              <bucket>11</bucket>
            </map>
            <map to='#ff810e'>
              <bucket>10</bucket>
            </map>
            <map to='#ff9c0e'>
              <bucket>9</bucket>
            </map>
            <map to='#ffb022'>
              <bucket>8</bucket>
            </map>
            <map to='#ffbd4c'>
              <bucket>7</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-AirTightness:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Typical23&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Cdn1ACH&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;PassiveHouse&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;R2000&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Electricity: total benefit to utility (bin)]' type='palette'>
            <map to='#12a0a8'>
              <bucket>1</bucket>
            </map>
            <map to='#1891ae'>
              <bucket>0</bucket>
            </map>
            <map to='#1da173'>
              <bucket>2</bucket>
            </map>
            <map to='#1f83b4'>
              <bucket>-1</bucket>
            </map>
            <map to='#29a039'>
              <bucket>3</bucket>
            </map>
            <map to='#4aa236'>
              <bucket>4</bucket>
            </map>
            <map to='#6ea53e'>
              <bucket>5</bucket>
            </map>
            <map to='#6f63bb'>
              <bucket>24</bucket>
            </map>
            <map to='#7b61b5'>
              <bucket>23</bucket>
            </map>
            <map to='#8860b0'>
              <bucket>22</bucket>
            </map>
            <map to='#90ae35'>
              <bucket>6</bucket>
            </map>
            <map to='#9f53b1'>
              <bucket>21</bucket>
            </map>
            <map to='#b1b926'>
              <bucket>7</bucket>
            </map>
            <map to='#b645b3'>
              <bucket>20</bucket>
            </map>
            <map to='#bf48aa'>
              <bucket>19</bucket>
            </map>
            <map to='#c54f9e'>
              <bucket>18</bucket>
            </map>
            <map to='#cc4878'>
              <bucket>17</bucket>
            </map>
            <map to='#d1bd30'>
              <bucket>8</bucket>
            </map>
            <map to='#d33d49'>
              <bucket>16</bucket>
            </map>
            <map to='#e3502b'>
              <bucket>15</bucket>
            </map>
            <map to='#f1be46'>
              <bucket>9</bucket>
            </map>
            <map to='#f67116'>
              <bucket>14</bucket>
            </map>
            <map to='#ff8b0e'>
              <bucket>13</bucket>
            </map>
            <map to='#ff9f0e'>
              <bucket>12</bucket>
            </map>
            <map to='#ffaf1d'>
              <bucket>11</bucket>
            </map>
            <map to='#ffb93d'>
              <bucket>10</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:batch:ok]&#10;[Electricity: total benefit to utility (bin)]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>1</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue'>
              <bucket>11</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>6</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>16</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold'>
              <bucket>9</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold'>
              <bucket>19</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray'>
              <bucket>8</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray'>
              <bucket>18</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>3</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>13</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>2</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>12</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink'>
              <bucket>7</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink'>
              <bucket>17</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>5</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>15</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>4</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>14</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal'>
              <bucket>10</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal'>
              <bucket>20</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:batch:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>10</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>21</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>3</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>8</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>6</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>5</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>19</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>15</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>16</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>9</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>11</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>13</bucket>
            </map>
            <map to='#d62728'>
              <bucket>4</bucket>
            </map>
            <map to='#d62728'>
              <bucket>20</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>14</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>7</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>12</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>18</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>17</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' type='palette'>
            <map to='#26456e'>
              <bucket>7</bucket>
            </map>
            <map to='#29a03c'>
              <bucket>0</bucket>
            </map>
            <map to='#adb828'>
              <bucket>1</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>-1</bucket>
            </map>
            <map to='#d23e4e'>
              <bucket>6</bucket>
            </map>
            <map to='#d8bd35'>
              <bucket>2</bucket>
            </map>
            <map to='#ff810e'>
              <bucket>5</bucket>
            </map>
            <map to='#ffb022'>
              <bucket>4</bucket>
            </map>
            <map to='#ffbd4c'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-DHWSystem:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;BaseDHW&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ElectricStorage&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;ElecInstantaneous&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;GasInstantaneous&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;ElectricHP&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-CasementWindows:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;DoubleLowEHardCoatArgFill&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;TripleLowEHardCoatKryFill&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;TripleLowESoftCoatKryFill&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;DoubleLowESoftCoatArgFill&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:DHWLoadScale:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Low-Flow&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;No-Reduction&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-HVACSystem:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;basefurnace&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;GSHP&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;elec-baseboard&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CCASHP&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-HVACSystem:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <multibucket>
                <bucket>&quot;basefurnace&quot;</bucket>
                <bucket>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2ca02c'>
              <multibucket>
                <bucket>&quot;GSHP&quot;</bucket>
                <bucket>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d62728'>
              <multibucket>
                <bucket>&quot;elec-baseboard&quot;</bucket>
                <bucket>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff7f0e'>
              <multibucket>
                <bucket>&quot;CCASHP&quot;</bucket>
                <bucket>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-StandoffPV:nk]' type='palette'>
            <map to='#729ece'>
              <bucket>&quot;NoPV&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;SizedPV|5kW&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-MainWall:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Stud-R21-2x4&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Stud-R275-Wall&quot;</bucket>
            </map>
            <map to='#32a251'>
              <bucket>&quot;AdvFrm-R20-Wall&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Stud-R275MW-Wall&quot;</bucket>
            </map>
            <map to='#b85a0d'>
              <bucket>&quot;Stud-R305-Wall&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Stud-R325-Wall&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;BaseR20&quot;</bucket>
            </map>
            <map to='#ff7f0f'>
              <bucket>&quot;DblStud-R37-Wall&quot;</bucket>
            </map>
            <map to='#ffb977'>
              <bucket>&quot;DblStud-R52-Wall&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_4270328153916499:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Electricity&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Natural gas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[csv.41709.530460324073].[max:UpgradeCostDoll:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[avg:Calculation_2640311145556471:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[avg:Calculation_3710312133127667:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[ID-filter (group)]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[min:Calculation_1550508115949750:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[min:Calculation_2640311145556471:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[min:Calculation_3280402162812085:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[pcdf:avg:Calculation_2640311145556471:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Cost to borrow funds for upgrade ($) (copy) (copy):qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[sum:EstimatedERS (copy):qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[usr:Calculation_4080312115913460:qk:1]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[csv.41709.530460324073].[diff:avg:Calculation_1760312105551885:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:5]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Calculation_3730311142712896:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Calculation_4380312104008812:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[csv.41709.530460324073].[sum:UtilCostGasDoll:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[csv.41709.530460324073].[sum:UtilCostElecDoll:qk]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyCoolingGJ:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyPlugGJ:qk]&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyVentGJ:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[csv.41709.530460324073].[diff:min:Calculation_1550508115949750:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[csv.41709.530460324073].[min:UTILITIES: Adjusted Electricity Bill  (copy):qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Calculation_7370312102644552:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[avg:Calculation_1760312105551885:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[min:Calculation_3340312154727269:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[min:Calculation_7240508122755062:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[min:Energy savings for base (\%) (copy):qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[Multiple Values]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Cost to borrow funds for upgrade ($) (copy):qk]&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyHeatingGJ:qk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyDHWGJ:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[GOtag:Opt-DWHRandSDHW (group)]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;1-plate&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2-plate-DWHR-4-60&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1-plate-DWHR-4-60&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1-plate-DWHR-4-36&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;DWHR-4-60&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;none&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;DWHR-4-36&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2-plate-DWHR-4-36&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2-plate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-DWHRandSDHW:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;1-plate&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2-plate-DWHR-4-60&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1-plate-DWHR-4-60&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1-plate-DWHR-4-36&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;DWHR-4-60&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;none&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;DWHR-4-36&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2-plate-DWHR-4-36&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2-plate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-Location:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>%all%</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Winnipeg&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='ERS equip mod' datatype='real' name='[ERS House Volume (m³) (copy)]' param-domain-type='any' role='measure' type='quantitative' value='24.376999999999999'>
          <calculation class='tableau' formula='24.376999999999999' />
        </column>
        <column caption='Escillation Rate: Gas' datatype='real' default-format='p0.00%' name='[Escillation Rate: Electricity (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.02'>
          <calculation class='tableau' formula='0.02' />
          <range max='1.0' min='0.0' />
        </column>
        <column caption='Focus on fuel' datatype='string' name='[Focus on ERS (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Electricity&quot;'>
          <calculation class='tableau' formula='&quot;Electricity&quot;' />
          <members>
            <member value='&quot;Electricity&quot;' />
            <member value='&quot;Natural gas&quot;' />
          </members>
        </column>
        <column caption='Municipal Taxes' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='0.0069646999999999999'>
          <calculation class='tableau' formula='0.0069646999999999999' />
          <range max='1.0' min='0.0' />
        </column>
        <column caption='Escillation Rate: Electricity' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
          <calculation class='tableau' formula='0.0' />
          <range max='1.0' min='0.0' />
        </column>
        <column caption='jp-InstalledPV_kW' datatype='real' hidden='true' name='[Parameter 11]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
          <calculation class='tableau' formula='0.0' />
          <range granularity='1.0' max='15.0' min='0.0' />
        </column>
        <column caption='Amoritization period ' datatype='real' default-format='n#,##0&quot; yrs&quot;;-#,##0&quot; yrs&quot;' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25.0'>
          <calculation class='tableau' formula='25.0' />
          <range min='1.0' />
        </column>
        <column caption='Base Case heating fuel type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Fuel neutral&quot;'>
          <calculation class='tableau' formula='&quot;Fuel neutral&quot;' />
          <members>
            <member value='&quot;Natural gas&quot;' />
            <member value='&quot;Electricity&quot;' />
            <member value='&quot;Fuel neutral&quot;' />
          </members>
        </column>
        <column caption='ERS House Volume (m³)' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='653.0'>
          <calculation class='tableau' formula='653.0' />
        </column>
        <column caption='ERS DHW Mod ' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='11.473000000000001'>
          <calculation class='tableau' formula='11.473000000000001' />
        </column>
        <column caption='Utilities: Assessment year' datatype='real' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='0.0'>
          <calculation class='tableau' formula='0.0' />
          <members>
            <member value='0.0' />
            <member value='5.0' />
            <member value='10.0' />
            <member value='15.0' />
            <member value='20.0' />
            <member value='25.0' />
          </members>
        </column>
        <column caption='PV costs ($/W installed)' datatype='real' default-format='c&quot;$&quot;#,##0.000;-&quot;$&quot;#,##0.000' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='1.6058029014507254'>
          <calculation class='tableau' formula='1.6058029014507254' />
          <range max='10.0' min='0.0' />
        </column>
        <column caption='Focus on ERS' datatype='integer' name='[Parameter 8]' param-domain-type='range' role='measure' type='quantitative' value='83'>
          <calculation class='tableau' formula='83' />
          <range max='100' min='76' />
        </column>
        <column caption='Interest rate (%)' datatype='real' default-format='p0.00%' name='[generation Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.035000000000000003'>
          <calculation class='tableau' formula='0.035000000000000003' />
          <range max='1.0' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 15' />
      <command command='tsc:brush'>
        <param name='field-captions' value='batch,Measure Names' />
        <param name='target' value='Sheet 15' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 82' />
      <command command='tsc:brush'>
        <param name='field-captions' value='EstimatedERS (bin)' />
        <param name='target' value='Sheet 82' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 5' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Electricity: total benefit to utility (bin),Best+fuel' />
        <param name='target' value='Dashboard 5' />
      </command>
    </action>
    <action caption='Highlight 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Conserve-by-' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Breakeven' />
        <param name='target' value='Conserve-by-' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Annual-savings'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner --- range' datatype='real' name='[Calculation_8270403112829760]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([Calculation_2640311145556471])-min([Calculation_2640311145556471])' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Min' name='[min:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8270403112829760]' derivation='User' name='[usr:Calculation_8270403112829760:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' filter-group='3'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='DESC' using='[csv.41709.530460324073].[min:Calculation_2640311145556471:qk]'>
            <groupfilter function='member' level='[EstimatedERS (bin)]' member='83' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter from='&quot;2-plate&quot;' function='range' level='[none:GOtag:Opt-DWHRandSDHW:nk]' to='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='22' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <size column='[csv.41709.530460324073].[usr:Calculation_8270403112829760:qk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[min:Calculation_2640311145556471:qk]' formula='average' id='refline0' label-type='none' scope='per-cell' value-column='[csv.41709.530460324073].[min:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='103' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
                <format attr='aspect' value='0' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[min:Calculation_2640311145556471:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Batch analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Interest rate (%)' datatype='real' default-format='p0.00%' name='[generation Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.035000000000000003'>
              <calculation class='tableau' formula='0.035000000000000003' />
              <range max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-Location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[generation Parameter]' value='Interest rate'>
              <formatted-text>
                <run>Interest rate</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk] / ([csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk] / [csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]))</rows>
        <cols>[csv.41709.530460324073].[sum:Number of Records:qk]</cols>
        <subtotals>
          <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
          <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='COST-comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Design Strategies (</run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 6]</run>
            <run>&gt;</run>
            <run> years from today)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Energy savings (%)' datatype='real' name='[Calculation_3710312133127667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [GOtag:Opt-Location]= &quot;Calgary&quot; then (89.849-[EnergyTotal]-[Calculation_9440311154155886]+4.733*[Parameters].[Parameter 11])/89.849&#13;&#10;elseif [GOtag:Opt-Location]=&quot;Winnipeg&quot; then (106.65-[EnergyTotal]-[Calculation_9440311154155886]+4.60476*[Parameters].[Parameter 11])/106.65&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EnergyPVGJ' datatype='real' name='[Calculation_9440311154155886]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]*3600/1E06' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyHeatingGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyPlugGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyTotal]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyVentGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelEleckWh]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelNaturalGasM3]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelOilL]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[ID]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Main_Iteration]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[ID]' derivation='None' name='[none:ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3710312133127667]' derivation='Sum' name='[sum:Calculation_3710312133127667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8430311144549035]' derivation='Sum' name='[sum:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9440311154155886]' derivation='Sum' name='[sum:Calculation_9440311154155886:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyHeatingGJ]' derivation='Sum' name='[sum:EnergyHeatingGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Sum' name='[sum:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPlugGJ]' derivation='Sum' name='[sum:EnergyPlugGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyTotal]' derivation='Sum' name='[sum:EnergyTotal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyVentGJ]' derivation='Sum' name='[sum:EnergyVentGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FuelEleckWh]' derivation='Sum' name='[sum:FuelEleckWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FuelNaturalGasM3]' derivation='Sum' name='[sum:FuelNaturalGasM3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FuelOilL]' derivation='Sum' name='[sum:FuelOilL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Main_Iteration]' derivation='Sum' name='[sum:Main_Iteration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyHeatingGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:Calculation_9440311154155886:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyPVkWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyPlugGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyTotal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyVentGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:FuelEleckWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:FuelNaturalGasM3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:FuelOilL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:Main_Iteration:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot;Base Case (ERS 76 code)&quot;' />
              <groupfilter from='&quot;ERS 80&quot;' function='range' level='[none:Calculation_8470312121221798:nk]' to='&quot;ERS 86 --- lowest upgrade cost&quot;' />
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot;Money Saver (ERS 76)&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Base Case (ERS 76 code)&quot;</bucket>
              <bucket>&quot;Money Saver (ERS 76)&quot;</bucket>
              <bucket>&quot;ERS 80&quot;</bucket>
              <bucket>&quot;ERS 83 --- lowest upgrade cost&quot;</bucket>
              <bucket>&quot;ERS 83 --- lowest operating cost&quot;</bucket>
              <bucket>&quot;ERS 86 --- lowest upgrade cost&quot;</bucket>
              <bucket>&quot;ERS 86 --- lowest operating cost&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='Upgrade cost ($)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='Annual Savings to Homeowner ($/yr)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' value='p0%' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0&quot;/yr&quot;;-&quot;$&quot;#,##0&quot;/yr&quot;' />
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='40' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' value='244' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' value='p0%' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0&quot; &quot;;-&quot;$&quot;#,##0&quot; &quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' max='200.0' min='-200.0' num-steps='4' palette='tableau-red-black' type='interpolated' />
            <encoding attr='color' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' x-axis-name='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' />
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</rows>
        <cols>([csv.41709.530460324073].[sum:Calculation_3710312133127667:qk] + ([csv.41709.530460324073].[sum:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]))</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[generation (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Cheapest'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Show Fuel' datatype='string' name='[Calculation_9940401113855898]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = [Parameters].[Focus on ERS (copy)] ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[GOtag:Opt-DHWSystem (copy)]'>
                <bin value='&quot;BaseDHW&quot;'>
                  <value>&quot;BaseDHW&quot;</value>
                  <value>&quot;ElectricStorage&quot;</value>
                  <value>&quot;GasInstantaneous&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[GOtag:Opt-DHWSystem]' />
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExposedFloor]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtBasementWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtLeftSideWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FrontWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-OverhangWidth]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9940401113855898]' derivation='None' name='[none:Calculation_9940401113855898:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem (copy)]' derivation='None' name='[none:GOtag:Opt-DHWSystem (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExposedFloor]' derivation='None' name='[none:GOtag:Opt-ExposedFloor:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtBasementWindow]' derivation='None' name='[none:GOtag:Opt-ExtBasementWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtLeftSideWindow]' derivation='None' name='[none:GOtag:Opt-ExtLeftSideWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FrontWindows]' derivation='None' name='[none:GOtag:Opt-FrontWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-OverhangWidth]' derivation='None' name='[none:GOtag:Opt-OverhangWidth:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' context='true' />
          <sort class='computed' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' direction='ASC' using='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_9940401113855898:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[Set 1]</column>
            <column>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1500.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='25000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-AirTightness &amp; GOtag:Opt-MainWall (Combined)]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem (copy):nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-DHWSystem (copy) (group)]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / ([csv.41709.530460324073].[EstimatedERS (bin)] / [csv.41709.530460324073].[none:Calculation_2160328153208285:nk]))</rows>
        <cols>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[min:Calculation_1760312105551885:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='CompareID'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='SHOW-ERS-Filter' datatype='string' name='[Calculation_4250401113310063]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4480331150059234] = &quot;ERS&quot;+str([Parameters].[Parameter 8]) ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Show Fuel' datatype='string' name='[Calculation_9940401113855898]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = [Parameters].[Focus on ERS (copy)] ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4250401113310063]' derivation='None' name='[none:Calculation_4250401113310063:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9940401113855898]' derivation='None' name='[none:Calculation_9940401113855898:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_2160328153208285:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_4250401113310063:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_9940401113855898:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1500.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='25000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[min:Calculation_1760312105551885:qk])</rows>
        <cols>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / [csv.41709.530460324073].[EstimatedERS (bin)])</cols>
      </table>
    </worksheet>
    <worksheet name='Concerve kWH: PV'>
      <layout-options>
        <title>
          <formatted-text>
            <run>How much electricity can we save?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Electricity: total benefit to utility' datatype='real' name='[Calculation_8140403110609232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Breakeven' datatype='string' name='[Calculation_9470403125230887]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='//if ( [Annual savings, 40% markup ] &gt; 0 ) then &quot;40%+&quot;&#13;&#10;if ( [Annual savings, 20% markup (copy) (copy)] &gt; 0 ) then &quot;Builder markup is 30%+&quot;&#13;&#10;elseif ( [Annual savings, 10% markup (copy)] &gt; 0 ) then &quot;Builder markup is 20%+&quot;&#13;&#10;elseif ( [Cost of ownership --- difference from base case ($/year), no markup (copy)] &gt; 0 ) then &quot;Builder markup is 10%+&quot;&#13;&#10;elseif ( [Calculation_2640311145556471] &gt; 0 ) then &quot;Builder markup is 0%+&quot;&#13;&#10;else &quot;Homeowner won&apos;t break even&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup) (bin)' datatype='integer' name='[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Calculation_1760312105551885]' peg='0' size='6000' />
              <aliases>
                <alias key='0' value='Less than $6,000' />
                <alias key='1' value='$6,000-$12,000' />
                <alias key='2' value='$12,000-$18,000' />
                <alias key='3' value='$18,000-$24,000' />
                <alias key='4' value='$24,000-$30,000' />
                <alias key='5' value='$30,000-$36,000' />
                <alias key='6' value='$30,000-$35,000' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9470403125230887]' derivation='Count' name='[cnt:Calculation_9470403125230887:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8140403110609232]' derivation='Min' name='[min:Calculation_8140403110609232:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9470403125230887]' derivation='None' name='[none:Calculation_9470403125230887:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' filter-group='3'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' direction='DESC' using='[csv.41709.530460324073].[cnt:Calculation_9470403125230887:qk]'>
          </sort>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;40\%+&quot;</bucket>
              <bucket>&quot;30\%+&quot;</bucket>
              <bucket>&quot;20\%+&quot;</bucket>
              <bucket>&quot;10\%+&quot;</bucket>
              <bucket>&quot;0\%+&quot;</bucket>
              <bucket>&quot;No breakeven&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Builder markup is 30\%+&quot;</bucket>
              <bucket>&quot;Builder markup is 20\%+&quot;</bucket>
              <bucket>&quot;Builder markup is 10\%+&quot;</bucket>
              <bucket>&quot;Builder markup is 0\%+&quot;</bucket>
              <bucket>&quot;Homeowner won&apos;t break even&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter from='&quot;2-plate&quot;' function='range' level='[none:GOtag:Opt-DWHRandSDHW:nk]' to='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NoPV&quot;</bucket>
              <bucket>&quot;SizedPV|5kW&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='Electrical savings per home, (kWh/year)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' field-type='quantitative' max='23000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' value='152' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' value='n#,##0&quot; kWh&quot;;-#,##0&quot; kWh&quot;' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='font-weight' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='bold' />
            <format attr='text-decoration' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='underline' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' max='292.33474069876388' min='-1375.6775233655071' num-steps='8' palette='tableau-red-black' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='14' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='1' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' value='Builder costs (no markup)'>
              <formatted-text>
                <run>Builder costs (no markup)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' />
              <text column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <lod column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[min:Calculation_8140403110609232:qk])</rows>
        <cols>([csv.41709.530460324073].[EstimatedERS (bin)] / [csv.41709.530460324073].[EstimatedERS (bin)])</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
    </worksheet>
    <worksheet name='ConcerveKWH-Costs'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Electricity: total benefit to utility' datatype='real' name='[Calculation_8140403110609232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Breakeven' datatype='string' name='[Calculation_9470403125230887]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='//if ( [Annual savings, 40% markup ] &gt; 0 ) then &quot;40%+&quot;&#13;&#10;if ( [Annual savings, 20% markup (copy) (copy)] &gt; 0 ) then &quot;Builder markup is 30%+&quot;&#13;&#10;elseif ( [Annual savings, 10% markup (copy)] &gt; 0 ) then &quot;Builder markup is 20%+&quot;&#13;&#10;elseif ( [Cost of ownership --- difference from base case ($/year), no markup (copy)] &gt; 0 ) then &quot;Builder markup is 10%+&quot;&#13;&#10;elseif ( [Calculation_2640311145556471] &gt; 0 ) then &quot;Builder markup is 0%+&quot;&#13;&#10;else &quot;Homeowner won&apos;t break even&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup) (bin)' datatype='integer' name='[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Calculation_1760312105551885]' peg='0' size='6000' />
              <aliases>
                <alias key='0' value='Less than $6,000' />
                <alias key='1' value='$6,000-$12,000' />
                <alias key='2' value='$12,000-$18,000' />
                <alias key='3' value='$18,000-$24,000' />
                <alias key='4' value='$24,000-$30,000' />
                <alias key='5' value='$30,000-$36,000' />
                <alias key='6' value='$30,000-$35,000' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9470403125230887]' derivation='Count' name='[cnt:Calculation_9470403125230887:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8140403110609232]' derivation='Min' name='[min:Calculation_8140403110609232:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9470403125230887]' derivation='None' name='[none:Calculation_9470403125230887:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' filter-group='3'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' direction='DESC' using='[csv.41709.530460324073].[cnt:Calculation_9470403125230887:qk]'>
          </sort>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;40\%+&quot;</bucket>
              <bucket>&quot;30\%+&quot;</bucket>
              <bucket>&quot;20\%+&quot;</bucket>
              <bucket>&quot;10\%+&quot;</bucket>
              <bucket>&quot;0\%+&quot;</bucket>
              <bucket>&quot;No breakeven&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter from='&quot;2-plate&quot;' function='range' level='[none:GOtag:Opt-DWHRandSDHW:nk]' to='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NoPV&quot;</bucket>
              <bucket>&quot;SizedPV|5kW&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='Electrical savings per home, (kWh/year)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' field-type='quantitative' max='23000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' value='n#,##0&quot; kWh&quot;;-#,##0&quot; kWh&quot;' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='font-weight' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='bold' />
            <format attr='text-decoration' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='underline' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' max='292.33474069876388' min='-1375.6775233655071' num-steps='8' palette='tableau-red-black' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='14' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='1' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' />
              <text column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <lod column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[min:Calculation_8140403110609232:qk])</rows>
        <cols>([csv.41709.530460324073].[EstimatedERS (bin)] / [csv.41709.530460324073].[EstimatedERS (bin)])</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
    </worksheet>
    <worksheet name='Conservation-savings'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Conservation: Benefits to homeowner&#10;(</run>
            <run fontcolor='#b40f1e'>&lt;[Parameters].[Parameter 6]&gt;</run>
            <run> years from today) </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Annual savings to homewoner: Base-case-reference' datatype='real' name='[Calculation_5440312091758636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_4130311125228917] = &quot;BASE&quot; then [Calculation_2640311145556471]&#13;&#10;else -100000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Filter-gas-options' datatype='string' name='[Calculation_6670331150314929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4130311125228917]+&quot;:&quot;+[Calculation_4270328153916499]+&quot;:&quot;+[Calculation_4480331150059234]+&quot;:&quot;+[GOtag:DHWLoadScale]+&quot;:&quot;+[GOtag:ElecLoadScale]+&quot;:&quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5440312091758636]' derivation='Max' name='[max:Calculation_5440312091758636:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6670331150314929]' derivation='None' name='[none:Calculation_6670331150314929:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter from='76' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_6670331150314929:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;BASE:Electricity:ERS76:No-Reduction:NGERSNoReduction19:ElectricStorage&quot;' function='range' level='[none:Calculation_6670331150314929:nk]' to='&quot;UPGRADE:Natural gas:ERS75:No-Reduction:NGERSNoReduction19:BaseDHW&quot;' />
              <groupfilter function='member' level='[none:Calculation_6670331150314929:nk]' member='&quot;UPGRADE:Natural gas:ERS76:No-Reduction:NGERSNoReduction19:BaseDHW&quot;' />
              <groupfilter function='member' level='[none:Calculation_6670331150314929:nk]' member='&quot;UPGRADE:Natural gas:ERS76:No-Reduction:NGERSNoReduction19:ElectricStorage&quot;' />
              <groupfilter from='&quot;UPGRADE:Natural gas:ERS77:Low-Flow:NGERSNoReduction19:BaseDHW&quot;' function='range' level='[none:Calculation_6670331150314929:nk]' to='&quot;UPGRADE:Natural gas:ERS92:Low-Flow:NGERSNoReduction19:GasInstantaneous&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter from='&quot;ElectricHP&quot;' function='range' level='[none:GOtag:Opt-DHWSystem:nk]' to='&quot;GasInstantaneous&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_6670331150314929:nk]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' field-type='quantitative' fold='true' max='500.0' min='-3000.0' range-type='fixed' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='Annual savngs (including borrowing costs, $/yr)' />
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='71' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='129' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' value='129' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1200.0' min='-800.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='35' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0;-&quot; $&quot;#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0&quot; &quot;;-&quot; $&quot;#,##0&quot; &quot;' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
            <format attr='font-weight' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='bold' />
            <format attr='text-decoration' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='underline' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' max='100.0' min='-100.0' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fb595e</color>
                <color>#f17478</color>
                <color>#e78d90</color>
                <color>#dda4a6</color>
                <color>#d3b8b9</color>
                <color>#cacaca</color>
                <color>#a1a1a1</color>
                <color>#797979</color>
                <color>#505050</color>
                <color>#282828</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='vertical-align' id='refline0' value='bottom' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='annotation'>
            <format attr='body-type' id='annotation_0' value='edge' />
            <format attr='border-style' id='annotation_0' value='solid' />
            <format attr='border-color' id='annotation_0' value='#1b1b1b' />
            <format attr='border-width' id='annotation_0' value='1' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
            <format attr='border-style' id='annotation_3' value='none' />
            <format attr='border-style' id='annotation_4' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' formula='constant' id='refline0' label='' label-type='custom' scope='per-table' value='0.0' value-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontcolor='#000000'>&lt;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&gt;</run>
                <run fontalignment='0' fontcolor='#d7d7d7'> /yr.</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
                <format attr='text-align' value='center' />
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='font-size' value='14' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
                <format attr='mark-color' value='#26794a' />
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * ([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[max:Calculation_5440312091758636:qk]))</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <mark-labels>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>89</value>
                <value>48.822787142155448</value>
                <value>-100000.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='9' y='42' />
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>86</value>
                <value>-346.88440238884618</value>
                <value>-100000.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>86</value>
                <value>-346.88440238884618</value>
                <value>-100000.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>86</value>
                <value>232.96097573359634</value>
                <value>-100000.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='10' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>86</value>
                <value>232.96097573359634</value>
                <value>-100000.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='3' y='51' />
          </mark-label>
          <mark-label id='11' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>89</value>
                <value>-443.25345491392761</value>
                <value>-100000.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='12' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>83</value>
                <value>109.67045620434908</value>
                <value>-100000.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='3' y='50' />
          </mark-label>
          <mark-label id='13' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>83</value>
                <value>311.33684161476498</value>
                <value>-100000.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.5' y='52' />
          </mark-label>
          <mark-label id='14' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>83</value>
                <value>109.67045620434908</value>
                <value>-100000.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='15' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>83</value>
                <value>311.33684161476498</value>
                <value>-100000.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='241'>
            <formatted-text>
              <run fontcolor='#787878'>Base case built to code&#10;(approximately ERS 76)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>174.89652876814273</value>
                    <value>0.023144158308923579</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='133' y='201' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='209'>
            <formatted-text>
              <run fontcolor='#787878'>Base case: ERS 76</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>438.57197745607004</value>
                    <value>0.027796040643352171</value>
                    <value>-145.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='215' y='124' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='239'>
            <formatted-text>
              <run fontcolor='#787878' underline='true'>Base Case: </run>
              <run fontcolor='#787878'>&#10;Code-built home with &#10;natural gas heating</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>4.6447872056601174</value>
                    <value>0.023040850006054825</value>
                    <value>&quot;Natural gas&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='167' y='62' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='222'>
            <formatted-text>
              <run fontcolor='#787878' underline='true'>Base Case: </run>
              <run fontcolor='#787878'>&#10;Code-built home with &#10;electric heating</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>0.0013217263322076178</value>
                    <value>0.0013217263322076178</value>
                    <value>&quot;Electricity&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='160' y='74' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='272'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878' underline='true'>Base case: </run>
              <run fontalignment='0' fontcolor='#787878'>&#10;Code-built home with &#10;electric heating</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>77</value>
                    <value>0.0010889779196077143</value>
                    <value>0.0010889779196077143</value>
                    <value>&quot;Electricity&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='184' y='74' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='ConserveKWHbySavings'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Electricity: total benefit to utility' datatype='real' name='[Calculation_8140403110609232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Breakeven' datatype='string' name='[Calculation_9470403125230887]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='//if ( [Annual savings, 40% markup ] &gt; 0 ) then &quot;40%+&quot;&#13;&#10;if ( [Annual savings, 20% markup (copy) (copy)] &gt; 0 ) then &quot;Builder markup is 30%+&quot;&#13;&#10;elseif ( [Annual savings, 10% markup (copy)] &gt; 0 ) then &quot;Builder markup is 20%+&quot;&#13;&#10;elseif ( [Cost of ownership --- difference from base case ($/year), no markup (copy)] &gt; 0 ) then &quot;Builder markup is 10%+&quot;&#13;&#10;elseif ( [Calculation_2640311145556471] &gt; 0 ) then &quot;Builder markup is 0%+&quot;&#13;&#10;else &quot;Homeowner won&apos;t break even&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9470403125230887]' derivation='Count' name='[cnt:Calculation_9470403125230887:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8140403110609232]' derivation='Min' name='[min:Calculation_8140403110609232:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9470403125230887]' derivation='None' name='[none:Calculation_9470403125230887:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' filter-group='3'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' direction='DESC' using='[csv.41709.530460324073].[cnt:Calculation_9470403125230887:qk]'>
          </sort>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;40\%+&quot;</bucket>
              <bucket>&quot;30\%+&quot;</bucket>
              <bucket>&quot;20\%+&quot;</bucket>
              <bucket>&quot;10\%+&quot;</bucket>
              <bucket>&quot;0\%+&quot;</bucket>
              <bucket>&quot;No breakeven&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter from='&quot;2-plate&quot;' function='range' level='[none:GOtag:Opt-DWHRandSDHW:nk]' to='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NoPV&quot;</bucket>
              <bucket>&quot;SizedPV|5kW&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='Electrical savings per home, (kWh/year)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' field-type='quantitative' max='23000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' value='n#,##0&quot; kWh&quot;;-#,##0&quot; kWh&quot;' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='font-weight' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='bold' />
            <format attr='text-decoration' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='underline' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' max='292.33474069876388' min='-1375.6775233655071' num-steps='8' palette='tableau-red-black' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='14' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='1' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' value='Breakeven'>
              <formatted-text>
                <run>Breakeven</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <lod column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[min:Calculation_8140403110609232:qk])</rows>
        <cols>([csv.41709.530460324073].[EstimatedERS (bin)] / [csv.41709.530460324073].[EstimatedERS (bin)])</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
    </worksheet>
    <worksheet name='CostOfChoosingNaturalGas'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Natural Gas: Costs to builder during construction</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[diff:min:Calculation_1760312105551885:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[csv.41709.530460324073].[Calculation_4270328153916499]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='89' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;SizedPV|5kW&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' scope='rows' value='true' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' scope='rows' value='Cost to switch to natural gas ($)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='96' />
            <format attr='width' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' value='96' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='Upgrade cost ($)' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' field-type='quantitative' max='24000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='28000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' value='false' />
            <format attr='break-on-special' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' value='false' />
            <format attr='show-null-value-warning' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-orientation' id='refline0' value='-90' />
            <format attr='text-align' id='refline0' value='center' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='text-format' id='refline0' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='line-pattern' id='refline0' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' formula='max' id='refline0' label=' &lt;Value&gt;' label-type='custom' scope='per-cell' value-column='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='right' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Dots-'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='integer' name='[batch]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[batch]' derivation='None' name='[none:batch:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:batch:ok]'>
            <groupfilter function='level-members' level='[none:batch:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:batch:ok]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:batch:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Elec conserv'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Electricity: total benefit to utility - range' datatype='real' name='[Calculation_2710403111306845]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([Calculation_8140403110609232])-min([Calculation_8140403110609232])' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Electricity: total benefit to utility' datatype='real' name='[Calculation_8140403110609232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8140403110609232]' derivation='Min' name='[min:Calculation_8140403110609232:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2710403111306845]' derivation='User' name='[usr:Calculation_2710403111306845:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' filter-group='3'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter from='&quot;2-plate&quot;' function='range' level='[none:GOtag:Opt-DWHRandSDHW:nk]' to='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NoPV&quot;</bucket>
              <bucket>&quot;SizedPV|5kW&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <size column='[csv.41709.530460324073].[usr:Calculation_2710403111306845:qk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' formula='average' id='refline0' label-type='none' scope='per-cell' value-column='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[min:Calculation_8140403110609232:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Electric base costs'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Total adjusted bill ($/year)' datatype='real' name='[Calculation_7370312102644552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1130312101746663]+[UTILITIES: Adjusted Electricity Bill  (copy)]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7370312102644552]' derivation='Sum' name='[sum:Calculation_7370312102644552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;No-Reduction&quot;</bucket>
              <bucket>&quot;Low-Flow&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]'>
            <groupfilter function='member' level='[none:GOtag:Ext-DryWall:nk]' member='&quot;OneSheet&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-AirTightness:nk]' member='&quot;Typical23&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-BasementSlabInsulation:nk]' member='&quot;NoInsulation&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-BasementWallInsulation:nk]' member='&quot;MB-IntBatt-R20&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-CasementWindows:nk]' member='&quot;DoubleLowESoftCoatArgFill&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-Ceilings:nk]' member='&quot;CeilR50&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-DHWSystem:nk]' member='&quot;ElectricStorage&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-DWHRandSDHW:nk]' member='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-FloorSurface:nk]' member='&quot;wood&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-HRVSpec:nk]' member='&quot;BaseHRV_SRE70&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;elec-baseboard&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;BaseR20&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
              <text column='[csv.41709.530460324073].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[sum:Calculation_7370312102644552:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_7370312102644552:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[sum:Number of Records:qk] + ([csv.41709.530460324073].[sum:Calculation_7370312102644552:qk] + ([csv.41709.530460324073].[sum:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[sum:Calculation_2640311145556471:qk])))</rows>
        <cols>([csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk] / ([csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk] / ([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / [csv.41709.530460324073].[none:Calculation_2160328153208285:nk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Electric-break-even'>
      <layout-options>
        <title>
          <formatted-text>
            <run>How much can a homeowner save by switching to gas?&#10;</run>
            <run italic='true'> (</run>
            <run fontcolor='#b40f1e' italic='true'>&lt;[Parameters].[Parameter 6]&gt;</run>
            <run italic='true'> years from today) </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[diff:max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[csv.41709.530460324073].[Calculation_4270328153916499]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='89' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' />
          <slices>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
            <column>[csv.41709.530460324073].[Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='75' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' scope='rows' value='Total savings for switching to gas (including borrowing costs, $/yr)' />
            <format attr='width' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' value='132' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' field-type='quantitative' max='2000.0' min='-250.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='48' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0&quot; &quot;;-&quot; $&quot;#,##0&quot; &quot;' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='text-format' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0&quot; &quot;;-&quot; $&quot;#,##0&quot; &quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' max='1000.0' min='-100.0' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fb595e</color>
                <color>#f17478</color>
                <color>#e78d90</color>
                <color>#dda4a6</color>
                <color>#d3b8b9</color>
                <color>#cacaca</color>
                <color>#a1a1a1</color>
                <color>#797979</color>
                <color>#505050</color>
                <color>#282828</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='bottom' />
            <format attr='fill-above' id='refline1' value='#f7f7f7' />
            <format attr='fill-below' id='refline1' value='#faf2f2' />
            <format attr='stroke-color' id='refline1' value='#b40f1e' />
            <format attr='line-pattern' id='refline1' value='dotted' />
            <format attr='text-align' id='refline0' value='left' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='8'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' formula='constant' id='refline0' label='Homeowner breaks even' label-type='custom' scope='per-table' value='0.0' value-column='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='datalabel'>
                <format attr='font-size' value='14' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='260'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Savings from conservation &#10;+ switching to gas heat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                      <field>[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>82</value>
                    <value>708.68959656525408</value>
                    <value>&quot;Natural gas&quot;</value>
                    <value>401.8891739664902</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-166' y='-58' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='237'>
            <formatted-text>
              <run fontcolor='#787878'>Savings from &#10;conservation alone</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                      <field>[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>82</value>
                    <value>306.80042259876387</value>
                    <value>&quot;Electricity&quot;</value>
                    <value>%null%</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-178' y='-31' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='222'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>Savings possible by &#10;switching to gas heat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                      <field>[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>734.98525015208543</value>
                    <value>&quot;Natural gas&quot;</value>
                    <value>734.98416117416582</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='214' y='-53' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Filter-summary'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='SHOW-ERS-Filter' datatype='string' name='[Calculation_4250401113310063]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4480331150059234] = &quot;ERS&quot;+str([Parameters].[Parameter 8]) ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4250401113310063]' derivation='None' name='[none:Calculation_4250401113310063:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]'>
            <groupfilter function='member' level='[none:Calculation_4250401113310063:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_8470312121221798:nk]' />
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot; &quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ERS 86, elec, cheapest &quot;</bucket>
              <bucket>&quot;ERS 86, elec, durable &quot;</bucket>
              <bucket>&quot;ERS 86, gas, cheapest &quot;</bucket>
              <bucket>&quot;ERS 86, gas, affordable &quot;</bucket>
              <bucket>&quot;ERS 86, gas, durable &quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[EstimatedERS (bin)] / ([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / ([csv.41709.530460324073].[none:Calculation_8470312121221798:nk] / [csv.41709.530460324073].[none:Calculation_2160328153208285:nk])))</rows>
        <cols>([csv.41709.530460324073].[sum:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[sum:Calculation_2640311145556471:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Initial-Plot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Optimization Results</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Energy savings (%)' datatype='real' name='[Calculation_3710312133127667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [GOtag:Opt-Location]= &quot;Calgary&quot; then (89.849-[EnergyTotal]-[Calculation_9440311154155886]+4.733*[Parameters].[Parameter 11])/89.849&#13;&#10;elseif [GOtag:Opt-Location]=&quot;Winnipeg&quot; then (106.65-[EnergyTotal]-[Calculation_9440311154155886]+4.60476*[Parameters].[Parameter 11])/106.65&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Energy savings for base (%)' datatype='real' name='[Calculation_7130313100558856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -0.5&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:RoofPitch]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[GOtag:RoofPitch]' derivation='Attribute' name='[attr:GOtag:RoofPitch:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3710312133127667]' derivation='Sum' name='[sum:Calculation_3710312133127667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7130313100558856]' derivation='Sum' name='[sum:Calculation_7130313100558856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8430311144549035]' derivation='Sum' name='[sum:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-DWHRandSDHW:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-Location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' field-type='quantitative' major-origin='0.0' major-spacing='20000.0' scope='cols' type='space' />
            <format attr='width' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' value='88' />
            <format attr='width' field='[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]' value='88' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' field-type='quantitative' max='0.80000000000000004' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' value='p0%' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]' value='p0%' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='16' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='144' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='582' />
                <format attr='maxwidth' value='582' />
                <format attr='minheight' value='588' />
                <format attr='maxheight' value='588' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <tooltip column='[csv.41709.530460324073].[attr:GOtag:RoofPitch:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
                <format attr='mark-transparency' value='254' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#70e95f' />
                <format attr='shape' value=':filled/asterisk' />
                <format attr='size' value='3.4806630611419678' />
                <format attr='mark-transparency' value='144' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='144' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='582' />
                <format attr='maxwidth' value='582' />
                <format attr='minheight' value='588' />
                <format attr='maxheight' value='588' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[sum:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[sum:Calculation_3710312133127667:qk] + [csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]))</rows>
        <cols>([csv.41709.530460324073].[sum:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[sum:Calculation_3710312133127667:qk] + [csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]))</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='224'>
            <formatted-text>
              <run fontcolor='#787878'>Base case (ERS 76)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.0</value>
                    <value>0.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='386' y='-44' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Most expensive &#10;option: ERS 96</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                      <field>[csv.41709.530460324073].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>71111.410000000003</value>
                    <value>0.82466159399906247</value>
                    <value>96.637078768207715</value>
                    <value>&quot;[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-252' y='-8' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='243'>
            <formatted-text>
              <run fontcolor='#787878'>Base case: ERS 76</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.0</value>
                    <value>1.2770745428976159e-05</value>
                    <value>0.0</value>
                    <value>76.50698999883673</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='295' y='-41' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='MostAffordable'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='SHOW-ERS-Filter' datatype='string' name='[Calculation_4250401113310063]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4480331150059234] = &quot;ERS&quot;+str([Parameters].[Parameter 8]) ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Show Fuel' datatype='string' name='[Calculation_9940401113855898]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = [Parameters].[Focus on ERS (copy)] ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[GOtag:Opt-DHWSystem (copy)]'>
                <bin value='&quot;BaseDHW&quot;'>
                  <value>&quot;BaseDHW&quot;</value>
                  <value>&quot;ElectricStorage&quot;</value>
                  <value>&quot;GasInstantaneous&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[GOtag:Opt-DHWSystem]' />
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExposedFloor]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtBasementWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtLeftSideWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FrontWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-OverhangWidth]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:RoofPitch]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4250401113310063]' derivation='None' name='[none:Calculation_4250401113310063:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9940401113855898]' derivation='None' name='[none:Calculation_9940401113855898:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem (copy)]' derivation='None' name='[none:GOtag:Opt-DHWSystem (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExposedFloor]' derivation='None' name='[none:GOtag:Opt-ExposedFloor:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtBasementWindow]' derivation='None' name='[none:GOtag:Opt-ExtBasementWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtLeftSideWindow]' derivation='None' name='[none:GOtag:Opt-ExtLeftSideWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FrontWindows]' derivation='None' name='[none:GOtag:Opt-FrontWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-OverhangWidth]' derivation='None' name='[none:GOtag:Opt-OverhangWidth:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:RoofPitch]' derivation='None' name='[none:GOtag:RoofPitch:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_4250401113310063:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_9940401113855898:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1500.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='25000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-AirTightness &amp; GOtag:Opt-MainWall (Combined)]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem (copy):nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-DHWSystem (copy) (group)]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[min:Calculation_1760312105551885:qk])</rows>
        <cols>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / [csv.41709.530460324073].[EstimatedERS (bin)])</cols>
      </table>
    </worksheet>
    <worksheet name='Number of records'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Show Fuel' datatype='string' name='[Calculation_9940401113855898]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = [Parameters].[Focus on ERS (copy)] ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9940401113855898]' derivation='None' name='[none:Calculation_9940401113855898:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_9940401113855898:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' context='true'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-BasementSlabInsulation:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='28' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / [csv.41709.530460324073].[EstimatedERS (bin)])</rows>
        <cols>[csv.41709.530460324073].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Savings from Choosing Gas'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Natural Gas: Savings to the homeowner every year&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Total adjusted bill ($/year)' datatype='real' name='[Calculation_7370312102644552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1130312101746663]+[UTILITIES: Adjusted Electricity Bill  (copy)]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7370312102644552]' derivation='Min' name='[diff:min:Calculation_7370312102644552:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[csv.41709.530460324073].[Calculation_4270328153916499]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_7370312102644552]' derivation='Min' name='[min:Calculation_7370312102644552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='89' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' scope='rows' value='Savings from heating with Natural Gas ($/year)' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' field-type='quantitative' max='2000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_7370312102644552:qk]' scope='rows' value='Annual utility bills ($/year)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_7370312102644552:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_7370312102644552:qk]' scope='rows' value='true' />
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_7370312102644552:qk]' value='104' />
            <format attr='width' field='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' value='104' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' value='c&quot;$&quot;#,##0&quot;/yr&quot;;-&quot;$&quot;#,##0&quot;/yr&quot;' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_7370312102644552:qk]' value='c&quot;$&quot;#,##0&quot;/yr&quot;;-&quot;$&quot;#,##0&quot;/yr&quot;' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' max='899.80025082902421' min='-30.0' palette='tableau-red-green' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='text-orientation' id='refline0' value='-90' />
            <format attr='text-align' id='refline0' value='center' />
            <format attr='text-format' id='refline0' value='c&quot;$&quot;#,##0&quot;/year&quot;;-&quot;$&quot;#,##0&quot;/year&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' formula='max' id='refline0' label-type='value' scope='per-cell' value-column='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[csv.41709.530460324073].[min:Calculation_7370312102644552:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[min:Calculation_7370312102644552:qk] + [csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Search'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='SHOW-ERS-Filter' datatype='string' name='[Calculation_4250401113310063]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4480331150059234] = &quot;ERS&quot;+str([Parameters].[Parameter 8]) ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Show Fuel' datatype='string' name='[Calculation_9940401113855898]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = [Parameters].[Focus on ERS (copy)] ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4250401113310063]' derivation='None' name='[none:Calculation_4250401113310063:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9940401113855898]' derivation='None' name='[none:Calculation_9940401113855898:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_4250401113310063:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_9940401113855898:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' context='true'>
            <groupfilter function='member' level='[none:GOtag:Opt-CasementWindows:nk]' member='&quot;TripleLowEHardCoatKryFill&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' context='true'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-Ceilings:nk]' member='&quot;CeilR70&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-Ceilings:nk]' member='&quot;CeilR80&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' context='true'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;DblStud-R37-Wall&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;Stud-R21-2x4&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;Stud-R275-Wall&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;Stud-R305-Wall&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1500.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='25000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[min:Calculation_1760312105551885:qk])</rows>
        <cols>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / ([csv.41709.530460324073].[EstimatedERS (bin)] / [csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[batch]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[generation (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[generation]' />
            </column>
            <column-instance column='[batch]' derivation='None' name='[none:batch:ok]' pivot='key' type='ordinal' />
            <column-instance column='[generation (copy)]' derivation='None' name='[none:generation (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Avg' name='[win:avg:Calculation_2640311145556471:qk:2]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-5' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[win:max:Calculation_2640311145556471:qk:4]' pivot='key' type='quantitative'>
              <table-calc aggregation='Max' from='-5000' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41709.530460324073].[none:batch:ok]' direction='ASC'>
            <dictionary>
              <bucket>5</bucket>
              <bucket>1</bucket>
              <bucket>2</bucket>
              <bucket>3</bucket>
              <bucket>4</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[win:max:Calculation_2640311145556471:qk:4]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:batch:ok]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[csv.41709.530460324073].[win:avg:Calculation_2640311145556471:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:batch:ok]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='8' y-axis-name='[csv.41709.530460324073].[win:max:Calculation_2640311145556471:qk:4]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:batch:ok]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[win:avg:Calculation_2640311145556471:qk:2] + [csv.41709.530460324073].[win:max:Calculation_2640311145556471:qk:4])</rows>
        <cols>[csv.41709.530460324073].[none:generation (copy):ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 16'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[batch]' role='dimension' type='ordinal'>
            </column>
            <column caption='generation (bin)' datatype='integer' name='[generation (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[generation]' peg='0' size='25' />
            </column>
            <column aggregation='Sum' datatype='real' name='[generation (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[generation]' />
            </column>
            <column datatype='real' name='[generation]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[batch]' derivation='None' name='[none:batch:ok]' pivot='key' type='ordinal' />
            <column-instance column='[generation (copy)]' derivation='None' name='[none:generation (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:generation (copy):ok]'>
            <groupfilter function='member' level='[none:generation (copy):ok]' member='1.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:generation (copy):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[generation (bin)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[sum:Number of Records:qk]</rows>
        <cols>[csv.41709.530460324073].[none:batch:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Base-or-upgrade' datatype='string' name='[Calculation_4130311125228917]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Calculation_2160328153208285]=&quot;130777&quot; or [Calculation_2160328153208285]=&quot;144923&quot;) then &quot;BASE&quot;&#13;&#10;ELSE &quot;UPGRADE&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='integer' name='[batch]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4130311125228917]' derivation='None' name='[none:Calculation_4130311125228917:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[batch]' derivation='None' name='[none:batch:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;CCASHP&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:batch:ok]'>
            <groupfilter function='level-members' level='[none:batch:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:batch:ok]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[max:Calculation_2640311145556471:qk]))</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 19'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;basefurnace&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
              <bucket>&quot;GSHP&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk] * [csv.41709.530460324073].[min:Calculation_1760312105551885:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 22'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;CCASHP&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;basefurnace&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='35' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 23'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;basefurnace&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
              <bucket>&quot;GSHP&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk] * [csv.41709.530460324073].[max:Calculation_2640311145556471:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 25'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Design Strategies (</run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 6]</run>
            <run>&gt;</run>
            <run> years from today)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EnergyPVGJ' datatype='real' name='[Calculation_9440311154155886]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]*3600/1E06' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyHeatingGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyPlugGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyTotal]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyVentGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelEleckWh]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelNaturalGasM3]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelOilL]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[GOtag:CalcMode]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:DBFiles]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExposedFloor]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtBasementWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtLeftSideWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FrontWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-OverhangWidth]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:RoofPitch]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[ID]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Main_Iteration]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:CalcMode]' derivation='None' name='[none:GOtag:CalcMode:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DBFiles]' derivation='None' name='[none:GOtag:DBFiles:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExposedFloor]' derivation='None' name='[none:GOtag:Opt-ExposedFloor:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtBasementWindow]' derivation='None' name='[none:GOtag:Opt-ExtBasementWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtLeftSideWindow]' derivation='None' name='[none:GOtag:Opt-ExtLeftSideWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FrontWindows]' derivation='None' name='[none:GOtag:Opt-FrontWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-OverhangWidth]' derivation='None' name='[none:GOtag:Opt-OverhangWidth:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:RoofPitch]' derivation='None' name='[none:GOtag:RoofPitch:nk]' pivot='key' type='nominal' />
            <column-instance column='[ID]' derivation='None' name='[none:ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8430311144549035]' derivation='Sum' name='[sum:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9440311154155886]' derivation='Sum' name='[sum:Calculation_9440311154155886:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyHeatingGJ]' derivation='Sum' name='[sum:EnergyHeatingGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Sum' name='[sum:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPlugGJ]' derivation='Sum' name='[sum:EnergyPlugGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyTotal]' derivation='Sum' name='[sum:EnergyTotal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyVentGJ]' derivation='Sum' name='[sum:EnergyVentGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FuelEleckWh]' derivation='Sum' name='[sum:FuelEleckWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FuelNaturalGasM3]' derivation='Sum' name='[sum:FuelNaturalGasM3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FuelOilL]' derivation='Sum' name='[sum:FuelOilL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Main_Iteration]' derivation='Sum' name='[sum:Main_Iteration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyHeatingGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:Calculation_9440311154155886:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyPVkWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyPlugGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyTotal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyVentGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:FuelEleckWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:FuelNaturalGasM3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:FuelOilL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:Main_Iteration:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot;Base Case (ERS 76 code)&quot;' />
              <groupfilter from='&quot;ERS 80&quot;' function='range' level='[none:Calculation_8470312121221798:nk]' to='&quot;ERS 86 --- lowest upgrade cost&quot;' />
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot;Money Saver (ERS 76)&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Base Case (ERS 76 code)&quot;</bucket>
              <bucket>&quot;Money Saver (ERS 76)&quot;</bucket>
              <bucket>&quot;ERS 80&quot;</bucket>
              <bucket>&quot;ERS 83 --- lowest upgrade cost&quot;</bucket>
              <bucket>&quot;ERS 83 --- lowest operating cost&quot;</bucket>
              <bucket>&quot;ERS 86 --- lowest upgrade cost&quot;</bucket>
              <bucket>&quot;ERS 86 --- lowest operating cost&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='Upgrade cost ($)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='Annual Savings to Homeowner ($/yr)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0&quot;/yr&quot;;-&quot;$&quot;#,##0&quot;/yr&quot;' />
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='40' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' value='244' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0&quot; &quot;;-&quot;$&quot;#,##0&quot; &quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' max='200.0' min='-200.0' num-steps='4' palette='tableau-red-black' type='interpolated' />
            <encoding attr='color' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</rows>
        <cols>([csv.41709.530460324073].[sum:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[sum:Calculation_2640311145556471:qk])</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[generation (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 26'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-DHWSystem:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-HVACSystem:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;basefurnace&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
              <bucket>&quot;GSHP&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-Location:nk]' member='&quot;Calgary&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-Location:nk]' member='&quot;Winnipeg&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='19' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='10'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 27'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Optimization: Total cost of ownership (</run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 6]</run>
            <run>&gt;</run>
            <run> years from today) </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Annual savings to homewoner: Base-case-reference' datatype='real' name='[Calculation_5440312091758636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_4130311125228917] = &quot;BASE&quot; then [Calculation_2640311145556471]&#13;&#10;else -100000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5440312091758636]' derivation='Max' name='[max:Calculation_5440312091758636:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;basefurnace&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
              <bucket>&quot;GSHP&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-Location:nk]' member='&quot;Winnipeg&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' field-type='quantitative' fold='true' max='500.0' min='-3000.0' range-type='fixed' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='Net savings for homeowner (including borrowing costs, $/yr)' />
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='63' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='124' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' value='124' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='800.0' min='-3000.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='27' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' max='100.0' min='-100.0' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fb595e</color>
                <color>#f17478</color>
                <color>#e78d90</color>
                <color>#dda4a6</color>
                <color>#d3b8b9</color>
                <color>#cacaca</color>
                <color>#a1a1a1</color>
                <color>#797979</color>
                <color>#505050</color>
                <color>#282828</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='dotted' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='body-type' id='annotation_0' value='edge' />
            <format attr='border-style' id='annotation_0' value='solid' />
            <format attr='border-color' id='annotation_0' value='#1b1b1b' />
            <format attr='border-width' id='annotation_0' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' />
              <text column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
                <format attr='mark-color' value='#62b6d5' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk] * ([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[max:Calculation_5440312091758636:qk]))</rows>
        <cols>([csv.41709.530460324073].[EstimatedERS (bin)] / [csv.41709.530460324073].[EstimatedERS (bin)])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Base case built to code&#10;(approximately ERS 76)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>174.89652876814273</value>
                    <value>0.023144158308923579</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='65' y='142' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Sheet 28'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Optimization: Total cost of ownership by HVAC type (</run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 6]</run>
            <run>&gt;</run>
            <run> years from today) </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='Attribute' name='[attr:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter from='&quot;ElectricHP&quot;' function='range' level='[none:GOtag:Opt-DHWSystem:nk]' to='&quot;GasInstantaneous&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='Total savings for homeowner (including borrowing costs, $/yr)' />
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='75' />
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='136' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='136' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='37000.0' min='-5000.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='48' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0&quot; &quot;;-&quot; $&quot;#,##0&quot; &quot;' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot; $&quot;#,##0;-&quot; $&quot;#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0&quot; &quot;;-&quot; $&quot;#,##0&quot; &quot;' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot; $&quot;#,##0&quot;  &quot;;-&quot; $&quot;#,##0&quot;  &quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' max='100.0' min='-100.0' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fb595e</color>
                <color>#f17478</color>
                <color>#e78d90</color>
                <color>#dda4a6</color>
                <color>#d3b8b9</color>
                <color>#cacaca</color>
                <color>#a1a1a1</color>
                <color>#797979</color>
                <color>#505050</color>
                <color>#282828</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='vertical-align' id='refline0' value='bottom' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <text column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' formula='constant' id='refline0' label='Homeowner breaks even' label-type='custom' scope='per-table' value='0.0' value-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <text column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='font-size' value='14' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <text column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <tooltip column='[csv.41709.530460324073].[attr:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='auto' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='font-size' value='14' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[max:Calculation_2640311145556471:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[attr:GOtag:Opt-StandoffPV:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>77</value>
                <value>-1605.0</value>
                <value>&quot;elec-baseboard&quot;</value>
                <value>&quot;NoPV&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='29' y='-19' />
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[attr:GOtag:Opt-StandoffPV:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>77</value>
                <value>-65.0</value>
                <value>&quot;basefurnace&quot;</value>
                <value>&quot;NoPV&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='5' y='22' />
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[attr:GOtag:Opt-StandoffPV:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>82</value>
                <value>6140.0</value>
                <value>&quot;CCASHP&quot;</value>
                <value>&quot;NoPV&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-43' y='1' />
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[attr:GOtag:Opt-StandoffPV:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>85</value>
                <value>20165.0</value>
                <value>&quot;GSHP&quot;</value>
                <value>&quot;NoPV&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-36' y='0.5' />
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>77</value>
                <value>-500.13164759458152</value>
                <value>&quot;elec-baseboard&quot;</value>
                <value>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='46' y='23' />
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>82</value>
                <value>-422.56918335990497</value>
                <value>&quot;CCASHP&quot;</value>
                <value>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='5' y='-7' />
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>85</value>
                <value>-1012.55382897811</value>
                <value>&quot;GSHP&quot;</value>
                <value>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Sheet 30'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cost-effectiveness of Wall systems&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='77' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='78' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='79' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='80' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='81' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='82' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='83' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='84' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='85' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='86' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' />
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <groupfilter function='member' level='[none:GOtag:Opt-DWHRandSDHW:nk]' member='&quot;2-plate-DWHR-4-60&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-MainWall:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;DblStud-R37-Wall&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;DblStud-R52-Wall&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;Stud-R275MW-Wall&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;Stud-R305-Wall&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;BaseR20&quot;</bucket>
              <bucket>&quot;Stud-R21-2x4&quot;</bucket>
              <bucket>&quot;Stud-R275-Wall&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[Set 1]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='Annual Savings to Homeowner ($/year, including borrowing costs, no markup)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='212' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1500.0' min='-1500.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='35' />
            <format attr='font-weight' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='bold' />
            <format attr='text-decoration' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='underline' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='24' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0&quot;/yr&quot;;-&quot;$&quot;#,##0&quot;/yr&quot;' />
            <format attr='font-weight' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='bold' />
            <format attr='text-decoration' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='underline' />
            <format attr='font-style' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='normal' />
            <format attr='color' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dotted' />
            <format attr='vertical-align' id='refline0' value='bottom' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' value='240' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' formula='constant' id='refline0' label='Homeowner breaks even' label-type='custom' scope='per-pane' value='0.0' value-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[max:Calculation_2640311145556471:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (What I think it shoiuld be) (bin)]</column>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 31'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Optimization: Total cost of ownership (</run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 6]</run>
            <run>&gt;</run>
            <run> years from today) </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Annual savings to homewoner: Base-case-reference' datatype='real' name='[Calculation_5440312091758636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_4130311125228917] = &quot;BASE&quot; then [Calculation_2640311145556471]&#13;&#10;else -100000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5440312091758636]' derivation='Max' name='[max:Calculation_5440312091758636:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter from='&quot;CCASHP&quot;' function='range' level='[none:GOtag:Opt-HVACSystem:nk]' to='&quot;basefurnace&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' field-type='quantitative' fold='true' max='500.0' min='-3000.0' range-type='fixed' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='Net savings for homeowner (including borrowing costs, $/yr)' />
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='63' />
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='124' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='124' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' value='124' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1000.0' min='-3500.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='27' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0&quot; &quot;;-&quot; $&quot;#,##0&quot; &quot;' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot; $&quot;#,##0;-&quot; $&quot;#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0&quot; &quot;;-&quot; $&quot;#,##0&quot; &quot;' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot; $&quot;#,##0&quot;  &quot;;-&quot; $&quot;#,##0&quot;  &quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' max='100.0' min='-100.0' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fb595e</color>
                <color>#f17478</color>
                <color>#e78d90</color>
                <color>#dda4a6</color>
                <color>#d3b8b9</color>
                <color>#cacaca</color>
                <color>#a1a1a1</color>
                <color>#797979</color>
                <color>#505050</color>
                <color>#282828</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='vertical-align' id='refline0' value='bottom' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='body-type' id='annotation_0' value='edge' />
            <format attr='border-style' id='annotation_0' value='solid' />
            <format attr='border-color' id='annotation_0' value='#1b1b1b' />
            <format attr='border-width' id='annotation_0' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' formula='constant' id='refline0' label='Homeowner breaks even' label-type='custom' scope='per-table' value='0.0' value-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <text column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</run>
                <run fontcolor='#000000'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
                <format attr='mark-color' value='#26794a' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <text column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-orientation' value='-90' />
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[max:Calculation_5440312091758636:qk]))</rows>
        <cols>([csv.41709.530460324073].[EstimatedERS (bin)] / [csv.41709.530460324073].[EstimatedERS (bin)])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Base case built to code&#10;(approximately ERS 76)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>174.89652876814273</value>
                    <value>0.023144158308923579</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='65' y='142' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Sheet 35'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:CalcMode]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:DBFiles]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExposedFloor]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtBasementWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtLeftSideWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FrontWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-OverhangWidth]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:RoofPitch]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:CalcMode]' derivation='None' name='[none:GOtag:CalcMode:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DBFiles]' derivation='None' name='[none:GOtag:DBFiles:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExposedFloor]' derivation='None' name='[none:GOtag:Opt-ExposedFloor:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtBasementWindow]' derivation='None' name='[none:GOtag:Opt-ExtBasementWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtLeftSideWindow]' derivation='None' name='[none:GOtag:Opt-ExtLeftSideWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FrontWindows]' derivation='None' name='[none:GOtag:Opt-FrontWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-OverhangWidth]' derivation='None' name='[none:GOtag:Opt-OverhangWidth:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:RoofPitch]' derivation='None' name='[none:GOtag:RoofPitch:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter from='&quot;Base Case (ERS 76 code)&quot;' function='range' level='[none:Calculation_8470312121221798:nk]' to='&quot;Gas furnace: Most affordable ERS 80 option&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' field-type='quantitative' max='23611.015828530257' min='-2986.4813097982742' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='818.37518274046829' min='-1594.2413098923873' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' max='100.0' min='-100.0' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fb595e</color>
                <color>#f17478</color>
                <color>#e78d90</color>
                <color>#dda4a6</color>
                <color>#d3b8b9</color>
                <color>#cacaca</color>
                <color>#a1a1a1</color>
                <color>#797979</color>
                <color>#505050</color>
                <color>#282828</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='75' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' y-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[sum:Calculation_1760312105551885:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 36'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [GOtag:Opt-Location]=&quot;Winnipeg&quot; then (6.85*12 +([FuelEleckWh]-[Calculation_6370505145552871])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;elseif [GOtag:Opt-Location]= &quot;Calgary&quot; then (17.55*12 +([FuelEleckWh]-[Calculation_6370505145552871])*0.1224)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Total adjusted bill ($/year)' datatype='real' name='[Calculation_7370312102644552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1130312101746663]+[UTILITIES: Adjusted Electricity Bill  (copy)]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:CalcMode]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:DBFiles]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExposedFloor]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtBasementWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtLeftSideWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FrontWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-OverhangWidth]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:RoofPitch]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;   if [GOtag:Opt-Location]=&quot;Winnipeg&quot; then   (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;   elseif [GOtag:Opt-Location]= &quot;Calgary&quot; then (28.44*12 + [FuelNaturalGasM3] * 0.1363 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;   end&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Avg' name='[avg:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:CalcMode]' derivation='None' name='[none:GOtag:CalcMode:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DBFiles]' derivation='None' name='[none:GOtag:DBFiles:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExposedFloor]' derivation='None' name='[none:GOtag:Opt-ExposedFloor:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtBasementWindow]' derivation='None' name='[none:GOtag:Opt-ExtBasementWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtLeftSideWindow]' derivation='None' name='[none:GOtag:Opt-ExtLeftSideWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FrontWindows]' derivation='None' name='[none:GOtag:Opt-FrontWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-OverhangWidth]' derivation='None' name='[none:GOtag:Opt-OverhangWidth:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:RoofPitch]' derivation='None' name='[none:GOtag:RoofPitch:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1130312101746663]' derivation='Sum' name='[sum:Calculation_1130312101746663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7370312102644552]' derivation='Sum' name='[sum:Calculation_7370312102644552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Sum' name='[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[csv.41709.530460324073].[EstimatedERS (bin)]' direction='ASC'>
            <dictionary>
              <bucket>76</bucket>
              <bucket>80</bucket>
              <bucket>83</bucket>
              <bucket>86</bucket>
              <bucket>89</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter from='&quot;Base Case (ERS 76 code)&quot;' function='range' level='[none:Calculation_8470312121221798:nk]' to='&quot;Gas furnace: Most affordable ERS 80 option&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Base Case (ERS 76 code)&quot;</bucket>
              <bucket>&quot;Gas Furnace: Cheapest ERS 80 option&quot;</bucket>
              <bucket>&quot;Gas furnace: Most affordable&quot;</bucket>
              <bucket>&quot;Gas furnace: Cheapest ERS 80 option&quot;</bucket>
              <bucket>&quot;Gas furnace: Most affordable ERS 80 option&quot;</bucket>
              <bucket>&quot;Gas furnace: Cheapest &amp; Most affordable ERS 83 option&quot;</bucket>
              <bucket>&quot;Gas furnace: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;</bucket>
              <bucket>&quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
              <bucket>&quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;</bucket>
              <bucket>&quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;</bucket>
              <bucket>&quot;Electric Furnace: Cheapest ERS 83 option&quot;</bucket>
              <bucket>&quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;</bucket>
              <bucket>&quot;Electric Furnace: Most affordable ERS 86 option&quot;</bucket>
              <bucket>&quot;Electric Furnace: Most affordable ERS 89 option&quot;</bucket>
              <bucket>&quot;Gas Furnace: Most affordable ERS 80 option&quot;</bucket>
              <bucket>&quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;</bucket>
              <bucket>&quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
              <bucket>&quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;</bucket>
              <bucket>&quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
              <bucket>&quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Number of Records:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' value='232' />
            <format attr='width' field='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[avg:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' x-axis-name='[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' x-axis-name='[csv.41709.530460324073].[sum:Calculation_7370312102644552:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' x-axis-name='[csv.41709.530460324073].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[EstimatedERS (bin)] / ([csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk] / ([csv.41709.530460324073].[none:Calculation_8470312121221798:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk] / ([csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk] / [csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]))))))</rows>
        <cols>([csv.41709.530460324073].[avg:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[sum:Number of Records:qk] + ([csv.41709.530460324073].[sum:Calculation_2640311145556471:qk] + ([csv.41709.530460324073].[sum:Calculation_1130312101746663:qk] + ([csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk] + [csv.41709.530460324073].[sum:Calculation_7370312102644552:qk])))))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 39'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Design targets: Winnipeg bungalo</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyCoolingGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyDHWGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyHeatingGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyPlugGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyVentGJ]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column-instance column='[EnergyCoolingGJ]' derivation='Avg' name='[avg:EnergyCoolingGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyDHWGJ]' derivation='Avg' name='[avg:EnergyDHWGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyHeatingGJ]' derivation='Avg' name='[avg:EnergyHeatingGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPlugGJ]' derivation='Avg' name='[avg:EnergyPlugGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyVentGJ]' derivation='Avg' name='[avg:EnergyVentGJ:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyHeatingGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyDHWGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPlugGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyVentGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyCoolingGJ:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyHeatingGJ:qk]&quot;</bucket>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyDHWGJ:qk]&quot;</bucket>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyPlugGJ:qk]&quot;</bucket>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyVentGJ:qk]&quot;</bucket>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyCoolingGJ:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='76' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='83' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='86' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='89' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[Multiple Values]' scope='cols' value='Total energy use (GJ/year)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='180' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='16' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='text-format' id='refline0' value='n#,##0&quot;GJ /year&quot;;-#,##0&quot;GJ /year&quot;' />
            <format attr='vertical-align' id='refline0' value='center' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[csv.41709.530460324073].[:Measure Names]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[Multiple Values]' formula='max' id='refline0' label-type='value' scope='per-cell' value-column='[csv.41709.530460324073].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='bottom' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[:Measure Names]' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[EstimatedERS (bin)]</rows>
        <cols>[csv.41709.530460324073].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 41'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Water Heating </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[diff:max:Calculation_2640311145556471:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Fixed' ordering-field='[csv.41709.530460324073].[GOtag:Opt-DWHRandSDHW]' ordering-type='Field' type='Difference'>
                <address>
                  <value>&quot;none&quot;</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-CasementWindows:nk]' member='&quot;DoubleLowEHardCoatArgFill&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-DHWSystem:nk]' member='&quot;ElectricHP&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-DHWSystem:nk]' member='&quot;ElectricStorage&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;BaseDHW&quot;</bucket>
              <bucket>&quot;ElectricStorage&quot;</bucket>
              <bucket>&quot;ElectricHP&quot;</bucket>
              <bucket>&quot;GasInstantaneous&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GOtag:Opt-DWHRandSDHW:nk]' member='&quot;2-plate-DWHR-4-60&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-DWHRandSDHW:nk]' member='&quot;DWHR-4-36&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;none&quot;</bucket>
              <bucket>&quot;DWHR-4-60&quot;</bucket>
              <bucket>&quot;2-plate&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;basefurnace&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' scope='rows' value='Effect on annual savings to home owner ($/year)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' scope='rows' value='true' />
            <format attr='height' field='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' value='197' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' field-type='quantitative' max='89.0' min='-459.98848043862517' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' value='116' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' value='-90' />
            <format attr='font-family' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' value='Calibri' />
            <format attr='text-format' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dotted' />
            <format attr='text-align' id='refline0' value='left' />
            <format attr='vertical-align' id='refline0' value='bottom' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane id='9'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' formula='constant' id='refline0' label='Homeowner breaks even' label-type='custom' scope='per-table' value='0.0' value-column='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]</rows>
        <cols>([csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk] / [csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 42'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cost-effectiveness of window types</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-CasementWindows:nk]' />
              <groupfilter function='member' level='[none:GOtag:Opt-CasementWindows:nk]' member='&quot;TripleLowESoftCoatKryFill&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-HVACSystem:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;CCASHP&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;GSHP&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;elec-baseboard&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-MainWall:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;BaseR20&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;DblStud-R52-Wall&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;Stud-R275MW-Wall&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='116' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='Upgrade Cost' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='30000.0' min='-2000.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
            <format attr='stroke-color' id='annotation_2' value='#26794a' />
            <format attr='stroke-color' id='annotation_1' value='#297a98' />
            <format attr='stroke-color' id='annotation_0' value='#f1923e' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <text column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <mark-labels>
          <mark-label id='6' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>84</value>
                <value>15561.41</value>
                <value>&quot;DoubleLowESoftCoatArgFill&quot;</value>
                <value>&quot;NoPV&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='18' y='107' />
          </mark-label>
          <mark-label id='8' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>85</value>
                <value>17081.41</value>
                <value>&quot;DoubleLowEHardCoatArgFill&quot;</value>
                <value>&quot;NoPV&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='23' y='80' />
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>Double Soft Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>84</value>
                    <value>15561.41</value>
                    <value>&quot;DoubleLowESoftCoatArgFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-140' y='-10' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Double Hard Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>85</value>
                    <value>17081.41</value>
                    <value>&quot;DoubleLowEHardCoatArgFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-195' y='-49' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Triple Hard Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>86</value>
                    <value>14056.41</value>
                    <value>&quot;TripleLowEHardCoatKryFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-75' y='-217' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Sheet 44'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cost-effectiveness of window types</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-CasementWindows:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-DHWSystem:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-HVACSystem:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;CCASHP&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;GSHP&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;elec-baseboard&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-MainWall:nk]' />
              <groupfilter function='empty-level' member='[none:GOtag:Opt-MainWall:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='116' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='Upgrade Cost' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='30000.0' min='-1055.3266663793104' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
            <format attr='stroke-color' id='annotation_2' value='#26794a' />
            <format attr='stroke-color' id='annotation_1' value='#297a98' />
            <format attr='stroke-color' id='annotation_0' value='#f1923e' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <pages>
          <column>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</column>
        </pages>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>Double Soft Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>84</value>
                    <value>15561.41</value>
                    <value>&quot;DoubleLowESoftCoatArgFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-140' y='-10' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Double Hard Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>85</value>
                    <value>17081.41</value>
                    <value>&quot;DoubleLowEHardCoatArgFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-195' y='-49' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Triple Hard Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>86</value>
                    <value>14056.41</value>
                    <value>&quot;TripleLowEHardCoatKryFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-75' y='-217' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Sheet 45'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[batch]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[batch]' derivation='None' name='[none:batch:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:batch:ok]'>
            <groupfilter from='1' function='range' level='[none:batch:ok]' to='19' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:batch:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols>[csv.41709.530460324073].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 47'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Wall-insulation-type' datatype='string' name='[Calculation_4800326161225524]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot; OR&#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R325-Wall&quot;     ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Main Wall adjust cost (No air sealing credit) ' datatype='integer' name='[Calculation_8710326154745859]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [GOtag:Opt-MainWall] &#13;&#10;  when &quot;BaseR20&quot; then 0 &#13;&#10;  when &quot;DblStud-R37-Wall&quot; then   1350&#13;&#10;  when &quot;DblStud-R52-Wall&quot; then   1350&#13;&#10;  when &quot;Stud-R21-2x4&quot; then       0 &#13;&#10;  when &quot;Stud-R275-Wall&quot; then    619&#13;&#10;  when &quot;Stud-R305-Wall&quot; then    555&#13;&#10;  when &quot;Stud-R275MW-Wall&quot; then   505&#13;&#10;  when &quot;Stud-R325-Wall&quot; then    65&#13;&#10;  when &quot;AdvFrm-R20-Wall&quot; then   110&#13;&#10;  else -9000000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column-instance column='[Calculation_8710326154745859]' derivation='Avg' name='[avg:Calculation_8710326154745859:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4800326161225524]' derivation='None' name='[none:Calculation_4800326161225524:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4800326161225524:nk] / [csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk])</rows>
        <cols>[csv.41709.530460324073].[avg:Calculation_8710326154745859:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 51'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41709.530460324073].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols>[csv.41709.530460324073].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 53'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter from='&quot;BaseR20&quot;' function='range' level='[none:GOtag:Opt-MainWall:nk]' to='&quot;Stud-R305-Wall&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 54'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[diff:min:Calculation_1760312105551885:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[csv.41709.530460324073].[Calculation_4270328153916499]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 59'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols>[csv.41709.530460324073].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 60'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter function='member' level='[EstimatedERS (bin)]' member='86' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ERS 86, elec, cheapest &quot;</bucket>
              <bucket>&quot;ERS 86, elec, durable &quot;</bucket>
              <bucket>&quot;ERS 86, gas, affordable &quot;</bucket>
              <bucket>&quot;ERS 86, gas, cheapest &quot;</bucket>
              <bucket>&quot; &quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter from='&quot;DblStud-R37-Wall&quot;' function='range' level='[none:GOtag:Opt-MainWall:nk]' to='&quot;Stud-R305-Wall&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='762.54008205731122' min='0.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='25000.0' min='3000.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-align' id='refline0' value='left' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#26794a' />
            <format attr='text-align' id='refline1' value='left' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' formula='max' id='refline0' label-type='value' scope='per-pane' value-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' z-order='1' />
            <reference-line axis-column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' formula='min' id='refline1' label-type='value' scope='per-pane' value-column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' z-order='2' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-range-min' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-range-min' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk] / [csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]))))</rows>
        <cols>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[max:Calculation_2640311145556471:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 62'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[GOtag:Opt-DHWSystem]' />
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem (copy)]' derivation='None' name='[none:GOtag:Opt-DHWSystem (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_8470312121221798:nk]' />
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot; &quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk] / ([csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk] / [csv.41709.530460324073].[none:GOtag:Opt-DHWSystem (copy):nk]))))))</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 63'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='SHOW-ERS-Filter' datatype='string' name='[Calculation_4250401113310063]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4480331150059234] = &quot;ERS&quot;+str([Parameters].[Parameter 8]) ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='ERS-int' datatype='string' name='[Calculation_4480331150059234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;ERS&quot;+str(int([Calculation_8430311144549035]))' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_4250401113310063]' derivation='None' name='[none:Calculation_4250401113310063:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4480331150059234]' derivation='None' name='[none:Calculation_4480331150059234:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]</rows>
        <cols>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 64'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Pathways we&apos;ll look at:</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Energy savings (%)' datatype='real' name='[Calculation_3710312133127667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [GOtag:Opt-Location]= &quot;Calgary&quot; then (89.849-[EnergyTotal]-[Calculation_9440311154155886]+4.733*[Parameters].[Parameter 11])/89.849&#13;&#10;elseif [GOtag:Opt-Location]=&quot;Winnipeg&quot; then (106.65-[EnergyTotal]-[Calculation_9440311154155886]+4.60476*[Parameters].[Parameter 11])/106.65&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Energy savings for base (%)' datatype='real' name='[Calculation_7130313100558856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -0.5&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[ID-filter (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_8470312121221798]' default='&quot; &quot;'>
                <bin value='&quot;ERS 76, electric, base case&quot;'>
                  <value>&quot;ERS 76, electric, base case&quot;</value>
                  <value>&quot;ERS 76, gas, Base Case, gas heat&quot;</value>
                  <value>&quot;ERS 83, electric, Durable&quot;</value>
                  <value>&quot;ERS 83, electric, cheapest&quot;</value>
                  <value>&quot;ERS 83, gas, Cheapest&quot;</value>
                  <value>&quot;ERS 83, gas, Most affordable&quot;</value>
                  <value>&quot;ERS 83, gas, durable &quot;</value>
                  <value>&quot;ERS 86, elec, cheapest &quot;</value>
                  <value>&quot;ERS 86, elec, durable &quot;</value>
                  <value>&quot;ERS 86, gas, affordable &quot;</value>
                  <value>&quot;ERS 86, gas, cheapest &quot;</value>
                  <value>&quot;ERS 86, gas, durable &quot;</value>
                  <value>&quot;ERS 89, electric, GSHP&quot;</value>
                  <value>&quot;ERS 89, electric, cheapest&quot;</value>
                  <value>&quot;ERS 89, electric, durable&quot;</value>
                  <value>&quot;ERS 89, gas, durable &quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot; &quot;' value='Other' />
                <alias key='&quot;ERS 76, electric, base case&quot;' value='Display' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3710312133127667]' derivation='Sum' name='[sum:Calculation_3710312133127667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7130313100558856]' derivation='Sum' name='[sum:Calculation_7130313100558856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8430311144549035]' derivation='Sum' name='[sum:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot; &quot;' />
              <groupfilter from='&quot;ERS 83, electric, Durable&quot;' function='range' level='[none:Calculation_8470312121221798:nk]' to='&quot;ERS 89, gas, durable &quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Good-point&quot;</bucket>
              <bucket>&quot;bad point&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' field-type='quantitative' max='0.88' min='-0.050000000000000003' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' field-type='quantitative' major-origin='0.0' major-spacing='20000.0' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' value='p0%' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' field-type='nominal' max-size='1' min-size='0.005' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
            <format attr='border-style' id='annotation_3' value='none' />
            <format attr='border-style' id='annotation_4' value='none' />
            <format attr='border-style' id='annotation_5' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[sum:Calculation_3710312133127667:qk])</rows>
        <cols>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='224'>
            <formatted-text>
              <run fontcolor='#787878'>Base case (ERS 76)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.0</value>
                    <value>0.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='386' y='-44' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Most expensive &#10;option: ERS 96</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                      <field>[csv.41709.530460324073].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>71111.410000000003</value>
                    <value>0.82466159399906247</value>
                    <value>96.637078768207715</value>
                    <value>&quot;[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-252' y='-8' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='243'>
            <formatted-text>
              <run fontcolor='#787878'>Base case: ERS 76</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.0</value>
                    <value>1.2770745428976159e-05</value>
                    <value>0.0</value>
                    <value>76.50698999883673</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='295' y='-41' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>ERS 83 Options</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[ID-filter (group)]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;ERS 76, electric, base case&quot;</value>
                    <value>&quot;ERS 83, electric, Durable&quot;</value>
                    <value>5349.0</value>
                    <value>0.27630993905297707</value>
                    <value>83.237563656582864</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='572' y='0' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>ERS 86 Options </run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[ID-filter (group)]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;ERS 76, electric, base case&quot;</value>
                    <value>&quot;ERS 86, gas, cheapest &quot;</value>
                    <value>17207.0</value>
                    <value>0.3917054477262073</value>
                    <value>86.034040851182695</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='462' y='0' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>ERS 89 Options</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[ID-filter (group)]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;ERS 76, electric, base case&quot;</value>
                    <value>&quot;ERS 89, electric, GSHP&quot;</value>
                    <value>25490.0</value>
                    <value>0.52038465072667606</value>
                    <value>89.288619098822835</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='386' y='0' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Sheet 66'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [GOtag:Opt-Location]=&quot;Winnipeg&quot; then (6.85*12 +([FuelEleckWh]-[Calculation_6370505145552871])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;elseif [GOtag:Opt-Location]= &quot;Calgary&quot; then (17.55*12 +([FuelEleckWh]-[Calculation_6370505145552871])*0.1224)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Wall-insulation-type' datatype='string' name='[Calculation_4800326161225524]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot; OR&#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R325-Wall&quot;     ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjust ACH cost ($)' datatype='real' name='[Calculation_5080312144736857]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4800326161225524] = &quot;OC&quot; ) then &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then 0&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -3049&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -3260&#13;&#10;    end&#13;&#10;else &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;    end&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;   if [GOtag:Opt-Location]=&quot;Winnipeg&quot; then   (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;   elseif [GOtag:Opt-Location]= &quot;Calgary&quot; then (28.44*12 + [FuelNaturalGasM3] * 0.1363 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;   end&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4800326161225524]' derivation='None' name='[none:Calculation_4800326161225524:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1130312101746663]' derivation='Sum' name='[sum:Calculation_1130312101746663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5080312144736857]' derivation='Sum' name='[sum:Calculation_5080312144736857:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Sum' name='[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter from='&quot;ERS 76, electric, base case&quot;' function='range' level='[none:Calculation_8470312121221798:nk]' to='&quot;ERS 89, gas, durable &quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ERS 83, electric, cheapest&quot;</bucket>
              <bucket>&quot;ERS 83, electric, Durable&quot;</bucket>
              <bucket>&quot;ERS 83, gas, Cheapest&quot;</bucket>
              <bucket>&quot;ERS 83, gas, Most affordable&quot;</bucket>
              <bucket>&quot;ERS 83, gas, durable &quot;</bucket>
              <bucket>&quot;ERS 86, elec, cheapest &quot;</bucket>
              <bucket>&quot;ERS 86, elec, durable &quot;</bucket>
              <bucket>&quot;ERS 86, gas, cheapest &quot;</bucket>
              <bucket>&quot;ERS 86, gas, affordable &quot;</bucket>
              <bucket>&quot;ERS 86, gas, durable &quot;</bucket>
              <bucket>&quot;ERS 89, electric, cheapest&quot;</bucket>
              <bucket>&quot;ERS 89, electric, durable&quot;</bucket>
              <bucket>&quot;ERS 89, electric, GSHP&quot;</bucket>
              <bucket>&quot;ERS 89, gas, durable &quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1200.0' min='-1000.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='28000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='52' />
            <format attr='width' field='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' value='120' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</run>
                <run fontcolor='#000000'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[csv.41709.530460324073].[sum:Calculation_5080312144736857:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / ([csv.41709.530460324073].[EstimatedERS (bin)] / ([csv.41709.530460324073].[none:Calculation_8470312121221798:nk] / ([csv.41709.530460324073].[none:Calculation_2160328153208285:nk] / [csv.41709.530460324073].[none:Calculation_4800326161225524:nk]))))</rows>
        <cols>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + ([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[sum:Calculation_5080312144736857:qk] + ([csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk] + [csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 67'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Pv costs' datatype='real' name='[Calculation_4270312154807625]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Parameters].[Parameter 7]*1000)' scope-isolation='false' />
            </column>
            <column caption='Upgrades: PV cost adjustment ($)' datatype='real' name='[Calculation_8190312105315011]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Parameter 11]*([Parameters].[Parameter 7]*1000-4687)' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_4270312154807625]' derivation='Avg' name='[avg:Calculation_4270312154807625:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8190312105315011]' derivation='Avg' name='[avg:Calculation_8190312105315011:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[avg:Calculation_4270312154807625:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[avg:Calculation_8190312105315011:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols>([csv.41709.530460324073].[avg:Calculation_4270312154807625:qk] + [csv.41709.530460324073].[avg:Calculation_8190312105315011:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 68'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Base-or-upgrade' datatype='string' name='[Calculation_4130311125228917]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Calculation_2160328153208285]=&quot;130777&quot; or [Calculation_2160328153208285]=&quot;144923&quot;) then &quot;BASE&quot;&#13;&#10;ELSE &quot;UPGRADE&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4130311125228917]' derivation='None' name='[none:Calculation_4130311125228917:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot;ERS 76, electric, base case&quot;' />
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot;ERS 76, gas, Base Case, gas heat&quot;' />
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot;ERS 83, electric, CCASHP&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;No-Reduction&quot;</bucket>
              <bucket>&quot;Low-Flow&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4130311125228917:nk] / ([csv.41709.530460324073].[EstimatedERS (bin)] / ([csv.41709.530460324073].[none:Calculation_8470312121221798:nk] / ([csv.41709.530460324073].[none:Calculation_2160328153208285:nk] / ([csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk] / [csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk])))))</rows>
        <cols>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[sum:Calculation_1760312105551885:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 69'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 70'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [GOtag:Opt-Location]=&quot;Winnipeg&quot; then (6.85*12 +([FuelEleckWh]-[Calculation_6370505145552871])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;elseif [GOtag:Opt-Location]= &quot;Calgary&quot; then (17.55*12 +([FuelEleckWh]-[Calculation_6370505145552871])*0.1224)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='ERS-int' datatype='string' name='[Calculation_4480331150059234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;ERS&quot;+str(int([Calculation_8430311144549035]))' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Total adjusted bill ($/year)' datatype='real' name='[Calculation_7370312102644552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1130312101746663]+[UTILITIES: Adjusted Electricity Bill  (copy)]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='string' name='[ID-string (Interesting points]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_2160328153208285]' default='&quot;99999&quot;'>
                <bin value='&quot;100567&quot;'>
                  <value>&quot;100567&quot;</value>
                  <value>&quot;65013&quot;</value>
                </bin>
                <bin value='&quot;102332&quot;'>
                  <value>&quot;102332&quot;</value>
                  <value>&quot;107631&quot;</value>
                  <value>&quot;115642&quot;</value>
                  <value>&quot;115943&quot;</value>
                  <value>&quot;131404&quot;</value>
                  <value>&quot;132360&quot;</value>
                  <value>&quot;155642&quot;</value>
                </bin>
                <bin value='&quot;108820&quot;'>
                  <value>&quot;108820&quot;</value>
                  <value>&quot;114270&quot;</value>
                  <value>&quot;122591&quot;</value>
                  <value>&quot;124250&quot;</value>
                  <value>&quot;131290&quot;</value>
                  <value>&quot;148168&quot;</value>
                  <value>&quot;91653&quot;</value>
                </bin>
                <bin value='&quot;130777&quot;'>
                  <value>&quot;130777&quot;</value>
                  <value>&quot;144923&quot;</value>
                </bin>
                <bin value='&quot;130840&quot;'>
                  <value>&quot;130840&quot;</value>
                  <value>&quot;132280&quot;</value>
                  <value>&quot;85933&quot;</value>
                  <value>&quot;86735&quot;</value>
                  <value>&quot;97876&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;100567&quot;' value='GSHP' />
                <alias key='&quot;102332&quot;' value='Cheapest' />
                <alias key='&quot;108820&quot;' value='Durable' />
                <alias key='&quot;130777&quot;' value='Base' />
                <alias key='&quot;130840&quot;' value='Affordable' />
                <alias key='&quot;99999&quot;' value='Other' />
              </aliases>
            </column>
            <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;   if [GOtag:Opt-Location]=&quot;Winnipeg&quot; then   (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;   elseif [GOtag:Opt-Location]= &quot;Calgary&quot; then (28.44*12 + [FuelNaturalGasM3] * 0.1363 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;   end&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4480331150059234]' derivation='None' name='[none:Calculation_4480331150059234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1130312101746663]' derivation='Sum' name='[sum:Calculation_1130312101746663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7370312102644552]' derivation='Sum' name='[sum:Calculation_7370312102644552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Sum' name='[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[ID-string (Interesting points]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[ID-string (Interesting points]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[ID-string (Interesting points]' member='%null%' />
                <groupfilter function='member' level='[ID-string (Interesting points]' member='&quot;97876&quot;' />
                <groupfilter function='member' level='[ID-string (Interesting points]' member='&quot;99999&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[ID-string (Interesting points]' direction='ASC'>
            <dictionary>
              <bucket>&quot;102332&quot;</bucket>
              <bucket>&quot;130840&quot;</bucket>
              <bucket>&quot;130777&quot;</bucket>
              <bucket>&quot;108820&quot;</bucket>
              <bucket>&quot;100567&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_2160328153208285:nk]' />
              <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;155642&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]'>
            <groupfilter function='member' level='[none:Calculation_4480331150059234:nk]' member='&quot;ERS86&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[ID-string (Interesting points]</column>
            <column>[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#26794a' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#daa800' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[csv.41709.530460324073].[sum:Calculation_7370312102644552:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / ([csv.41709.530460324073].[none:Calculation_4480331150059234:nk] / ([csv.41709.530460324073].[ID-string (Interesting points] / ([csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk] / [csv.41709.530460324073].[none:Calculation_2160328153208285:nk]))))))</rows>
        <cols>([csv.41709.530460324073].[sum:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[sum:Calculation_2640311145556471:qk] + ([csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk] + ([csv.41709.530460324073].[sum:Calculation_1130312101746663:qk] + [csv.41709.530460324073].[sum:Calculation_7370312102644552:qk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 72'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</rows>
        <cols>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 73'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Avg' name='[avg:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3280402162812085]' derivation='Sum' name='[sum:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='80' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='81' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='82' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='83' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='84' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='85' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='86' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='87' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='88' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good-point&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[EstimatedERS (bin)]' />
              <text column='[csv.41709.530460324073].[EstimatedERS (bin)]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[sum:Calculation_3280402162812085:qk]' />
                <format attr='mark-labels-range-min' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[sum:Calculation_3280402162812085:qk])</rows>
        <cols>[csv.41709.530460324073].[avg:Calculation_2640311145556471:qk]</cols>
        <pages>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
    </worksheet>
    <worksheet name='Sheet 74'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Base-or-upgrade' datatype='string' name='[Calculation_4130311125228917]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Calculation_2160328153208285]=&quot;130777&quot; or [Calculation_2160328153208285]=&quot;144923&quot;) then &quot;BASE&quot;&#13;&#10;ELSE &quot;UPGRADE&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='real' name='[FuelEleckWh]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[ID-string (Interesting points]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_2160328153208285]' default='&quot;99999&quot;'>
                <bin value='&quot;100567&quot;'>
                  <value>&quot;100567&quot;</value>
                  <value>&quot;65013&quot;</value>
                </bin>
                <bin value='&quot;102332&quot;'>
                  <value>&quot;102332&quot;</value>
                  <value>&quot;107631&quot;</value>
                  <value>&quot;115642&quot;</value>
                  <value>&quot;115943&quot;</value>
                  <value>&quot;131404&quot;</value>
                  <value>&quot;132360&quot;</value>
                  <value>&quot;155642&quot;</value>
                </bin>
                <bin value='&quot;108820&quot;'>
                  <value>&quot;108820&quot;</value>
                  <value>&quot;114270&quot;</value>
                  <value>&quot;122591&quot;</value>
                  <value>&quot;124250&quot;</value>
                  <value>&quot;131290&quot;</value>
                  <value>&quot;148168&quot;</value>
                  <value>&quot;91653&quot;</value>
                </bin>
                <bin value='&quot;130777&quot;'>
                  <value>&quot;130777&quot;</value>
                  <value>&quot;144923&quot;</value>
                </bin>
                <bin value='&quot;130840&quot;'>
                  <value>&quot;130840&quot;</value>
                  <value>&quot;132280&quot;</value>
                  <value>&quot;85933&quot;</value>
                  <value>&quot;86735&quot;</value>
                  <value>&quot;97876&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;100567&quot;' value='GSHP' />
                <alias key='&quot;102332&quot;' value='Cheapest' />
                <alias key='&quot;108820&quot;' value='Durable' />
                <alias key='&quot;130777&quot;' value='Base' />
                <alias key='&quot;130840&quot;' value='Affordable' />
                <alias key='&quot;99999&quot;' value='Other' />
              </aliases>
            </column>
            <column-instance column='[FuelEleckWh]' derivation='Avg' name='[avg:FuelEleckWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4130311125228917]' derivation='None' name='[none:Calculation_4130311125228917:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[ID-string (Interesting points]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[ID-string (Interesting points]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[ID-string (Interesting points]' member='%null%' />
                <groupfilter function='member' level='[ID-string (Interesting points]' member='&quot;99999&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[ID-string (Interesting points]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4130311125228917:nk] / ([csv.41709.530460324073].[ID-string (Interesting points] / [csv.41709.530460324073].[none:Calculation_2160328153208285:nk]))</rows>
        <cols>[csv.41709.530460324073].[avg:FuelEleckWh:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 75'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3280402162812085]' derivation='Max' name='[max:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' context='true'>
            <groupfilter from='75' function='range' level='[EstimatedERS (bin)]' to='95' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[max:Calculation_3280402162812085:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / [csv.41709.530460324073].[EstimatedERS (bin)])</rows>
        <cols>([csv.41709.530460324073].[max:Calculation_3280402162812085:qk] + [csv.41709.530460324073].[max:Calculation_2640311145556471:qk])</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[Electricity savings (kWh/yr) (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 76'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr) (bin)' datatype='integer' name='[Electricity savings (kWh/yr) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Calculation_3280402162812085]' peg='0' size='1000' />
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8430311144549035]' derivation='Min' name='[min:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_4270328153916499:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[min:Calculation_8430311144549035:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[min:Calculation_8430311144549035:qk])</rows>
        <cols>[csv.41709.530460324073].[Electricity savings (kWh/yr) (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 77'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Energy savings (%)' datatype='real' name='[Calculation_3710312133127667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [GOtag:Opt-Location]= &quot;Calgary&quot; then (89.849-[EnergyTotal]-[Calculation_9440311154155886]+4.733*[Parameters].[Parameter 11])/89.849&#13;&#10;elseif [GOtag:Opt-Location]=&quot;Winnipeg&quot; then (106.65-[EnergyTotal]-[Calculation_9440311154155886]+4.60476*[Parameters].[Parameter 11])/106.65&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_3710312133127667]' derivation='Avg' name='[avg:Calculation_3710312133127667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EstimatedERS (bin)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[EstimatedERS (bin)]' member='75' />
                <groupfilter function='member' level='[EstimatedERS (bin)]' member='76' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[avg:Calculation_3710312133127667:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 78'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Limit-by-Parameter' datatype='integer' name='[Calculation_4730403095905672]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ERS+Fuel' datatype='string' name='[Calculation_9830403103027661]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4480331150059234]+&quot; = &quot;+ [Calculation_4270328153916499]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9830403103027661]' derivation='None' name='[none:Calculation_9830403103027661:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4730403095905672]' derivation='User' name='[usr:Calculation_4730403095905672:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' context='true'>
            <groupfilter from='80' function='range' level='[EstimatedERS (bin)]' to='95' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[csv.41709.530460324073].[ID-string &amp; ERS-int (Combined)]' direction='DESC' using='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' context='true' />
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' context='true'>
            <groupfilter function='level-members' level='[none:Calculation_4270328153916499:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[usr:Calculation_4730403095905672:ok:2]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
            <column>[csv.41709.530460324073].[Set 1]</column>
            <column>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</column>
            <column>[csv.41709.530460324073].[usr:Calculation_4730403095905672:ok:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_9830403103027661:nk] / ([csv.41709.530460324073].[usr:Calculation_4730403095905672:ok:2] / ([csv.41709.530460324073].[ID-string &amp; ERS-int (Combined)] / [csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk])))</rows>
        <cols>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 79'>
      <table>
        <view>
          <datasources>
          </datasources>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 80'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='jp-CostofPV' datatype='real' name='[Calculation_1550508115949750]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_0170508115519187]*1000)*[Parameters].[Parameter 7]&#13;&#10;//if( [Energy savings (GJ)] &lt; 48 ) then null &#13;&#10;//else ([jp-kWOfPVforGJSavings]*1000)*[PV costs ($/W installed)]-[Adjust-PV-line]&#13;&#10;//end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='$ spent on PV per GJ saved' datatype='real' name='[Calculation_6370508123230093]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1550508115949750]/[Energy savings (%) (copy)]' scope-isolation='false' />
            </column>
            <column caption='jp - $ per GJ saved' datatype='real' name='[Calculation_7240508122755062]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1760312105551885]/[Energy savings (%) (copy)]' scope-isolation='false' />
            </column>
            <column caption='Energy savings (GJ)' datatype='real' name='[Energy savings (%) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [GOtag:Opt-Location]= &quot;Calgary&quot; then (89.849-[EnergyTotal]-[Calculation_9440311154155886]+4.733*[Parameters].[Parameter 11])&#13;&#10;elseif [GOtag:Opt-Location]=&quot;Winnipeg&quot; then (106.65-[EnergyTotal]-[Calculation_9440311154155886]+4.60476*[Parameters].[Parameter 11])&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Energy savings (GJ) (bin)' datatype='integer' name='[Energy savings (GJ) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Energy savings (%) (copy)]' peg='0' size='5' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[GOtag:Opt-DWHRandSDHW]'>
                <bin value='&quot;1-plate&quot;'>
                  <value>&quot;1-plate&quot;</value>
                  <value>&quot;1-plate-DWHR-4-36&quot;</value>
                  <value>&quot;1-plate-DWHR-4-60&quot;</value>
                  <value>&quot;2-plate&quot;</value>
                  <value>&quot;2-plate-DWHR-4-36&quot;</value>
                  <value>&quot;2-plate-DWHR-4-60&quot;</value>
                </bin>
                <bin value='&quot;DWHR-4-36&quot;'>
                  <value>&quot;DWHR-4-36&quot;</value>
                  <value>&quot;DWHR-4-60&quot;</value>
                  <value>&quot;none&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1550508115949750]' derivation='Min' name='[diff:min:Calculation_1550508115949750:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[diff:min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_6370508123230093]' derivation='Min' name='[min:Calculation_6370508123230093:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7240508122755062]' derivation='Min' name='[min:Calculation_7240508122755062:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[Energy savings (GJ) (bin)]'>
            <groupfilter from='1' function='range' level='[Energy savings (GJ) (bin)]' to='12' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-DHWSystem:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-Location:nk]' member='&quot;Calgary&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[Energy savings (GJ) (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_6370508123230093:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_1550508115949750:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[GOtag:Opt-DWHRandSDHW (group)]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[GOtag:Opt-DWHRandSDHW (group)]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[diff:min:Calculation_1550508115949750:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[GOtag:Opt-DWHRandSDHW (group)]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[csv.41709.530460324073].[min:Calculation_7240508122755062:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[GOtag:Opt-DWHRandSDHW (group)]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[min:Calculation_6370508123230093:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[GOtag:Opt-DWHRandSDHW (group)]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk] * ([csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[diff:min:Calculation_1550508115949750:qk] + ([csv.41709.530460324073].[min:Calculation_7240508122755062:qk] + [csv.41709.530460324073].[min:Calculation_6370508123230093:qk]))))</rows>
        <cols>[csv.41709.530460324073].[Energy savings (GJ) (bin)]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[Energy savings for base (GJ) (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 81'>
      <table>
        <view>
          <datasources>
          </datasources>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 82'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Electricity: total benefit to utility' datatype='real' name='[Calculation_8140403110609232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Electricity: total benefit to utility (bin)' datatype='integer' name='[Electricity: total benefit to utility (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Calculation_8140403110609232]' peg='0' size='1000' />
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8430311144549035]' derivation='Sum' name='[sum:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * ([csv.41709.530460324073].[sum:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]))</rows>
        <cols>[csv.41709.530460324073].[Electricity: total benefit to utility (bin)]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[Electricity: total benefit to utility (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 89'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Electricity: total benefit to utility' datatype='real' name='[Calculation_8140403110609232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Breakeven' datatype='string' name='[Calculation_9470403125230887]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='//if ( [Annual savings, 40% markup ] &gt; 0 ) then &quot;40%+&quot;&#13;&#10;if ( [Annual savings, 20% markup (copy) (copy)] &gt; 0 ) then &quot;Builder markup is 30%+&quot;&#13;&#10;elseif ( [Annual savings, 10% markup (copy)] &gt; 0 ) then &quot;Builder markup is 20%+&quot;&#13;&#10;elseif ( [Cost of ownership --- difference from base case ($/year), no markup (copy)] &gt; 0 ) then &quot;Builder markup is 10%+&quot;&#13;&#10;elseif ( [Calculation_2640311145556471] &gt; 0 ) then &quot;Builder markup is 0%+&quot;&#13;&#10;else &quot;Homeowner won&apos;t break even&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr) (bin)' datatype='integer' name='[Electricity savings (kWh/yr) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Calculation_3280402162812085]' peg='0' size='1000' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9470403125230887]' derivation='Count' name='[cnt:Calculation_9470403125230887:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8140403110609232]' derivation='Min' name='[min:Calculation_8140403110609232:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9470403125230887]' derivation='None' name='[none:Calculation_9470403125230887:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' filter-group='3'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' direction='DESC' using='[csv.41709.530460324073].[cnt:Calculation_9470403125230887:qk]'>
          </sort>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;40\%+&quot;</bucket>
              <bucket>&quot;30\%+&quot;</bucket>
              <bucket>&quot;20\%+&quot;</bucket>
              <bucket>&quot;10\%+&quot;</bucket>
              <bucket>&quot;0\%+&quot;</bucket>
              <bucket>&quot;No breakeven&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter from='&quot;2-plate&quot;' function='range' level='[none:GOtag:Opt-DWHRandSDHW:nk]' to='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NoPV&quot;</bucket>
              <bucket>&quot;SizedPV|5kW&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='Electrical savings per home, (kWh/year)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' field-type='quantitative' max='23000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' max='292.33474069876388' min='-1375.6775233655071' num-steps='8' palette='tableau-red-black' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <lod column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[EstimatedERS (bin)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[min:Calculation_8140403110609232:qk])</rows>
        <cols>[csv.41709.530460324073].[Electricity savings (kWh/yr) (bin)]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column datatype='real' name='[EnergyDHWGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyPlugGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[EnergyDHWGJ]' derivation='Avg' name='[avg:EnergyDHWGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPlugGJ]' derivation='Avg' name='[avg:EnergyPlugGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[avg:EnergyPlugGJ:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[avg:EnergyDHWGJ:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk] / [csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk])</rows>
        <cols>([csv.41709.530460324073].[avg:EnergyPlugGJ:qk] + [csv.41709.530460324073].[avg:EnergyDHWGJ:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 90'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='ERS-int' datatype='string' name='[Calculation_4480331150059234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;ERS&quot;+str(int([Calculation_8430311144549035]))' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_4480331150059234]' derivation='None' name='[none:Calculation_4480331150059234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk] / [csv.41709.530460324073].[none:Calculation_4480331150059234:nk])</rows>
        <cols>[csv.41709.530460324073].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 91'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='jp-CostofPV' datatype='real' name='[Calculation_1550508115949750]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_0170508115519187]*1000)*[Parameters].[Parameter 7]&#13;&#10;//if( [Energy savings (GJ)] &lt; 48 ) then null &#13;&#10;//else ([jp-kWOfPVforGJSavings]*1000)*[PV costs ($/W installed)]-[Adjust-PV-line]&#13;&#10;//end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Energy savings (GJ)' datatype='real' name='[Energy savings (%) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [GOtag:Opt-Location]= &quot;Calgary&quot; then (89.849-[EnergyTotal]-[Calculation_9440311154155886]+4.733*[Parameters].[Parameter 11])&#13;&#10;elseif [GOtag:Opt-Location]=&quot;Winnipeg&quot; then (106.65-[EnergyTotal]-[Calculation_9440311154155886]+4.60476*[Parameters].[Parameter 11])&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Energy savings (GJ) (bin)' datatype='integer' name='[Energy savings (GJ) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Energy savings (%) (copy)]' peg='0' size='5' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[GOtag:Opt-DWHRandSDHW]'>
                <bin value='&quot;1-plate&quot;'>
                  <value>&quot;1-plate&quot;</value>
                  <value>&quot;1-plate-DWHR-4-36&quot;</value>
                  <value>&quot;1-plate-DWHR-4-60&quot;</value>
                  <value>&quot;2-plate&quot;</value>
                  <value>&quot;2-plate-DWHR-4-36&quot;</value>
                  <value>&quot;2-plate-DWHR-4-60&quot;</value>
                </bin>
                <bin value='&quot;DWHR-4-36&quot;'>
                  <value>&quot;DWHR-4-36&quot;</value>
                  <value>&quot;DWHR-4-60&quot;</value>
                  <value>&quot;none&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1550508115949750]' derivation='Min' name='[diff:min:Calculation_1550508115949750:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[diff:min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-DHWSystem:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-Location:nk]' member='&quot;Winnipeg&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_1550508115949750:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[GOtag:Opt-DWHRandSDHW (group)]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[diff:min:Calculation_1550508115949750:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk] * ([csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[diff:min:Calculation_1550508115949750:qk]))</rows>
        <cols>[csv.41709.530460324073].[Energy savings (GJ) (bin)]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[Energy savings for base (GJ) (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Upg cost'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades- Adj upg cost range' datatype='real' name='[Calculation_5660403112505970]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([Calculation_1760312105551885])-min([Calculation_1760312105551885])' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5660403112505970]' derivation='User' name='[usr:Calculation_5660403112505970:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' filter-group='3'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[csv.41709.530460324073].[EstimatedERS (bin)]' direction='DESC' />
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter from='&quot;2-plate&quot;' function='range' level='[none:GOtag:Opt-DWHRandSDHW:nk]' to='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <size column='[csv.41709.530460324073].[usr:Calculation_5660403112505970:qk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' formula='average' id='refline0' label-type='none' scope='per-cell' value-column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='91' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[EstimatedERS (bin)]</rows>
        <cols>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[min:Calculation_1760312105551885:qk])</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Upgrades by hvac'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[UpgradeCostDoll]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='Attribute' name='[attr:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='Attribute' name='[attr:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UpgradeCostDoll]' derivation='Sum' name='[sum:UpgradeCostDoll:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='7'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[csv.41709.530460324073].[sum:UpgradeCostDoll:qk]' />
              <tooltip column='[csv.41709.530460324073].[attr:GOtag:Opt-HVACSystem:nk]' />
              <tooltip column='[csv.41709.530460324073].[attr:GOtag:Opt-MainWall:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols>[csv.41709.530460324073].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Walls'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cost-effectiveness of wall insulation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Fuel Switch' datatype='string' name='[Calculation_0540328160719477]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Parameters].[Parameter 2] = [Calculation_4270328153916499] ) then &quot;No&quot; &#13;&#10;Else &quot;Yes&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Wall-insulation-type' datatype='string' name='[Calculation_4800326161225524]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot; OR&#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R325-Wall&quot;     ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0540328160719477]' derivation='None' name='[none:Calculation_0540328160719477:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4800326161225524]' derivation='None' name='[none:Calculation_4800326161225524:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_0540328160719477:nk]'>
            <groupfilter function='member' level='[none:Calculation_0540328160719477:nk]' member='&quot;No&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;basefurnace&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;elec-baseboard&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-MainWall:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;AdvFrm-R20-Wall&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;DblStud-R52-Wall&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;Stud-R275MW-Wall&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_0540328160719477:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='116' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='Upgrade Cost' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='30000.0' min='-1055.3266663793104' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f0f0f0' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dotted' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
            <format attr='stroke-color' id='annotation_2' value='#26794a' />
            <format attr='stroke-color' id='annotation_1' value='#297a98' />
            <format attr='stroke-color' id='annotation_0' value='#f1923e' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <text column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4800326161225524:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' formula='constant' id='refline0' label='' label-type='custom' scope='per-pane' value='0.0' value-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <text column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4800326161225524:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <text column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4800326161225524:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[max:Calculation_2640311145556471:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>Double Soft Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>84</value>
                    <value>15561.41</value>
                    <value>&quot;DoubleLowESoftCoatArgFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-140' y='-10' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Double Hard Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>85</value>
                    <value>17081.41</value>
                    <value>&quot;DoubleLowEHardCoatArgFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-195' y='-49' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Triple Hard Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>86</value>
                    <value>14056.41</value>
                    <value>&quot;TripleLowEHardCoatKryFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-75' y='-217' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='conservation:Cost'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Conservation: Costs to the builder&#10; </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Annual savings to homewoner: Base-case-reference' datatype='real' name='[Calculation_5440312091758636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_4130311125228917] = &quot;BASE&quot; then [Calculation_2640311145556471]&#13;&#10;else -100000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Filter-gas-options' datatype='string' name='[Calculation_6670331150314929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4130311125228917]+&quot;:&quot;+[Calculation_4270328153916499]+&quot;:&quot;+[Calculation_4480331150059234]+&quot;:&quot;+[GOtag:DHWLoadScale]+&quot;:&quot;+[GOtag:ElecLoadScale]+&quot;:&quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5440312091758636]' derivation='Max' name='[max:Calculation_5440312091758636:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6670331150314929]' derivation='None' name='[none:Calculation_6670331150314929:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter from='76' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EstimatedERS (bin)]' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='76' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_6670331150314929:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;BASE:Electricity:ERS76:No-Reduction:NGERSNoReduction19:ElectricStorage&quot;' function='range' level='[none:Calculation_6670331150314929:nk]' to='&quot;UPGRADE:Natural gas:ERS75:No-Reduction:NGERSNoReduction19:BaseDHW&quot;' />
              <groupfilter function='member' level='[none:Calculation_6670331150314929:nk]' member='&quot;UPGRADE:Natural gas:ERS76:No-Reduction:NGERSNoReduction19:BaseDHW&quot;' />
              <groupfilter function='member' level='[none:Calculation_6670331150314929:nk]' member='&quot;UPGRADE:Natural gas:ERS76:No-Reduction:NGERSNoReduction19:ElectricStorage&quot;' />
              <groupfilter from='&quot;UPGRADE:Natural gas:ERS77:Low-Flow:NGERSNoReduction19:BaseDHW&quot;' function='range' level='[none:Calculation_6670331150314929:nk]' to='&quot;UPGRADE:Natural gas:ERS92:Low-Flow:NGERSNoReduction19:GasInstantaneous&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter from='&quot;ElectricHP&quot;' function='range' level='[none:GOtag:Opt-DHWSystem:nk]' to='&quot;GasInstantaneous&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_6670331150314929:nk]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='71' />
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='112' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='Upgrade cost ' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='28000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='27' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot; $&quot;#,##0;-&quot; $&quot;#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot; $&quot;#,##0&quot;  &quot;;-&quot; $&quot;#,##0&quot;  &quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='vertical-align' id='refline0' value='bottom' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='body-type' id='annotation_0' value='edge' />
            <format attr='border-style' id='annotation_0' value='solid' />
            <format attr='border-color' id='annotation_0' value='#1b1b1b' />
            <format attr='border-width' id='annotation_0' value='1' />
            <format attr='border-style' id='annotation_1' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='7'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.1988949775695801' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <mark-labels>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>83</value>
                <value>3842.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-4' y='47' />
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>83</value>
                <value>3472.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.5' y='-48' />
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>86</value>
                <value>17207.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-12' y='51' />
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>86</value>
                <value>9362.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='12' y='-53' />
          </mark-label>
          <mark-label id='10' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>89</value>
                <value>21250.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-9' y='40' />
          </mark-label>
          <mark-label id='11' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>89</value>
                <value>16552.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='18' y='-43' />
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='241'>
            <formatted-text>
              <run fontcolor='#787878'>Base case built to code&#10;(approximately ERS 76)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>174.89652876814273</value>
                    <value>0.023144158308923579</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='184' y='68' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='209'>
            <formatted-text>
              <run fontcolor='#787878'>Base case: ERS 76</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>438.57197745607004</value>
                    <value>0.027796040643352171</value>
                    <value>-145.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='215' y='124' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Conserve-by-'>
      <style>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='7' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='99556' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='99556' x='0' y='0'>
                <zone h='100000' id='1' name='Concerve kWH: PV' show-title='true' w='71889' x='0' y='0'>
                </zone>
                <zone h='86000' id='8' name='Concerve kWH: PV' param='[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' type='color' w='27667' x='71889' y='14000'>
                </zone>
                <zone h='14000' id='9' type='empty' w='27667' x='71889' y='0'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Conserve:Costs'>
      <style>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='8' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='99556' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='99556' x='0' y='0'>
                <zone h='100000' id='1' name='conservation:Cost' show-title='true' w='99556' x='0' y='0'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='DB-Break-even-with-elec'>
      <style>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='80667' x='0' y='0'>
              <zone h='100000' id='1' name='Electric-break-even' show-title='true' w='80667' x='0' y='0'>
              </zone>
            </zone>
            <zone fixed-size='174' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='19333' x='80667' y='0'>
              <zone fixed-size='57' h='9856' id='11' is-fixed='true' type='empty' w='19333' x='80667' y='0'>
              </zone>
              <zone h='10142' id='7' param='[Parameters].[Parameter 6]' type='paramctrl' w='19333' x='80667' y='9856'>
                <formatted-text>
                  <run>Assessment year</run>
                </formatted-text>
              </zone>
              <zone h='6856' id='8' param='[Parameters].[Interest rate (%) (copy)]' type='paramctrl' w='19333' x='80667' y='19998'>
              </zone>
              <zone h='6856' id='9' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='paramctrl' w='19333' x='80667' y='26854'>
              </zone>
              <zone h='6856' id='10' param='[Parameters].[generation Parameter]' type='paramctrl' w='19333' x='80667' y='33710'>
              </zone>
              <zone h='7285' id='12' param='[Parameters].[Parameter 2]' type='paramctrl' w='19333' x='80667' y='40566'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='DB-economics-of-gas-elec'>
      <style>
      </style>
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99500' x='0' y='0'>
              <zone h='100000' id='1' name='CostOfChoosingNaturalGas' show-title='true' w='49750' x='0' y='0'>
              </zone>
              <zone h='100000' id='9' name='Savings from Choosing Gas' show-title='true' w='49750' x='49750' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='12833' id='6' name='CostOfChoosingNaturalGas' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' w='19125' x='14125' y='9000'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='DB: Bars-red-black'>
      <style>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='7' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='99556' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='99556' x='0' y='0'>
                <zone h='100000' id='1' name='conservation:Cost' show-title='true' w='99556' x='0' y='0'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='DB: Walls'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Walls' show-title='true' w='84000' x='0' y='0'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone fixed-size='307' h='39875' id='6' is-fixed='true' name='Walls' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='filter' w='16000' x='84000' y='0'>
              </zone>
              <zone h='21375' id='7' name='Walls' param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' w='16000' x='84000' y='39875'>
              </zone>
              <zone h='4500' id='8' name='Walls' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='color' w='16000' x='84000' y='61250'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='DB:Conserve-savings'>
      <style>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='8' param='horz' type='layout-flow' w='99556' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='99556' x='0' y='0'>
                <zone h='100000' id='3' type='layout-basic' w='99556' x='0' y='0'>
                  <zone h='100000' id='6' name='Conservation-savings' show-title='true' w='99556' x='0' y='0'>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='10286' id='9' name='Conservation-savings' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' w='18222' x='80778' y='1000'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='DB:SwitchToPV'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_11' value='top' />
        </style-rule>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='85143' id='7' param='horz' type='layout-flow' w='100000' x='0' y='14857'>
            <zone h='85143' id='5' param='horz' type='layout-flow' w='99556' x='0' y='14857'>
              <zone h='85143' id='3' type='layout-basic' w='99556' x='0' y='14857'>
                <zone h='85143' id='1' name='Sheet 30' w='99556' x='0' y='14857'>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='614' h='14857' id='9' is-fixed='true' name='Sheet 30' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='color' w='73444' x='26556' y='0'>
          </zone>
          <zone h='14857' id='11' type='text' w='26556' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontalignment='2' fontcolor='#000000' fontname='Calibri' fontsize='18'>Cost-effectiveness &#10;of wall insulation &#10;systems</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 17'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='90625' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='90625' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='90625' id='11' name='Elec conserv' show-title='true' w='54500' x='45100' y='0'>
              </zone>
              <zone h='90625' id='12' name='Upg cost' show-title='true' w='45100' x='0' y='0'>
              </zone>
            </zone>
          </zone>
          <zone h='9375' id='17' param='horz' type='layout-flow' w='100000' x='0' y='90625'>
            <zone h='9375' id='10' param='[Parameters].[Parameter 9]' type='paramctrl' w='99600' x='0' y='90625'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style>
      </style>
      <size maxheight='450' maxwidth='1000' minheight='450' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='COST-comparison' show-title='true' w='99600' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 4'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Upgrades by hvac' show-title='true' w='42000' x='0' y='0'>
              </zone>
              <zone h='100000' id='14' name='Sheet 26' show-title='true' w='42000' x='42000' y='0'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='19125' id='10' name='Upgrades by hvac' param='[csv.41709.530460324073].[none:Calculation_3240312153752374:nk]' type='color' w='16000' x='84000' y='0'>
              </zone>
              <zone h='6375' id='13' param='[Parameters].[Parameter 6]' type='paramctrl' w='16000' x='84000' y='19125'>
              </zone>
              <zone h='12625' id='15' name='Sheet 26' param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' w='16000' x='84000' y='25500'>
              </zone>
              <zone h='12625' id='16' name='Sheet 26' param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' w='16000' x='84000' y='38125'>
              </zone>
              <zone h='18125' id='17' name='Sheet 26' param='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' type='filter' w='16000' x='84000' y='50750'>
              </zone>
              <zone h='15375' id='18' name='Sheet 26' param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' w='16000' x='84000' y='68875'>
              </zone>
              <zone h='8875' id='19' param='[Parameters].[generation Parameter]' type='paramctrl' w='16000' x='84000' y='84250'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 5'>
      <style>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='7' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='99556' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='99556' x='0' y='0'>
                <zone h='78429' id='1' name='Initial-Plot' show-title='true' w='99556' x='0' y='0'>
                </zone>
                <zone h='21571' id='8' name='Initial-Plot' param='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' type='color' w='99556' x='0' y='78429'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 7'>
      <style>
      </style>
      <size maxheight='600' maxwidth='1000' minheight='600' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='Sheet 39' show-title='true' w='99600' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='28250' id='6' name='Sheet 39' param='[csv.41709.530460324073].[:Measure Names]' type='color' w='19500' x='78600' y='54875'>
        </zone>
      </zones>
    </dashboard>
    <dashboard lock-quick-filters='true' name='Pathway-finder'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='611' h='100000' id='5' is-fixed='true' param='horz' type='layout-flow' w='61100' x='0' y='0'>
              <zone h='100000' id='6' param='vert' type='layout-flow' w='61100' x='0' y='0'>
                <zone fixed-size='377' h='47125' id='30' is-fixed='true' param='horz' type='layout-flow' w='61100' x='0' y='0'>
                  <zone fixed-size='176' h='47125' id='29' is-fixed='true' name='Cheapest' show-title='true' w='18800' x='0' y='0'>
                    <layout-cache minheight='287' type-h='scalable' type-w='cell' />
                  </zone>
                  <zone fixed-size='121' h='47125' id='28' is-fixed='true' name='MostAffordable' show-title='true' w='12900' x='18800' y='0'>
                    <layout-cache minheight='287' type-h='scalable' type-w='cell' />
                  </zone>
                  <zone fixed-size='116' h='47125' id='31' is-fixed='true' name='CompareID' show-title='true' w='12400' x='31700' y='0'>
                    <layout-cache minheight='287' type-h='scalable' type-w='cell' />
                  </zone>
                  <zone h='47125' id='82' name='Search' show-title='true' w='17000' x='44100' y='0'>
                    <layout-cache cell-count-w='1' minheight='287' non-cell-size-w='1' type-h='scalable' type-w='cell' />
                  </zone>
                </zone>
                <zone h='8250' id='35' type='layout-basic' w='61100' x='0' y='47125'>
                  <zone h='8250' id='33' param='horz' type='layout-flow' w='31700' x='0' y='47125'>
                    <zone h='8250' id='34' type='empty' w='31700' x='0' y='47125'>
                    </zone>
                  </zone>
                  <zone h='8250' id='36' param='horz' type='layout-flow' w='14700' x='31700' y='47125'>
                    <zone h='8250' id='32' name='CompareID' param='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' type='filter' w='980' x='31700' y='47125'>
                    </zone>
                    <zone h='8250' id='83' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' type='filter' w='980' x='32680' y='47125'>
                    </zone>
                    <zone h='8250' id='84' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' w='980' x='33660' y='47125'>
                    </zone>
                    <zone h='8250' id='85' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='filter' w='980' x='34640' y='47125'>
                    </zone>
                    <zone h='8250' id='86' name='Search' param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' w='980' x='35620' y='47125'>
                    </zone>
                    <zone h='8250' id='87' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' type='filter' w='980' x='36600' y='47125'>
                    </zone>
                    <zone h='8250' id='88' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' type='filter' w='980' x='37580' y='47125'>
                    </zone>
                    <zone h='8250' id='89' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' type='filter' w='980' x='38560' y='47125'>
                    </zone>
                    <zone h='8250' id='90' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' type='filter' w='980' x='39540' y='47125'>
                    </zone>
                    <zone h='8250' id='91' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' type='filter' w='980' x='40520' y='47125'>
                    </zone>
                    <zone h='8250' id='92' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' type='filter' w='980' x='41500' y='47125'>
                    </zone>
                    <zone h='8250' id='93' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' type='filter' w='980' x='42480' y='47125'>
                    </zone>
                    <zone h='8250' id='94' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' w='980' x='43460' y='47125'>
                    </zone>
                    <zone h='8250' id='95' name='Search' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' w='980' x='44440' y='47125'>
                    </zone>
                    <zone h='8250' id='96' param='[Parameters].[generation Parameter]' type='paramctrl' w='980' x='45420' y='47125'>
                    </zone>
                  </zone>
                  <zone h='8250' id='37' type='empty' w='14700' x='46400' y='47125'>
                  </zone>
                </zone>
                <zone fixed-size='345' h='44625' id='1' is-fixed='true' name='Filter-summary' show-title='true' w='61100' x='0' y='55375'>
                  <layout-cache minwidth='582' type-h='cell' type-w='scalable' />
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='8' is-fixed='true' param='vert' type='layout-flow' w='16000' x='61100' y='0'>
              <zone h='79235' id='39' name='Number of records' show-title='true' w='16000' x='61100' y='0'>
                <layout-cache cell-count-h='20' minwidth='130' non-cell-size-h='63' type-h='cell' type-w='scalable' />
              </zone>
              <zone h='5015' id='38' type='empty' w='16000' x='61100' y='79235'>
              </zone>
              <zone h='8875' id='24' param='[Parameters].[Parameter 8]' type='paramctrl' w='16000' x='61100' y='84250'>
              </zone>
              <zone h='6375' id='25' param='[Parameters].[Focus on ERS (copy)]' type='paramctrl' w='16000' x='61100' y='93125'>
              </zone>
            </zone>
            <zone h='100000' id='46' name='Number of records' param='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' type='filter' w='16800' x='77100' y='0'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WaterHeating'>
      <style>
      </style>
      <size maxheight='600' maxwidth='900' minheight='600' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='8' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='99556' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='99556' x='0' y='0'>
                <zone h='100000' id='6' name='Sheet 41' w='99556' x='0' y='0'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Windows'>
      <style>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99556' x='0' y='0'>
              <zone h='100000' id='1' name='Sheet 42' show-title='true' w='99556' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='23857' id='6' name='Sheet 42' param='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' type='color' w='40000' x='15556' y='7429'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 5'>
      <active id='1' />
      <zones>
        <zone name='Initial-Plot'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[Electricity: total benefit to utility (bin)]</field>
              <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone leg-item-layout='grid' name='Initial-Plot' pane-specification-id='3' param='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Initial-Plot'>
      <cards>
        <edge name='left'>
          <strip size='180'>
            <card type='pages' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='filters' />
            <card mode='slider' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' type='color' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Electricity: total benefit to utility (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='DB:SwitchToPV'>
      <active id='1' />
      <zones>
        <zone name='Sheet 30'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[none:Calculation_7860313141128771:nk]</field>
              <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone leg-item-layout='vert' name='Sheet 30' pane-specification-id='2' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='color' />
        <zone forceUpdate='true' name='' type='text' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Windows'>
      <zones>
        <zone name='Sheet 42'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
            </color-one-way>
          </highlight>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</axis>
                </node-reference>
                <page-reference>
                </page-reference>
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </zone>
        <zone name='Sheet 42' pane-specification-id='0' param='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 44'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Walls'>
      <cards>
        <edge name='left'>
          <strip size='247'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:Calculation_0540328160719477:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_0540328160719477:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4800326161225524:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='DB: Walls'>
      <active id='1' />
      <zones>
        <zone name='Walls'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Walls' pane-specification-id='1' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='DB: Bars-red-black'>
      <zones>
        <zone name='conservation:Cost'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </fields>
                  <multibucket>
                    <bucket>83</bucket>
                  </multibucket>
                </node-reference>
                <page-reference>
                </page-reference>
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 31'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 28'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]&#10;[csv.41709.530460324073].[:Measure Names]' type='color' />
            <card pane-specification-id='7' param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[:Measure Names]</field>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
          <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:SimplePaybackYrs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Batch analysis'>
      <cards>
        <edge name='left'>
          <strip size='255'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card custom-title='true' mode='type_in' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[:Measure Names]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 27'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
          <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:SimplePaybackYrs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 35'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID:ok]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:SimplePaybackYrs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Upgrades by hvac'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_3240312153752374:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID:ok]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:SimplePaybackYrs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 26'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card pane-specification-id='10' param='[csv.41709.530460324073].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[:Measure Names]</field>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID:ok]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:SimplePaybackYrs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 4'>
      <active id='14' />
      <zones>
        <zone name='Upgrades by hvac'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Sheet 26'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Upgrades by hvac' pane-specification-id='7' param='[csv.41709.530460324073].[none:Calculation_3240312153752374:nk]' type='color' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 6]' type='paramctrl' />
        <zone mode='slider' name='' param='[Parameters].[generation Parameter]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Dots-'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card pane-specification-id='4' param='[csv.41709.530460324073].[none:batch:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:batch:ok]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[generation (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:SimplePaybackYrs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card pane-specification-id='4' param='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:batch:ok]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[sum:SimplePaybackYrs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 23'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_3240312153752374:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[generation (bin)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[generation (bin)]</field>
          <field>[csv.41709.530460324073].[none:generation (copy):ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='7' param='[csv.41709.530460324073].[none:batch:ok]&#10;[csv.41709.530460324073].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[generation (bin)]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[none:generation (copy):ok]</field>
          <field>[csv.41709.530460324073].[none:generation:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='COST-comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' type='color' />
            <card pane-specification-id='4' param='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' type='color' />
            <card pane-specification-id='7' param='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[generation (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID:ok]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 25'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' type='color' />
            <card pane-specification-id='4' param='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[generation (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID:ok]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 3'>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 36'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 67'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 47'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4800326161225524:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 7'>
      <zones>
        <zone name='Sheet 39'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Sheet 39' pane-specification-id='1' param='[csv.41709.530460324073].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='WaterHeating'>
      <zones>
        <zone name='Sheet 41'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 45'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Electric base costs'>
      <cards>
        <edge name='left'>
          <strip size='255'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[EstimatedERS (bin)]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID (copy 2):nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 51'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:ID (copy 2):nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 53'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_7860313141128771:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 54'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='DB-economics-of-gas-elec'>
      <zones>
        <zone name='CostOfChoosingNaturalGas'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Savings from Choosing Gas'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CostOfChoosingNaturalGas' pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='DB-Break-even-with-elec'>
      <active id='12' />
      <zones>
        <zone name='Electric-break-even'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone custom-title='true' mode='slider' name='' param='[Parameters].[Parameter 6]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Interest rate (%) (copy)]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[generation Parameter]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 59'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Conserve:Costs'>
      <zones>
        <zone name='conservation:Cost'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='DB:Conserve-savings'>
      <active id='6' />
      <zones>
        <zone name='Conservation-savings'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>82</value>
                  <value>287.15540321476499</value>
                  <value>-100000.0</value>
                  <value>&quot;Electricity&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </zone>
        <zone name='Conservation-savings' pane-specification-id='5' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 60'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[csv.41709.530460324073].[EstimatedERS (bin)]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[GOtag:Opt-AirTightness &amp; GOtag:Opt-MainWall (Combined)]</field>
          <field>[csv.41709.530460324073].[GOtag:Opt-DHWSystem (copy) (group)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <tuple-selection>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                </x-fields>
                <y-fields>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
                <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
                <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
                <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
                <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>34.136364530818923</value>
              <value>13012.0</value>
              <value>&quot;25024&quot;</value>
              <value>&quot; &quot;</value>
              <value>&quot;PassiveHouse&quot;</value>
              <value>&quot;TripleLowEHardCoatKryFill&quot;</value>
              <value>&quot;CCASHP&quot;</value>
              <value>&quot;Stud-R305-Wall&quot;</value>
              <value>&quot;NoPV&quot;</value>
            </tuple>
          </tuple-reference>
        </tuple-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Filter-summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 62'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem (copy):nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='MostAffordable'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Cheapest'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CompareID'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy)]' type='parameter' />
            <card mode='pattern' param='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 66'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4800326161225524:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Search'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='37' type='pages' />
            <card size='377' type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
          </strip>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card type='filters' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[GOtag:Opt-DHWSystem (copy) (group)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 64'>
      <cards>
        <edge name='left'>
          <strip size='272'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Number of records'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[GOtag:Opt-DHWSystem (copy) (group)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 63'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Pathway-finder'>
      <active id='24' />
      <zones>
        <zone name='Cheapest'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='MostAffordable'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CompareID'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Search'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='pattern' name='CompareID' param='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' type='filter' />
        <zone name='Search' pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
        <zone mode='slider' name='' param='[Parameters].[generation Parameter]' type='paramctrl' />
        <zone name='Filter-summary'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Number of records'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='slider' name='' param='[Parameters].[Parameter 8]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Focus on ERS (copy)]' type='paramctrl' />
        <zone mode='typeinlist' name='Number of records' param='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 68'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 69'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 70'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[ID-string (Interesting points]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 72'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 73'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[EstimatedERS (bin)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>81</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Electricity savings (kWh/yr) (bin)]</field>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 74'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[ID-string (Interesting points]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 75'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 76'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Electricity savings (kWh/yr) (bin)]</field>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 77'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]&#10;[csv.41709.530460324073].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[:Measure Names]</field>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 78'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card mode='dropdown' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[EstimatedERS (bin)]' type='filter' />
            <card param='[csv.41709.530460324073].[usr:Calculation_4730403095905672:ok:2]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[ID-string &amp; ERS-int (Combined)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9830403103027661:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 79'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Elec conserv'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='color' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[usr:Calculation_2710403111306845:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ConserveKWHbySavings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ConcerveKWH-Costs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Concerve kWH: PV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 89'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Electricity savings (kWh/yr) (bin)]</field>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Annual-savings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='6' param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='color' />
            <card pane-specification-id='6' param='[csv.41709.530460324073].[usr:Calculation_8270403112829760:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' size='61' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' size='61' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' size='169' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' size='27' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[excel.41732.485975347219].[none:Calculation_5270403114305868:nk]</field>
          <field>[excel.41732.485975347219].[none:Markup-string:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Upg cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='color' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[usr:Calculation_5660403112505970:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 80'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[GOtag:Opt-DWHRandSDHW (group)]&#10;[csv.41709.530460324073].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' type='filter' />
            <card mode='dropdown' param='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 7]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 12]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[:Measure Names]</field>
          <field>[csv.41709.530460324073].[Energy savings (GJ) (bin)]</field>
          <field>[csv.41709.530460324073].[GOtag:Opt-DWHRandSDHW (group)]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 91'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[GOtag:Opt-DWHRandSDHW (group)]&#10;[csv.41709.530460324073].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' type='filter' />
            <card mode='dropdown' param='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 7]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 12]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Energy savings (GJ) (bin)]</field>
          <field>[csv.41709.530460324073].[GOtag:Opt-DWHRandSDHW (group)]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 81'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 17'>
      <active id='12' />
      <zones>
        <zone name='Elec conserv'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Upg cost'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='type_in' name='' param='[Parameters].[Parameter 9]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 82'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Electricity savings (kWh/yr) (bin)]</field>
          <field>[csv.41709.530460324073].[Electricity: total benefit to utility (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 90'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Conserve-by-'>
      <zones>
        <zone name='Concerve kWH: PV'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Concerve kWH: PV' pane-specification-id='3' param='[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' type='color' />
      </zones>
    </window>
    <window class='hidden-worksheet' name='Conservation-savings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 6]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='CostOfChoosingNaturalGas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
            <card pane-specification-id='4' param='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='Electric-break-even'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='8' param='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 6]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='Savings from Choosing Gas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
            <card pane-specification-id='4' param='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='Sheet 30'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='Sheet 39'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='Sheet 41'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='9' param='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[EstimatedERS (bin)]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='Sheet 42'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' type='color' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='conservation:Cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='7' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 6]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Initial-Plot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DB:SwitchToPV' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Windows' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 44' width='191'>
      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
      B/D/Adt8lOHY2/f8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='DB: Walls' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAFhUlEQVR4nO3Y3U9TdxzH8cNDaWHtSrVSKBVahAIClVYehjrn
      nDMZcZotJrvb5fYH7G5XXu1yG1uyZdmSqdMscsEMJE4d6oIaNyTROCqM4qTCuhZFBSxYKXQX
      sCVzXix+kpm59+vmNL9zes43v7xzkjYrk8kYwOPKftID4L+NgCAhIEhWAroRGTxwYH/fj5ce
      Oj0wMPDQyoHPPjp1vOe9979I/3U9fGlgLr3UeaTzsUc5+PnHl4euP/JUX8+h3t7eQz19hmEc
      PXIk9egbpDo6Pv3j4+zAlZ/D/afDv0w+9jz4J3KXD11d3W+9825BrtH99Ze3ZudLqht/Ovf9
      lm0vHO3uzncU163znOg6HLuddFfWXhmJplIPcvKLT3Udjt1OeoObI+dPFPuD1/qPrxqOxOLT
      HR907GirjdzJmhiNLGWbG8rMQ5PpHJPVa03Fbie9gY0Xvzuxvf2V08e+3f7q3qaAf/mJRb71
      4chE8w7z0v2pT746njM1vHn3Gz9cGi3Nf3B5NLap1vnnxPFE/GzPoZHJdI7Jmjc3UVzVHA0P
      7N619XR4yjCM/rO95y70N7e29vReKDKnWncWftjTubiw1OBfNXoznWOyvv3m3iez00+plTeQ
      2ZQ9c29+ZnYmGr+7d/fLYzfioXrfyG9Jb7l3jTnV+c2xwaFhs81uyn2mvKxsx/Mt6+vqhoeG
      zTZ7ZjYxs/Ts9i1NHo+3/bXXC7IztWvtnaeuVLkKEtPJfHPuQsZoe3FXZv7myvWpdKjeNxiJ
      hep9gyNjhmEsP3F8crbC56v1ubMtq3MfxPOs9sP7Dwbq/FevRe/cmlr829zL9wyFNg6GB7My
      S/fm5pfXrw6F06mktbDI629o2VCdmIhWBNqcBelkauUr/9rO/k/k7Nu3zzCMmtqqvpMnF/Ns
      TfW+MxeH97S/FL0eDYSaXdbshQLXtrZQRVnpeCzR2NRiKzB7PB6Lzb6xoXo8lmhs2bom/37k
      17vBBn9kLFZeWhIMbsiyFLa1Nmfmpm3Fa2u8a+1Ol81i2vRc83gs0djUFBsfDwRDtxLxQKjZ
      WWgtLbKfuTi8p32nJc/kLnUbhmGzmMoCmx0F5rYtrQvTd9y+6uoqn8PpcjgcLmdhJmOUejwO
      p8tmMS2m5krKa0L1FaPjU5XrKl2rHeUlRblWZ3WgcSFxzeGpXN8QnBobdPlDNWWu5THc7tIn
      vOVPlyz+B4KCX2GQEBAkBAQJAUFCQJAQECQEBAkBQUJAkBAQJAQECQFBQkCQEBAkBAQJAUFC
      QJAQECQEBAkBQUJAkBAQJAQECQFBQkCQEBAkBAQJAUFCQJAQECQEBAkBQUJAkBAQJAQECQFB
      QkCQEBAkBAQJAUFCQJAQECQEBAkBQUJAkBAQJAQECQFBQkCQEBAkBAQJAUFCQJAQECQEBAkB
      QUJAkBAQJAQECQFBQkCQEBAkBAQJAUFCQJAQECQEBAkBQUJAkBAQJAQECQFBQkCQEBAkBAQJ
      AUFCQJAQECQEBAkBQUJAkBAQJAQECQFBQkCQEBAkBAQJAUFCQJAQECQEBAkBQUJAkBAQJAQE
      CQFBQkCQEBAkBAQJAUFCQJAQECQEBAkBQUJAkBAQJAQECQFBQkCQEBAkBAQJAUFCQJAQECQE
      BAkBQUJAkBAQJAQECQFBQkCQEBAkBAQJAUFCQJAQECQEBAkBQUJAkBAQJAQECQFBQkCQEBAk
      BAQJAUFCQJAQECQEBAkBQUJAkBAQJAQECQFBQkCQEBAkBAQJAUFCQJAQECQEBAkBQUJAkBAQ
      JAQECQFBQkCQEBAkBAQJAUFCQJAQECQEBAkBQUJAkBAQJAQECQFBQkCQEBAkBAQJAUFCQJAQ
      ECQEBAkBQUJAkBAQJAQECQFBQkCQEBAkBATJ73bBX4pm+fBRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='DB: Bars-red-black' width='192'>
      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
      KjgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 31' width='191'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 28' width='191'>
      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
      fgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Batch analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 27' width='191'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 35' width='191'>
      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
    </thumbnail>
    <thumbnail height='75' name='Upgrades by hvac' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABLCAIAAACpyR9LAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAACsElEQVR4nO3cv27aUBiG8S9Vb8IIiUpeMrtSl25ei5QpHj0z
      xStcQbyyefZIpkh09cYYzyyWihThy0gH/idEkL4F56DnNwWT4fDpyTkWoFy9vLwY8K++NL0A
      uI2AICEgSAgIEgKChIAgISBIvja9gI+ZTqdNLwE7HAvIzK6vr5teAjY4wiBxbwf61v/d9BKw
      wQ4ECQFBQkCQEBAkBAQJAUFCQJAQECQEBAkBQUJAkBAQJAQEiXufxv9JfzW9BGywA0Hi3g7E
      t1o/FfcC4iute02n00YmwxEGCQFBQkCQEBAkV/yDKSjYgSAhIEgICBICgoSAICEgSNz7LMzM
      zOrxIMmrxc9hf9QLVk+UWZTa+kKZRWmx87yryixKi81DPx7edz0ze28UZ5uDkwGVWZJbPBx1
      vcVsBu31OLfU40Fa+PHQ/XqW9hVwxChOOwcHj7B6/FD48d1yTMFN7FeTp/r1by0nuyesC3LE
      KE49BxcDeq6s01rPw2t1rHrenVo9HqRF2L/seuzwKM4wB/eOsHo+M+tsXfDavk3mtQWrKRVp
      Ypd0dK0UabS4DVrdAR0YxVnm4OAOdFAYx36VP5ZNr+N/CnqjlWFseTIYvzm03zjLHNwLyGt1
      di+82sfNrNW9i/0iPWbIDvK6t6FVk6f64CjOMQf3AjKv7dtsvp5JPZ+Z3351yHvd+35Y5Ul2
      UdvQtk7LO2IUp5+DiwF9/7m1M5ePeRXe7rlLDHr90Ir0IhIqs2jzOsosLSz8EdhxozjxHNy7
      iV78WT1H23eU+28Tg94wniXvvEvklOAmfkiiaPnIX77vY0eO4qRz4AtlkDh4hOEzISBICAgS
      AoKEgCAhIEgICBICgoSAICEgSAgIEgKChIAgISBICAgSAoKEgCAhIEgICBICgoSAICEgSAgI
      EgKC5C9OxhRWBcmeBgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='184' name='Sheet 26' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dots-' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2dd4CbxZn/Z97e1LtWuytt72uvezfNmBIgQEgg
      BUIqOVLI/S53uZBcLuXSSMilQ0gFcgEChGqKDQZ3e1131+vtVVr1Lr16++8PG3ttr43XXnd9
      /pJezbyaefXVlGeeeQZqmgaKFDktkPNdgCIXMUX1FDl9iuo5FkUs+P3+bF4AQBP4HC9IRz6S
      CpJy6HUsGg0EJpKJxEQwLImFYCiiapoiiTmeVxVJEGUAgCiJ56UK5wzsfBfggiPp713XPtxW
      74tnChl/L+PwQk1jOL0Blwb7euiSJgpTKSi//ubW1rnNiCJYOKq7S1FQfKHRHBjsHxrss9od
      uZxCcoyeperq6y/hP+glXLXTBUKbw4VDeWholCKQ0TG/rKCqlO/q6oin8/7R4WAwGEmkUJxw
      u12aImV40WK3o4V4IicKsqKpWigwNjwcRIEsC7J8vmtzVoHFOdcxaKoiiBKKopoGEAg0CBEI
      AQCqokAE0QAAGgBA0zRNVVUUwzAUURRVUVSCwBPRCGMwoggCNIAgMBaL2e3281yfs8m01SMI
      gnyJ/6OKnCrTHvfIssyy7NkoSpGLjuK4p8jpU1RPkdOnqJ4ip09RPUVOn6J6ipw+RfUUOX2K
      6ily+px/9UjRvDiR1dSiyfvi42TWQkXk9+3ZJSNMNssb9ShCmVsbqmfkW1VJkQJZ/kBcHE4L
      uMQrKUOGxpxGosJIevWYlUYwdEa+qMhZ5WTqQXDKZrX0j0coqKUlAitE8/kSURSPsjXnU2D7
      X47Klh8HqnTUFcIEjOWA0QO9T8zQ+T5B8IuolR5zJNbWbOwtDNAYnUkHavNc825v3eZqFpTi
      LitZYSR9BsxCAwRCCGewzkVmipOtc8lCtn1nh9tTEolnzBwCKbPX48jlckepR5HA8BagqUeu
      4CSY9GNrACjxbGHHoDJygCqRCDvIBHcJUgHD6YFML2qoaqq4Gjd6ecbeIYbbC9HOTK+Y9lfy
      lqZ8VW2uysDUYSaWqjExrXaInf9+tshkpr1Keqx63g85VUi+NEBWGpEKtlvue77/n1E+uqp0
      xY0V15MAgHwGpMZBchhkIiDRB/I5LevnMfZAsnNUy+UxQmZc5abl2XETQZW6FtdYvR49pScx
      EkWKXdv550zVI6taXJCsFI6coHPRNG0sPbZmcM0W/5ZGW+MHKj9Qba4+2W+vaUAsgHwMZCMg
      HQCJAZCOCP5tPYnOzSS+j7KrdH2C5i16m5k2cyTn5bwGytDmaLOz9mIHd445U/UIirojkkqK
      spHASliqhCEJ9Kj+JZKLfHfLd2+quGl52XICI6ZbPlXTeFnBEYTIxcDoFnDgVXnwgCTaC74V
      woLFfk6N5+OhfGiDf4OJNK2uWL20ZCmGFh0mzxEz03PJqhYTxNFMLsTnOVSt4lATLilKTlEE
      WclBAFGUwTAGw3QoyiIIgSA4hNgxTYWmaZKqiaoaF6SspCREOSXIOVEhIAQIMFBYKUu5GZJS
      eDi2E+x/ThvZBlg3rFgCaq5TbZVj+eDT3U/3JnpXlq28pvRqs2pQC7KSEdW0pORFolRPlukh
      UmycZpIz7rnkXDS6XpbzqipASCAICiGKomxaxkd5gKOM12DR46ii5HkxJcv5nJhSFJFANAqR
      cYyRVe71PsdIEuEYHJAITqE6EudQgoYIgyAkgpAIQmBIXlBkqGk0yKMqjSE+ji5lKVxMqcNd
      YvtebeBdyhBWXXPyuXmhtG0r27nWssPhZ2+iVzd7ZyE0juiwwv44xBHjTZUIUWyZZowzVY+m
      aZKUQlEGRY/tlSRVncgLAyl+PFVAEIhDiKEICgCBIQQCMwVpfcdoz2D8xmZPnRndPx5QkMhQ
      Uknl8ZjAuHQmAWK1Ntasp2ttzNwKiySDvkBeVjWaRSQShAWBwzEvR7kZCs1JaiCAZ7fA8W0g
      uB/oLFr5wi4UPDH+Roy2fqD29qvLr6ZxOr8nnN3o55Z7mCYrRIvTtxngrM+5NE0TJBVCiECA
      IBBCMBHP/2nj4O6h8PUN1tsWVRk4BgAQi8X8/lGnk8PxFM8H8oVMQTMWJMtoWjcSie8LaL/7
      5FISQwqiOhzmwynBxOF6AxaRpQleNBFYtZ5x0ASEEMgiCHSArhfAyEYA5bCl6nUGf0OMLfes
      +GDljSbcnV47qmRE401VmIGc3qMqchxnXT2TmYjnHnlnYNdA6LYWy03zK40G/eShD8/zQ0P9
      LCuybDaV7kwmtxd4P4bbNI1f11cjs3d+/YYagmABALKiBZPCcIhHUVBuo3Ea2ZfIKBpoNXMO
      +j1NKDKY6ALdL4KxdtHk20Biz6Q77eaKz1Tfbs3VpjdGmBYbN99VtCGdCedCPaqm7RmOP7l1
      OBiOra4zrZrttdusmqbIcr5Q8BcK4Wxufy43JIpJRU4QZGkuS7ndc6zWuQzjQBBC05RIpud/
      ngk42LdvnU2bLctJpowibTjKZnl1IJhP5SUDg2dVeVQU3Eay0cAyKIqjCI5CBIFAVUCgAwy8
      o45sCkU7doOs09bQUHmzMF4nxE3GW2oIZ9FN+zQ56+qJpPhvPLcnn4lcVyHWl2SNRiAUBgQh
      IYhBknDhBMcylSxbx7JlOG7BMAZCmE6nx8bGbDabzWY73DhFw7HP/2H9h+duKuE67babMMIo
      Aw0j7TjtpjC3LNGyDAVJy2nKuCQk05JZxQiIQAgIFKEIpNRKW/U4LGRBtB8MbVBGNiiRLk2s
      zBeW4ItWMSubERKf1nMoAs62ehRF/cyfNszT/1+bOchoJRSwM3Q1RTtpqhTHdUADQFEBBABD
      IYVBAoMkDkgM4qisqaOjo5qmlZeX4/ih33XXzs7vvD3x84+Wp4O/0VCpzHYvyApCekKW0SyJ
      xvRCgUEpXG/ALAkBH8vSPs7cZOBwCHlR3T+Wtejw2hL2sBzD0d7NO36Z6H15bqHQyM1C5t8F
      2u4CaNGEPQ3OrnoeebtvaOhRoeaK7/gWMsf/MAiEGAoA0ERZEyRNUgAvaZKiCTJQVYAiuUIe
      YKjOZgIa0ARZE6UXOrrWxpmfLiotsINj0jNMxlZa9kmKdWiyqoSSBT4eI9I5E+ANMAWzWdEM
      lDIKy3NkkEUp/wRpQ8sbfQSJ4TjEIYSapvUl+l7sfaG/f+OqyOj1Ji9+1Tc1d0vR3niKnEX1
      9E2kHnxi7VdWrBkr+WFAkL7sc576SoKmakBRgaKqguQfGuHzPKlnaT2HINovn95gbJj1wLV1
      miYHg6/6A0857Ne7XDejKANVoKZ4NZJRk3mIIoiVUy3MsKrtSURJPOZiRJhzjEcU1dKhYmk9
      ZqBQ2ohZGIwVRGk0Ma4P9czZ++JGXNzgXVhmbfAavbNts/WUHkOONWwWOcjZUk9ekD7zh22f
      977ja6lxl9z+0d39/13jqeHo0yiipmmCIBQKBZ7neZ7P+sd/tiG0tK3iyhoTRVEURUSi/8xm
      NgBIAZAnyRKacjJMHaFyWNaAJQCiIJDT95mQYVV1c3oHRg6M56rdrFGvZORUTslk5UxaToaF
      iRKqvJFt5rY9Htz0uz2GO4YbrP3qcIJPoCjabG1e5VtVa6k9jfJfwpwt9fz41f1OVWtw/ril
      5RcEYehK5R4eDj7aUnGixdSTIKuavyDIR5wPta3rN/yqCzx4fQ3DwGwuH83lCYpWrRZByWf5
      RDI7GM8OsdpENZJ0oxE9igsFA6etdFt1OX1O1EgKZWIZutzhMHBWHNchCAEhLmvySL6/J9tJ
      IfSsgsH4+k/4aI22+PPUvNIcwg8nhp848AQA4HOtn6syVRWbooOconq0HVs2qKRpQVvzqahn
      13D812/2/OQWxh/8c3PzwwAATdO+3TvepmdudlmmVT5F077WPZpXFNOkYROHo7HO3le7xRuu
      q1YigrInwQpqgkRYHSxz6T0und3OmEwMhaMmFLKIokjRzp4f6eJMVe1XEZchVUgOJSMJPs4p
      eTdTQBFFVUWGKdPrWzBcP1EY68l25vhoy/6dzh37M8R95OIF7EIXwODO4M4nup7wGrx3N91t
      okxFDZ2ietSd7bsKojR7VqsgCKIoAgAghCiKAgBUVVVVFQCAoiiEUOLFzzzd/c3rqzD+MYNh
      idEwV9M0RVFSkvyv46lf+Kx6DFUU5eD3HswCADgYWeGYe2oAPBHN8gj6BbvucOgFDMMAAKGe
      weffGN2h6j/ttnlnG4xOKhXJ51OymFNDY3Ehp0KJoDhMUyGCayQHDNXcVvX5hcI+n+5fUF81
      gqKRgjQK8BwvVmKSiyUBCIlir6JASbJzXHUeyY2BgXRo59wNz7H+uRnTh9Vys+YgFRbuVPY+
      M/HsfOP8O2vuRBH0mIeAIAiCIIdrdLjABx/C5Dqe6CEcznL8PQ9nOdE9j/ktTlKM4+958t9i
      yqqdas81MTYEGbPTYjh526Mp6kP/2OP1mj84x7Zr96fmznkSmeTK80owvjuT/0ZVySn+a9dF
      ks8E479q9GLIIYuwoqjRsUzXxkB8Imuy8O/mE466+vuuqj58w4ODpPHx8QJfcDicLK0r5KRc
      ShjYFdk9lAh79l/pebnV8ilb/WpIYJqmTeSFbf6kjkIqjKyLIVE1k0y2i2KCZX0cVycjaH9q
      D9z9t4pd7UB3rUzWSGlKUTgBks+Bdd014bsbPjGbbSEMNMTRy3ABf4bHPds3DfypL/brT8yL
      Rt9OpfdWVz0w+VNV0+7dO/BVn6vF8P4jp54s/1+9479u9FpIHAAgCnL35on+nSG9ha5f4nJV
      GDVV2vPyC49MWO66sumKescx2fP5fCAQKBQKbrfbZDJBCJPh/K7XR4b6eq2VzzfWNnGej+QE
      oVAoyLKqatqEiic5o4MjvBxdQgMhP5BOd5KkVadrJCh7NLiNe+27rGcpmP8poEkqzytJvi8b
      +Ev6zeyBxL3iraV0ien2etzKTOthXuzMpHqSg5HPPd/5y08vtBvojo6v+nz3c1zFMWkGs/w3
      e8f/OqsKPek/NSFK/9I5/GB1SYOO4TPi1hcHYv5sxWxb3UIXzRGHW5pUcGLfpk2/CTn+88am
      5jLTMTfRNK1QKPj9/kKhwLJsoVBQFGVnXG3fmpmdHiuvTbRecb3J5UEQRNO0fR1dgCuJiVpU
      kRRcc+gIH0eZkQSf2a2qok5XT9Kl2U0/Mw1sRW74GXDWH/6KnljPT9t/6o4ZPsvf6b57NsQv
      o4Uz9Nvf/va0MkiSRBBTuAgqyfyPnuu4fkXVbK+5UAgHQy+Ul91zfA9lxLGhfGGUF5r1J2x+
      ZFX79wOjH3KZF5n1AABZUhgDOe96X0m1CSePMr2QLKfl0i0W5Jc74gcCqTqXniGPGPoghDiO
      m81mnU5HUZTVanU4HC3lzq1WQFd5bNGSrrcCjJE12BkURXAcg2J6dpWr0shYUVzIq31JvieH
      CLiPZjxAGBH5MUvj3VlLmfLa13BRBa7mgz4DVsZ6fcX1GbrwTO8zs7N1bMX0pgUXNTOjHk2Q
      3lqzv4PAv3h1DYQwMPGiXteo1zccnx1C2KpnfzAQuNKiY06waevhwQkHid9VYj0oFJxA9RYa
      maqtghDqHK5E187bF1eTrO67L+8fDOfqXHrmaBcwHMdJksQwDEEQBMKlJt0jkfjSua75cx27
      1r/T+VaCZCiTTR8KBw0GA00RBgb3mKgaM1tCkoqsjWbV3oJJEwdZDBgd87SGD+R6X8D3vwZ9
      ywBGAAAQiNRZ6pJc/pndf19qWIhbLpf+awZ6Lk1Rw5v679/h/9WnFzoMtKZp7Ts/2tL8C5K0
      nugm66Op16KpH9SWHt84vRKMvx5N/azBi53yIFTI5cb2tGcjIcbh3pRi1vTnPjCr5Pb5ZfSJ
      3QhjgvSFzqEf1JWWkeBA55873x2HwuxCRgUIxeoMCEISOMUYCZojMAIlaQxy2IgilJneDZCL
      nTp7pY6BB/7O7HgSueZ7oLTt4A4kTdMebn841x3++gf/G9NdFs5DZ9r2aJomHZj4wcaRm66s
      afOaAQDZ7EA21+Ny3XySiVU5TT4fjFtx3EMf9ZSHc4XvDAR+2+SlprOXFCMIc5nXWlGFAGDN
      T7Rh0Y6h4K82BQGKVtl12FRuhAyGtujob/X6V9kspa55NkuOodc4Wwd13l5T+aDFN8g5DxC6
      gIYHZMXP5yYSE9HwDl6z+yoNezGmujOZD3M1WPkc8q1vYpkEKJkNEBRCON81f0N600h/b2vl
      nMvBGnSmbY+aF9a+2rVeQ757WwuKIACAAz3ft1pWWq1LTn4ff77wlf2j/9dWdXg2nhClT+wd
      /G2j18Oc0R9X5PnY8MDQwPBT+7MByvn5K2uvbJx6iW1TNPWXQOzXTV4cQZRQSh6KZq1EAghV
      VVXHJ963/blda7jyK0BTPWWzLQ/zQncynxcF+95HW2P7sBt/BGyVAABZyPzPa/fV+W68o+Uj
      Z1KLi4IzbXvSovKdzSM/+lArTeIAAFnmh0ceq6z8IoTvM/XQYWhckvek83OMHABAUNT/1z36
      qVLbLCM37UocDYrjOpvdU119RWt5K5N/fvvI3/eGo1mxy5/eP5EeCGWiyXwwmY9lCoSoDqf5
      jcFUNU2yRhazcLg/zcfThFWPE8e6+9hcVRq5ef8rGM4GDTbOxNjKOapMx2acc4cZn+6Nr4+T
      uQTL0oRhmbnpr9t+LTNctan60m6BzrTtyfLSeCJf5zYcfBsKvZlO76mu/rdTuZWgqB/f2//z
      +nIXRfxscIJEkfu9zmkV5lRQVdUfyfRHcomCnBYURdUkWZEVVZAUTdVyBbk7V+iL569xG797
      awsGoTwQlhM5qrUMUscKSFHEbRse7H2rqWYZVj1vtc1oPnhd07RYPAKfu3dk1lK/xwcB8A6O
      /qh/ywOrHmxztc14jS4cZtha2NHxb17vfTrdsWaeE7E9kXkiELvSpHsrkfl5Q/lprKGeOaKi
      frpj0BgqgEjhx3fMInE03D3EhAtMYylq0x2bWEy2b/9i37qVngW1c5ctMLBHFJZIRNBnPqNf
      8RW+an4k04++venrqfU3r/jgXMc8J1lCotS5rda5YMbsPQCAQiEUCr1UXn73qTfXbop4K5re
      lMz+oqGcPE9+fSgCFxm5P2fSDRTx3OaRlfUO0kCPpCPGlKplCoiZmVwdFKWstkUF8pcT7b5A
      nnZ6dBR+qNg0zYqVV0trvsHqPAbPQp2Zbe4gHvY/TZpwvzQcKIx6aC8KLynfxZlUTyDwT5ar
      NRiaTv1uEMLlZt31dqMeP5/ufByGLjNxf0inZjPU3zcOr2x0C2Ied5lIQZX7I6iNg5PmgDiu
      0xvrZPzF0A6XP4e4S3Xke/ZlkmKEyqukNQ8SBAt9S0zYaN3e+kfyz3+26X4B8FklbSOPXVG5
      qJkxs7qmqZHoOod91XQzUihqOK/SOUgZQ/2q0btFBxuqTJ/803baYJ0IBdFKO17jEHcMKaHU
      5C7eaGgpq1xefeVT+a6uta8Np3JH4hXpjDbtjj8kt/wOtP8VaVjV0JL5Ut/tD677zxLc15ft
      UjRlqi+/WJmxtieT6c1k9rlct1y8sww9js3WMY8lU9e7jb9cO7jAwzAkxpj0qMMgD0S0eBay
      JHzPAqnT1SbT7+jc+yI7zUNjmqfaSBGH2ieSooXqGwrrvkdBgNYttAaHzfmmR9NP1NqraYwx
      4Meux128nEw9mqYMDw7iBDYWiMj5VEHFGIo4kXpGR/9it1/HMqVnsbBnHzOBN3HUT6PxW93m
      P7w77qULZW4HgqOIwwBQRO6e0JJ5qCMhjkEIzebl8cQ6k3dYDJQe6C7UtlgPL6dQJCVUry6s
      +z7FmIgSQt/HombH2uS7ZgNXydWd3zrOICfruVRZpnH51dc3jA/0do0E9u/bI4riQd+iY5Bl
      Pp7YbDLOPWvlPHfU65gHK93rcfn/3dj48OZY72gYAAARiFp1xMIKxMpJe8akjnGVFzGMamz8
      saL6K5fttHHqK7/emwjlDt/HoDfDDz8e6XoDxCdMrSOLDpS7VderA2sSYuz8VW6GOWHbo0p8
      78BgR0dvhc8dTfAcqWGU3u20y7JMksfaguPx7RAiVuvSs17esw+EsJwhGRT+LZ76Ukv5D9b0
      LKuxcRR+8CNER6ElRqBpSn9YUzVUx1qsy4aGf+OuKQ0pvv43RhRZtZXqDnqKUSRdqL4utf0p
      nTCOmrmaxPJXwQaawmuNDRdv/z6ZmbH37Nv3ZZ/vfp1uZiKqXiC8EU78Ixi/XVL/uHXiFx+b
      ZzcctSFEkxRlNKZEM5KN6U/ty+R+pbD/WV8+u3fdaDKYX/bhGqP90Ep7LJcTn/tXl+KP85+J
      tZR+K/6j3179OyNtPB91mmFmQD2imOrofKBt9mPvuzpxcaFp2gsT8ZeD0VWx+IsD6hWNTk3V
      JEWVJDUnSAVZDWTEQjKjU6CCI1klcO/8Ppvr081e18RAcusLg9VzHQ1L3CiGAABiuZz80n9a
      0+PRzBfbVyXXRzf+YMUPMeT8zzTPkBlQz8jInxGEKC29a0YLdqHwv0MTO8YnHrAYIxJJoRCo
      ciaVEPi8zW51O2w0SbA4gkjKho09z45tf+BKU1317QSGCry845XBZIhf/uEanYWCECqKjL72
      X/nOUMp3/3/bfrHQsuyelk+e78qdKWfuoaEODv22wvcv6KVoiQcALDBygzLYHI/fVmrAxBSL
      iFUe2+yGyooSm0VH6WmcJjGKJnxW9uXNUaMh5jTSLGPHcKSswcKayLcf7wYQ2Ep1CIqCqpVY
      Zido32ysvervoecqdFVunft81++MONO+hueDBG7Ecf2MlOYCBEL41QqX02b7xkBQtNjr6uoc
      DsfhwAyHwcy6L81x/LW9NBJtF8XkwYsl1aZbvtqWCOZf+e3eRCgHEBRe+y2uOT97y19vqbzq
      Jzt+EslFznmFZpIzbXtQlDKZFmLY6WwxvlhAIFxi1lsY5ocj4UBBauJo8jiPMwihSc/297Tv
      TpQ02nt1upqDo0AUQ8obLYyR2Pxsf3mTFacI6FtCDb1oGttVPvdzj3b8aZV3FYJcrOPFM1UP
      hOil2mcdQxlD3uEyj/DCg33jFIQ1LIVAqCiKJAr5VDqXSnI2mzM/9OfupNdE2bg8TR/plfQW
      mqCwgV3h0nozIBjgbCR2TVQn9ybLF2wIbF7gXnAe63UmXPTD/lNEVVVFlmVRkAqFfCaTjUez
      8VgulczGomKB57M5iECMIFD0oOc8YMxWimURFCNIEidJgmEVWeYz6dJ06r5k8t2XAkEUEEKe
      RRCS40iGkQVBVZQFV33gDvc/Ht+5qtrew7I+gjAfLkBFq617ayAZzhvtDHQ248tuSL+47Q6w
      +b9s+rdG3rqy/Mrz+HBOm0tWPQLPR8dHEwF/dGw4Nj5eyGUJhoGahlM0Z7EwnE5nc3jqGkmG
      oTg9rdNBCBVZliVRFgSpwIuCIBZ4VVYEPs+nEplYFELImK3uGpePYZayupCGfn0kuthu+rLX
      cdC3JNDfu+nvj5P8MGJq3xdeyVLr3e6b4XsuGRCBrVeU7lk7uvKuOgAh1roCG8jleumvCZse
      yP6+0lhZbig/rw/sdDinUS/PEqqqZhPxbCIWGx+L+ceSwYlCPo+iqKXEYyktN7s9ZncJw+kO
      7nyYQSOvomkvBON/HI9+wm25zWVBEaipatfb61598ol3aj7y+3s4mqRNpiOrN5qqvfybvUs/
      VG1ysAAALTUR/fNenTfqH/zxnypbvr76EZa4sB7s+3IRq0dV1UQw0LNl03h3J0YQRofLUuKx
      lvkMNhvF6bDjpkVniaQo/2Es3JXlH64vNxCYpqi71/z86eHhvLD07vkjjXM/QdFHfHrGe+Jd
      G/2r7m06KGKhe1fyDcG2Mj7++n2bFn3utsX/RhwX9vpC5qJUTyI40bdjy/De3azBWD1/UXnL
      bJI+z5O+10KJt+LpH9aVIRBG+w7s6fvCD3d97prY9tpy4up7vsYZD3llqKr20q/2LLmtylqi
      AwDkpcz4iy/Y6cXGmtH4y19SaItN5zvqvtkhAN77gWgnqFwJ2j4OqAvi3wsuIvVompaYCPS3
      bxvet5vidDULFvtmzSEo6gJZbtQ07T+6R1fZDFfZjIok7Xr9e7tkdG9y9f31qa1PPz571Ycb
      V1xFUBQ4uvnRNG136E3L04Lz5uWkE0+m/H/c/b8FlP78rPvMtFkDQBFgoSdR6EsoKQElVSL2
      qs7RDe0VYM69wFkHznfdZ9Iz9WygaVoqEt637vVNz/xtrLvLVVO34KbbGpdfYSstx3D8ApEO
      AABCOMfAfrvPv9Ki1xE4WjDJ0mPtoQVlvrr5y8jwYGDHi694Z80hKEpnofZvCljcLGsgIYQY
      zu4ht5jfZpg5HlpvnedbpUD8f7Y8JKQU69uEOJDDzCw7161f6WXaPHyynNeWkk1lcOtvwL5/
      AJQC5nJw/o4qu3DbHk3Txg/s37futVwyWbdkRWXbPNZgOAffeyZsj2eeCER/3ugFkrzl9Qei
      usonu+Y98vGqXPpdOVm185WXb37gPzCCGDsQ37/Jf+2nmgEAmqatCT3Xsq9cB624g+W7Y3Kc
      Fx3wBee720LbvrHsm3XWo7zJMpvGxbGM+fZamB4Hu54AQ++C6mvAnLuB7oT7vs8e76OedDSQ
      U7BwJGFkAMJYSp3Wc6AePpPpa9/W+fYbtjJvy9XX2crKLxZrrKZp3+vz17PUbW7L6N7NfdEf
      9Wo/lDXkE/NFSYr3bhgWc8qyO+/UNPjGY93zbqywluggBGP88FhmqHGXD6FwssZEOFiAQgDA
      cHL45zt/7mAdn239rJWxHv6K/O4Q3xk13VqDcgQQ86DzRbD3SWCqAq13AN+ic1nfE/ZcmqbJ
      YmHHhjcGYzJWSEUFLR0N26xWURTpszNE1TQt5h/f8uzft7/0nMnlXvKhu+qXLOeMF1N4QAhh
      m575br9/hVlntzrDvRvLSi0vd6GzfFUsFucc8sCOfYnEHkKfIHWZPWsndCW70+n9am4QKYwj
      7gzp0zNWN3x/YyQAABvzSURBVERRCCGE0ESbrvVdK0jCQzseUjSlxlSDIAiEEHeyAIDkS4NU
      jQlhaeBqAq0fBsZS8Oa3QfkyQJ+7FvqEbY8qFQZHA5ngQAY1i/mC2YAilHlWY83ZaHvEQmGk
      Y0/nO+s0RWm74ZbyxuaLSDHHsz2e/v145JHmisEda4Zzj1q9j/32ncHffHwuiiICz//j+99c
      9fkvWUtK3/xT16xryuylegBAR3KPIOTLEZHnxw2GWTpdHTLJ+ycn5P7Y+ceOSIedsitACRaC
      AAA5XgCahlmO/JPbwkNfNM4DH/jxORtNn+dxj6Ione+s63jrDd+sOfWLl5tc7otaNwfRNO0H
      /f5allpNw/ZNX/A0ffK5rrJqp+6m2R5JVgYGht986tnGWz/WNZA80B8nSphsTowLUk7Ofnx+
      9fWzGCXXK4kxg6GNZb2HHe40TUsLaV7iAQQUdmhhUU7w8Wf7jKt9hEcHANgb2O577r6ye9cD
      8znam3De1KNpWnR89O2/POaqqplzw82M7pLy8Sgoykd3D/ykvkzcvSaGPl/X+MgXntgpqZqZ
      wiCKOCjo37Xl1o98MLo33thoa55lpwgsLiR+8vJwT6bvrqtFG85xhbADt1jNiyjKzcvK2lh6
      dyb/aY+t5OiYNWIwG3+qx3hDBVlpBAAMrf++T1LANd86N3/C86MescC3v/LiWNe+qz91n6XE
      c4Z3uzDpyeR/OBD4mVu3Z+vnGxf/t8nYiKHI4R91w1NPEBRds3D1pn/03XBf6+F4q89sG352
      99jXP+gUifBYeng0iXQo9eMFfrXD1aI3PjoW+VZVSaP+qNhkSk6MP9XDLS2ha8yqIqt//VB8
      9XfsruZzUMdzbe/RNG10f+frj/zCXVO/4qP3cKZLZ2vcMVhJPMAL3TKoTBdy6lqX67rJ7YGn
      rmH7i/8wue3ZJAFReHDlCwDQUGKw6qkHXxzuBdZdsqfGWHeXi72d7XOpO2UkONdk/cFgxoJh
      FewRrxiEQOk6c+q1IaBoZIkeQbAN679hb/gQiZ31+GXntO3Jp1Ibn3mSz6Sv+MSn9ZbzYJ84
      xxQU5eN7Bv6DVTNDX52z9Bc63VFBpXLp1D9/8r2ld92/c030li/P5lX19WhqTSQlKmobSmzc
      PHbvIu/qlkMDQZ6fiMTe6ZCjMlH2xETJdbbSe0ptk0OOKLwUf3yP/vpa0oFnfrfsf+uXff3K
      h0527v1McI7aHlVRDmzd9NZfHm1aec2iW++gmAtlpeasgiFIm47+bjCzJCNJWLtBP1eS0oIw
      wfMTudwILwzhhuDul9YCghqL7Xgj/IckH/98ZdPd5WULncbrG12PrO8fiebavCYEQhzX6bga
      Lj9BY7ibCTwbjvRnmUUmHfqegBAcxWg+vSHCzC4hVGRw7x+7OEurvfWsVvCsq0fTtEQw8Mbv
      fyPyuVWfud/pq7gEZlWnjpnEo6K0Nwbs8TfThc3xxMZkanM2HxxJB54OjL+jUTrEro71gPS8
      j9xyQznsj/r/mEzuQiCh41zXtZRu6ov8ffvYylo7jiEQoixboWYOVHF1bWZ2XWz0H0FtlcVA
      vOcmixoocdsWjbYTzXMa9rz0RzXuNvqc3MwH1DrMWVdPKhp5/ZFfLr79ztarrsWP24R6OTBL
      z/wpLTuCpgrYlrWu3kJd+XjS16vVLC5d8qnq5SvbFkX6D4x2pkprZ/nqVrhct1BUSTD04sjI
      Y4WCf1ldFUtZH/xn5wKv2cgSCIIxTEUyvtVBuq9114tK9CdDmUYOs5EUAAAiGK7sT21R6Xll
      uCq3QOp/Rl9dWbby8Ax/xpk07lGlZFY0njgI90FO40RtTVWRy/vERn9euGfXAUKWfRbTYpGv
      Hx1A+CzAEYxlCB2HktTbTz5Lm2+uW1SOkygEgGAxBJUz/JbgxCsMV5ZHlj3WgX71xqYFXgtG
      oKoqTky8rNPV63R1O5LZ/+ob/mRJ/gZHA4vpQKgr81q75r1Sv8AM/n73Oyvue3Xkje8v//5Z
      2nk4ST2KsG7deounYlbDyTYUXwj+PRcjwYKoQxEWxwAAmqxoWUEOp8RwUkylJRqk5fQ7r7zt
      bVhgq2xBEEyWFFVWhJwENE3ICIqojieCz8FwY8E338QZrIzJjcnITm/dPLPNF5akT3b0tXAD
      d3vKG9hGbfMjkb3zrffORrf8RHPOfjjX7WJddzbeeTYqNUmSqtQ77K+jdQBcUtvRLxCc1KSN
      KBgKjQxhZIgalyZIajRrjucGHbs4NArj28pMtZROBxAIHSSAEGAcgABizitzO/9jY5fet+yT
      s92pUD4y0rbl2VAuNUKzxq9YySclx4sjBxIOuTxbkubU8DO9dPmNZeu+dvXs3/x394NsyOnM
      e2kd3rxiJq1rk8Y9ECRD47TZU+qynSTDOfbvueSBGIroadShJy3GcMjfcNU1w8N76dpSrsGL
      lZhQtxF1GlCHAbXp9K6aNrZ3fe/arkzpDct9Fc22qjl2c8V+Tz3ucFfOJZgS3pGOFrriEQso
      5GKsgjMWckRMibMbP/yroYeu8lzVvzVa3mQhyBnrxSZ5PigSpAzmUzj7qMjZwF1TN9Hfy1ps
      9ddcH+rZP7pru6rIkxNABPoaP/LZOXoh8fg9f9iWyosoSrpLrgdYlDb3NyxxL7ixctWtbVU3
      Wqpquud9yFeWk+jr/q2i8NyC1rqvLL3/b4VHbOVcdCwzg2WepB6IoprEF4QZvHuRUwdBUYPd
      ER0fJWim9sprERQ98NYbQi47OQ3EsJrWf/9oM3Vr9cYvPdk+Gs0iCO503sjz/mSyXdM0BCIL
      LVdh5pqMthPRYYUwCRwNYHjLivIVPp3vbWFNZPQsqQdASSzki+o5T0AIK+fMG9zdDgBAEMTT
      OsdZ19jz9pvJwPjkZAiG1bV+q9rQ/5GW0Qf+vrtrPIEgmNN5A8/7k8mdAAAEIkzJ0nxgU8/c
      8dRbI+r8z4Mdfwaadm/rvUNs55g/PN3VhZMwWT2KBomDBwYcRJX4bVs37d6167XX396yZcP2
      3Z0z9a1FpqSssXWsq+PgawihubS8atkV4/t2Bbr2Tv7JEZxobHnIQaz7/g3aD1/tfmWvH0Fw
      p/OGXG5AlnMAAMDZSwiPSuR7nP25AQwQLJjYT2Lk8oole/M7Z048k9WD4BxDHjYEqxK/f39X
      KBTo6R/XUaiE0hKfyefzB4+0LXI2oHU6WqdLhIKHrzAGY/1V1/GpVN+Gt2ThSLdAEPrGhh+l
      o7/+zmrs5b2Bv20eghBj2Yp8fgQAACBEbA2LRQuxzBba1ic33QM2/Bxo2srSlR3qjnxmxrqX
      SXMumV+3eY9Jz3pK3AAAiOI2hxODsL6hXkUJt4kxO8rMRp2qqsU511kCQphLJlLhkKvyiNEE
      QVGTp1SVlaHtm1IT/mwswqeSYj4HAWE0zBkZ/M6di257sTO1fSi2qNKTzXZwXDWEEBB6OPJO
      SeUH0zAFRmiaXwvtjTpLxcuhf86CC23OmfFendT2oKROy4QzRwJXQ4hU1TbabNaG2kp3WYXL
      dimE2rvAqZy7YGhP+zFDEwgRe1VN/TU3uJtadTYHACAXiwS7OwO7hvDMlZ0dX7yd6cwc6Pif
      V0cVJa9pEgAA0AaAs0g+7p3XIkeFXudK7d2fYgg61zN7d2rnTJV20tRfESmjs9R9MmNPkbON
      zmyRRVEs8CR97PGUOEnipA1YjvqBNE2Lxxf07//xv9/58H+8Np7Ic8b8KMdVAQCAvRFM7IZV
      1xiv8U28Mh5C9zsj/au8q/7Y/vhd4JYZKe1Rcy6apo+PilXkXIIgSGlj8+Cu9lNMDyE0m+eV
      +D4yPPLQnFJdb8yazw8f+sxSDWJ9QNMIj67MVpU03qZs+129tT6hRgpSYWZKO6kgAEAYi106
      sagvUipmzR3cM43OBULo8dyud7UZ87/bHSAEIaaqEgAA4DTQOUFqHEKov8Zrilyh+btgNlZG
      VuwN752Roh5RTzgc9o/08+LMzeeKnBZ2ry8TDYuF6TUP5eUfK3HnD4wHUcxUKLw3a3POAoGd
      AABMT9IN1lx2CTywZpF++dtjb89IUY+ox2wvaZg1d+XClhm5b5HTBkLorKyZ6O+dZi60xHk1
      VHrysjuXGzx01eQFmQkgCwAAbpFbqbhG7ni6yV7X3r9PUWfgtJ4j6klEghiCjPpDZ37TImeI
      b9ac3q0bp5vLar26yjTUFaJ4flzTVAAAgAiwVIH4AAAAITHjB+fnScyshIxJ957QnjMv5xH1
      2JwuTSqI8iV1gNRFiquqJjwypE51oMxJoCjrnFKufSRLECZRTBy66mgGE4dGOQhECs0fpHqf
      akbnvjHyxpmXc/Iau5zjxWw2e+LERc4RBEVZPWUx//j7J50EhEiLt7TbH6Toilxu4NBVzgGE
      FBAOLY5KVcv5obWNdOn2oV2SIp3wXqfGEfXEQ/6MoBAXwDF9RQAAvrZ5vds2TTeXy3EFqfUl
      C+ZcbvC9zgsCZyuI9hxKQJePeyqc+X2k39YZOdOFy0mjZrevtdZrMBQNyhcEpXWNo10dqqpO
      KxfHVdc75Q6/gCCELOcPXbU3gom9QNMAAAhEcvXXOrOvVWSa3h179wwLObnn4rfv2BOMhM/w
      jkVmBIrjKJbLJZPTygUhXFThXt8bZdnKIzMvUgcQBOQPWfJ0zrm8MTQPOtsndoryGa15T1KP
      qpEMEx7sHo/nT5y+yDkCQlg5d35/+9bpZmz2tfZPjNFMeT7/nnogBK42ED7UT5Uw3tGatorC
      myVk6Whq9EwKOUk9GElCyez00ERx6HNBUNbUOrhz+3SduczGcj2RD6VQVRUndV4NINwNFBkA
      QCF0oWKJm9s7G5uzbnTdmZRwknpkPhjL4IzRwhUdMC4IjDa7oqq51PQ6Lwyj51c4dwwnaNpz
      yN0HAIDigLGAtB8AACG0G+oSPnqBLLcHT3VBbUqO+PdIkkxQdEmJm2UObT1UJf6px/8cThf2
      7NrnnxgdC0RLXHZRFI8/l7TIWaKQz/HptK10eocQGAj47J7IDbOqMpn9h9bbAQAEB4J7ga0W
      AMCgXBeWah7a3evy2Rm7hbGcXvGOtD04TsQmRg4Mjh18q0r8gZ5ei8tZyPEYTlAEhhPEDLrE
      FjkVquYu6N64ftq5PCWheFKFellOKwp/6KqxDJgOhRLnMJ1o9SZiQ9eZmp/ve/60izd5N6CY
      zAh2y6EtwwhONzS1NjQdG4RBks7UxFTk1NFbrJIg5NJpVj+N2GoYitW4LEPhnJPx5nKDen0j
      AAcNP4dCQkEIS2lfF920dHTXT4ReURFP74SDI22PCpFyj5MX5ZOkLnKOgRB6m2eNde2bbsYl
      Vfb1B/wsW5HLDU3ZY5QzlcPmBqlzc52hsivSdXrFO6Ke7u7evCiRaLFvurComrewf/uW6Y4Z
      WsuM7QPjBGFSlNwhX9Wj0WNGpkQ3GjKvUJkNYxtOr2xH1GMxcAa7x266pKJPXgKYnK5sKiEJ
      03P3sRuYnIQl0jGKKuH5KdbLIITlpe794Jq5oQM7QztPb83riHogimYTEUm7rEOlXIAgKOrw
      Vvh7DkwvFwLr3dZ9IyMM481m+6ZM4zN7owYrmox7Mf1AYmDKNO/zLYdfmc2m8aGhQPjiPqX3
      kqRq3qLBPdM2zCyqsm7qHaAopyjGNG0KZw8LaSOdIGa84sqcsGH8dDqvSTN2gqys8GJY0VR4
      weGuro0MDyny9CY0s8vNe8fikpQlSccRX9VJ4AhRWu4IM0vmRIe3B7ap2vRWZMExeyoEReGz
      qeneosjZBsUwo9MVGppe52LRkQCvC4U3s2zlEXefo/FVusNxmrPXWePDY6mx6RbsqLNnQv4x
      /II5d67IZCpmzx3cPb1dfCiCNHpsu4cGKcrJ84EpZ20lLltsIqs23bEqETyNNa/JHhoiQhtd
      NvOJExc5b5Q2NAf6pjdwBgAsqDBvHoipqoiitChOsdeKIHCGI3OW5kWoeevQ69N1lZ8cBQFj
      KVyeZuda5NxAsezyu+6ebq75Psv+iCUe38px1UdWTCcBIbR6uBF/jGy4xenfNZ6eni/s5N2A
      kCDwVHomowMVmSkghE5f5XRzmTiSpmvHgztYtiKXG5yy87KV64YGJmDLh27PCutG3pzW/Y+o
      Z3RoMJuOGeyX5pkjlycQwlavq3N0FAAEQlSW08ensXl00bFsQW9pdC4MDL09rZnXEfWUeKtq
      ampRuehYeEmx0GfpCLKpdAfDlOXzU3gS6syUlsQD+QDacnvpyOa1Q2tPfVXkiHpQjCivrPO6
      L/3DRy4rWkqNo9macPgVlq06EiBhEgiKOJ2WkeAYaLjpQ1TN/3X+JcafaiyDoyKwdPf2AYyp
      r/YBADJx/0gwl42N4zp7NpM16lCUMjfVTbvrLXJ+seoplKgMhF6vrdGxbNWUaeyl+q6x/Wo1
      zlQsv1/jf7bjZ99d9t1TOV/nKHuPUCjwhQIAYHSoTwUw5J8gWaqzs4fUxKQAU/FwMfLcRQeE
      sKnMNZLgstkRvb5+yjT2cn1+DEaEEJj/6TnhISNpfGv4rVO5+WR7T6Fr997BQAQAUOarNuiN
      FdWViAKXL5uPcCaPiXZ5vAzDFMPOXXQs8FmGc4uj0RPOp8wuFolxA7kDwOAAJPtZ09wnup+I
      5d6//zqinpGRUZvH47G95+KKMT6vp3XeIl956fy25sqaxooy1xlXpMh5YFaZaTxXF41t1E4w
      n2J0BFcwTfABVVPB0geMO//0uZbPPrTjofedf02OguBhcCAp014qK3KBY9aRgkKoGs3zU6yV
      AgAQFLGXGMUozMgp4KoHuH4RU8rgzLqh91m7OKKe4d7OaFZ53xOWilx0IBA2eIyhQlssfsKo
      Ls4KAxWxDOf7AQCg+Ra4+TcPzH3gb91/i+RO5rFzRD0Nc5be8oHrmmsrZq7YRS4UFlZY+lON
      8fgJnXisHg4PmScK45qmgeorQLSXE3Kfav7UL9p/cRLzD3KiD4pcSizwmTuCmKIUCoWp2xKr
      RyeGEBJSvdkugGKg7WOg459LSpcQGLF2aO2JbltUz2UBSxOqBgh2RTgytRQwHIEInEMv7c12
      hQsToH416HwOivkvz/ny4/sfj+aiU+Yqqudyoc6lj0nzQ6E1U868IIQmB5uPqcss12yKr8sj
      Gmi8Bex9Rk/pP9f6uYfbH54yFkxRPZcLCyssu8dVirLmclPHzXBWGsJDaSNhnmNcvD66Rp37
      cbD/ZaBIS0qXsBi7bniK+VdRPZcLTR5jx3jSZrthIvjClAmsHi4yngEAlNI+N1W2NbdDs9eC
      nnUAgC+0feHJ7ifj+fgxWYrquVyw6sgmt+Hx7eZwZKuiTLHcZLAxiWA+MpYGALQY5vJKbqBp
      hbbzT0DTjLTxM82fOd5+WFTP5QKE8Mur63Qs9/OtKyeiQ8cnwAn0yo/V7Vk3tubRjkBfcqn5
      mi4sGiEAmNgPAFhcupjG6GPsh3C6W1yLJ2pf7KzvGn3ojc6f37m0yjn1vuFkOL9n7Wh0PFtx
      hS6u/OWq0TD80O8BhOlC+rme5+5pvedwyqJ6LjtUVVrz7lcf3XvTfVc0rm5xnyhZMpzf9fpw
      /9DwB+BPXV94DFh8x6cpqudyZGjoUV61Pba9vNap+/TyShSdegCjaRqfFcNrX8ZG3k3P/1rN
      XCdGHOX0Uxz3XI44HDcU0q/94PYWXlS++XxHmp/aZwtCyOhI70032/H9o/3bnvvpzgNbJyYn
      OGGAy3hwsG88h6upTAEpFESDHsMo09xZjTNcjyLnA5p2AQA0JfnlVbVPbRv54pM7H7pjlk1P
      T50axYjFn3ONP934gR/jyaPSTN32jA71UaxOlIDJYCYIhCMREaGEfLroW3hpACHidFwXDL4E
      IfzIQu9Xr6n99F/a944ca845QuONVRPB9vSbXOlRgpl0qu0kDCYLjqEo1KKxhKfUo2GU20Sb
      HKVmo754qu2lAUk6h4Z+43LdDCHiNNKrGhwPPt+hKGqjZ6rDAlCMSEW4bGq/TvUyk5yjtWmS
      zWanm6XIhUlH59dT6Z7Db/MF8WO/3cgXpKlTZxPan2+X5MLka8VR8+WL03H9ROC5w29pEvfZ
      dYORExySxBiAxYsNHxVGqKieyxejsS2V3qNOinzQVmbcPZqYOjWEYN5nwI4/T75WVM/lC4Yx
      JtP8ePzIURitpaZO/4kDODlqwPXfm3yhqJ7LGof9+kDgae09i7HTSPvjOe0kBmS9Y/K7onou
      a3S6GkFMyvKhsQ5FoCpE0rlTNcoU1XNZAyHicFwTCq997y2c5zXtGz/Vc1WK6rncsVqvCIde
      OtxbNXuM24dPbDY8mqJ6LncYugRBdTzvP/h2brmpc/xUI58W1VMEOJ3XTQRfOvhaz5KIpgmn
      dlxJUT1FgNm0KBZbf7jzMnPERIo/eZaDFNVTBBCEgePqU+lDJ+W0lZt3jpzAZng0RfUUAQAA
      p+PGQOAfB1+3lps6xk5p2lVUTxEAADAaZ2cyBw6egltuZvpD2ZPZDN/jhOrRNDmbzYt8NpvN
      jvqD8fBEMlMMiHnJgiCo1bo8Ft8KAGBpAsdOyWZ4Yt/CQP/e4QKV6UuQJbSUBxyLqeqiBfMV
      ZXrhxItcLNht1wwNP+KwXwkAaHDpDwTTC6psJ89yQt9CxmhFVUlWgSrLWUHBlAJKMKfSmhW5
      SOG4KklKCkIUANDkMbSfwsB56ranzFcNAFixzArAvGM+Kp5qe6kCIbSYl0Vj75a4b53jNb+0
      J6BpGoTwJFmKo+YiR7BaV0Yib2maZmIJXpDU9+tqiuopcgSG8YhiQpZzOIYyFB5Lv89hqEX1
      FDkCgqA221Xh8GsAgHle07ah91kuLaqnyFHYbddGIm9qmtbsMZ7MzxAAUFRPkWNg2RJZkUQx
      Ue827B5NnnyWXVRPkWOxmJdGo+sZCtcRSIY/2RS7qJ4ix2K1Lo3GNgEAfDbd8Ik26AAAiuop
      cjwcVyVJEVFMN3kMJ9ygAwAoqqfI8UCImEzzY7HNs8tOukGnqJ4iU2K3rQ5H1riM9ESycJKB
      c1E9RaaAZX2CEAVaXk9j4RP7GRbVU2QKEAS1WBbH4ptb3fquE3deRfUUmZqDZsOmMvOesaJ6
      ikwTna5KEALVdrBrNHGioc8JvcOyicBIqCDloySli8TTB0+1bSyev3Q5YTYvkvidUDMIskrh
      UxxyO3XbMz4yoGhaYHTYHwz29A8TqhAvgGQsVIw8d1lht10bjb5ZZmFCidyUCaZue9ylPqjy
      FVXVuWSA1tviqayHQyDlZpiie+FlBMdVSVK0wYlt6o+V26cIDT61ehAEAQhbWcECUHqWS1jk
      wuWg2bAM6X5tsGbKBMVRc5GTYbet1qHbhiPZKf0Mi+opcjJY1qdIMRIRolP5GRbVU+RkIAhq
      NLY5qN6hcGaKT899gYpcXNjtq53U1h0jU+xNLqqnyPvAcVWVNmT36BQH2xbVU+R9gBDWls6N
      xEeV4w62LaqnyPvjdFytJyb8sWNthkX1FHl/WLayyYntOy4iXVE9Rd4fBEEXVVcdv7O9qJ4i
      p0STr7VvInGMzbConiKnhEnvlFU1e/QGnaJ6ipwSCIK0lFl7/JHJF/8/geHZKX3rDZYAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='191'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 23' width='191'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 16' width='191'>
      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
      12xJmTx5gkcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 22' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAcpklEQVR4nO2daXBc13Xn/728Rm/oRjeWxr4QJMAN3MRNS8iI
      tmmNE8k15TjlccV2PLGlOFXR2E7G8fhTZinZylSNZSWWy6mZjCYaS7HiTRMrWihSFEVS3HcQ
      JIi9G+hG78vrft1vu/MBFIxu9PL6vQZIwff3iXXfdgH8ee+5555zro4QAgpFFfp73QHKRxiq
      Hop6qHoo6jHe6w7cRyyagDqdbum/C25YbClpMup0uvyLiy9c+rY1AFXPb/j5//2fTb2bNwxs
      iAWDSHtHo/ZtW7rFbM5k0Lk9bb7JCYMUn0m71zfr3Z39cf/UG28ed7Z1DQ70jl8609blEY3N
      0Xmvo8H18KOHdDHvpeHhFJq3bWhKJgRChNZ2z4w/tmPz+nv9U9YSqp5CuKj30uWRJpdFyOHy
      uVNtzS1pGcJ40JT1hXjY9dF3RtkO93XZ2U8kEEIMBgOAdJJ1Dwx56uWZQEIU5fGJuS5Pw/A8
      f/q9k1YDY+zqmAkIjea0gPXMvf4Bawi1e36DzWYH5Jyoc1lNJrtTryMOp8vT2trs8Rizsbhg
      aHA0mO31bU2uznWDJDVvstnNjCGbzrg6+g4eeCQXm/OHEkaDTiZoMBszqEuGAo4Wj83haPZ4
      HHVGYjCssV+3jvp7VgIipP0xob2l4TctfCqQIG3NjnvYq5qjUj1UcxSotnvi8fjCfE/5bUal
      evR6vcOxpgZhigrWmBlHWVWoeijqoeqhqIeqh6Ieqh6Keqh6KOqh6qGoh6qHoh6qHop6qHoo
      ihEFCPzSBqoeimIuvIwLLy1toOqhKGb+OvR5sRVUPRRlEIK0DzbP0jaqHooyCEGOQ33v0jaq
      HopCCDgWtoalTVQ9FGXIIuITsFP1UFQg8gCBsW5pG1UPRRlcGvYu6PIEQ9VDUQaXhKWeqoei
      iugobA7kZ1JT9VCUkQ6AsVP1UFSRTaNxa0FbuYwcQqR33zo6sLH74rXbHS1tFk8bG47s3bNj
      TZWBoCgkk4Srs6Ct3NgzP3XbF0pOz84PbmifGr/z69f+pX3DJkkUU6mUIAgr2VPK/Uf0Fiz2
      grZy6skJIp8OS5JuYtLvdDY8fOjR4fNndQaDzWYzGmnxjd8mZBnZKCyuguZyIugZ2PaF7gEj
      Y0gm0zarmRgYsqFXB51er1tjVYwoFZAliCIaBgqaKwwhdWYzAJfrQ/+00bICXaPc90gichws
      9QXNdM1FUYDAgp2B2VbQTNVDUUAuA4MJjKmgmaqHooAsC9em5c1UPRQFZBKwFim4Q9VDUUDK
      B0uh0QOqHooiWB+snuXNVD0UBaQTcA8ub6bqoSggHad2D0UtqSLOHlD1UCojS8jFYGlcfoWq
      h1IJPgdZB3vH8itUPZRKCDlIIuqsy69Q9VAqwScgJmCqW36FqodSiVwSpgYYioRjUPVQKsEm
      0NBf9ApVD6USmTishZE9C1D1UCqRHIe5iMkMqh5KZTJh2HuKXqHqoVSCjcPVV/QKVQ+lEun4
      8ojmBah61jhCMMh+8IGmVyTvULvntxT2woXk20fUPy8KgA7mIptcqJANyMZuj88I2dTwjeFQ
      KJzM5EKhED2P9KMFP3zT2FT8b6+IbBoGCywNRS+Wy+eKxhKjF85lYh5/pt6UHbkwm9i0cVtT
      s/qeUFYfMR63bRtS/3wuAyLBUPwU+XJjj6vJs77LnrX09tkz18d9giBIMkRBSCQSPM+XeZBy
      /8AH/ExTk/rnOT/Aw2QuerHc2BMPekOSs89BJibloW3bmcZ2NuDVGbudTmcikVDfIcpqQSRJ
      8vqMjRpmLi4Fey9KJJ6XU09rz0BrzwCArq7eu00txec/yv2JlE7r7Da9q7B6QRWkE3AWFl5Z
      hK651jJiOAzoDNbi621FpKOlpi1Q9axtxEDA4HTqmeI2ryISt2BzlrpI1bOWEaJRprdX0yu4
      BJxFcnEWoOpZy/BT00yjW9MrMinUF8kDXICqZy0j+rxMT/HtcaVwKdSVLNpE1bOW4UNhk0b1
      RK9Qu+e3FGFy0tigwcmSTcPcBlPJN1D1rFmkTEbHGA3OkiNHZbIcTFYYC4s+LULVs2YRYjGD
      06m3aCg1mU3CYCyaTbEAVc+aRZyZ0TOMTktt5OQdGHUwlnQXUfWsWXifj9m4SafX8CdOJ+He
      UeY6Vc+aRUwkmWYNu+sAcplSMakLUPWsTQghwu3bjJbddQBsqFQm1wJUPWsWPhBgNm5U/zwh
      iN+EpUjRp0WoetYohIjJhNaxJ51E4/Yy16l61iZEEMTpGUaLqxAAn4W58FycpVD1rE34SITp
      6YaW2AwAybmi5QoXoepZm4ihkNHl1hkM6l9BZLDTRcsVLkLVszYRbo8yba3anD0JNAzAUDKw
      EFQ9axUhGmH6iiefK4XPgbGUiodfgKpnbSLMzjIaU+/i07DWQ19u7qPq+SgjS0WbiSwLU9NM
      Z5Eqp1WQmoS5AWXnvnLXxBwXisQlMRcMhrJcJiuIaTZNM5HvFyQJr3wZmfjyK0QURZZlurs1
      vZ9NoHFL+VvKbcDOz86cO3e1o68zEg1KnI44nU2Nbft3lIyRpqwehODUD6ED6or4Y0guJ83P
      M25tEc1CFqYKqTzlxp723vWdzcx0gO3r7cjlMj6vz+ly00zk+4LATVx8EY9+u2jwjRiL6axW
      valkVJciYlOwV3A2llPP9NhNFo6929ePTYQHNw4eOvwY65/UGRmn02nS2DOKFmQJ7/4N9j6J
      1iLn9QEQ4nFTr7ZwZkLATsNaYaOj3MzVOzDUOwAAPb3r7ja1a9vxp9SE679CYgoP/u9Sy2lh
      ctLo1LZHIUvgWLiLq3MRDYFnlHtCfA7Hn8Hv/aDMaoifnjYNbND0FSJD4DXZPZT7DiLj+P/A
      +k9i/SNl7hITCaatXdOHRB4pH+wVIuqpej5SeC/DewYH/6LMLYQQYWzc6Cy3u1kZkQMRwRQ5
      m2IpVD0fHQQev/pTPPpXsJczZuVcTmJZpr/42QBKYRNwVY4so+r56HD0GXi2YeMny99FeJ6I
      glFLGhcAniuTgLwItZo/IsyP4/av8Uc/L5Obt4AUi5FkymArF1lRmdgYbJVXbXTs+SggCXj7
      O9j/NBore3GEYNDY368pNgNAeg621op3UfXc9xCCyz9FJoydf6jkdjGhOZwZABuHe6DiXYXq
      kWWJ47KE7oXeP8R8OPrXePzvylSAWwp/Y5hpa9P6UZ6DqUq7JzbvG5uaNRgNssG8dctmM0NH
      pnuNJOHkc9j9JNoruH0X4SNh2959Wr8bHUX/QxXvytMHl046Gxxe31xDS0edsVxQGWWVGH8P
      k+/iwaeUPyEGQ5oKNOPDI7StJUuGLZKnnnm///KNOwPdTf4wLcd8H5Bl8cZf4vD3YFW6/Cai
      KPp8Ro0JyIIAUYKjZKHdRfJmrp7+Daw8w/K6OlMqJxIzQ4efe8r7P0T3Ixg4pPwJMZ2GyWTQ
      aDXLIqTKjmYUqMfd2v1wSzuXFawWS9loaMrKExjF9ZfxJ2+XKZ+zHCke10mSwV4uha8yuQS4
      YPn6Bwvk9SwdD10dGW+sNxvdPf3tGgqMUzQiCvj103jkG3C0VPdcIKB31Gsq0AyAZ2FyQUEu
      WJ7dYzAywXn/yM2bBob6oO8p85Pgs9j578onxCxHjMW0FmgGkIrDta7ybQXqMdvqzWB1+rpg
      lNXaA4oWwlfh7qy4KbEcfnpGazgzAD6j0LdU4NHRd7Z18dB3tdJp654S9aF1f7UDDwBharIG
      Y0/0ZsXIngUK1CP7o6meFrt3Pqa1BxQtBC6hQU0unxCPay3QDCATKXWEdgH59o1Ov2379hSb
      9XTTEwDvHZIINogGNQE6wsSk1tgMAGwc68qVK1wkf+wh8tXrI0Y+NjwV1NoDimrEHNIxNFcd
      mCymUtDrDTWxexQ4e7Dc7tm5dcM8Zxrqq26hSKklmRj4ZJn6/qWQWFZvt+m1nMa1QGRYnd2D
      RMgvymCzIgBCZEmSCCGSJMmyTAiRZZnuvq84yQhclaMjliP6fHqdXmsSoCiAAGZFw0eBX0ee
      GrvpF12GBo/H2T4xcu3WyE1Xa1cgKQ80wA8LA9PBBxXNiBT1hK6hUU2IBT83x2zcqDUuLMeB
      6GGufuwJzk7pnR06SWp32wGsG9zS3tHT0dnp1Kd8wdCNqzc6entpJvKKE5lEq5oQCzGRYLQc
      vX73LTx0UBLcgwL1OFzNaU7cvr55NswCuP7B0eloJpPhZBgczqaPffIx/+gwzURecVLB8lkT
      pRBu3dJaswdAZg5iUklIPApmLrO1fkOH6+Lo3CMf2wNg2yOPbQMAbNq0+e4dfdpyzCgVkSSE
      b2D/V1Q8ygfm6z/zGa0d4FjY+xQ6KgtX7DPzc2I8HkyktXaCog4+C1kHh5rSO2I8rjUuDEAm
      CbvSFXeBt1A3uPnBrvZAY4tmjxNFHVwIXEjFcp2Iojg9rbVAM4AsW/50gaUUrLnIxK0rxFRv
      axcADec6UVQTD6BpSEl0RAF8NGrsaNeZFe1uliNS7ijJAgpWdzo95GQ8cvnSpYwga+0HRQVR
      L+xqnMViKGR0ODWdxrUAl4RDaXm4AvUQEca2xnropGRG0NoPigoi19GkpniKcOeO0ePRVN57
      gQwLm1LjqXCnoqnedG08uHv3vhaHop0OSo2JzsEzpOI5IRrVWqB5AS6p3O5ZvuZKDPU1njhz
      MScUr+ZKWUFkCfNnVZjMAASfrwYLLiwcoa20ekueevzTo3qmbi7G79u51WSkqYCrTo4D44az
      6iGEyLIwOcV0Vc6hqQCfhakZJqWGV56R1doz+Fj3ADc/ejXGrWunSRWrTtIHCGqW67IsJhM1
      iCrMcTDWgVG6cMtTj3/q1s2JOeiZnXsVBUVTakzMC3tvVSk4dxEEYXauBhHNXAIGg/J46ryO
      tvVtbO3dCEBHs7nuCWwM7i4Vz4mJhM5q0ddpXuikJqGXwKhSz+zY8PEzV512U+e2gzv7K6cx
      U2qM/wM0qinFL8Tjpq4uFVH0hWQzcG6ufNuH5JnGneu3dLe5LXVmo3a3AUUFiTBayp0DWgph
      YtLoqMXmEpeCrYrpr9DX7GCktN5ut1Jnz70gcgsONbYLPzNtGhyogb2RDChfrmO5rzkei4Tn
      5+Msp7UflGrJsIABNjUGg5hIMK2aKz4BSNyGpYoxLE89scB0SDC7rHqjnlrNq04qDJMVTNWb
      04QQ4c6YsaEWM1cuA2cVhleeepwtnW53o91koDPXPSA2AmsDTFX/5gnPi/E4s0Hb0QILZDTY
      PXq9wcjHYHKkMjRsedWJ+tWZzEQQSC7HuGqRPJ7wVeWrLHBM6bbv/V02HuZMdM216syeRqeq
      YPhwmAiCoV7p1mZJBB58XL3dA5CZidGRsRlGe5gIpVoS8+iqXGhyOUIkwnR31WDBlcvA0gRD
      FVNn/i5pICDLMtHpR66cS3Ci1t5QlEMIApfgULNJLni9NSjQDCCTgsla1T5JnnqkdOTG6Ewu
      HW/qHrSZ6B77KpKMwNYJi5qoZH5ykunWXDcDQHwUJlP5I7QLyPc192/paXeb68x1ZrPRoOeS
      kVt3pvgse+vWnUQ8luRy4VCYZiKvCMk51LvV7I8CQkzzOZILZCKoc5Y/QruAvO4KfLa9o+vC
      tZGNtjoA0URKmL/5r7fNzQ3S7evXubq6wYGtjRqruVKKMn8FrnVV/b9fRJiaNP6bx2rQh2wa
      7gpHaBeQJ7TAxK1r435zvau90Q6gudHFmTzdjSaXyylLQi6XI9DTTOQVIRWDW43DRspm5WTK
      2F6LLM1MAtbqzoTLU0/Xpl1PHD6wqcczH2UBjN+8mkynWzq7Z/3s0PahAwcPMbkYzUSuPYQg
      eAmuymfSLEfOZqHTGbVH9gCIDsNS3blMhROtgTEPbF7IP8am3QcWDkfo7PowtbFFc7IZZTmy
      hPgc2h5U82g0SljWoL1mDyHgYrBWlwafrx4i374zbtfzorOrp1nbwZYU5UgC2CDsapzFfGDe
      2L+uBok4REY2U/EI7QIKc0knRy+xsWzH7gaqntWDS0DilefBLEVMJpjmWhSZJARcqlq7p0A9
      +r629lCztb+DLqxWkVgA7vXqHhVu32bctXAVygLit2Cuzu4prLjrnbwVjoTHZsM16BBFIZFh
      OFUWiuT9fmZT5cOLK5PjYLAqLHa5SJ56shzX1LEuGU30tdXChqcoJDqDtgfVRSWL8VqcIwkg
      y6KhH7rqNhjy7k5GA9fu+Htb6iZmIzXoEEUhgSvqansTWRbGxmqjnnQClvryCg6wAW/Su7Ql
      Tz0tHf3b1rf5Y9m2RmoyrxaigEwITlXlnpJJnc2mr4mzJzUNsxUoqR5CyI8u/+jK/JWljYV2
      TzgaTIZjSS5Xgw5RlMBzyHFwq6kMLyWTOqOxBs4eAGk/bO1lxh6WZ494jzzUnhdDUugtdLcP
      mk0+q4nG96wW6SDETFWZDIuIPp/eatVaoHkBNgFXuXXfseljQ+4hlzXPKVWYkcNG/FmDrY6W
      QFg1khG41GQAYiEurBZVV0RJZoP+Ms4eSZbemX7nU+s+pc83qwtVwuey6XjkzJkzLE9rh60K
      oevqansDEObmTLUIebg8HbsycgXmkjNgJBMZj48f7j1c0F6oHqbO3OCwOx3WTJbGFq4KkQm0
      7lX3KD82znRqrbpCCPl/F6bdujRsJTfqz86d3eXZZVlWArxQPfY6w8x8fOOWHc31dBd9VUiF
      1NX2BsDP+uoG1JxosRR/jDtze65Nn0VDb9EbZCK/MfnG4Z7CgQfLaocRfzjR1Ww7deZchqdj
      z8ojSYgMw6WmboYQi0mRiKlbzVJ/Ka+cnd4lXHM1u+EsPglOxafGk+O7W3cvv5S3tpqfnXQ0
      teoY26d3DFlpUs4qwCVBjKjvUPPo5cum7h6Ny3VekE7d8j+D17Dna6UiG9+ZemevZ6+1rsiH
      8saextau3bv3bGo1Xp+K0BI+q0EmBCmt5OTz5aRPn7bu26cxNuPYzYA9eKe/yYTtnyt6gyiJ
      x7zHHu9/HEDO683NzCy9mqee0Ozk2bNnL9z0tTZqTi2jKCE+h6atKmp7E1nOXLpUf+hRjd//
      54u+zxn/lXngj0odgjwRnyAgQy1DUiYz8+UvC37/0qt5M5ene6Cla4NOr9fTgWd1iM3CriqH
      KxyWwhFTh5opb5FhXzw2ceOQbQQbf1DqnhPeEw+3PWw2mgN/84zlgd22PXuWXi3IY9cbDAa9
      yAXj9JSTVSF4CY1q9ijY99+37t+n0+BlJoS8cd3/Jbxv3voEGnuL3nN3tdV3mD11Kn32XMs3
      vl5wdFzhmuv2lTNvHj2RztJC8atCPIRWNZUPuKvXbHv3abFNuZz463PjByxX8fDTpe656L9o
      0Bu6JWfw+895/upbptbCuP3Cat93Jr0tHo+1jlHdLYpSZAnzZxSeH7sUKZPJnDtnfUhNFP0i
      b1yd/X3+rYYN++As7iQkhLw1+dbvth+IvfBj65499oeK5NjnqWcuEKg3629cvx5O0tphK082
      DXML7FXbLvzcnE6vM7WpLxbGi9Kvzk1+1fi6btfnSyWwCpLwru/dh0f12WtXW/78z4uOc3lP
      pvzj4/Osw25nDHoAICTDcWaTIRxN2Gx2o8kk8jmrzUYt6toQn4HRqGK5njl92rrrAS3T1u25
      RL//tHP9ZvSVrNpxNXjVI5hNP3659fm/NdiKe5Xy1NM9MCQy9dPTXr1eByAZ9v7T66c/tbv7
      apjpt3JjLGl0efbvrEUULQVAdAr1PdXmrhNC0ufOOx9/XPVnCSGvnJn6rPEIHvnrUl8nhByZ
      OrLn+KTr0//eur2kZZY3c3lHrx478UEoyZkYAwBHc3ury1bfus6N6OjM3My01+luopnINYON
      w91b7UNiLJYbG7PsfkD1ZyeDbHz4xE53Br0lLSdO5I7OHH1UXN/01FNljujOk17X4K4/7Nqs
      A2z1C7upuubmZi6dzIiG7p7+wfa+uHdC173X6XQmEgnVvafcxX8aHUU2j8rDz8wYmxq1HCrw
      we3AV+VfYvcXy9RIPD5zvC2c2vDN7xvLliTLU4/F7rDYl4YIGR58aD+A1p4PN3JpnlcNSYSw
      c0e1D7HHjll27FBt9GRz4omzV/7AmcEDXyp1jyQKb469/ns7vmDbtq3822gM4b0jMor66oYQ
      Qkjm0iX7gQOqv/nBePhw6rW67Z8pY61PvPnqzfnLh3d+vuLbqHruEZkU9EbYqovsEaNRKcXW
      DaqMZJUJOfL++U+azmLo06Xu4e6MvffmD7d07GlU0DeqnntEMgRLQ1UlJgFw168zba2MU2Vh
      7+kgu8P/jn3wIFqLVzuQc7ngd797qjXxxLonlLyQqmdVESX5my9fvDARRvgq6ltgrM6nzx47
      Ztu/X/XXf/HB2AHDaRz4Vqkboj99dTY8FtnQtb9d0VeoelaVM+Phi97EpnYnYgG07qoq+5jI
      Mnflqm2fmprOALicYB7+hadrHRqLp2HkfL7ICy9c/8qjO9r22uoUlUOg6lk9JFn++/cmvvo7
      fbY6I/znqzWZ+bk5AqI6FPWtK97P8D/T7flC0QFP5vm5//Qd919884Ru9BO9n1D4Tqqe1ePM
      nbAkSX+wuwuEgA2jubrd9fT58+atWw226oqkLCBJcuLCcU+rB4NFlEEIibz0ktHtjh8cSgns
      Do9SPwJVzyqR48X//tatrx7sN5uMIBKik2iqLpEvc/acpfSmQXluzsb7A/+se+jrMBba6USW
      oy+/En/1Vc9//Mv3/ad3teyqr1N3HjtlxXjtks9pMT0y0AIAmSQkoar9USJJmZMni4ZJVESS
      5eHT7z1svYmBjxVckgUh8L1nYy/9Y9eP/97U2fnW1Fuf3fBZ5W+m6lkNeEH6/tGxJw+uMy4E
      L7AxNPRWVZ05Nz1jbPUwy+KzlBBPZQcn/km39ymY7Uvb5Ww28Mx3+bm57pdeMvf2jEXGBFno
      r6YeA1XPavDq+ZmeRuu+/g/3eQLn4WqrqtQSe+qkecsWPaMmau/988MbdSPY99TSJZ4Yjc48
      /bSUTHY++6ypuZkQ8s7UO4e6DpkVH8YOqp5VIJMT/+HU1H/+/U13Bx4AsTm07lG+XCeynD55
      yqZqgyLHS223f2oZemJpxirv98889VRdb2/7f/uvC7E7giy8Nvna8kz18lD1rCyEkF9cmNnV
      6RjsXFK7JD5dVX1dks1yFy/a9lad7k4IOXfl5mDkNWz7t4st2akp79f+rP7xx9u+8x2D5W5q
      +kh4xGq0VjVtgapnpQkluP91curpTyzZmZIkREfRVEVl5MzISN2WLQa7vfKt+Vw5fcH+xrcb
      Nn8c3XfjgVLvnfA++aT7j/+4+YtfXHrn6+Ovf7z744YqD8qgVZ5WluePjT28vrG7ackfXhKQ
      zcBZRe2L9KlT1p07q/ouISR26meD7/0X64Ofw8FvLjTG33479NwPPN/+dv2jv0kjjGQir468
      enL25IuPvVjVJ0DVs6JMh9mjt4I/+Ur+3kI2jpRXuaOZSBJ3/kLT1/9DFTE9XArvPdcwfkT/
      +X9A7wPQ6YkkRX/+8/hPXu58/geW9XdrhOXE3C9Hf/nKrVc2uzc/f+j5lvqqq/5S9awgL56c
      PLihaV1Lvl8nHkTzduXHYImxmOD3mxVGZRAC3zX5X74RlZoavvQzvaMFCzvnzz3Hvnu880cv
      mPv6APAif8p76sXhF51m57O/8+xA04C+ylq7C1D1rBS+aPr4aOjlryzb1IyOob4Kkzlz+bJp
      w3qjEqNHEnH+J+kj3zvZ9Cf7v/A1o8OGBX/gs8/yM96ef/w/TEsLIeTM7JkXLr+QFtPf2vOt
      vR171elmgf8PypHLeqryZbYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2deZRcV53ff2/fal+6uqq7ulvdrZbUsiTbEvKw
      GGxjDGaMTWIIw4zhJCRzZiaHkJkcTiDDDOATwoRxEpiBQ46Hc4iZhMWs3oVtkGzZlmRrb7Wk
      XqTet9r3qrfde/NHlVSy1C2rVb1K9/OHjn5Vr979vdffd+/v3eV3GUIIUCjXC7vaDlDWN1RA
      lIagArp+ZqcnS2X9opnNZi87oJjL2nhlfVpx+NV2YK2Tmxt5+fVTDGexxC5bikO0MEK+yIax
      oQFZESRJC3D5cV174P77Rs4Npgq2xOq5RBxJbo9bCwQCimZ2tTet9kUsI1RA74CkOgr53K3v
      uk0Am5fcyCoTZDvdXp4hDlXiWRaVCzt9TYIgyorqwYamuThsFVkfzxhNPicWHat9BcsLQ9/C
      rg7B2DAtSRIZhrn6kRhjlmUBACMEDIsQ4jiWYdl3+Nk6pyagcrl8LUoyTVMUxeX3irJuqDVh
      qqpe4w80TVs2ZyjrD/oWRmkIKiBKQ1ABURqCCojSEFRAlIa4SkciGeg7VkG8bmOZFP3t29pC
      npXzi7JOuIqAGI/PO3d+mucYk1izsaTfIZzNlioFc+W8o6x5riIglEzmNnZ3FsqmRCrelqim
      SV2YSIqyct5R1jyLG8oolUq0I5FyKTSIpjTE4kbjp6ambNteJlco6xHahFEaYnECmhp7jSGX
      z7u7UeGQyNkyZ8ucJXFIZAht7udhcU1YeZax8zf2/JZLsQAsgMJqu7GmuVmbMEuH4RegnFht
      P9Y9i6uB+vJH8sXMMrmyYrgsdNvM9GGvUI6GV9uXdc/iaqB8Ma+o8vJ5sxKUkuzAs8zmB5Hm
      X21XbgQWVwNxDCew63ZKKyGQPg8je2Hbp0F20ZB4SVjkqozCLJTXbT+QnofUEOz4ExBviDBu
      bbC4JuzoYKxkr+uVQDfPK+QKcbO+hVGWCBoJUBqCCojSENciIPTK878+PjS17L5Q1iHXFBEL
      Ak8ILpVK5XK5UqksYfHvuF54WVmSZd2iKFqWtVqlN8KS3PxrCqJNQ+cEiWMZGkRTLuOaaiBR
      Wue9z5RlgwbRlIagAqI0BBUQpSGogCgNQQVEaQgqIEpDUAFRGmJxArIsC+MbPfMxZTEsbnLP
      kSNHZmdnXS5Xd3f35s2bOY5bJrco64VFzweSZblQKJw8eTIWi917770+n2/5nKOsfa5/Qlk8
      Ht+3b180Gt29ezfPr+tpipTrp6EZiRjjI0eODA4O3n///YFAYBnco6x1lmBKayqVKpVKbW1t
      S+oYZX1wNQFZpslyHEKYAcLxAkunc1Cu4Go5EseGT/YNzkmyKJOSp3Pn7ZuiK+cXZZ2wYD/Q
      +NjI2Hgs2trE8gLPcYLAG4axkp5R1gV0WQ+lIehQBqUhqIAoDUEFRGkIKiBKQ1ABURqCCojS
      EFRAlIagAqI0BBUQpSGogCgNUReQZVmrni+Csu6oCygbn379wKF8me4nR1kEdQEZlfLs+FCy
      SAVEWQR1ATncTsIqbkVYRW8o6476hLJSodTe1SVw9axV5XwqW7JyhbJIyr5It9dJswRRLqcu
      IFWRZ6aHN/duq5q5bObEG3tjyB32ygKxErq0rTuySk5S1i51ARGC08mYbuELJunZusNdsE3T
      lknR3xLSNK1UKq2Sn5RlxJgqFF6dJBbm/YoYdYotDs4jscI1rRqtC0jXjWgkZNioanq8Po/X
      R3ezubGxM5XCq1MEYde97bxHstO6OVkovjFt5w2GZ3mPLEQcYquDc4qsNP/0+fqnkurgOV7i
      6WrlGx+CMC7bhTemrdmi6+42sd1Vzdgqhh1i2FE9Buu2laxYM8XiG9N2RicGZjgWRIYROYYB
      VhHEVqfY7qwLiGeZ8yOjvXfc1ZBnhBATEURYkWP4d+jmJpigoonyhtCksSIV7tJDMCE2JjbG
      ZQsVTDtZseNlO28QA7GKoN7W5L6vg2HnT/bLyrzU6pRanW87G8bExkAAZQxzqlB8fbouoEI2
      7Q2FWVhcZzQhBOUM/VzGTuooZ+CCycgcAEMQAmA4h8j7Zd6nsBrPKDwr86zEAxBjLG+M5qy5
      EucUObeUmxgVmjX1tiYx4mC4dTO6gi2EMroxljenCgBQ9ZxVeWABlxGxEDYQMRAxEOcRhSZN
      aHEIIY1zCMt0jYQQYmGUM8zpojlVQBmdmAhElmFZziVW/xbqzhDnkTj5ejprGJZhWA54DgA4
      RRAjDri0CeNFJRyJKOK1rnLHBjLOZ0rH4sCCssmnbPXzPplVhIuKxhZCOQPlDDtRsdM6Nmyi
      2yhvMTwjRp3azpDQpFZvJUHYmiuV+5L530+ILQ7HeyKctoZ2JavWlHZGxwWLGDYqW7hk26kK
      MRHnluRuj/P9rQzHEAMDADYREMKIHKvwjMyxAgcsg4umlayYU4Xy8TgqmHKnR31XiHdK85SF
      MLDMolKAE0Jwxa6cSelDaWJj3iUJrU51R1AIqqy87DkL6st6ZkYGzp4b6b79A+2BBRfulIol
      mRHMyYIxkjOnC3KPV93RxHuWrH+IIFwZTJePxISI5nh3C6etZq8mIQQVzMrpZOVMitMEPqiy
      Ms86BFYTWJHj/fL1qZwgrJ/Plg7Nsg7B+YEo75OBACqaxmjOOJexcwaDgfPKQrPKB1U+qPBO
      Cbh5JEUIITY2xnKVviQqmvImn7otuPJ3rC6g82eOHzs9eu9HH/AufF9mnz0rFIgYdkg9XjHi
      WKaNCqq3uHhgWmxxOt7bwqkrcVMIIYAJsTAqmnZKt5MVYzTH8IzSG5B7vEv+KBNCjJFc6egc
      YILLFquJ0ga31OXmfQoggoqmFStZMyUrUcGGBRiEgCKEHUJYwxXbTpSteNlO68CA0KRpO5v4
      gLpam0bUBaQnRk6npVu7w9zCLfRKLiwkCJdPJUtH5qQOt7a7mXOKjdwjQggmwF0RMNaqmf6k
      MZIlmDAMw3kk3i3zQVnscHPLP7CDyhYrcVePirBpW/GKNVeyE2VW5vmQKgQUzieza+CVuS6g
      8ZHhkm61bdjoWPiuHY0ltwd9ArtycS5B2BjLFQ/OshrvvLOV9yuLlREm5HxJ/8lMqi9fep/f
      9RdtTTLHEUJQ0az0J43hLCNxyha/vMm7UFcH5SrUBZSJT58dPN9z6x2B+YK7Kv/v/NSLef0P
      mzwPhbzKysrfGM3l908yPMuqPHNJ0SzPMg6eVXhG4DiHIEZdjMBWRWYg/HQs/XwsG1WlR8K+
      TU71xXh2z+Dc32CVjOQ5lVd6/fImH9VNI9QFFJ8aPTc6seGWd4W96kJHl0olXpb3JHI/mUm9
      2+v4t61BJ8+tZOuLiiaxMbHQxU9wGWETEcPGBkJp3ZwoMCKrbA2cCPD/O5X+cMD9cb9byppW
      rGzFytZskdWE4Yj8YxV9eXNri7rgo0K5RuoCGjrTV7Gge3OvtvATeTEGQoT8PpH7xVw6KPJ/
      3haKKg0FKNfOlXMmLyuXEDKVKv3o98P/ushBxRYdAsuyfFDhAwofVKU2V7WXYahY+fuR2Q/5
      Xf8q4l/dPcvWO3UBJabH+s8Mbtp1Z+SqNdBlQfSRbPGJqURUFr/YGbkyRF1ahouVRwcnNY5l
      AQgABigAbNWUW13qTqcaUkQA+Nl08sVE7m83tnQ7lKufzcL42yOzWRs9urFVWD+9l2uNuoCS
      E0O/3X9453vv2bJhwSHUed/CCCE/nU4OlY2vbmxhl+1pzprWX54Zf7Qn2qbUexksTMbKel+h
      fKJQma0YBibv97s+Fw3y1xbmE0L2p/LfHY99t7c9rNzUzVnGtDHGPklYbH1cF9Ds+PDwyDhx
      NH/gXbcsdPRCr/GYkG+em+5UpD9uDS6q+GvEwvizJ0f+S2d4u3vBTgRCCAG4DgXPVIwvnB3/
      fLSpR5WnLFu3UcFGU6bdLHBOntMEvlXgNZ4jhJQRjtmojJCNyW6PQ73qawQhZKBQeTaRHS5W
      iph0K2JEkXpUqV2RIpKgCksfuSdNa7ikpw1rzLCypp0xrTZV+oDPtdWpXP2Jejme+dF0qlUW
      EoYlc1y3Jr/Lpd7+ThdYpS6gufHh4anktltv92i1Z3H03FnCyvmyIZGyv3VTk1e7Sj8QwuS/
      Dk/d5tIeCi9x5mhMyKNDUzvd2sdC3mWKV0yE/2FsroSwxnNhgXMJvMJxBkIlG01bds6yixYS
      WEbmOJ5jW3iOY5jfpfOfaw3eFXBfdipCyECx8mw8258vd6rS/QH37V4HIpAxzHMVc1Y3z5T1
      hG7pCBGGaZfFDlU2CCkhbGJsIFS0kcyyPMvIHMcyjMSxXZLQrIhdsuQS+YUuHxPyq5nUM/Hs
      u72OFll08lynLHgEYbCk703nz5V0l8h/xO9+n9ehvV24adP61rkZB899sTOsXHhIzpUqpwqV
      NzIFnmE+GHDf63c5FpZ7XUCDJw7uO3Tyow8/0hZ0AMDMzGTfscMmUf1ejSc2cUe3dYUB4Cod
      iRbGf9o/+uetwT/wuS69tpJlyxx33XHGP0/GMzb6Qkfzmop2s6b92OisTcjfdEWcAg8ANsbP
      xzLPJbLNovCJsK/XqV6lwwwTYmCc0q2zFQMAPBzr4zmVYxWeMxDGhBRtZBIya6GcaY/qRly3
      RnTTxzI9TvXTEX/LJQ3uTMX45rnpTQ7lz9pC4nw3GRMyVjZeSxdeSeclBm53O+7yObsdyluZ
      wj+Ox/5TR/NOzzyDCoSQrGW/lMy9ksoLDNPlUEICHxR4jedUnutWxGolWhdQIZM4PTC8aftO
      ryYBgGmaY8NnCK+VDFshJV/bltBVa6AqOdP+q7Pjj7QEspY9UKxMVAwLg1fgsjbSMXGzDMMw
      HZr8hY7meS/1Sl6MZ15JFb6xKbrcEfp1UA2hfjmX/kTY358vHcwW7/K7PhX2O5eheaoWZ2Hy
      Vrb45FwaCHkg5L3L53w2lnkunv3PneEtzncezSCElGz0Vq70erowWKpEFemr3S3v2E4RQnKW
      faaoZ227ZKGsZU9adly3dITaFakuoKnhvuf3vfXxTz0Sci84OHotQxlZ0/o/U8k2RdzuUCKK
      pHK1bj1CCCIEE/h9MvdULPPYljbXfDcaEzJZNs4UK2/mShNl3SsKj/a0OtZAn/1CxHXz8cnE
      fX7nbR6HuCJ99ISQpGn9ei7zu1TuTo/zz9pD0uJrd0wI08DO34QQE5OpilEXUDoem5oeDXXe
      2qCArqXsV1L5xycT39/a7hPrwyYGwk/NpfckskFRuM2t7XapLaoks+yaarnWFA2KYEmo1wHx
      VDw1Fw90LPvqZoZh7g64m0X+i2cn/n5zW0ASMCEH04V/mozf43f90/bOlXmObwCWr9Pk2qkL
      yK4U2zb2Cu80D3Wp2OLSvtIV+Y+nx/60remnM6k2Rfzu1o55GzXKWqb+BxMkNZ3JBMIrl46+
      y6F8c3P0B5OJL3VFNqgSbarWI/X6RlOk0eGBXMVeyeLbVfkbm6KdmkzVs06pC0hVHG6fh44K
      URZFXS6cwHGYGDbdEpWyCC5J76LrsifoUWkYS1kEl9RAHGsZBsY0SRllEbwtxZ2syDTJHWVR
      1AWUSKYy2YJ2XWsWKTct9Yinc+NmzJ63bCTTZeqUa6Y+FkYwts2KTgSnsuDCQrrhHOUy6jXQ
      xPDp4bGJihD42D13rKJDlPVFXUAuj4sIrvftqs9nPbj3eUP02TZScMHfdfvm9tBqeEhZ09SD
      aF5UGLuCoBYAjY+NlE07GUvyLGZZrlAs0/x2lCup10CTk1MIGOXCorD2jk5NURSnK1+o8GA5
      fU2ywFENUS6jLqDWaFvZsDGqD2UEQmEA0FQaNVMWpN6E9Z/q43iB9iNSFkVdQJ0d7eViwURX
      OZhCuZxL5gM5nLwo8hydl0NZBHUBSbLsdLika0svTaFUqQsonUycOXUsmddX0RvKuuOS0XjD
      8AcCp8+cWUVvKOuOuoAEnhw9drI12raK3lDWHXUBsaL7vvvubvK6rnI0hXIZlwiIQZmCJQl0
      Uj1lEdTlUikVZ0YH6ZaXlEVRF5DH71ecPt9a2mNgsVjIWm0Xbjre1mA5nU5Yt5Oix3Pjf/Tc
      H31l/1dOxk5iTBcnrRD1wdQz/afzOnKp67IGKpvlx9587Hv3fA8T/IvBXzx+8vGHex6+s/VO
      kV+Xl7OOqE9pBULy2RQnuzVFAABd141KSZDVim5yxFJdXpHn1uaUVoTR117/2oNdD+5u2V39
      JFPJ/Hb0t9OF6S/e8cXV9e2G55LdekYHz41NIjV49x07zEph3+tHXEL5/KweCnpEoivhLbf2
      tFqWtQYF9ETfEyzDfnbbZ1fbkZuRSwdT1emZeDjUVMqlsxUc9Ls5lo+EQwwvCTzrci7X3jwN
      cmj60Pnc+Ue2PrLajtyk1GOgbCrta25u8ns1p6wBNPluv/Jo01zRl3wb2cPpYZ/iC6gBjp1n
      lHemMPPDUz/8zj3fYWlOqlWiLiCECbOW3sAGk4PfP/H9DldHUk9m9EyT2rQ9uH2Ld0tSTyb0
      RLqUnixPxoqxr77nq6q4YGp9ynJTF1AgFDo1NE5g9dupsln+8ekfj+RGvnTHlyLOCAAgjGKl
      2EBq4MDsAVmQQ0poc+tmp+QMKkFZWLL9EinXQV1A5WLR43HZq5pcAWF0ePbwj/p/9PCmhz+3
      43MXmy2O5SLOSFVMlDVFXUCGYaQzuVVJx0wImS3M7hndcyJ2osfX83cf+DuP7Fl5NyjXQV1A
      uXweI9tGK9eHSwhJlVMvjr14LHbMK3vvbb/3ka2PSPxNvenJuuOSNL+xWeBFcUWytBq2cWzu
      2HMjz2GM7267+xt3fkMR3mF3JsrahLlyC7er0EhPNCa4aBQH04PH4seOzh3d3bz7w50fjrpW
      LiksZTlYFgERQhBGOtJzldxMaWY8P342dTZeimui1unpvKP5jm2hbSxDe25uBBYnoB8c+cH2
      yPZdzbvm7darxjR7Rve8PvW6W3BjFjerzV7F2+3u7vH1hBwhKpobj8UJaDo5vWd6T3+if3d4
      92b/5m5PtyZqVVkMpYZ+NfyrmcLMJzd/8t2Rd9Nh8JuE62nCSmbp6NzRgczAaHbUtEyDGAIj
      eGTPZ7Z+ptPbuXy+UtYgSxAD2cjGBNMq5+ZkCbJC8xxNLX3zQqNaSkMsWHkUCoViLq25vdl8
      WSCGO9iiSrSmoVzO/JowK4U3Dh3e2dv20sv7A36HiE02bW3vpmOZlMuZpwmrzkhsafadHRjt
      3dTB8KogcMGAV5bpxAnK5azcUAblhoQG0ZSGoAKiNAQVEKUhqIAoDUEFRGkIKiBKQ1ABURqC
      CojSEGteQBit35RFNwOLHB899n/BLoOoQKALOt8P864KtU3QcyC5QGhsgQ7G0P8MnPw52DkQ
      vCC6gOOhOpWWMQEuqEryA+8ATgBRBsUPOz4OdGHQCrLIoYzYiGaXwDJg6hCM7IfoLrjlExDY
      AAwDGEFsEE4/DdN94PCAjcEugSMA/h5w+MA2wdRBL4JVAj3+tpO622HrvwR/B1yaICEzCXu/
      Bf4N8N7PgyABQoAswAhsEwDAzAFcWL9m24ARYBssEyYPwexJeOgfQKSLhFaIBsbCkA1jB6Dv
      V6BnIbgJ4kPgb4fND0DrbVCdYmZbUIxDegIyQ6BFQdRAlECQgH/7xtCFBPT9BvITcMvDsOWj
      IMhw4kno/zXc+7cQ2bG4qyEEBl6G/l/DQ99eTQ3ZFnAc3BwrCJZiMLWQgEIMmjZdroxFUclD
      /1Mw8CzwGrTdAXf8u+s/27n9cPJJeOAxkC5k7UAWTPfB4AvQ/UFo/wNoPBcMRjDfuhQAgMnj
      8MpjICqw699A+2640Wf6rrHReIzAtkBseN7I+dfhrR/Cg/8TLB3OPgvnX4XARth8P/T9DIpx
      eM/noW332xRgW6DnoJSF/DQUZqCUgcIouLsh0A2BbnCGgBfBNiA1CpNvwdRxyI1B70Ow67Nw
      2XTeyeNw4Pvw0P+CUgr6fg7jh6D3AbjlYVDdjV7RWmV+ASHLGBgeC3vFuTwqFssyKfrbt7YE
      3etpOsfoAXjxryG4FXo+BFs+Wq8JcnE4+gTMnYZtD4NVgvgZyM2AqYPmB2czaG5wd4PDB7IK
      xSzETkLyHJSLYOWBk8G/AdrfB8294GqC1/4RUqPwka+D6qudeeoEvPE9ePDboDhrn5gVOPMs
      nH4BWAxNvdBxJzRtAs23BFXgmmEeAZVy6ZyOzg8PFmfPp9lAR7OLxzZxR7d1hQFg3QgIABAC
      boGGppKDU78EOQDBbvB1gnRdAdP5/XDwcfjgX0N46zzquRSjDHP9MHUUZo6BngfJB7IGsgaO
      NnB6IXQreCPAS3AxiSAhYJYhOQZzJ2DrgyDPd861wYJN2MzMTNCjxbPlbL4sQdnXstHnlNdT
      DbQyZCZg37eg7T1wfi88+J351XMZhIBRAVOHwjjoZSjGIdYP6XGwS+DvgubtkJ2A2VOAbWju
      BcUHiSF48H8sGHKtNmssBlqPlJJw/EnY+RlQGtunxrYgdQ6S4+AOQai33ot24AeATHjfv4c1
      meSUCmjNgxE8+2XYeBf0/uFqu3IFBNOVOmseloOPfA1++RcQ2AhNPavtDQAhAAQKCTjzDJzb
      T2ugdUJ2Gp76D/CpJxptKK8DQmCmHwaeAb0IpSxUZoH3A8/Ctoeh5x4qoPXDxDE48F247dM1
      0zKBENh41xK8oxECs2eAAWjuvTzSysdh73/HLM/e+glwtoHqBlG+9BgqoHXFxBGIDdX+L8hg
      FmDgebjvUWjecv3nnDwJr30bVB+wANkp6H0Qbvk4yA5ANrz1BAy9CHd9Cdp3LfRrKqD1DUlP
      wPNfZnZ8Erb/i0X/uCYdL7z/r8AbBYYBowJnnoX+X4OzCbKz0Psx2PUnV+9BoAJa/1gG/O6/
      AcPAfV+9pu4iy4TBl+D08yDJcOdfgq/t8maLEEiNgOIH7Z2TLVMB3RAQAqeegpM/ge1/DO4w
      BLeA6pxnOkB2Bg4/AZOHcc+H2NsfAcXZeN8SFdANRCEBI69B+jxkJiE3DnLowrQ7BoABgkEW
      4bbPQPsuYJes+4YK6AaFkLfNBmZYYKr/LnF3Nu1IvEFhmMunmiwPN868AsqqQAVEaQgqIEpD
      zN9M2ka57+yIwpmYkbJFXSZFf8f2jrB3hZ2jrH3mEVAply6YUCll4+nZgiGFm302QbFkOui6
      weeHU66DBV/jE4mEUcoJqitf1EWieyMdLkWkr/GUy6D9QJSGoEE0pSGogCgNQQVEaQgqIEpD
      UAFRGoIKiNIQVECUhqACojQEFRClIWpjYeVy+Vq6pA3DqP4HY8yyrGVZgiAsh2nbNsdxDMNU
      TYQQy7KXmgzDsCxbNTHGhBCO46omIQRjfKmJEOJ5vmoCQLWsJTevdOOycm3bXgE3lsOsaoNh
      mCtN7utf/zoACIIgXgMMw6iyDAxkcwWf18MwjKooQEixVPK43QzDqIpsmLbD6RBFEQBURbFt
      W9d1d/VbVbH0ckG3vB4Pw4CqKMjSC2XT63GzLCvLcqVcNC1b1ZwCz0mSZBkVQZQYTpBEQRRF
      jmUrlbLD6eI5ThAEQeBN09I0B89zPM9zLFvI5xxujyjwPM9zHKeXi7LmkkSB4ziEkMPhEEVR
      EASWZTkGdF2XNYciSwAgClwymfZ4fbIkAUBqbvLUmQFOdjYH/QCQTcwMDJ1nRC0U9AFAem7i
      SN8AL4rhUBMA5DKx48dPOv1hr8vB8/zQqaNvHTvpb476PU6O41LJ+Nm+47wjEPS5GYaZmZ4e
      P3cWSe6Q38swzHD/8SLiQ8FAtdy5yZG+U2cYyRkJBQAgHZs6cOiw6g5Uy83GZ/pOnwVBDYcC
      AFBIx04PDmNODjcFACCXmHnzWD8nipHmEACUMrGjJ07pmG9raQaAYmrm4MGDKUPY2NECAJlM
      OjkzPpEsdba1AICeTw6PTsTSxQ3trQCQT06fHZmJRMKaqgAAquQPvnk4WTC6N7QBAGNX9r/6
      akZnujtaYbFNmCzLYOaf/MmP9+1/I6cjWZYB6c/88qe/eeq5TAXJsgxW5fcvv7Tvlf3FiiXL
      MhD7Fz/6wc9/8fOZXNXEL73wzG+f/tVU1qhuX/fyC8/s2/P0eNqQJIlhmFNHDpwbnzIsJIoi
      y7JvHXrj6Sf/eWAiKQgCx3H7Xnq+/9jhgYmEIAg8z7+574XvPf7DeKbA87wgCIdefXHv3r2n
      hic5jhME4c3X9z791FP9Q+Msy4qieOKtN/bu3Tc+k2AYRpKkQ6+9/JOf/ezoyYHqRR09uP+V
      V/e9efxM1WQInp2dIwxTNd1ODQStNRysmiwvRZs8iUyxaoqytqGthRColruhq6tiQUuTt1pu
      MR0rmoRhmGq5PK6cGhoXBYFhGFmWvU2RSmp6cjZRKxdwMpliWa5qYtskLE8wrpXLsYQQlmNr
      XrndoUh7Z1u4anKCtOu2WzKZQu1ULL/rjve4FL5qBiPt4YC3c0NH1VR4MpNHTW61dgmSnIjH
      ZEWuFSRqmztbR0bHL5bL84Ig1E4FQATF7XdrtW8XJSAAAEFpi0bdLofEswAALOf1+b1+v8Qz
      AACc4HFqlmmQ6poShu3a3BsKNTuk6nolxuf1BSPRCyZEws0GI3vVWkvKCuK5U8dzFatqBgN+
      2d0UDtRWg0daIumCHvTURnP9za1t4SB7IdtXc0tUlOTmQG0pU6gpiFkxFKzNYQoEg8VSkbuQ
      b6o12uH3ecPhUNVsCjXxghxpbqqac7PTgsjPzNayyQ4NDkyPDx843Fc1k7OTp4fOV/Raa55O
      TB85ejyVK1XNI2+9KRH9xOBE1YzH48V8JpHOVc3JyUm3U5mZS1bN6bGhkcmpmVjNTMRivMjN
      xRO1guJxs1Kamq2Zej41m8wRXIs0EjPjh95889zYdNW0K9k9v9vv9tRy6SGz+Junni6btYPT
      s2MnhmfSidnafSZodHiwoNtVE9v6bCyFEaqaqkCefu63hlX7FggeHZ/gLmZVI3h8fDRfKNdO
      BYuG4TheUVksiagAAAEkSURBVOQL0/sZRXP6vW4GGAAAhpVlied59sLkf0mUPG73RdPhcsuS
      yF78MSfuuGWzjWrX2dTU/N67Puh31nIkYoyjbdGLB2OM29rb8IU7aNt2b+8W+8Jl27bdvmFD
      9XkFAEJgx45tF28Kz7GtrVFko4uXsXHTFkC1e8QwXHd3F5Dat+GWqChIrZGavEKRVlmUWlua
      a05GWmRRao3UTIfikB2ekK+2QL01GpU0V7O/9odsaY2KshYO+i5+K4hKpDlw8VtBkFvCNeFG
      WqOiIF8st7mlVRSllgum7PK3R5ouPjCSw7uhNXTx7yqq7s62CMfVTF5ydHe0XjRZUd3Y2Xbx
      YIaXero31E1O6unecPHpAlbs2dh50WRYvmdj19vNbp6v/fb/AyJBoe2CMiyuAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='121' name='Sheet 9' width='192'>
      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
      AUJEMECIyP8Dk9T+A4N7neIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='COST-comparison' width='192'>
      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
      KD1W+7kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 25' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      cAn5/25x5z92pj8RAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 19' width='191'>
      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
      B3xX3n7+/wGG8bwwtHaADAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 36' width='192'>
      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
    </thumbnail>
    <thumbnail height='61' name='Sheet 67' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA9CAIAAAB0svGXAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAADMElEQVR4nO3dS0hUYRjG8dfOUChY1JS30SZXTjNmF3ARSBFC
      GyFoMeGERiBlMqRYRIJWgkMILiTCaNGVamOrKBdDFC1cFVqG6QxeK8WURtPMYYZz/FpEzuVU
      UC90zifPbzdnNs8Hf8/xMmCKEIIA/tUaoweA3BAQsCAgYEFAwIKAgAUBAQsCAhaL0QP+TiAQ
      MHoCJJAsICJyOBxGT4AYPMKARb470LaGLqMnQAzuQMCCgIAFAQELAgIWBAQsCAhYEBCwICBg
      QUDAgoCABQEBCwICFgQELPL9NX68tczoCRCDOxCwyHcHwqdaTUW+gKT+SGsgEJB6P+mOgEcY
      sCAgYEFAwIKAgAUB/VeyfwdNuiMgIGBBQMCCgIBFvl8k/jDZ1dz4YGBJtaRl7/f6qovTjR6U
      pPfa0dYXKhER2T3tbYdt+sEmPkI0ePfshfljnbXFRBTuvXmu3T8ToXXrC92XGg/lKfHLSUhl
      cHBQCCFE/43jNXcCqoi8u1XjPv9oyuBZOh8e1ns6euIu6Aeb9QiRqe6OOo/b7b7yUgghxKy/
      2e17tiDUL36f29PRk7RczkfYp5Ghbw5ngUJrnYUOWvi6aPSgJOGx4YmtuTmxC/rBZj3C5NPO
      /p0N3pKVC2PDQbuzIJ2UDS6nXV1YDCcul/MRpmla3KvPoTnDlvza6FCQQhO+yvszlFFy4qJ3
      n36wWY9gK6utJnrVs3JBU9W4t0OhWY3il8sZUCKLRTF6QhJX1e3OKiIibfpx8+mrftephLf1
      g813hN9QFCWhH0l/CttktdLyypewLTvT0DV/oGRmbaGR8ff6wdIcYaN1s6Yt/3yVk52VuFzO
      gFJdRQV9r99GKRocGLLk5WYZPShRuLutsvX5vEYUHR/9aNldtF0/2ORHiMnfsWuu7820ps0H
      g5P2vJyk5ZI+wqwHykubWiuORCxpzvKWPSa7/6fuPXlm+HJd5fUlSss/2NBUkkqkG2zuI8Qo
      RWUVT1rqPffUdRmltV4bJZ4lRUj1z1ZWwQeyVhk5H2FgGggIWBAQsCAgYEFAwIKAgAUBAQsC
      AhYEBCwICFgQELAgIGBBQMCCgIAFAQHLd6UOJ802MGrQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 47' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 7' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='WaterHeating' width='192'>
      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
    </thumbnail>
    <thumbnail height='61' name='Sheet 45' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA9CAIAAAB0svGXAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAADbklEQVR4nO3cXUhTYRzH8cfOELwQqQX50lCJcMwXSojqSqWI
      QghG9KTiwPAlCNEsxV6kTCFMYYUxKHIpJBjTWCVCCepFFy0Ea9pkQythLSyac85lmEe78GUa
      3dS/7Xjg97mReYTzg315pmwYtrS0xAD+1RapB4C8ISAgQUBAgoCABAEBCQICEgQEJAqpB/wd
      u90u9QTYQGYBMcbUarXUEyAAL2FAIr8TKOFij9QTIAAnEJAgICBBQECCgIAEAQEJAgISBAQk
      CAhIEBCQICAgQUBAgoCABAEBifzejZ9oyJZ6AgTgBAIS+Z1A+FTrpiK/gDbhR1rtdvtmWxWy
      SXgJAxIEBCQICEgQEJCE4R9MAQVOICBBQECCgIBEngG5emoL8jjneQXl9wZ9jLnMVbzK7GKM
      MSZ6Lc3Fxc0WrxiEG4ve/oa81TvNDRlLdZxzriuqe+YUQzhjhW+47UqRjnOuK200O3ySTJJl
      QLbnXV+zrnWY2msyfvY9HpgMXBG9FkOlkZXoyw5ECf/5rqJ31Hyj8u7Qwspjz8vuFzGnjaaO
      +7rEd4+6rRt+NHgzAmymW7a0GqPJ1F6fOdXZYLJJMUmOAU2+H/OrNUkCC9ekqNmMb3bl+4te
      i6G6TVGiL9sXGYTbWrufsBMVPH718cdxR7wmKZIJUcma+IWZ2bnQzAhILmxtOpUQzlh4wsH9
      cX7/dykmye+9MMZEcf0Z/M3tYYwx5n9tqPzwWV1uCNbTlp5/OZ25zIEZCwvrrrrdU2xXKGb8
      ic8xOp15LIWJr0I+SY4n0EYKxfKJPP1j99na45MGfa9bihmCINWM+Ymum/2aq2fSI6SYJMeA
      timVbHHtFIqL2bH8NePoXo227OTcwyazM4i/ua7Zqtwuiourj2JjoqWY4Rs2Xrrj5dValSDN
      JDkGFJGclmR9MzzP5h2jYwrVzujAJUGlrdJFdNa12YL/3CWm7vFY334RRa/D4YpXxa67FJoZ
      orO3vvap6lxjYVqkZJPkGBBTZuUcGtfn8/zrA8ocbfrGPyqUR85XpFpuGwZ9QV4hpGXnR/RU
      5OYWt37K4IfjftsY9BmevgctI86Rlgu5nHPOefOgFJPwXhiQyPIEgs0DAQEJAgISBAQkCAhI
      EBCQICAgQUBAgoCABAEBCQICEgQEJAgISBAQkCAgIPkFcd2X8ZbC+5gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Electric base costs' width='191'>
      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
    </thumbnail>
    <thumbnail height='61' name='Sheet 51' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA9CAIAAAB0svGXAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAADDUlEQVR4nO3cX0hTYRzG8Z9tCF5E0C4qbLSbcEwTGkR1pRJE
      EQQjejNREEyDiJk1sT9SKyFMYcViUKAlJATTWBFCCOrtYlCoTDa0EGwhkelprcI6rost12oq
      9bs4543ncyOcc/PgvrxnsmFeMpkkgH+1TusBIDcEBCwICFgQELAgIGBBQMCCgIDFqPWAvxOJ
      RLSeAFkkC4iIrFar1hMgA48wYJHvBLKcH9B6AmTgBAIWBAQsCAhYEBCwICBgQUDAgoCABQEB
      CwICFgQELAgIWBAQsCAgYJHv0/jp9kNaT4AMnEDAIt8JhG+16op8AUn6ldZIJPJfLscjDFgQ
      ELAgIGBBQMCSh38wBRw4gYAFAQELAgIWOQOKDbhrq4QQVbWNd0NxoligWTQHYkREpCpBb329
      N6ioGo8kVRlur0rP0ufCHOJjPZdO1Aghak53BKJr/26lDCj8rP9dxZWH/t7Wsm9Dj0ZmM3dU
      JehzdVODx7lng0G7gUSqMhG47rrz4vufN3SyMLew/2a4tLXb7+9tK//Q1+4PZ27lXi5jQLOv
      JhNWW5GB8m0lVvoY/5S+vqQEfS09xgaPc9d6TQcS0ejTx3SkSWzLvqqnhbkV193vPGbJJ8q3
      7N1dmEh8Tl9fcbl8n4URqeqvZ//7uXkiIko897lev7U2+nTx2tirL9opFsi6pq+Fa4lHJxbK
      D5YQvVl1uYwnUDajMXWeLnzdfsp9eNbnGZzTeNFK9L9w2eJ0/41h2+WT9gIiWnW5jAFtNJlo
      afkUKtyyKfWz7MBOm8N59MuDzsCMHt+eSrAwJT7WfeG2Iloc5p9vdVZZLmNABcWlRaMvxxZp
      MToxaTRv3Zy5ZTA7mmsK+q71hPX6Aul8oToz2OZ+Yj7TUVf6+9Mq93IZAyJTReW+KU+1qL46
      Yqp02LP/mDHtP9u0I3jLF4prtG5NOl44P3Sva3xmvOvccSGEEMIbyrqdYzk+CwMWKU8g0A8E
      BCwICFgQELAgIGBBQMCCgIAFAQELAgIWBAQsCAhYEBCwICBgQUDAgoCA5QcwxzSsqfTQtgAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 53' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 54' width='191'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DB-economics-of-gas-elec' width='192'>
      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
      gpcj3FpDE94AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DB-Break-even-with-elec' width='192'>
      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
    </thumbnail>
    <thumbnail height='61' name='Sheet 59' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA9CAIAAAB0svGXAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAADbklEQVR4nO3cXUhTcRzG8Z9tCF6I1IJ8aahEOOYLNYjqSqWI
      Qggk+qfiwPAlCNEsxV6kTCFMwcIYFLkUEoxprBKhBPWiixaCpTbZ0EqwhUW+zGmGebQLtbmg
      C/vBzk48nxuZx4sH9uV/lDMMWllZIYB/tUXuAaBsCAhYEBCwICBgQUDAgoCABQEBi1ruAZvj
      cDjkngA+FBYQEel0OrkngBduYcCivBMo5mKn3BPACycQsCAgYEFAwIKAgAUBAQsCAhYEBCwI
      CFgQELAgIGBBQMCCgIAFAQGL8p7Gj9WkyT0BvHACAYvyTiB8qjWgKC8gBX2k1eFw/PdrcQsD
      FgQELAgIWBAQsAThH0wBB04gYEFAwIKAgEWZAbk6K3OyhBBZOcX3+jxELmuZKLO6iIhIctsa
      8vMbbG7Jj4Mkd09N1vqChX5zoVEIIYx5Vc/GpQCY5+UZbL6SZxRCGAtrrU4Pf60iA7I/b/+a
      eq3V0lKR/LP7ce+E94rktplKzVRQX3QgTOWnNZJ72Hqj9G7/0trr6ZcdLyJOmy2t942x7x51
      DPj8qP/n+bBbbtmTKswWS0t1ylRbjcXOXqvEgCbej8zr9HEqCtYn6GjWM7f2/WW3zVTerC6o
      L9oX6sc5Ax1P6ESJiF5//XHUGa2PCyVVWLw+eml2bkHeeT7ic5vqTsUEEwXHHNwfNT//nb1W
      ec/CiCRp44H6bXKaiIjmX5tKP3zWFZv8/fYYsi8byGX1zlta2nB1cnKKdsk57y88zuGZlGMJ
      JL3irVXiCeRLrV49Xmd+7D5beXzCVN81KfMiHypVAM5bHGu/2aO/esYQ8seFza9VYkDbNBpa
      /n0KRUXsWP2afHSvPr3o5MLDOuu4PL+hrtqq2S5Jy+uvIiPCiSiA5pFn0HzpjluUp2tVxF+r
      xIBC4pPiBt4MLtKic3hErd0Z7r2k0qaXGUPaqprt8r1HsYl7pgfefpEkt9PpitZGbrgk+zxp
      vKu68qn2XG1u0tq9ibtWiQGRJjXj0Gh9tsi+3qvJSDf4/oWgOXK+JNF229TnkWmdKiktO6Sz
      JDMzv+lTsjgc5XtV1nnT3Q8ah8aHGi9kCiGEEA197LV4FgYsijyBIHAgIGBBQMCCgIAFAQEL
      AgIWBAQsCAhYEBCwICBgQUDAgoCABQEBCwICFgQELL8AUaKX8WJzGCMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Conserve:Costs' width='192'>
      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
      7xmirKrq/AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='DB:Conserve-savings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 60' width='191'>
      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
      LdHb9bVvvHj8/IUL6UKxubE+f1C5ulWZnJp5DPWsLf78wvX2u2/+9C/+p//5wg/+qh+R3Ur7
      +MK4tMftXBD3+8irxdKJoxiDEjEa+X4inRH8EXdtejhG6tmXdCYthJNC8bX60vj0NDbUpKnu
      NHZ010wXppGkBEuDSRpGRNV0Q024MJWbQpSysFrtuMlEQkFoYnomhf2judlefefMmWPb282F
      46cnsm6PQSb1OI3BxNzUGz++kZso1etdxUyQyDs+V7i23sil2cHCmKWCwLptuYYldV2VSOE0
      sAyDf+YtSPdkFDU/EDEYhI7zBEZKIn8gVfOB6XPuHzVLQTvdsFGvEExsR8ea06rXx4vpbohu
      t5ddVfvSwTO/1NXH9/I0qOfXZKbi+u7yTGbcMfbVcdvvKZgkjEd7XqvX6/mPjNiPytPQcw1n
      KqLA6wcsYRu6rgNAGIa6rjdqVcV0EAuNRFoyappmr9NSzYSpq4IzyoSh753JSzBarTUz+YKu
      EgCQgtOYgxSabiB01xz4MTT0G61OJl+UjGKEVF3HCAEAo6EkBo8GQSzTH7nMoijSdT0KPEkM
      ELFhGGEQaObH2bb3bHtWWtsTuaKpEQApOOv3fctxGOciplhRGZcp3VIMy9D2nrQRLAIph3O9
      d3YOBEBYGQwGpbFCEDGCJFFUyritKxxIGARu0sX3bcaeBvUMuXHlko+M7u7GzJFj0cDbrDZ+
      59uvnX//A912jhyaurm01mx3vvObXxv0uqsfXk0UJqy40cLFF07M7Vmb19pe3vbIym2JVCOZ
      cpXoxuK6mUynbCU9drC9s3r63LnbF98dUDWdTZi6ReubNxr+Ky9lP3jjRxFFx84crVfrUkCv
      un7s1T/avHppfGKmvLmkmsnKbrnZ7Xz7m6/evPTO9QpfOFQSXm9rYzd7eOGVs6fv3+fQ+mrY
      uXPL4kj2WuCzYbopIAQyuRJFyn7qobUVEQ0+/S5WBGWargdhPBj0jUQKOAuDMOIKjXzNtK37
      ZgF/etSTzma3b61bprF0/WrAVMs1V1fWEEYYk8Xr1+fPviz54sbq8vLScmF8ZrdcLloswN5+
      tSGATrORMeN6tyfbXRVTIaJ2a9BvdPTUBAi6eHOp06wFIW/UzOxEEXW8dDYLQtjJ3KRlri7f
      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
    </thumbnail>
    <thumbnail height='181' name='Filter-summary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 62' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MostAffordable' width='64'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cheapest' width='192'>
      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
    </thumbnail>
    <thumbnail height='141' name='Sheet 66' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Search' width='64'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of records' width='192'>
      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
      0elV9LoNzf8BfYq9xDvnmMsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 63' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO3deUAc150n8F9VdfV9300DTXPfhwCBkDh0X5Z8
      yIds2bHjOFEmGcceeyc7GW/GScYZz2btde6xnUS2fFuWZOu+0QUIkIRA3DTQNGc3Td93dVfV
      /iErcXbkMbTkSDD1+YuGhnpVfLvee/VevUJomgYGIy7o7S4AYx5j0sOIH5MeRvyY9DDix6SH
      ET8mPYz4MelhxI9JDyN+THoY8WPSw4gfkx5G/Jj0MOLHut0FmD9i9kv7PjnYOugOI8LEonVb
      7y/lO84d+mDCsPXJWgMAWK8cOmOBwooVuTpO0Hxhz77j7RYPcNXF67ZtqZI7r9Qf7pZv/ma1
      Fnym80cPnHPkbryrrjiRO3Hud3td1Y+szFMIMSADrtb3fvJRz/Vt1tSUlWj5Bw6fG/YDAADG
      1pTc+837yrV81NGxZ8fHrRMhkitPWbx889qlRuH1U4Gn6+A7+84PToevvUTRkm1P65o/8C15
      Mm3qaLN42UPaqStmWllSV6S+uUPCpGe2bBf27unhbNr+wxw5bt7/6tt/PC7/fqHPbXcpotfe
      EAv7PF4Ix2jCfOqNHS38Zff+w2MGfObCzjdeewueu08nxK2mCVe1lu2YcHjc0y6vy+EnE/0j
      /VP8VCWGX/vXU1QwHEHKn/rppgwAADabsDQciKmK7n14fUkSPzp9Yecfjp4tzL4vY/jDN5vl
      255/Kge19Zw+VP/pedV312fzr5WEDPsctHHDU2tLk+U4AADOE6DZz0RDrs5+pwPzOMaGenu4
      JYU3fUyY9MyW1+Ug5cWJUpFQyC185Kev0mjEZemhaYqMEQQBALEYSQEGEOi60BLLW333kjyN
      iAWy1U9uGXv5s7Pjzy7WalvHrZE84YwHkRgLYlRgxukJhcemDYZaHpeN/HlLCIpzeDweAACK
      AgAgOEcgEkskAlpUUqg5ZnKTtMcxE5ZXGRUiMUtc+eAzFYBi2F8VF8E4XB6fx2MBoBgrPPjZ
      r970LX8mA8A3NHDRdrJxUB9Nz0woJC5+vP9MnwMzrti2fVMp2fC/f3RFXOowketfeHal9iuP
      CZOe2cpY/ciKnTt/9bOzCmNB0dLyxZkpXBrAO9G+5xffP4ABABUN8/I2VoB9ajwsyJWxcRxB
      AADj5WQZP2z1RUQqrabZYp5WuVGKW1aee3HA73L0TI5oU4pEXwxPyDl56LXvn8QAAFaurChW
      oHQ0EvB53O5odPpyh1WSJGWhmlWPb+1/83//zzOJWaUFZUXF2clKEfbFRqyj9e2XW97HEABY
      /J1fPyyiYjGSBgAQpWWWZQVnJPzSbKHp4ElnxqYffMPgOfL6gcNGQy1BkkNk5a9+uYj711n8
      Ekx6Zo2Xsu67L670jndfbKr/7LcnuKu3P5EPksRFD373+Y3pADB+4aNDJgDAMBaOojQgNABC
      A9AEEUVYuFAoUydIr3R103gYSdZnice6uoJDAyPqxHUSPGy3ukgKEA6bDXyFftPTrz6Qc22r
      /r4Tu3ymhg9N7Z8iEU8Az9j45JpMEQvFUlc//VKNb7SnobH+0B+bm5ZteWSZNhaKAs6XkCSA
      svJbT99TaVTgAEBT/v4b7JDbYfdaWjt7e86wEADQTXspikK1qYkCbFbZYdIza1GPdcpNCTXq
      hKIV92dkCX/7b90WX/6N3qlMSRddtVrs7kSxho9GvZMXu6yqNL2SJ3TLBc4LXZzM1OwEKZej
      4/i6+gbDxs1igfPCn/Y0z/iAXXzP04r//BfFuSs33nVPiWj4wIenp9kUQdGUzzpijyn0CcaS
      dRptsuDw4d6LDUTw0uVJ0JdvqhLPapcwFs5Pq962YvOSVJ7b6qAk2ui5ufXBmfTMkn/4/Kf7
      LdJlVXkKARZ2uIVp2QkiGLjBO3mZFTX6jxvPNiIuo4oVGmq4HF60uToFxcMiCc72ztjJmpUK
      FFhJKawTlwlliYTPS9vw3I82AACQPseZs0TYNtTRQQAAiJXc8PW/y5IXrN/s3vne2XqFfI3k
      8s53etPX3VUgRwj3ZISrKy5buSb7vi0AAOC8NPJf7QrGwjkQ9rpRgU5NtfW0t6JOuvdsn3r9
      40XU3A4K9pOf/GRuv/HfFE+TksgNjPf19g4MjczEEpfetypLQAUDAb4uJ1MnBIBoyBNmSfUJ
      erk6MdMo9g13tXf3j81gmaseWLdIhQOwMJqm2GxFRlF+ggAFLgu8pDIjPzVRzvtzTUGRIce4
      2+E0XxPBMYVKxWLLk5KT5AIWS5KUyJnqskD6smWFYv9wd3ffoNkawFOKly/LVeHX205kyOuh
      RClpyQoBBwUAoCnC5w4IU/I1eAjk6XlafsjlicmN+SVJvJmR/l6zT1m2dkWhjhNxOLGkknw9
      b3YHBWFmxTPixlxrZsSPSQ8jfkx6GPFj0sOIH5MeRvyY9DDix6SHET8mPYz4MelhxI8Z57qV
      qBhBRCkUx3EWhlDRUIgAnMvFyHA4hrC5bJQkIgT5+bV9BMPZbBxDaTIcJsi/XPFHMDaXi9+6
      TzVNRSNhgqQBEIzN4eAoFYtGoxTG5uAYQkYjxLWvWShQMSJCxCgaAFAMZ7NxhI4RRAxhsdk4
      QhIEESVRnMPGWQgZCUUoFpfLpOdW8nYfev29vpSHt25cZBTZz77ywruB9S++kNfys//TmPzY
      jx7U9n7427faQkIRF0dxsbFizabVFan05Tf+/b12F/B4GAKA8cQF9z7/7aXKW1UkKjR88Fe/
      PWwm2FyesfqxJ+81zrTs331wpmjbkxvzJWPn3/nT7tGC7zy1oUAT7ju3a/+p/nE/iXJU6eVr
      71ml813a9U6DaPk3vrlW3vHZex/uvyS765knN5bLet/5xzeHlv/oRSY9f1uKtOraJ79dq5vp
      Pvnux2frFQpZPgBA/kMvfm+Fjoff+g2GOo7u76HWvvCLKuv771xs7Z02qm70NmLs9BuvH0Xq
      nvzJcwWC8Gj9u2/sfovYdHdegjgyNm2bcUbHrS4/TYWnpvwBv29kNMpPzdKhTHpuudDM6HA/
      J8hzTQZI8sZvwTjKrKwsXeuF/nFXEgcA/NbBvl4nG0MwlkBjNMjYt6w0BMLiY1HHxCRS+MgP
      a4Rs1DtgBjLstVkGuhG+bdIZjAJAdKi1eRTL/e7KTCkbRdgJ5RuqO355unMkPVsj7HXZRgcJ
      q5erT0+YcU9YfSMBiw81GBNRjEnPLecyXTzvG+BjEftMJHaDuV7XcDgcHPfP+CIECgC2zjPH
      rBwUQTgCQ922W5keWdHajRXOhmM73u4tqakuzc9WAgDhnuxuPjHTzQrOjLpCcgDPtDUQU2l1
      OAYIAGA4Xy0TxZxRSq6RQvtkX5/fh0tK8xN7Lo6NjQ3MTMYSliXzMObcc+slLNmydeMio8h2
      8l9feDfwZe+iKIqmORw2C0MBIG31U19TzQU84/qnvpd+ubGhqXn/W0OO7zyaD8DTZlc+9OTG
      fMlI/R/+tHsUgCsQslGb30/RGhoAKDIaCEUQtkgmken4gabuLp7cUJ6cY/D39Q43dY67BVXp
      SgxDmR777UBToelpm4fSJGtFQs7XuSXK3n36+DmzpGT13ZsXCQN285j7Rm8TGvPTFZ6+sx3j
      IZImwx7L1Q4rpU1P1UskajnmnJgK8DQ6pSE9LUHoHBl04snpOjaGMD32v7HAzPDlk7sdkojL
      auOnlRUb5QITAExdObbPI2ShABhHkl6xuuAmb9P7i5jP0nTo1KB1QOw3gyF/UYYCpm7wNkXe
      ig3LDtY3HPlsXIORfutYOHvV2spUmXBarlJKqBmVRquWcyVYihpv7mEnGhI5OIowM1NvLZTF
      V+gMxiSVkIshGEesScvKNKhEfLk+IzNVJ+MLBGKpVMhi4XxFcn55eX6KWoCz2EK1UoLjOIvF
      YrFwNl+hT1Hxb1GBEJE6SSPlIhTKkxmKllQtylBwMK5EpTekJMj4LATDxZrk1HSDUqYxGBKV
      AojGgMWTGgorl1bkqDgIhrN5UrUuPbc4O0Ul5HB4QqEqObewMDtBgmMoMzOVET+m3cOIH5Me
      RvyY9DDix6SHEb8b99gdDofT6fwbF4Ux79y4z8V0xBizwfTYGfFj2j2M+DHpYcRv9uNc3tGr
      Zid1vZpj8aQarQLxTo47Qte+g7KEysREtZjDQhE6bB8xT3kiNIsr1SRrhbGZ8WH79eFmXKJN
      1inZEfv45IyfoDny5PRECQtBbrTRBYMmI0H7xFiArUlKlLEh5puedMf4cqVScOsmY/ztzT49
      wwdfeaVNm5efwAMAEKgyyxcl2Rs/+ridMhg0IlbYaQspK+57cHWeRojMXP30j+8NcpKk5Axl
      WLtlhXG67cyVKTrimhoZd8iXbH1ibabr0rFzw17KOznBW/L979+fKfradvFOQJNeW9/Rnbvt
      xpr7t643coPmlkPN3ozatauybtkc1NtgLmPsCJJY+8SzG3XXXzs7TwBPn1/14LYVWXzXxY9f
      +6C9a7I8XSUkexsaR9EN/+v7daH6k6YwLTLWPvRsTcTVe/bTfRe9eSU5ImfzxxfdeVsfWyEY
      2N9o84cAFnR66FjQPTVoZ6Um82wDo/6UTACAmHei59L5CTaiTM/P1ktYoYn29gFnBBWojfk5
      BtF8mP0wlzLS9EzXyX0xMQBwxKrM4uy/+hkAICwMQRAAVK5T472DrU2pFWX33KcWYABA+a39
      bVdH8ZTlRZm6UNOElwXB/gtnuZzEomV5N5xqu3DQRNAzMTilqVmdQXT39JrcaWkA4BodDAAl
      j9qaB/ycrRVo0579HWyDluW40unlPLF2PpyN55hwmqYoCgDo6x39yPRQy4k91suoZ2pCmFGU
      nyBmo8DKXPHgvbGmq+f3j3SbShcvra0wcHwTQ/2jfmlBTpZWhI3FYpTf5QpG2K7uU82DIP27
      5Yb5XP//1+hY0DUyMCUt3ZSmHLGZ2vpM00lcgDCurqhZX6nsf+vV1n6bwnViSPXAi48sQofb
      Lvrmw4kH5lpzKQtW3/vFmgsAwTlCET9m6+q20OX35ybJBCwEgK0pW3+vPqvvavv5s0eOkaq0
      bRneCcsEIctKTlRyAFg4C2Ups5atqpZqTc+/1TTgXW6Yz/X/f4mKEtPdjVfMAe+u93CPddyN
      0cO2dACuXCkXCoUalQIL+wMut5ufpJdyuFhO1ZrbXeTZutkeO1uWmFex6p77NpTrkaG27glP
      kARq5PSO/9jZGEksKMlPwAify0sEPW6b1c9XqhUyFgAoExJFWNTjj0XDRJQGHpd7K/blzkRH
      CVt/pzd77dqy7OyixeVFRmnAYpoKQnjaavN43JaxSVIglWjUau+waTocmL506L3PLk7Ncf3J
      22Nu7Z7RU2+8fJUDAMCWp5UUJV/7PoKLEwtXVg+ZP2081GRMWJMr02uDR47vePUymwxy8mrq
      ilSEYyRAgkgiEeIAAILUyjVljjOH3/p12BUpvvehgls1le7OQ1OE5XIHLHp09TIjD4COOhTs
      o5cGhyZ9LMTbduiDq2EfFKzJV6fhDyx7e98fXmnBANdU54vnxQWM2Y9UBKYGJjzU9Y8EyhZI
      ZRJ2xOOlRSq1lIdRIdekzRnlqRKVIhxCtvFJTyhGo7hAqtaoRBDyOhwuEKpUMj4GAEBGvE7b
      jDsUpbkyvV7FX7DXe2g65reNe7mJeum1TyoV9jm8gUgkStMUGY1FSeCrdBoJDyO9k6M2Xwzh
      CGRanZI3ywW3bytmnIsRP2akghE/Jj2M+DHpYcTvxn0umqaZ9hDjK904PbFYjPyy9R8YjOuY
      mosRPyY9jPgx6WHEj0kPI36zH+eytR1oscSuN6W5En1mthGd7mw3ewAAAMG4yrTConStkIMh
      lG+o9UL3VIDmiPVZi7IVkeGOC0PX7w/jJeQYOY7xqWnv9cfeyfNX1WbMg+ksN4EmAq7hq1cc
      /MzioiQBRKYHuycismSjUTGfh/hmf+6xtR3Y32iJ8a7hctisiH2kvanh6mQA5fG4xFTn6cOn
      u2y+KA3Rsea9n500+dDAUMOho2cGvRiby+PxuJRr5HJDQ+eoM4pxuFwej8cNmM4eOHp5hlyg
      g1x/Rkd90wNNx5qudHeM+wGAmDa1XekacYZud8Fuztzm98iyq9et+/Njup09w8CW6fMrVtRm
      CAJdxND7ncN2f6FeGrV0Dzhg/ZK1qzjGnmlELVclJK/LCtnaTloG9QXlBVkZmQoOCpSr8+Mr
      qL5yU22a4GvYtTsITYTck2afMjuD7zaZnZkFOABEZ/rPHbQ20EhSed3STDXH13/8eMt4EJWl
      lNQtLVB8rUuK3SJzmqFBTZx751f9HAAQqJLLV9Z+YZk90uvxEhRHyGWhCPCMeansvkv7d3Fr
      qpcWGyQ4AJDu8YHOPoc0a21OioyDAkDUcrH+sjN546N5inkylS5eVCToHh20G6rvMXjbu0wD
      0zl5AOCYnFGXpaXASOvxRpVmGXl8z0VfaV0OOnD58GmZ/v4S+e0u9leb0/8NkWVWrSqXAQCL
      K1SJwQoQHL96+F3rBT4aiaKaspoSvZSDAJpQ+ejfcZsbLlzY8/ZA5+K1W9bn8N3j5gErqV6c
      kabgogAAoeFLl8Z4uQ8VqXmwUKdnXEPFgs7BIZe+NksnGRnDR4cGJ9IkALQ0MTe/tEwnt/zi
      jHk6wXUxkPpUzZJMNMuQGhHNj5Px3GouvjY9L+8vNZcVgKNKLVixVGVrOnrZK9HrpAIOigBg
      osTcivUJqXmmc3s/aD2fXpSZF7SO2ylFYYJOcm2TxFh/r4OTuiZZwEIXdHaAikan2hsu9ToH
      /60djQT9oKxMmswCYAuEAi6HLRTwkVg0GgqF2Aoxl4VjakPG7S7ybN1snYFxhMqErMpikcex
      u7H+QlaKvDBBaNr783e70rY9t0UpQGMQA8ACXo99OihKV0jFn7fTp8cs/qg8Wc/FFnh4aCI6
      1jfAWvP3LyzTANDeoUutprHBMRwCYyOjMzP6gMkcE5UrkrhJjs728ZVSVsveDwcT739qZcqd
      fzVlLumhqMHdP/nefhQAgKPKra4rlQEAAIKwJRl1y0sG3q/ffzbDsLkko25TRufO3/9jI+DC
      lPK776rQxEbNYQwVikWC64ckGAxSMo2KveDPPBRhunRVUPl0rlqJAdBKQa5joqXbbHHxhYFL
      n7x+xk8Z1j5WrEjhPX7f8K9f/cdjmCJ92da7k+bFUbnx3MJoNPqfRklpiqS++FYEQRAEaPra
      FwhNUzRNA6AIAggARVPX/jCCoAiCXL+HB0HQz9s4127tQREEkAXd6qFpGmia/sKOf3H+wl8f
      FJqi6M8PLDovDsrs08Ng/P/u/LqVcedi0sOIH5MeRvxu3OdCUZSZmcr4Ssz9XIz4MTUXI35M
      ehjxY9LDiB+THkb85rTq5e6rROzzV0JNTlV1CTZ86kibDQAAUFyYXL567eIMOZ+FUI5Le3ed
      HnDTAmV21cZlycG2Y7taxz//VXFW7caazFjP2VOXhlwkO7Hs7i3Ljfx5cWU+fnTYNXnp5OEx
      SdWGNXkSCJpbTvcFEwpKSxLFt7toN2H25x7vaGenO6FuyzUbV1WkCX0z4+MuzLh4w5Yt91Yb
      yO7jxy9OOCMURHqPf3SiT1S6tlQ8dubw/u6wtrBuy5Yt960s1MZcTpLFiY1eOHC8k8xcuiKV
      aNj7QdONnnW4oFARj73vcvPkjK1zxAUAMd/06NikI0Dc7oLdnLnN0OCrjFlZf1l5zgGA8SWa
      pLSsLGEqPVh/sXXSEY4ZITw5Ygsii1MLli1Jyg2CSC4UsrOUPvPZVjupLakoyla5h70B2qg1
      GMMdEb+NWuBzC4GKBF2j5mjWomKho7d/qqBSAACRseaPftsUDKM5G7dtqTDwnc1/+sP+Pi+m
      LVy97f46Pe92F3oW5tLuoamBXT/evn379u3bf/jSL+tHvvgzYnx0zE8IVFI2CwNZ6fIivv3o
      r1/a2WDF5XIhGwBIu3mgczCUnFeUlSQQ561YV8y+8ta/vrCjLWHNlqVf+tTyhYEKBRyDfc68
      FUsS1QpqoHssCgAwZY2l1W1+8i6D+eiJdsdY/fvvjyQ/+Oz3HkyYOLiveX6cjec0txBNv+9/
      /fNaLQAgCIrh/l4T+PrP7Xjpwk6URkQpSzc9WJWs5AAgsvKnf/FS08E9+3e/9lJz5danv1Uh
      nh4d6nPgySUZqVIM8XefPdGNVjz1oxri1MtvvHOi6v/ck7Jg2z00FQ1Mdw/4s+81SIQxGcvU
      3T+YpwXgJqZlGYwZyayMQ5+NW032buGiHxckpWBbn/s5hX4dT2a/9eZWZ6AsDvevV6gUZdU8
      +dDdyVPH3jkyhHNwFEMBoWPhEIFqlz38g4KqY7//ef351pHS0tDUuBPTZus0fARgesLiZUsM
      Kqka08uos+3dtntSdF+20XmOJiMhc+PpK/3+7u/uA6BJbuIytVlIA4ZhCIIC/fmcHhQFiqKB
      pslYlMRYOAvu/M/T3NJD+GasVgQAAME4/OjnixhiwvRlq1eMTuw9cDRBK63NVA599q+/PKd6
      6LkHNOPWiEhiVIkDfpvDGZbkycVCAACJWieNmkwjYzJixMPTLc/W3OLdunPQNBEwdY3rn3z5
      h8u1ALR34PzxRtPgEEr6Lf29g5m8ke4hlm61NkNdsL/+XHsZhbXs22vLf+oH64x3fnpm/zx2
      78gVy+RER/M1bQN2SqyV0X4/NzknU69Q6BSYc2pwlEzIM6iSszJgsr3xdOPVUciovWdzjRHx
      zUw5vVJjYW6SDAfga5OUtK3j3NkLw1TeukfvLlOwF2qPnaYi5ost0aINVXoOACAcIU45g16P
      m5Sr2J7hvraBQPr6TXVpSem5Wuu5/UeaTXRy3Za7FknnQ0+CGSVlxI+51syIH5MeRvyY9DDi
      x6SHEb8bt+xJkqSoefGcDcbtdOP0UBTF3M/F+EpMzcWIH5MeRvyY9DDix6SHEb/Zj6Z0v/Ps
      Gxci0c9fiRNL122sZvXu+eDcGAAAoGxxxvIHt64s1IhwhLSefvP3n16dAZGuZN1jGzP8Zz/+
      Xf3Q578qLd70jU3FxMX9e892O2hV1ePff7hIvrAX0gCgg/aR07vfG5Kv3fbQYgX4e09+2uZL
      WVJXnSq73UW7CbNPD0mEQon3/OxHa6+NhyMI4uo9087Slz704IM16Xxr4/t/2He8KSNhXY4O
      ubzvo7bImudeLjL/6Q/n9xkzfnD/87/bQpO29qO7D3fKstPQoROfNrhLnvpRlffoz17fmfLK
      P1QJv649vBPQVMht7zONCMRy05CtTK6hyWgkEo6Ew+FQCDAcxzEUaJIgohQNCIaz8fmxrNGc
      Vr2EWMjjcrEBAGXhvOtL6yEIgqKYWqPmcsf8gRhFARGJYAgZiZCa5X//b+txDEEAgHQNXmnr
      9KmLVuWmsttPRIUyjYgnlerVdGNXH1lVNh/GlONEU6GgY2SMU1mRy7UM9VqK1UoACJobP+g+
      GwrEklc8vG1VNm/sxO92nJqIsGRpS7Zu25wtmwePlpzbmqljp3e8eokFACJdet2990gAKCLg
      nJ4c47LGrw5FcK1Rw2djICxdW9fwVsu7/9dasnxtbZFRp+BjxNSQaWCKlbEyN1mFR1QJ8tjA
      4LBFDGMekkKm7QALdXYYAE0F/VbTcLTwgSLteGi8t9ccWAoAM35B5QMPLhF07tjZ0FHMDew6
      SlX/8N+q0aa9H7b1O7Ir1be73F9tLulBUePG51744nrNJgjbTE2HZi5F3A5avfTurYUaKRsB
      4Gfd//zzOQ319eeP7+zpWf3tb63SOMYt5oAw2ZicIAAQFK68y0Ecbzl6SMYWUAiPt4CfqA00
      GfWOtve7xBrPhMPrd/unhobzEwF4Ccl6uVxhSDOwupzOcfu4PPfxBIEYW/3E/7jdRZ6tm60v
      +EnFyx/YnO5v3n2oI+D2BGKUCFD/eM+IR2iovmebgf/ma019g/Yajnd6youripQKDgCQwQhL
      X3Zf2d1y75lX2qaMSZJbsS93JjoW9ZrberyYovnAQYBYIIzjo2YBDXQkHI4SEa8/QONyNp/P
      j3jcoZgWdYyP+vlJqRrBnd/ymdvz2L0jV5qaJAAAGFeqEX9+NxLK0xdW1U1M7Go+26RXbSjS
      u02nPz7sL1hfJXVaKE1yRpI0GJpyB6Jig0TEAwAgPebG/fUeQ0FqdIjKriudH2s8xoWmo87e
      Llfq/d99qlQOQAfHLp893zdmDhNRp7W7vSUAo9MKY6k61VAlO9xQf97OGuns5S7ZZpwP6bnx
      zFSKov7TnMNYyAsY5nde4wkhPLlWJeLwlEnGRIVYrJALMSQS4+uMGqkqKUVEe+1T9gAocipr
      q/I1LJKIYVxtSqZBJWQBYEKphEP6Z+w+jrF6bXW2lL1we+w06bLZhTmLcxQ4ACA4n8umWSyc
      LUoyqNnRoJsQZC9bWqhT6Y0JlHV4zEnI0itrF6cJ50GjmVn1knETmGvNjPgx6WHEj0kPI35M
      ehjxu3Gr+a9Ww2cwvgRzNyAjfkzNxYgfkx5G/Jj0MOI3+3GuiNvqCv25kYSyuEIRH4l4PcHP
      F8JEUDZfLBFyMRRB6FjA7fSFSUBZXKFEzGdRRMjv9YdiNMbhi0QCLo7EAl6PPxyjMZ5UJuZg
      C3ek4hqaikUDXk8UE4olPBZQEb83TLF5Aj57PoxIfJnZp6f3gx++0izQ6qU4AIBIV1BXVxBo
      /eDdC16FQsxFY+GIIGftw/fVpCv4iK9/36/faHLzeCxKVfrAN+7K8l89vv9g83iYwpU5Kzdt
      XpoKPYd2Hbw6GQqCdsU3vr0+RzSfD+JXoym/rf/AjvfGElc/+uiqRNzff/rDZm9G7dpVWcrb
      XbabMLen2qbe9fxPNv5l1cvOE60CY/nqR7atyOLbmz/49YfNbYsLEmV8uvPksUF0wws/rnJ8
      urfTNGyWuC63u3S1TyyXXtx3tKPfkuwbOXTRn//Y09X+Ay++uatlyYurFvTShTQZdFkHJsJJ
      et74wERYnx4LgZIAABEaSURBVAIAQIac48N9USuItEl6OR8jnCMjU74owpWok/Qq3nz4OM1t
      fo/X0t7cbAEAnC/Rp/7Vgl9cLhfDETJGAwDJEUqw8NSgKVRy1/ZKKSsweVmn5Q6O9fY43ZhS
      r5FH3C1BrjxRzleqUlR06+gkDYoFXHPRsaDPOjQhr16aDQN93YP+5GQA8I5cbXJOcCIeKnn5
      1nsX4R2fvXPSxhOyoqi87oFtS5PnwaKpc5vf45/obUf5AMBXJLK1GgAg3JO9l8/R45jdZMa1
      WTk6ERsFQf7qzXW+C827PxrIXLykrChHK5TKuZEB8wibQGQiHpd2RikaRwABBEGBiMzzZYu/
      Ak0GPKMDY9yib+ZqLa7h9t5Bpw4D8FHyZeseXCLr+eNvLnUvlXgOXBat+5e/q8C6zp5w+cIA
      Cyw9CJJQ9fB3v1hzAVCRgMs22jk41GfnVW4pTVeKcASAm7xi2zdTOy+1tDad+mjctqFW1NtH
      pq7ZtlJ44eO9V9r72Dzy2mNcgaZpYOELeEY8ABUjHAMtHRMRpPGkecYyOBnChmZSAbhqrUoi
      kSTpdVizxzttt4tT0lQ8AVa+4ZHbXeTZutkeO1eTUbX+wUcf2lCiQSZNZnsgQgI1dWn/3iO9
      3NxlK+tyeCHn2KQ7QkSuPzyZipGUSCLnRP12X8Rrm3aDVqu6JftyZ6JjxIzpypSyII1HEJhI
      KhexPZYhWxiiLqfL7/dN2ewkVyRUyGWBiTFnJOTqbTxytmdmXqxgMreay9q6Z4eNDwCAixOz
      06TXvo+wlWllK5eMvH3k/PHLSY/WZLDQQO/ZfSOTXfyQFUtfVLskVzBkHb9y/pNd7HBEW1SR
      nmVM8Uwd7Dixx+K3KavXL1It3EYPTRETHR1E/t0PbMkRAtAR29WzJ9rHhl0BJOJuP33AHLUH
      08uy1WnoXfkfnv1oZw/m9VA5d1XOiyMy+3EuZ39Dt5W8/pHAePIEvZoXtNkolTFVJ8Fj3ok+
      01hYnJqfouSCd7Crd8pL0BhXlpCWkSKlPLbRIct0kObLE1JS9HIhGpgcGhi1B0muNis/XcFZ
      sNd7aIqYGeq0C/NzdRwAAIj57ePTTp8/AnSMCEfDUZAZs9O1YlZ0urfD5IggfHliZrZBPB9q
      c2aUlBE/ZqSCET8mPYz4MelhxI9JDyN+N27ZM/dzMWaDOfcw4sekhxE/Jj2M+DHpYcRv9tfD
      Xabmvuk/j1SwBcrEJA3iHhmyBgAAAEHZYp0xVS/n4ShCByf7ei3OMOB8RWJ6qo4f9UyPmUdn
      QhRHojMYEuRCNgoQ81i6+92ynLwkIWuhDlRcR8fC/inzoJeTmJaq4kLUPWGZiQrVOq2Yc7uL
      dhNmvwKL6dOfvV7vYvEov8vlcgWiuERAmhs+3d00QdCxoHu873LbYFCekqQUcmjbxQ927O50
      g3eopW0SSdBLp68cO3que2pmor/PHBTo9Gox7Rm5Uv/Z+59cRIuX5srxBZ4eOuaZ6jn20YFe
      P6rLSJfhwcHGQ03DpCLRqODf7rLdhLnN79GU3fONL648NwVcdXrFugdrMwTe9k9/81Ffn60y
      UyMmBy+1WZH1jz1SS7U2j6Ixn3tq2BKQld5bI2k7dGrU6gjMxC6eP9x4yewi5sEcqJtHR0Pu
      qWEXL83Ac5gsXmM2AgAxj+VK44l+DNHklBQmy/GgpaWl2x5GRbqMRUXpkvnwVOS5zdCwXzn4
      oUsAADyZNre86As/owgiSgGLw0IRAJbGoMf7e86f0lQuql2h5UVdVJpRePHq6XpOANMVJGnE
      ftOwT1pYkGJrdN7iHboT0UTIMzFk0y1bmxrq6h0YdGZkAIBrfCzKE2rJqTNjhPChCmj4rH5Y
      nZuM9TYcDvEf35A7D1bjm9s8ALZIpdWKAYAjlPNx8AKEbQMNBz8YkqB+l1uSU1qgE3NQwFKW
      PfAQtLR1ntwzMFhQVrUkIxyMAEeq0vBg3OP3h4iknJVr81Uz9edbXV/Pft1JqFjQNTJoVy6+
      2yAfsQ5OmIZsyXyAKE9bsLi2XDX43mvNQ9Mq1/lJ3UNPbMzHJvq7A5L5MD9jrjWXJL1i+fIv
      1FwALL4sISVF5mjvtRIllakaMR9DAHBF7rI1mtTM/u6Gk8fPBuioenwMS9q4Yjm/+ZO97b3D
      JdnLMxPZ4JsP9w3cNCpGTHc1XRny2d+yY36nPcSPGW3pAByJVMzj8+QyCUqEwj6fl5eoFrE5
      mLGw8nYXebZuNuMskcqYV1EmVhOBQ12tHYUZ6hw133Li9X2m5E1PrM4wdJ2KmcNhCqVikXAo
      GMIiUZIt4LBY/y1yAwAAdJSY6u+NLLpva6kSgPaP9vbNjA5NsiBknbS6Xa6YZZwUFEi1mM5t
      6rOF5FjHiUOjmrX3L9Hf+VdT5pIeirIc+81PmnEAALY8vaws81rLDsEE6ty6avPQntbDTan6
      tXna7Dzu+UM7Xr7IAkpQWLdxdQk26Js4fuzNPpSrSK8uzdaK/9ukh6aIkSudeOkTVfl6NgAd
      S+KQxy8PmMe8HNzXdvC9S6GQsGRTvtLIeWDFyEdvvNyAcmTpqyvmxw1Ks1/18q/vREZYHD6f
      x4qFQsAVifhslCICHm8ghovkIi4GhNflDhIUIBibL5aI2DQR8nv9YRIwNl8k4nNwDAGAiG/a
      HeHJ5EIcXbA9dpomI15XCJfJ+Nc+MVQ0HAhFojESaIoiKZICtkgq5uEoFXY7PWEKYXEEEomQ
      feefeZg1Uxk3Yz4knHGnYtLDiB+THkb8btznunbX59+4KIx5h7mfixE/puZixI9JDyN+THoY
      8WPSw4jf7Me5xs+9c9IUvX4Bmq8wFpZkYxOtjb0OAABAWXxtXuWS/GQJF0Mod0/9iYsWH82T
      Gouql+RKQ1Om9pYrw+6YMCGnrLQgWU5OXGlu7Rn3xlB13opV5XruAu/i0RGvvaelwSYsWrYk
      TQjhia6LIyFVRk62ej4/Snz2556ZrpOnuoLqjGuMyTopOMZ6rnSORUVJGRlpiqil8dCJ9ik3
      QQMxfG7X/oYZgV7oajty+FjHsLX7/PHz/W4Oj7RcOnWm3Wwbbj9+9MIYKtdzbKf2fNw89TXu
      4R2BJrzTfRdOdvSb2i1eACAc5q7ugXFX+HYX7ObMaX4PSFLLamq+sPJcD+ASbWbRkposQUju
      an/7yog9UJakIEZ7h1zIptK6dcKUTCeqwEOdDichKMvPl4aGLR5/kJKk1dyj4umTtTPRo8f2
      m6bpuoSFfO6hIkHX+HAgMT9P4Osz2XNKOQBAWDsOf2A6GEPSau9aXZDA83bs/uS0OYApM5fc
      tXaxZj7Mlp/bzNSRI7/6lxY2AAi1aTV3bxL85Wcxh30mFONKBTiGgjC7LJu78/y7b9Cr1q1Z
      kiaBQLi4qOdA/c63MVyVtybLoFKoOCodUM7WvVfcUa5I8KXbXBCocNBpHpjJWL7a4LzYPtA7
      VVgMANMT3uTlZbnIwIkjZxKSVkQ/++gquubeWuxK/cGjauPjlfNgOb65zS3UVj7wrWolAGBs
      rlgOFgD/cMuu3w4c5iAkKk6vWVeeJOcggGqqvv1PkqZTJxo+/n1fW+XGzRWBwZGwrnLTImF/
      Y/vA0HhuikrLCZqOvr+r2Yzkbq1JXsgnHqCiwZl+k9u4LlMjGVKwh00Do1kKAFRtyM0pKNeL
      +huOWqymmctk9rNVxRlomiEjypPe7kLPytzmFnJlCQbDX2ouAOAnFVVtWq2ZOLWn0S7RqEQ8
      NooAYDyVsXjdNmNhxal3fn/xiJBrdEzz05YX5nO9Ha2NJstMaVqo8/0dB1sn+bX/8K06LftW
      79adhIwS462nmztmrj5zEokREba+NnGMD8DmCbhsDs7jchAyGosQBIvPZ2MsTKrW3+4iz9Zc
      e+z0FwEAinOF8qSydRtr0pCW/ad6rO4oTV595x+2P/fH3hifRxMRFPhCEQ+jvU77tMPrCUQl
      SjnfdXn/mU4La8kPnn+geD48eDx+NB2NWLoHhA/+9He/fPXV13750jObs+jR/hEPeIf7h61W
      69XugahUo041Gu1trWafe+Tgb1545cDgAlszFePweCOf/PM3PwEAAK6mcPmaJRo2l4uyMBQT
      pq1aXz2088jBs6b0exYV3re9buz1/3jmexRPmbt86ze25MX6wfHhp6+8TGkKVt5XW0SZPnAE
      Q2xv6+s/bgWAmmd3PFm8QCNEU8TA5X7N8ufS+XwAAH52TpbZc3VkJKBKgKuf/P60D829/zvl
      qlTB9741+u+v/OAYmlCw7psr0+fFhThmlJQRv3kRccYdikkPI35MehjxY9LDiN+N+1wURVHU
      vOgzMm6nG6eHJEnmfi7GV2JqLkb8mPQw4sekhxE/Jj2M+M1+nMv02c8/ukLEPn8l1ObV1JVh
      Q8cPXLw2MRDBhSkVGzZWZSkFLIS0N3/8wYl+FwhUuTX33FWh9Jnbzxw53T0Tk6aWr1q5NEsb
      Gzx95FiLyUlKy7Y8dleOdKHffEiHnOMtR/ePSqs3bSiUQWCo6WR3QF+yuCxpHiww96Vmn57Q
      jGUUWf3Md6uVAAAYzhXEJlta3KAs27Cx3MCdvnzg0zMnLhlUy9PV0H38k8aJ4m3fyRr9+JPj
      ++SCdfSl0/102opVwr7G1rNtakGK+/SFQX7lpkVT+z/ZcTDjF49mL+zwUGHvzEDXVT+7uM/i
      LJTJqZDHPuMVh2Nf/at3srnNTMVFSq32LyvPTQKgOE8sV2m1QlVWytELrTZXJEZBxD7lIUCg
      SVlU+mxOFEGDUxdIimYJZDIxB8WiCMJNrXr82cUoh2XeuydMxBZ2cgCAioTcYxYqf1G20Nbf
      P1m4RAQAkdGmd1+r9wXRvM3feGiJke9oev31vb0eTFe07vGtKxPnw0q8c2n3UJTpk3/Zvn37
      9u3bf/jSr06PAAAATcWiRCTiN5nM/qhEr+DiGMgrVldIPMdee/GNo30+wLhKfV5FmWJ0369e
      e7cLSyvPT1PxOHyhwN/6ztuNseL76wxfy67dMWgqGJgx9XsL6ir0ahU61G2J0ABgtWPFdz/+
      w8eLpk+ebHNYTrz3kaPwey/9y9/l+uoPtc6P+wTmcu5B0YwtP3vhi+s1m8E/3LrrNx17qAjB
      N9Rsfqg8Uc5BAIRF3/r5T4uPHTh8aserlwrWP1BDNl/2ZTz0P78jvvzZkYaWZK2iMkmIyCqf
      fFH80Y9//X/3KF/bljs/VgmNA00RganOAZ9hg5Bksdmx2ODAUG4CAC/JaFRrdIbc9L37pu1m
      +7Ci+GGjVIHd+8zPb3eRZ+tm/2fCtMqV928yOM58fHSAJKMxGmigI26bK8wp2Ph4amHCm6+c
      v9CqS/cH+EaZXMoV8MBpd7jt09wgiyeR8OQKMRoZn3RCrvqW7M+dhyaJ4Ehr6/A0vPVyMwBF
      oIpirUVEAUpTJEXHwhECMD6G4+xYOBSlSCrgcRG4VC5i3/kV+tzuqQjPWAYH/QAAKM4Xo5+3
      +TB+Snlt7fjkp/X1Wp18ebZ67PyO/zjNXf3EOqVtMipVpRv16rH+sUlTx1WBLYAnZ+lR64X3
      Tw2ql9Zlh0fCsqzavHlw/0CcaJrwDXTbkh75p7+vUgHQfnPL6SbTiJmKhSaHe/u7EJNpjK9f
      rUnTlaCnGi92h7Cus2cCRY89WZt056dn9s+pCE4POz0ec981QxN+VKKRs6KkKDE9VSOTqeXs
      kMc6g+gy9YqEtFTcPdzd3m1xcjKq1q6rzdIohOGJvq5BJ8+4uHZJfkaqXop6B6929Nnxok1b
      V6cLFvCyl9HJvl40f/kiDRsAELaAjQSikUgEU2mFxPT44BSZsXxVhUGXkq51X21o7Ztipyxd
      X5c3j5/Hzqx6yZgN5lozI37/DzCO3HY2mJELAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pathway-finder' width='192'>
      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
      kRy1eb0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='158' name='Sheet 68' width='192'>
      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
      gQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='64' name='Sheet 69' width='192'>
      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
      wQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='181' name='Sheet 70' width='192'>
      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
      QAgp/h9Mzms8VdiglgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='141' name='Sheet 72' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 73' width='191'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 74' width='192'>
      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
    </thumbnail>
    <thumbnail height='101' name='Sheet 75' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 76' width='191'>
      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
      Ak08552Lvci4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 77' width='191'>
      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
      9f+HjevasVu6IQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 78' width='191'>
      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
      XTogSQoAfuGJ4fl8uPM9W6vXDmoqQpDJZfRus902U0NZhhUWpse379xsmThyNBS4GBcFP6AI
      30OYUT0au/jySIIHgLXlG0ZAOro6szCPB8Htje1LF8+9/d03WDkR5XAXYxVVee7pJzdWlzUH
      n5gcdZVaxeIWJ/In3e6QYvno//nwsHd9YTQ2n5c+WyZMrpnkpqfGbK1NsJEIQzI8t7axfVQu
      A4Chqz4CXVWbrU40GrU1pdboaGqLY5hW1+jdHpGkdrttKo1rV6584w+/a9l6aXu70+mominL
      Ujqbw3x3r1TiI3I6GXnr3Su3V27VGs0TbfFjT4j6nmg6J/L0+NwZ0lGI5HCWUU8vznQ0+7ha
      Gy5O7B810lMLw1m5XGnFM7kpmXMxxuzUCyN39+9hGGZ4eERkx3RVmZ2Z7Rr2xMS4JCUgcGu1
      alJITk1Pp1OJO6srNBu5dOF0QhZVM0SbJT6OhMI1I4TCUI1PMAyD5/ts8vjniq5u/c6V/Z4f
      fWEmNZoIq+/xPC9Ue6Y6jjM4acD3nLEY3dszlcYC27Y/WyYU6qEoiqKo0sZtkpO67e7s/NTB
      7p6qGZOzs41arThSqB/vlWuKwFGqZuTyuWq1GY/yHtBao1ycf0LmSAColfeqXTsVl7PZDADU
      qpVUOrV0/TojJQjfEBN5U1PGx4ql9TtMNDuUidt6p2lAPtUnthIEAcdxj/ophIyOA1//nTu9
      69/8pfOvnZI/WyYU6ulRqdZ2t78fzc8Ylt417Ol8/Pby0lFTKY4UKuV9C5Pbe3uA+QHFOYbe
      adcQ5gk+vl1u9fI9uq5rmr67elXKjbQbbaDI55+5sLOzJySsS2em9yq1WqWSjMvJdGpre/vO
      +rrot73YZF/1DHhAQqSedDIeTTzXanYKxTFsZ71Ubi0szBLkYaPZkuS4rblSIjeSl8t1DUiC
      Y2M4RVvNynDm7seP4ThBUCMT06rSTaVSLga+j2YWTmHIW1q5PblwnsLB99w7q3dSmQwwkI9m
      Wk7/4MGAByQUrvk+9M59oqhH+jEPVioAoKnbv/JvbvSu/5uXpy6N9znCJhTqGaxUhJDHLN+j
      KR2cYk3TjMeitmXqhiXwrO0hOSLYpt5RdI5jTMuNxyJdxRB52kOEa2qRWILEMQBwLEOzPJFn
      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
    </thumbnail>
    <thumbnail height='144' name='Sheet 79' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAACQCAIAAAAeHsdkAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAABQElEQVR4nO3SMQHAMAzAsKz8OWePObSHhMCHv90dmDm3A3iF
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFcgP9eEEHcxAtUgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Elec conserv' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='ConserveKWHbySavings' width='191'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='ConcerveKWH-Costs' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2dZ3BjWXaYz30RwEMiQIAAc2azSXbOebon7PRs
      kHZH2l2pZHmlKqskWyVbLslll39suVxlS7alWq2kXZVWO5K92qSZ2dmJnRM7sJuhmXNOIAEi
      55euf6CbTQJgs/sNu5tovu8XeXHfxSF4cO+55557DsIYg4qKIogXLYBKDqNqj4pyVO1RUU6u
      ag/GWLXYXjjUixbgqRHioQ/e+5cZd1Bvtv/K175mN2lftERbl9ybe9zj3UGm5Hd/93ePbbNc
      vNP9osXZ0qCcm/+T4aV/fOefQklZluGtr/92Y7n9RUu0dcm9uUcSk9E4X+S0BUMRUZJftDhb
      mtzTHt/cuK12T1dH37e++Ub3wPiLFmdLk3va46jeyYTnvvS1r3z42e0DO2pftDhbmtyze1Q2
      D7k392BJ8AVC8bCvp3eAF1W750WSe/6exbH7NydxqO8S1lumQ/itI9tftERbl9ybe7TGvN7r
      v1jSVn3hcGMsnnjR4mxpctHuwcl4gmI1QjwsIMag07xoebYu5Le//e0XLcPTEfFM/cVffndo
      fOrGpQsi56wqtj2+/9DQoMViRQhlvoRlcXpyEtEaHPPN+pJ5Bl3WEUL+pWA0MdbfGSc4sz77
      wQifiPkDQa9ratwVzDMbKTLbpC5LoUhMTAQ7+sYKCuwkkUUkwNjjdguJ4OXL12XWaDUZsgkO
      /sXp/vF5q8WS/Y0ejjU/MTzvj08PdvqSlN1izNpJFpMd9+509gzIlNZiNmT9oADw/MTg9ebb
      I+PTpvwCvZZJteae3eNzTZbsOuXqunrmV3+jpqIseycsf/rej6Y8UQAYmvX+r//2XwjI8qFM
      9dz6m59c5LS6V440eqiyikJrlqGkxA+//9dxCWOtTUad//WPfz/rG/be/uwfPrpbbKaXkvS3
      /s2/ayzPz9IpGfjR+1eM0UkR0T6ePnu4Pqvo77//i+J8li6o//iD96v+8A9oMovkrrHuT28M
      ffrhB7sOHj159KBRx2YZSUy++4sPtTQWjBWhO70Nf/xvs0o+ePdiy0hc8IyMDg3wX/1XTaXZ
      PgQ+/ON3Pzn+ymnEh3/00/f+4+//dqo597SHy3PEXddM9sL229dFeO3wjqpsvRDHGU4feN2q
      oz78+OO1htJotSfO/vrpJtvffucvK06uoYiIsDorDuypi7KFLdcurjVU05E33gokR8Ymjp78
      UnbVAQBEBKb7JiX9H/3a/ntLwhojocaK/M+u3dOY3ARnzzo9pTh29tcPVuhbblztG507vKMy
      Sw+CNGvJ2RDPyS4eM2uNY8yzBt0tQhK/sqvSH4pn70SxFi3qvN+BpASrK1xuzr2VSxaTRbV7
      6msrjx/YGReJ/DxD1m6J8NKkK+Qavc/mV9VXlWSdkBlW093awmiYBR9/5vQJoy7rR0xIUbdH
      4JaG75lLm2orCrP1ASHq7xmZryi29vSNNu7coaHJLJ1IlhQildt33LzTceLkSTOXbcIAiEcC
      jLXMwvAFFQ31lcVZJdcbjO23b9I00T00c/jIIU5DZ5Vc5qOmwjoyMl9Yt7++sijr2zEMMzY2
      vm/vzoEx96kTh3RMNsmBpFGi4363SJve/upXTA8lz709l292pG1g8r1f/MLvGm/pGcveCcuX
      btyLzd6fTJjG+lpFOfvOYLz3rqg1v/POz3bW2tv6J7MPJcab2wddPddCXMVg1521pOptvSGz
      unPNvfurufbB+eydksE7fbNjLZ8c3F3V3Na7xkj40vUW2Tu8RBVO9rWKUnbJp4fuixrjO+/8
      pKHSfLtrNPtIUvxGa7936KZg3zHWe3ctyftab+gLSj7+7Hqtk7k/tIbkfPCzG71fPXuS1mrf
      f/+D5ebc0x6NIW/g1idBv/8HP7/gtJmzd0JEfZl93IeRd4QnDUR2SxAKy+vm+tsamuov3+oq
      Lsi23gMAxVbadR7REB5vI7k1liSAitrtY93t22pKb7aPFtpM2Tsx+hIDjmkLz1+5W1pYsMZI
      aFuZfcyHCd9YkuCINZYuZ3ndfH9bQ9P2yze7ihxrSEWyVQX6RUEfmewgdI+RvGGsu21bbVlz
      +0ihfQ3Jaa48n/7o0u3a+h0Oq/6RrGvt2EVRjMfXWAWfO7IsE4QSRZclUcYERa3zLM/zDLOm
      ZZBCEgWMyMfucQAA87yw7lB8Msmw2ZetZWRJlDGiqKzryIqhnpvkGCd5gWVXdcgNf084HDYY
      sts3Ki+Q3Fu5VDYPSnbsGMvxaMTr8xMUa7FaNAyzhl2h8pKjRHsGO+9NuSMOp13mEz1dHXW7
      Dlc48zZcMpXNj0K7Z7S/O6+01qp/TmdMqt2zOVHoa+ZY+PSD91mGatx/YnuFY2NlUskVFGqP
      yWKjQYxG+RzYsKk8MxRqz8jo9GuvHh1zJWLRyMYKpJJDKNyxb6urFihTaGHSUaBep9q6KNSe
      gHfxzvXLtsrtsWh0YwVSySEUak8wGC4pcXoWF0PRh6cZGLvnp0bGZ2SM/e75odGp1NGkLMQH
      +vqCsaSYjA309YXjgpiM9Pf1RxICAMyP9izFAGRx0b0EAPPz8wDg97q9C1OTruBG/IEqzxCF
      2lPVuIslWaOe27mt/EETlmVS4x9v75+YutLSR8dm7vROAcC1SxfyChznPzt/49Ilc4Ht3Lnz
      F89fsBXknT9/FQP45scDMX5qdv729WtJMf6Pf/O33qR8u/l2JOQeHBgaGp9VrfLNjELt8S9M
      j07N+7xLnqWAnPIYEWSB3RZNApvwcvlFjrJi39wCAPgjvM2aR4sRV1R25NuxGA0lJFu+DRJh
      CQAAmi99ClpzkVU31NO149D+rq4B0JpYAmRKO3n/tjfOh8NhWVZv3mxGFGqPPs9mtxiDS662
      u7cmXH4AwBj3t93UFDeWF9qioUDUFzBY88LhCElgnhdkWqsnxFgyQVIaAmQ+GUcaXer4mKGI
      eEKorS27eO3+gVOnJu5+Zi2uBgCr1cqSWEKMwWBQdsCu8qx5el+zmLh9t43jDPnOkkK7ZfmE
      C0vCrRvXGM5UUlkXXhgPJontNYUXmnvPHKjtH58tLq/lIDI0MVdaXc8KgeHphYrq7Q6rwTM9
      TFpK56YmG7eV377bfejQ/u7WW9W7jqDoQkgyCv7p/MrtHKX6mjcpT689GEfDgaGB/pkFj85g
      2blrt92S/f8aC3rjSGc1bkB2JlV7NidK43swlmUpEvR1dXU5a/dUF60RmLdBqNqzOVHoa3aN
      9d7sGkYYN+w79qxVR2XTokR7QgHv3MJSbdNeu4HVm9TYjK2Lkr2MxzUbk8ngwvTIyIg/HNtw
      mVRyBSXaYzEbPUveSDSe7ywpzF8jCl9lC6BEe8yO8i+/9YbTyl384Kd3+6c3XCaVXEHJnss9
      0fOdv//ZvuOvnjlx0KDTrHFvfiNR91ybE4U7dlGId7e3Xr9x68Cb3zzaVL7RUqWjas/mRIn2
      eOfHLjW3W+2OmtraIod9vWtmG4CqPZsTJdojy/L81Ki+oEL0TXkErr7C+SwkW4mqPZsTJdMG
      xnK+zXblw5/d6J4uL1ZjC7cuSryFAx13hmc8wOggEZiaX9pWttaFfpWXHCXaQ2t0FdX1Dlse
      loTZmeFJlil3qB7nrYgiu0cS5mYmx8enCY2+qrraYbOsleJko1Dtns2JmkNDRTmfa7Md9c29
      /4sPFwPqUdcWRaH2YFmaGh+VNflf+uKbZm0qaR6Oh30DI5MA0v27t9va78cFDADJiL+1tdW1
      FIyFvG2t9xb9kVjQc6+1zROIAsBkb4srAiALY+NTGGBgoB8DzE9PuKaHhqZ9G/VHqjwjFGrP
      WG/H9PTY6NRs7+gMyz7QnsnRwc7eIQBheNK9b+9uLY0A4OrVq3UNjc1XL9+41lzb0HD98sVL
      V240NtRcu3INA0R8i6FwaGB0urfjXiIR+uBHP1mICu0d3WIyNNDX2949mAPL6hZGofZwnNbn
      9fZ0dTOa5cBTor5pB8eQAFSpw/jZRx/O+WIAEEmInJalccKbAIOOQ5iPC5JOxxFiInWn4vL5
      8/mOorICY/f9zgNnTna1d1GchUZgsDj8Yz3umHqnYvOiUHscFdsqyquqywpt5gxjVhTr9x4p
      z9cs+oLzC24NCZFYTKL0JlIIRsIEraeRHImEkNaYulNRVGCemluqrqm8fKNz96HD023nbWU1
      AKDX6ykkA6Heqdi8rLfnkvl33/1AjC2Nh7WvHmo6sH9fqrm/7ZZPYjQkKiqvcT4I8ZHHBvo8
      wWhZVa3fNUVw1go7e7Fl9PWjjT0Do5V1DRqIDwxNVNU3MGKkf2S6dnuDQcsE3XOkqcDjmisv
      Kxwamqitq5kcGXRWboO4LybrpIjH6CjVkOqea5OyrvYI//R330kaqlAy0NTYcOjggVSzb7L7
      4zujNrO2pmlf9RqVIhLRkERq10hE/XSo2rM5Wc/XjKidu/YOTbtlfeFKh6DbF3/t7Js2jiaI
      NVPCarjsZTVUXhrW0x4xfrOlNUYaSewpdx5YbjYZNRd++T7LUDsOnlRzh21Z1tMeim1o2LHk
      nvNCwcq05Syr1XE6mgCddp2s1SovMevtZUR+ZHTIXNrUYBHudA0sN88s+l5/60tvnjmyuOh5
      tgKqbGLWPWPHcQH1d95OCECvyDLf0FB/6fJnvEwde+X0M5VPZTOz3txDaU/sbyiwOwrMOkQ+
      yq8bCwdjyWQiHl7w+J+tgCqbmKc4Y29tbd2/f3/q55HuNlPlDrt+nfoaG4W6Y9+cPG7lkuL+
      jz67mjojIDiLM+9B2c6uu9cGx+fF3lGaItR8zVuZx2kPIpnS0lJe4JO8gFgDgJhq33nw1M6D
      z0W6LQnGGCC1IKC17sphjAHLWBYBEYignsOVuqw8TnsIhtuzu+l7f/E/BxejlNbya198ZCC7
      5uftTiepVjd5GjDGYtwn8REEiNJZSYbL1kfmQ/NSMggAiGJZYzFBpZdzwBhLiQAfWQQsASBK
      a6H1doSe8VFgIgjuAQAM9nrQPCiqt/6eizHayhAXlleZOHHPxI+bW+xmrrpxb1XRmnXnVB6B
      sRBdFGPe1G8SH2FNJSSbbszxYVdKdQAAi8lkYFpjqUarD4llMcGHXQ/nJyzGvYhkaJ3lGQq/
      2AO/+D1w9wMA2OrgK9+Hwt3wJCcV+w4dKy4sEBAzPfGo/mVxTaNzIVhWW59nyPIFUskEY0mM
      rYx3w0JsKVN7pGRo1VOyIAsxktWvbJT5yEPVefgUH3qG2iPy8Ml/AHffg189g/DJv4dvnQdK
      s572YOnWpY8tpXUag9VpeVTsfmRwoKgwP8bLoZk5S0P1s5L7JWKFNbPcImXtqGj07M2yJEh8
      GDAmGS5zBVyWQ5aSWOIRQROUBjKtkYQf5tpXtSx0Q2QRzGXrzj3kidOvheICYvUgJZabnTbL
      +WvNIVF7+vU31hlBBQAAEEIAaOX/GaEsB8wIURivKtWOMs6hCTp9vicZPaSDJSGeDM6ALAKA
      AARjdFIaE8Aq5cAYC5F5Mbr4YBytlTGWZtjgCBABeEWAHkIpT+F6phaWujru3my+9vNfnl/p
      GDIVFFdUVDdsqy1eqyqxymoQQVGrFhdEZ6tTTOtXXa0kNSaCTk8bStBagn60DgAiKW36fwFj
      EMKulOoAAIDMhxewnD7bycnQsuoAgBT3SnFvukw6C5QfX9VScggMDlhfexB18NjpN974goUj
      V86Og92dtsr6KgfXPTyxzggqD6E5O613ELSOYPSsuTTT6AEAkjWy5jJSYyJZI613MIbCzD4y
      H5WFFfdY0i2qB62ymFjdIMmSkNZJ4sPrtgDGkDaUmExNReutXLLY19vDcqaDh46QK+Yzo5a4
      cPkqB9E44uxWa6qypCwmlwJRe74l5HN7w0JZaRGBQBaTExPTBcVlGlKamp5zlJSxSJicmi8s
      Ldex1MJ4P+3cbtVIS75QvjXP7Xbb7faQ3ysKsSg2lRS8VBFCCBG0zkrrHpckFCFEMvpsK9Ej
      ZDG90rkkxJTG4GVYTJlnD3E/zLatanF1QtQNppJ15p6h7pbrLR0LLtfVGzflFcMW1u39jbe/
      /JW3v/mNr3255EEJeLmn9ea5qy04Gbh08z7vHb3XPwMAzZcv0Jz+s3MXbl65RGk1585dunLx
      glZHn794HQCWZkf8MWF23tV85TIvJX7wV9/18/LN6zdC/oWBwZGxadfTfxxbgQ27aYKI1PSR
      smMQAEBmuB+WQV49ackiyBKsu3KV1jS9evqV4ydO/OHvfWtlfA9JUhqNhmEYjUbzMH8P2rH/
      oFnHRDyzuvySksoyz4wLAJbCiSJnAcWH5kJSaVGxxIf8UaGoqEiOBlJr8p0r53hSX2jRjvT1
      NOzd3dU9LGtMGhKSMjnc2qzWqdhAMn27pCYPEA2IBoICRAOiKO1T5E9eR3u0Om6q9+5ffe/v
      /s93/37l3DM9NuhenPnpP/+kb2J5enhgqbOcIRYOxYMhzmKKxeMkwoIgyrSGI8SEwJMkS4As
      8EnEalNKLkuSLOOamrILVzoOnTk93vKptagaAOx2u5bEolqnIgNEpC9TiMy0QBBK26IjEpHp
      D0p8FBCC1H4QIUCkxKcXXMMI4dWObIyIVItCXzOJhcvX7p5549VFfwI/UGp5bHhMw4BXMm8r
      8IwuCge3FZ67fPuVo4c6Otr3Hjqph3Bna/uBoyc1gq+1vefg0aMIwFZS+9bu8pnxiarGqt27
      g/l6U9Ou3bU1xUSUKJIMArGdU5iO/GUmUwkIIluwA06bsHGmTYMlPn0PL/Hp4zB6nFeOfOOP
      +phKkMYE60RoYCxJUjgc4pNxAWnmpsYPHHgQodF199qMN15a7BzqG9x96gvVziz79lhgKQpa
      m3kDnNFqhMZKhKhHiLpXthAMpzGXr2zBWI57BmA1bF4luXr/z4ddYnzVfo1kjaypZNVQkpC8
      /4/slf+OEgEAwBpT8tR/Zvb8DkGxj/9q48/e/9GkO8LHQqM++K1fffWRuARTV1fUcff29p37
      /YEQZNMenTlfl9mqsgFkGjDZWtJcfICynKQ+yTk3InDpocSvfo+YbQWM5eJ9YC5N+TAfb0+g
      U6+fLXNaTQXlf/pHv7fyRL1x996wz19ZUx/weqvL1Pie5wrJ6mG1HlCaLDnX01wDJGtAZMYC
      h6VVGoYxQMYGBRG03okNTqn+S9L2L2NjEaV3AiJhHbsHyz/86/8T0xbZLYYbN1vqSh/d+puf
      GJqYnUMYb997NE/3nCIMVVIQlIYxFgmRRSwJQBC01kqy6dqDEKJ0NkCkmAgAxiRroDlbZhgQ
      yRjEqBuAACAAZMBypqsJIURqrSzJiAk/AFCaPIIxpIZax+4JBnxJQQIAIOhF12xTU1PqlfHe
      1gCRZzOwxrx8k34DKnA9HtXuyQTLEpYlRBCIILOtXE82SOqcK+YBLAMgUmthjCVPHiqkJHcY
      xjjomR8YncIApdXbi+3P/KhL1Z5nB8YYi3FZSiKSISjdU4UpKtkQ3+9otRi0M7OzAGB2VioY
      QWXzgBBCtG7VsesTo0R79uw94J4Z5oyWnbt3O23PMqRNZXOj0IdrK64+sqf+xif/crdvckPl
      UcklFOZMnZ8Y6Jv0NDQ2OvMtzyE0XrV7NicK5x6aIFwTg+/9/GetA1MbK5BKDqHwGMnjDZ/9
      0us9fbOSkNxYgVRyCIVzT11DPaNziFFfTWXpxgqkkkMo1J7B3t75iZ4YZsYmZzdWIJUcQqH2
      VFSWTruTZ04eKilQi7FvXbZ6nQoZy7IsI4QIgkBK/f1bFiVW8+zE8KLvQeS9s6z6ORfVlmTJ
      E1niJQEA2fQWbcaFFQDAGM+FXP5YAANoaU1ZXgmTEVEFAOFkZC7oSoo8RZB2vS2fs7yodAI5
      ipKVS6vTm00mnVar0WhoKvNKm9zdfne5ToUQD7W3tbkDkUQ00NHWthSKJSK+trZ2XzgOANP9
      rYtRAFmcnJ7FACOjIxhgcW56cXZkZCZLXilJlse8k66w2xvze2O+Yc94JJkeSQkAcyGXJ+IV
      ZUmSpUgyOro0LqcH2kFSTE54p+NCQsYyLwmzwflgIpQ5lMpjUKI91oJCWgh33Lt56Vrz0NRi
      xuv8wKhruU7FlUuXquu3X71w4frla5X1265cuHDx4tVt9VWXL17FAKGl+WA4Ojwx03XvTjIZ
      /pd3/skdE1tbO/hYYKC/r7NvJG1ZDSaCUf7RVSYZy65QpgDgja7SvKTIZypZIB6SVt8F9sXU
      PGhPh0KrWQLytbfOljsdNJk51VOFNu7cJx8vBOIAEEmIep2GgcRSAkycHuFkTJD0nJ4Q46l/
      3dWL50zWghKbobeza/+p4133uwnOQhOgNeZ7hjo9q+tUSBmXKySlt8EzDT55DRMQYyyKCUFM
      4IwJbIujtMqJlgWt/cCe+jxjxr01Udp56ERFPjvrCbg9XoaEWCIhUZyRFMKxCEFzFOBYLII0
      htSal2/WuzyB6tqKSzc69xw5OnXvvK20BgCMRiNNyHh1nYpMuySrpUIR6fZcZouOSTeYOCbL
      ObMk8R7/6PTS0LRncME7LAjZi5FhLMcT/kh0MZ7wyRkXfl9WFPqaA4GgKC9yQsLHhwFWl0VG
      aHq4F5mrmhzk+dv9r712prev/9SZ17QQHegbfOXMGUYM9fWPnT59AgEU1e4uNTkX52cNBRVn
      3zidp+NOvn62uNKB4lSlzIn6A8bVxq5Za1wIu4UVN2ptXJbb4IUm56RvevnXPK1Zy6RnkDCw
      eh2jjfEP7mWSiMzn0uMFMMZLodmFeFwGAgDCSV4ITJfk16bFT2Es+wOTSf5B3h2G5vLMVY/J
      ov/SoDA6DEDu62yPY+3OnQ0MmX0Ci4cDIqUzaDcgbnXljj0hJOZCCzE+ThKkw2DL05ozpx+M
      cZSP+WJ+DFjH6PJ1WTZT4WRkdGnVJXynscBhWPVNkLHc5+oV8aNnEeBt9mrN6miYWGwpGJ5Z
      2WLgnHr9yx/urSg6rL01T6/pG5lEAFyeba2sl1rDM4k51NCaKmv54/sghPQsp2cfdxko044O
      JyNp2gMAK1UHADAgGacropCWJABAyLhq/lKiKDps34HR/p7X3/pKHqeWGQDIbo1ln49FIZbk
      wwgRGo2ZyLgSmnMotHt0jPzR++9qWDp3M+5q6XRLKLMFATJpDMHEo6QkGorVUOnfGa0mLxpz
      p7VkvmMi4Q8EpzHIABCNufPMVdRa+bxyBEV7LixNL8XeOvvmK0f3x2JZnHU5gUljzOceHdJx
      jM5pKEjrgxAqzSsxaR4kgtHR2kpreealelFKD1PJbJFlKRSeww9vS4kSH4nmfIYQRXOPyC+4
      5gVBIgiyfsfujRbpOYEQKjY5LTqzIAkEIgysfo3NP1lhKV35VGYfXkj/CvF8hNOtKnqHsSSt
      zmMiiDkfGqVIe2jtrvpaY9l2TvSNe7wWQ9FGS/WcQAhl9fFkdlunxxNtW9PzFhK5fyir0O4h
      Ee5sbWGkKFdUv7EC5SJP4sMkCErLmuLJwHKL7rFJxHIChdpTUtskk0MEV1NYkL0o6ZZCq7HE
      4ksrzzF0GTmUEEJGYwkKE4lkkEAEp7NpNDmvPQrje2aHOjsGR0tqd9MU01hTsv4Dn4/Nf6ci
      mQyFInOSmCRIxqB3atgsPkx4WF8CEHqYgDe3UTj3CKJoMuhnp6aKyqs2VqAchWUN+cy21M+p
      BAFZuyGEIFua5hxFifZEQgG9vVQfThBatqbMueEy5SZbMbBMifYszk5MLaRCYXhvIGLQqpeR
      tyhKvIU6s+3I8ZONjY2nTxzGGQmk10VMRocGh6JJAQBcY73eOIAsuZe8ALCwsAAAAd+Sd3F6
      akGN9NvsKNGegG8pFk+OTUzwiZjbH3zaxy9fvGDK05+/cA0AvHNj/pgwPTd/6+pVXoz/8Lt/
      7ePlWzeaI4HFwYGhkck5BeKpPDeUaI/TZmm90xz0+6/easu3PPW2MxgXHQUFOBZK5Wu+delT
      mTEWWbVDfd1NB/Z1dg2C1sySICBmrP1WUFxnNJUXiBK7x1xQ+sYbyq+QEljm+QRidam9B4GA
      F6SamvJ33m3+zd/9xif/9x+2n/p1gAWbzRYPDCZEMKlJdzcr5Le//e3n/JZ2M9c7NNm0a49B
      xwKgup17fa7ZsspKSYa6qiqQxG2NjSyFWJ3RyLHmfDtDAM/zLKtGg2w6tvptQJXPw5qrgiiK
      8fhmCZDbPJKorESde1SUo1YPUVGOkv1McGm+s7s/mkgiROrz8vfs2slpcj5EV0UBis654nxJ
      RW1JaRGSJb/XHY0lVO3Zmii0e0bu3xzwCA4zV1RRV2R75jk0VLtnc6LQE1dU3SCyLhljhn55
      4g1UnhalWS9nJu63tXujeM8Rjc38uBKsKi8xCvdcMqLPvPlmid1GZcmhobJVUKg9ZVWVw/0j
      9Tt31ZVnKRiuskVQqD39Pd0OuykhE6OTM+v3XhuMs1vteK0XVDYTCu2eYoftsys3IrL29Gtv
      PGiSpZ6ujgVP8MDx48MdLVFebtx3ON+gWZgcGJrx6s0FDp0wNucx2EqtZHhiIWhxlDXVlvY1
      f6Rr+nKlib915/6RIwc+/vDDs1/+cm9bi15PLuHig9vViW1To3DuERG5fc+x3/z621WFD8NS
      CbJp9/5CvTg63L/AG/duL2ztGAKAu/cHjh49PDFw/17X8OHjJ0Z72+71jJw4dmCwq0MGAMA+
      11hL93h4aSYQcI329o25I5PzXh2Nxvq7Pzt/VVInoE2MQu3JsxXqIPrjd77/4/c+9gQfpNPi
      o/5ht1hmpkiaJhha4gUAEEQRIUQgKS5gCiFAWBQlRJAEPKjvfvXGnaaG2qri/FvN7a/8yhd7
      W5q5PCcCqNjWqI17FqKrMs+pbCqeXnswxhh75ia6Byd3HTnz5unDNIEAAEvCez/9sdleIGtt
      sYXhjvbB6rqitvs9RVZ9a3u7Jq+k3Mq03LtrzC8tMLH3WttMjjISAAAdO7jr+s32sprajt6R
      2pp69/C94hE5J2oAAA5XSURBVOpaACAIAhCmqFWZ51Q2FU/vaxYTly5diiTx9p17qssK0cOL
      KBjjZCIuY6AZFmFJlEEIznVOJ47tqU0keYbVIJCTK35gWQ1BIEkUEEGJosjQVJIXGIYWBJ6i
      WcASxgjLEkHRBFJ9zS8ejDGWBQBABL18+UjhSQWWhP7ujpGpeVpjOHDoiM38bCuvq9rzYpEl
      XgjNSMkQABCsgTGWEiQDyr2FkihiwuFw1tfX0ZTqMHyZwRgLoRkpGQTAAFhOhvjQdGrSUbhj
      H+q+T5mdTpowW59HRW2VFwkWpWR4ZYOcDGNZQCSjRHt622729g9G0YxFz9TvOaJqz0sOBgA5
      vUnx3OMsKhG1BXVVpSSBSFK9L7N1UWL3mKx2Rgpfvnj+o48+HHf5NlwmlecKxhjLWBYxluEp
      t1BKZg4hEV30eHlB1HFGbiOSeau8QCQ+xIfnsZhAJEPrnaQm78mzgSiZe0Q+GY3FNFpObzAw
      WSosqeQMshBPBiawGAfAWErywSk5I4PnY1CWQyN/W00VFhJTY0MLvvD6D6hsVqRkAFYV/sFS
      /MlMEYRA2coVWlr0x/Cp176g0zDqCVROk1kzCqdvr1KgrIlhlcw9eY7SAk7sHpq4du6XA1Pu
      9R9Q2axkVkRA2VUiU3WU7thHetunFvzD3a2MvbpMo1rNOQzOKCWGM6vlIQKRDJb4FQ00QiQo
      0x5bYZnFWb57924A0HEcz4uMIq+jyuYAAaIerE1YypxmECJozsGHZh6+hCi9AxFKtce3MN03
      Pi8kEkDRFEnsPXyqKF89wsxZEA0PtuipJMAZKxdCpNbKkqyUDADGpMZMMIZUUlilZ+xYFgQB
      EEFT1HNIFqqesT8j+LBLXL3JIlkja3rSBNwKz9gRIhiGJWTB6w+p4eubE4yxJCUTMU8i6haF
      2LP4N32umD1JSPR3t896lCc3TcajQrYSsCKfSPBqysLPhShEwr6ReGQ+HnWF/aN8Iqsj53Ot
      Gwqt3Xhg4eLVW9v3Hqlt2uewpspX4cGOW70u8e23jvz8Rz+vrG9o2LFLS6PxvrZpXwLR+kKd
      MB+Ikrp8Kxl2h3nGUHB497aR1supOxUXLt589fVT/++H73zzd36n/fplW4HRKxcfbFDvVCgE
      YxwLz63YQOF4xEUzRoLcyHwVCuee4eHx/XsbovHk9PzCcmNZdR0NIoAcCseMZitLIQDoGpo6
      fvTI0vRQ18jcseMnXRP9vWNzJ44fmRsZSN2pmBvtutk5hviA1z0dDQWHZ/3uEK+n0Uh/1/vv
      f8yrq2I2MJaTMW80NBOPLsrZU2ZjeXWFOYwlWc7omVkB82kKISjUnvrttffu3u/v7q4oW7aw
      kFanRQAA7G9967cSrr6O0UUAkCQJABDCoigjAISQJMkAsGxq323v2d1YV1tmv3qt7ZVf+VL/
      nSuG/GIAqNm+00JE3RH1TkU6GMuR4GQsMssnfInoQtg/Kq1wxqwgc1VKb6FYQ1oj9bAQ4pOg
      UHsSsVhckIR4wOXxP2yTx4YGFxfmXS5X+/2uhZBUZKGv37xXU2JvvnUrr6iursR8o/mGvbSu
      0mlubr7lqKwjACiafePMsWs37hZXb5uad1eWVMYWxypqawiCoimCZlmWUe9UpCMkQyL/6HhR
      lvlkLNPjjyh6VdQeIigyo6IqQWsZYxEimZRbhzY4CfpxhaTT30Nh/p7udl1xrUVL0QxDkdnn
      urB7asSL99SXKxg/fSh1x76CeHQxEV1Y2ULRekPeqmJFGMuBpb7VJ6BgtNSRWeroYizLGEsI
      kYggnsqOXs9qFpM//8k/m0rq9uzakYwEi4uLU80sJd2+ccPMMVUNuysL87M+arCX7Umvbq6y
      PhjLghgHjClKgxCp3J2WeQKa0QIAAAgRJAIlkTbrrQgk84WzZxf6bv+nP/mTH/z04+VmSZQt
      NntBQQGnUZNwbySSJHj9o17fsNc/4vEO8nzWAJjNspVYT3uk5Ls//ylXsuN//Nmfn9zftNxs
      K6nwTfX3DI7BFqxK9SwJhWeFh/FZsiz4g5OyvHn9Xutoj8Dz1tJtb7xy5N6dZu2K1JZzk+P1
      B08f3VExs7D0jCXcWiT5Va5XjCVBiKX1Icn0+T7THAZADGte3Uebzej5XKxj94z0tl67enl+
      alzvqLSvmGU4nXbUvRARQqwj50uz5hw0a6IZo/BQzwiS1ejSDUyEkNZQhAELfBgwpmidzlCS
      Gc3zOXms9mB5PsBvK8kPRiIxz1JN0aMagMW1O+L93WHBXl2iGsZPCsY4kQzEE34CkTpdPvM0
      e+OVIERwpjI+GZTFBCIoRmMmiCweZIKgOGPZw8vn1IarDqw396Ajx07YLBZHWcXExBwBjzyV
      Yz1t454oSyJvIGrQqobzk4CjMXc44krZvIlk0JJX9XkUiNXkPUE3hMhnGL73WH1ESMcQzXfa
      tTrd7dvN0sPt3tRo//DYJC8TGo2GIlU/3hMhy3I05l7eLmEsRaM5H9S7nr+H0pw6WP/O3/+g
      fvcxknjwlxvN1u17DqZ+NujUieeJwFhO2z2tcbyQS6xj91y/fs07N0mQ5MTkRN62slRzXn6B
      KU9CBLEVi0grBSGEELHSX4eyHb8QBJWmVQSxeaN+H7/uoF07m2Ta8NW33/7qm68QK1RlfLDP
      G0mu/aBKOhjLaa5eOSMiHQA4rW3lrwyjp6jNm2TisXqNkMlonB/t/F5vL2spee3wjuVXOA06
      9+H7DE017j+xvcLxzMXcMuh0Ngw4HvfKWGYZg0FfuJkn+PVmRUS+/va/riwvm5yc9AcCy80c
      p2cpaNh7WK9WxwEAAFFKRqOLgpigSJbj7BSpUfZfRwhxOjunswPg1HK34aJuIOtoT3/b9e//
      5NP62ipXSDp76uBy+/Ts4v69De5oNBJLlDq3usNQkgSff0ySkgAgCNEkH7Jaaql0j3C6Hqyl
      F+jRDYfNzjraU7Pj4KsLsWPHj/oDUa/nUVRAfVPjtStXY4g7efL4M5YwB0gk/NKKQD5ZFmMx
      r9GwKqyWICiG0fN8ZLlF8wQOm03OOt4amiJnZuY0HPfJx7+UVkQCBTwuX0wQon5vMPKYx7cI
      UkbEpyxn2Y0z9MoQJcTQOV9baD27h2T31Dr+9jt/VVi3d2U1nIA/dPTMm0ZxaWQpBI6c/w59
      Tmg6PWUsneFExliOxVeeKONo3MMwCn3Nm4R1fQnY53GDyclBAsOj74reoLt67kMEGCOkN+hr
      iqwAeH6sr28+8dqxvR13b4YTctP+wxaO8cwM90+6TdZCh04YmV4wOSrzqdDIrM9WVLG9qrj/
      5sfaxi9WGPmW1p6DB/acP3futS98YeB+q05HeHHR/nrnM/3jn5CV4ZdZzdgsmSiytaQFpUti
      zrs81o3v4WfcQZCSo+Nj8oqYpILy+m984+tf/8Y3vvH1r9cUpaxmTLLaaDDABybnYtzubQV3
      2wYB4HZb79Ejh0f72lo6Bg4dPzHU1XLn/uCJYwf6OtplAFmWAotTd7vH/a7xUHCxr619Yik6
      NuPWUnikv+v8pRsvvE5F6mjTFxj3+sdi8aWs4XmCkF4uPjOsAhFEWmQFTW9eR84Tsp72UJrX
      zpzMY2Df0VfIFV87IRGN83xfV2c4sfx9IgocBQSCZDRKsizFslKSh1SdCgIRWIql6lQAFlJ1
      KvADxbh09WZjqk7FrfZXvvJWz91bOrMDAVTUNrKRxRdbpwJjHI0vzfmn52NRVzw2G5gPhueV
      RYITiDToncsH3STJcrqCDRX2BfA47RHDrv/9Z3/+7qdXl5aWWtvvyys+taG+nqGuloVgvH9k
      8mEbds3OLnncvCY/ujDa3TVUWVPY2d3vMOu6e3pYc2FJHnW/s1NvKbIZmK6uLkNBcapOxeF9
      jTdbOstqatu6huu2NSwO3CmqrgEAgiQAyS+8TsVieCksEyIgEVAMEwvRQKaN/ISbaw1rtuTV
      6DmHQV9kzaumsoR05RiPu1OBZbG9o6u8uCAiUkuL85IoHjx4IPXS/NRw7+jCkX31t1sHjp88
      qqVJABwNhwVJ1ug4JAlJCRNxT/tE5PjebeFwVGcwkCCFIzFObyCwFI7GOIOBIgiBTyCK5ZMJ
      nYaNxhI6nTYRizE6DiRBAgJEgWQ15IurUyFjuXu+F6/SDrzNVq1lVpnJiUTAH5xY2WIylOh0
      2S8LvEw8zmpGAHfb2m107f2AZXHw3s6du5dfmp+aJEn62s07dqt9YHJxT00hAOIMyxfJaBYA
      67TH8xGBkMmcKrlNmExpPwDNaACA0moBgON0AKDlOAAAiiYBYBOk1MTpEwvKaAGGMRAEtXyE
      jhDBss+8yvhmYJ3oML0c+OF7V2QA0Dt2rbB7iktKZjsHPO6FZFKuLajI/jBBbHJ3qSiJnqg3
      LiRokrJxVg2tMOw3kQysjL7AWI7HvXr9y3/891jtIcjf/oM/Xf5tZuZRCdL8wrJST8Cab3OW
      1VTmZnCqJEtj3snYw+1SIB6qzq/QKlIgUczYc0mJzytfLvAUsSMlJY+SAg31dOrsJQU0YTSb
      ic19krcWgXgwtmKnLcqiO7JUllesYCiKTNc5OqPlpUThXsaoRc3Xm1taWmY9wY0V6LnBZ6Se
      4LMF+6HM082ML4tGk7fS3UyR7FYwmUFZ/p7JiXGdubC+SgKA3K00kOk1JjK+SwiQWWvyxx+F
      puhoLZuZS4AgLebqWNwrinGK0ui0VoJ48fb+c0CJ9hgMRoQFe4FTw9Lm3C2vlOGqwFnShaJi
      sxMAhxJhDKBjdKXmIiLb1RaCIPVcTtp/nwcl2mPNzw96ZifHRwhKs11nMnI5ucZny1+dxfVF
      EVRZXokoixhjmqQ3ebjWc0ZhxDVJMRRBxBOReDJr4qoXDMbYHw96oz4JS0aNoUBvIzOWkiwG
      zRo+Y4QQvaEJ214a/j8o5+sJ/gPl9QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Concerve kWH: PV' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 89' width='191'>
      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
      KA1548fOhCPJbHGphwan/psPrXWaNRQCq0H1d/etXtm4ZLegKIt7oiE/ohl5mdJSgePFx144
      unP/GJcV6xz6r392zcb8tad5cvP62k90ufzRjN2oNusrcio+T5T5HoZlBo4f2Xf4eImsubS8
      8tHoC7vPpDlRwjDiT37tVx8XpmoM2rz/N2NB5mYKk45tdRstBlWFTqbmiTL16PVGV1W1quCO
      zKXB3r68spOxYGrEL981+8fb2qb1gAD+5Ka2xbGtPFGsA0pvbVYvzdpC2YiMMcg2LQDAHVfU
      69TMyx+NShLetq7mtk11i2hg2aFMPeFo7MzxvV7s2LRxY4kMKh0YY1HCvCixNFV0rQxC6Ma1
      NTeune9O76WNMvUY9TpXfXubqyIPa+4ZDv/wlb4Rf3KF2/jw7V2d9fI9uab8xSaGRjr10hyj
      Fwpl/4LJaCgQCg8MnimRNaVjMpR65Kl9e/v8E8HUrmPeR366LxSXj793XtnA5mT2NrU7Gl1l
      XV5zyVGmHqPV7nTXNdUWM4+9tLx31BuIzchlPJja0ycvzd7QZv/en2xY02JrcOnv3dz42P/c
      QMqVZuf/A7B2i5n0HcsLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Annual-savings' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Upg cost' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 80' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2dd5Rc133ff/f1Mr3s7M7OduwugEUjeqFIURIh
      yrIjmrbVHMmS43IcH5fEiY5P7MRyip3j+MSxTxz3IscJbYlWJJuURJGUSIAgCIDowC4Wi+19
      Zqe+3u7NHwuAAIiyZd5iSb7PAfYMBu/97pu53731d38/RAiBgIAVQT3sBwh4FxOoJ2DlBOoJ
      WDnMw36A9YVWnHyzf2bnjq0sAlFgTdtjaSCAHNfjOJZCiKZpy9ApTvAsg+Z4mqJqlQorCAzD
      YtdhWNZ23JAs1UrzquGMTUwk0i1xAYCm2GhDnCcTk2O6LbU3Rw0HBJ4rFwvZXA497E+9YgL1
      3IZjapoD09euzM4u0CKZyKvN8WgkLGlqmfBJUWD279r23Rf+Id2+fXb4bDS9MRyhDN3TTRUh
      gfFqHsPPzRV/9DOfmpyYN1138+buweFZwWUiLR0zY0MkItIsO9o/mJ9G+aKZaohva4vOKF5z
      mH7Yn3uFBOq5DYYTBLoEbLRnQ0vFxkLEjkmhlESdPD+/qT1RtBmEqKbmVgfroVQ2lkzaeqG9
      palkWJxjz00V+VimMWXbLuY4uimbvjQwJPP88Expf0sO0QLPc4rhCDyKxdOIx00p0bBsiXsX
      Dx5QMGN/IEpxbjSvxCS2IdsisHdvJ1zbvnRpYOPWrQJLAYBrqhpmoxK/+L9arcqGIhwixUo1
      GY/fvKtSqcZi0TX4CD5xXT2WZdm2vfbFE0IQevf2++9BllUjPrY9nmMaFoRCwn2uURQlHA77
      9AABK2BZNeLjuIdmhRDrn/mAh48vQzZTLX/vlZeOv35kqqj5YT+gLpiO9+dHRzTLXbEFX9Qj
      hOLNqQSiaMDYD/sBq6egWD/516fGijrHrFwDfvVcgsh6FYNlrtvXqvNvnetvSKYn5yq5lgyL
      jUjjhkxc8qn0gPtzeab6K189/8ndLT9xsJ2m7j5Gvnz+lOIyrFUT42nPo10PHtnee8c1Pi42
      LCwUyQ3zciTdnEgWVaMny42MTQxOluIhTlEUz/P8e4CAd0IIefHy3C88e/ZLT/V+8dBdpEMI
      URTFtu32tvYQw0Ek49SmTr/xRrQx+05rvqjH1quXroxnsmlsX+9Tq/Pjw/PllnRsOI97N3Tu
      3dw2W1bD4TBNv1uXWdc7BENxGG6fUBNC/uTIyP94+eof/fiuJ3ob7jozRwiFw2GO486dOYMF
      ntGLYqLjAx/9eG12DN8wcnOe7teM/eyZs9MjFzcfeLqzOXKfy4IZuy8QAq//Hpz4Y/iF08Bf
      /3p12/2Nb14uqNbvfXJHXObudesDawS75qXz/Zjle3t7/eq5OKxwoRY5dM+nDPALQuDic9D/
      TYi1Qn5g8b2ZivFTX3lL5pk/+dyu+0hnKSCKjoQkjG3dtPxST+uGLV2t0XJZ98l+wD0Zex2O
      /A782F9D78dg7CgAXJiqfPGvTz21pfHf/+BmnlntUMFztP7+oWi6JRmVfVrvUc+fOvbdIyeL
      C/PBqHjtIAQKg/D8L8Mn/hDi7dDxGBk9+p1Ls7/wf8/++sc3fW5/272mV8vCcy3skdNvHp8p
      VH2asTsGZrf3bcy25oJR8dqh5eG5L8JHfhNa9gKAk+j947lN33756lf+xd72pFyvQhg2zPFU
      Q2MG/Fst7Mg10gzPr2IlKmB5WCo895Ow8/Ow8eMAUNLsf/OPwxf15N8+RdVROgBAc9Ku3VuR
      h3iR96t2xVDY9bDABU3PmuDZ8PwvQ9MO2PszBOB7A/Of/tPjbUn5Dw6HElOv1L00pVLiODQx
      ueBLz2Wq5fGpOdUlMZn3w37AbRAM3/8t8Bzykd8o6+5vfWvgWl793R/bvrU5ivI2PP+vgRCo
      nxsM9uyZuaIFqCna7It6hFD84KFDRq1Y1exYKBCQnxACp/4CJk96n/67F/uL/+3FwR/dlfut
      H956ffcq1QtqHswKiPEHGVoqFM01pDN5pcgJvF/7XKZh8nKUWvn2bcDSuPodOP1XMx//37/9
      jeGCYv7Rj+/c2HTL8izNQut+GHsdNv1QHcvkGGLZgB3Xr3HP5OTUxdPHq3ogHz+ZPoNf/LXn
      2n/zc1+b3JGLfuWLe2+TziIdj8PIa/UtluU5keE85Nseu1qami2o0RYb4H6+hQErhpTHZ776
      K79h/Iw1E/nTz/d1puS7e5R2PAbHfg8IBlSvloKwPIcACSLnl3rS6bSNxZAU7FT4gq1Xv/Z/
      /vLP1F/86cM7P7O3lbrPoDjaDDQP5TFIdNalaNfWJvNGV1e6UNP9Uo9t21MTky0bt/hk3w8I
      IZiA42HHw45HbHfxBbZcTCFEU4hCQFGIQohCQCFEUYhefIEQRSGJoxkKLdvJH7ugl0CZhcJV
      WBiE2fPgOSDGgZOBCwEfWnzhchGFa6hyDQUcmVDgmyeuCKGP/c1nt7UmluAj1boPJt58p3oI
      ITXDCQnsstagKYrz7NroBGlq7fNrxj5wbbKxMabqDiTqbNwyzf/5j+c6E3Q2xhJGBEQvOgkQ
      ACBw8/WlSQUAtuTuuV1se3iqZIwWTJEH3XZ129Nt13SuS8f1sIOx4xFCIMLxZdPEhCyKBqF3
      yAihhCQ62BE5Oi5xMYmNS1xYYDiG4hiaoxFLUy4mx66WNzeH0mEOgCBbA6MMxWEoXgOtALaK
      +BCR0mecw2FZ6KFtV1OMuaqmlvJWbZok5wmpEUeFMgCILNsgs5/si02MT0+M3/3TVXTn7Jiy
      d3MzTTMe+aB7edpzplxMXI94GHuYuB4xbO/cWPmZfS0f3dG09O+fYrjdew9cHBjINUb9mrFv
      6e2aLWnJqHjr+0Zx9kT/VHtrhgWLiTSvzLfQdpyBgndiQnVchwZPoLwmzmgmsxG3RAFBQAAI
      IHqM7gMAaWgACPYIGsMNI7jJAA4DxQDupGbb0VyZaZxlug6EppCUgEQMaAkQDRR96xBBs7yT
      48bTvQnpnSufhADBQDDG+OSUs68JCVgDuwQ1DRZ03dFV2/BcGxNkA1OG8Ci7ZX56FNEU5qMY
      0YQAJu0eaScMwRTBBLAGFMWJOprhuWSYY2MUQyEZQQ9Az/UiEQCMFc2C4k6UrPt8SxXdHVvQ
      cyODctMGJraRHnmDwTbHCwxF0RRiaERTiBAwHC+XFO9qYXjggonEkCQqleqmLZtvbZ/K8+NK
      sTJTUvzy7zn35rGLAxd2Pv5jfZ2pm29evnRRpoxLkzWCuKc+dNA0DF3XEUKWZUmSZNs2IYTn
      ecMwWJaladowDEEQMMaO44iiaFkWQojjuPG54mjFma1aI3PlikPNq07ZQhSCBK0nnbksU2vm
      9DRZMB181YoP2ulprkPk+e602BljtmX4zSkaAAnRFEaMZZmyHLIsCwB4ntd1neM4iqJM0xRF
      0XVd13UFnrdsm6IojuN0Xed5HgBuPjPGWBCEaqUiybLrurc+p67rPMeAY1hKWWLB0hUSygjR
      BtM0aZpmGObmB7Rt+7o1zxNEcfEbuOMxbrWsqqooijcfw3Ecz/MEQbjVsqhORE/9/sLBf8/F
      GoVnn9E++B/p7LY7LHued8d3axhGNBrlef5ifz/jaUP9g70Hf2BrV+OtlTt07s28Zs0tOH6p
      58KZ8zTrNrVtSUTeXi0sTw2/eXmyOdcUYR2I5tozsXp5hxFCNNsrqtaCas1UzOmyMVMxeJba
      nI1sbIy0JiTZt5WtdQyB81+F6TPw1G/B9/4zhBth388+8J6bNXLxrRMm4kJyuFZaeGT/Pu5G
      24Nda2p0cr5SBuD8Us/5U8dsEDZs6osHpwEfItiFb/87aNkDoTSc/DP41N8+cMtiyTXiqYrt
      12qhZVmWWnj5u0ft4EzOQ4Ri4IlfhQvPAc1D8Ro4Rl2sapXCqVOny5p5m3pcx7lrQ2SbRrWm
      2I6z9AIaG9IWkXo25gIXjYeMlIAP/Cs48WfAhSDfXxeT02NjzZ296UTottHAlUv9PY9sXxi/
      VnXYRFjQNF2WpYaGzPkTx0wpJSKPBjeTbWcox0Y8R7EN6di9CqipRkNckOPZwMPn4dO6D6ZP
      w/wFGH0NcrtXaQy7lmO7r774wvZ9T9xlLDlVqNLgOQvmrGFHQplSYcZEUndXx8ylo5rclZ+b
      mpwtSGBsfPTj9yrAVMtX+i9PF2vbD4itma2BgB4yCMHuL8LMOZg+Uw9z+PKVSy7IkizcNmou
      TI+N5WvZVNih5JRE6R6m2VAyKpWLpWgyUS4W52cm2nq2VYt5ANKUzd5/AKbmx8arYl935j7X
      BKPmtaM4Av/w0/Dpv4XI/dYGH1gjBHv9F84UFqptW3b5Mucy1fLlgWuW623duTt836lyoJ41
      5Rv/EhADP/i7QK/iPJdn91+8aHmQbev2y6951549+/fuDvZI1xfZR2D0CJx9FlbRZFA019yY
      djEmhPg1JKkW5wcGrqjmMqZpAb7T8RjQNFx7GWYvrMbM/NQkK8gcQ/ulnpHRiZbWtkjglrqu
      SG4AioHtn4IjvwuWsjIb2LU4KV4r5jXTn9VCU1X1Sv7ZZ786vaD6YT9ghSAKso8AYOh6Ao78
      dyArWcmlGL69t2fvnr25TMyftsdTh6bymcam8OqOTAfUGYSg83EYOQI7PwfaAgx+Z2VmJocu
      H3v9tUtXpn1RDyfF9j6ylQYIjiGvO1oPwtRJAIAnfhVO/w2U7+EfdF+i8bht4lRTwhf1uLZR
      Vq3GbCYIernuiGQBENSmIZKFHZ+F//dzMHJkuTbys4WDj++em1rwp+2R412tjQ++LmDtoVlo
      2QPjbwBCkN0ONAdmdbk2UunIc3//QjwV8cvrZXJyprGlQ2Cv27e0yrlLV7s7265NFlqzaY5y
      PS6ejgVxCx8GHY/DwPOw/TMQb4N//lWg7tlDzE+NTJfMpphQc9mozJuakm3t4BiqMF98/PCT
      qbDo15xL4Jnz5y9U9evekzQntqQipy4OxRntzMXLx8+PxEK8rus4CKq69jTvgvmLgB0AAJq7
      w+OHEKLruuM4ABBJNQquOTxX0cozbx39blGnFo+oJlKJkf7LRZ/OVAih0Jad+/sIQYgCgPzU
      yFyhcPnq7Lbe1oHxQropE6GtyYVaWzoSRL18CISbgBGgNArpO2OgAgBCiOd5hNDVy2fzc3mF
      jqY4t2bR2Y4+rTCuO60SS5umWS4VFNXwy7dw4Nzx8YmF3t2Pd2SDuIXrj5d/816OqkupkaHz
      p0O5rnjIn9hhABCSIxix8aWcNgpYezoeg9FlT7VuEolKb776/elCzS/1FCrG/l3dhcIKl8MD
      /CW3G+YugHu/Mz33wbJs7FqKYvilnrjofe351yPR4BD7uoQPQ6JrZXulnq0PDk0mG7PpZNgv
      9ZQ08qlPfiIRnGNft6y486KohkzL1u3bklHJL/VEBfLaq8dKWuChsV7pfBxGX1uBow8CSlPy
      586cmSsqfqnHJmApFU1fYc8a4DsNfaDMglFa9o0IEAWGoXO8bylVPSJ87Omn2xvvN10PeJgw
      PKR6VjD0ccxqKNHz1OFH86NzvmUa8NRvvfCd+arpk/2A1YIQdH4QRpcdVowVwuAWL1wcaWxv
      8Gufy2VYEXmaakHs7iEaAh4+7Yfgn34ZsAfUMgIjU7SwdefO66/9eCqtlC+U9HAmmw5WC9cz
      8Q5wDDAqKzbgS9tDMXwqk21taRbfj5Er3j0wAnz270G854HgB+JL20PTMDs58tZbpytqMOda
      xyAEkeyyuq078EU9BAMQp1StMavO5xOwnvGlZ6nOzW3c+6EYlGfnqvGutB9FBKwH6qyeRX+P
      UENyfHBgFlBnb98DPUB8chEJWDFLr5E6+/cQQjRNe8fb2HWI65g0L9qGJkghQ9fkUAgBGIax
      GH8vYJ1wS43cqDVOtM3bau0mdW57EEKhUOiON2dHL8yUJVOZFCSpXFJCYblWrvXuPZAQEMuy
      77w+4CGCMV6MPVqauTJVlCx1kpekalmRQ3KtrGw+cCiXeDvb11qE1mloyXEY85EkcmqhVNbU
      KslUAhMIMmo/dFyP3NH53Myo3ZDLccTjw0nKqcnJ67VmO7clHlkL9VCUnOtszkS41i2HkqK7
      +9ATQkjOJQOH1IeM5eCj/SXHu/vQBVFyS2dzJsa39h1Kiu6uQ08IIaklddvGpV9+zUsk8Gt+
      WBBCLo4rDE1tarltKLOsGgnWgt+nVDW3UHMe2xxfbtJA7JpHX36ZCUfERGcQUvD9CCbk4oSy
      OSezy48pSTHC5i0bGZpPxHw7UxGwnpkomCxNNcZXGF3JtqxatWyoZqCe9x2m7Q3NaFvbQstO
      BnUDXhCIR0WSoUA97y8IIVemtNa0IPErXyvhBdkGh7g4UM/7i5LqlDWns1FaccMDAGqtzAkh
      lqF8mXMRgl3XA0A0Q98v6WHA2oIJuTSubmoJsauLV6mrHscbUxMLvqjH1mvfefGVhmQk0rqz
      ryPpRxEBK2Bs3pB4KhNd7SG7SCJE5nGsK+lLz8XLsV1bums2l2uK+mE/YAUYtndtTu9rDa+m
      z1qkUijZCLRi1a/Vwqqus3ZtPq9EW+M+FRGwdAgh/ZNqR4O4msHyTdo3bcrYPaIk+aUenhXE
      ZHN7buU+swF1ZKHmKLq7o6MOx+uwa16+cMnBlhTv8mvOlUlHr4yMBmdJ1wOuRy5Pqn2t4WVl
      zr4XFCNs3r4tm4zJEd/WmiemFzoaY5a77MByhZqNceBtWE9G83pYpFOR+kSwda3ahUuDmm5W
      y77F7yGU4Fglpbrstmds3njrWtVevuwC7opheaPzxubcyleW7wBRjKtrpufJsujbuEcSQ1I4
      uvyoqLs2RK5Oa8cGyrs2RMMCXa/P/P6EEHJpQt3QKIn1GCwvQrPSrr07PQI8x/vV9pjVOd1i
      bGvZEVgohHqb5d5m+cRgZa5sBT7zq2G+amuW156ps+f4WP+lYk0zbceXtsex9Gi6JZphGtMr
      8VlGCGUTQkhgTg9Xa7rbnZWpegz33l9YNWfs2IC9d1t7uO7L/ZGYdPzo0a17H/Wl7aEoWhRF
      sCpjk+UVG4lIzMGN8YruvjUcDIOWCSHk6rdGykxMZhOh+qd7sCzHtXVF9SduIcWwiPaGroyk
      Gla11syz1J4N0bDIHBsoK4b74BsCAACAFC4XytoEv31TTvZj4BiKhNKZXCoV8UU9xdGhmsdt
      3bZ5fnb5oaluh6LQplyot1k+PliZDYZBS4BY6vTI1fOhH9jTExc4X46sFPMFhsMn3zjli1e8
      q1feunCVAty7bXf0vsvZS/fBrmrOmZFaNsF3NwXDoHtCCBm+OjRpRvf2JmVhJYPaZXnF+3Wm
      Qqkp4ciDH2JZz2o5+OxIjaLgkc7IKn0M3pMQQvonlVK5tmdT04pbnQfnRHbNi+f6uXC0p9u3
      nYr+cydOnTpdVusZeY5nqb3d0bDAvN5fLil20IvdiofJ2ZGaMnVlfwfrU4e1CKL55qZktZyf
      L1b9Uk822+hZtlvvHCYUhTbm5E250LlR5a1r1ZruBhoCANvFJ4cqaPb03ozCRjK+luXZ1aOv
      n852bsqmo/SXv/xlP8oo5WeGhiaynRvCIgsAQLw3j76GePHcG8dMF509dTqebRE52rZtnl+e
      Zz9CKCQyrWnRxeTSuFoz3LDEcMs/WfKewbC9U0PVuD2xhZymNj+zmmhOAHCzRs6fOqY61Mjl
      M2XDvXL2FBZS8YgAAI5VLS2Yc4WFVDrt106F4+BsaxPcTL9FsCDJhemrQnPv7PiFplzbQllh
      MbfiDEs0hdobpOaEMJo33hgoL46mOfZ9pyHVdE9erbYloHPyNbTpaaBX6zdICFEUhed5XpAW
      CtNstNFduCo0b1bLM9AcAwBOTG7e3osBGP/ysTuug11reHj0xjofQjSKZDrIwkjHxt3FQrUx
      FV19FASWobqbpMf6EgDw6qXS0Izmevh90pURQsqqc/xKpbdZ7tSPo1Q3RFtXb/ZmFASKRuFY
      ijNKcm47KYwkMm3XL6AYVysPj41X/crPRbBlu6ahh6Ox+0+u63iOXbe8wWmtqNgbmuSWlFAX
      X5Z1CyEkX7UvjCk7OiJpPAVXX4BdPw1MHXLKLC0/14m8SXV09vjScxXG+l86fsEwjC37nty3
      pQ6/EEtB4ukdHeGa4Q5OaWPzenez3BjjV6MhTIhpY830iorNsxRFIRohmkI0BRSFaApRFFAI
      IQQUQhQFPEOtmUfA5II5NKPv6Y7GBAJvvQDdH6uLdJZIJB4vTRY1y59d0kRzx+YtdFNSDqeb
      /bB/LxBCUYnd0x0tqc6VKe3SuCpyVFhkQgIdEhmZpyWeZuh7VjAhRLM8RXcrulvVXMVwaRpJ
      HB0SaA9jTIiHr//BGDxMMCGEACGACcEYAEFUYuIyG5WZiMSwdT2MRAjRLa+iuWXNKSmOh8n+
      3qgsMHDtRYi2QryrbiUtAYqiAICmad8isBBSqlYTsQf4NfsXgYUQ4mKiW55ieKrhqqanmZ5u
      exxNyQIdEumwwIREmqaQYrgVza3prmK4PEuFRSYmM1GJjUgMSyOE4K4tCiEAcOMvACFgObii
      ORXNrWiOYngMhaIyE5OZmMxGJIahEYK7m7rrwwOA45GK5pRVt6w6Vd1laRSVmbjMxkNsRGJo
      CkF1Evqfgz0/V8eGZyk1gjFGFCKY+BiBRVHVB6rHPxBCLI2iEhWV3t5kJoQYNtZMTzXdmu5O
      l0zXIxGJiUpMc1KIiPTSpxEIAcCNvwCAQOJpiaezibcLqmpORXeHZjTF8FgGSTzNs9RiN7f4
      k0aIohB1o++jKIQADBuXVUcxXMclEYlJhNjORikmL0r5FvG5Fgz+E/R8fC37LADAnv3y88+7
      gtDSvt0v9diGihCD1yY42ZJBCC3WcXrVJ+KWWFBTAgAAE2JYnmp6jkcwJos9HSbEw+C6GGOC
      CWBMPAIEE4Gjsgk+IskSR99zR48QmHgdwo2Q6Pb1g7wTiuY621stKZHNxP1Sz5XBK9GQMDwt
      dDcHh3KAQkgWmJVtW94dZRbmL8Kun4KH4bkrh/hzZ85Lh2K+qMdU1Up+5vXjU1Is1/bpTywr
      CdiRc+O6HfiCPYjqJFB74VwBoHDPaxAN9ANcwxiaeqwvvdyVetN0U0m5tFDzRT1CKPTYRz/x
      2IruzaVky6n39ti7F+yCa4FZBb0AZgUsBQgGhofEBkg8aJ5FMUA9QD00jVawqJHKJI+8eflj
      ex7zMeql55iGBaHQ/cZ0QdTL2/AcsGpgFEErgL4AWgEcHYAAK4OcBikNchqEOPBhoDmf+qyl
      1Mjg2eMeL43OmH6Ney6cOm4Bt2FTn0/23yO4FugLoM6BOgfKDJhVYEUQ4iCnIdoG2d3AR4AR
      gGIeyvjmXoQiif7ha825Pn/i92AMgG3bfo8cCiUEgFz/iV2wNXB0cDSwdXC0Gy9UYARgRGAE
      YMUbr0Vgb7y5qADHAHUO1FlQ5kCbB1sDKQmhRgg1QuMOkFJAswBoXWnlnZia6gLFMf5kX1MX
      ps9e7HcJm+vuS4bXdDWiPhACrglmBdRZUGZAzYNngWeDZwMhwMnASsDKwEnAyiAkIJIDmgfi
      gWOAa4JjgFkF1wTXAMcE1wDXAAKAECAKQhkINUFmC8gfBjEOaF2taSyJrm27urYB+BSvWU40
      HNy38/ylSVHyd1mlbhACtgpG6YZc5sGzgREg1AThJshsB1YCmgeGA4pdScNACBAPsAs0926U
      y624ZvXI0VPVcqGl76A/scO08ptnBtINTT7FtYPSEAACIQp8FJjlh40lBBwdrOr1uYwyA8oc
      IAA+CqEmiG+A1keBjwDN160HQQgQA/7E+VtjEKItQ2vv6uYE7l2VaQB7UBqC0VcBAPgQWApY
      NUAU8FEQoiDGQYhf/8mHAdEAAMQDqwZGGYwSGGUwy2BWwKwCxYAQBSEGUhLCWQg1AScDotf5
      gGMNWHKNEOzrPlc9wS4Ur8LYEaBZ6HoS4p3Xq5kQcA0wq2BVwSiDXoDiVTArYGvX2yTXAi70
      trASXddbLN9mvO8HXNus1KoY13Ht3CewCwtXYPx1YHjYcBhi7beNGxACVgJWgnDTnXc5OgAA
      K6/SzzfgnYwNXLKlRLYxso7Vgz0oXIbxo8CFYMNHIda2jPEmxQBfhyhrAe8Ee7am1E69dWHP
      Bz66DtVDAHuQvwzjR4CPQu8PQST3bp+nvJcg2BsYHm5t2xCP+Bb1cqUQmLsI40dAiMLGpyGS
      C0Yn6w2KEZ48fPjFb79ibvbNv2fl6HnY+DREmgPdrE+IZ505c6Fry9YQ659n6tIIdknXG8uq
      kYcxniDEcZz3yamrdy+e57reAxytHoJ61OL0d1/47mxVX/uiA5bOmTffOHHy7P2veQjjHss2
      s7lGc/kBMQPWEiSEJFh/bU88naMYtjnIqL2+yTXE4o0POMl5fdRsWZZt22vyVLdhmqYgvAtd
      ON67LKtGrvdcPM8vNxLKA1mKZyoABHOu9cZDzsfumNr0bJ4Aamha05PIAWuMPxF3aWZycpyy
      K+Nzih/2A9YJvqiHZvnupvipgfm2G0cBXVs/e/acodYuDlyrlMparbhQCWbs65rpsasjU/NT
      o1eLlUqpqk1OTr/zGr/mXEXNkLE6PVdd/Kfnepmo+OobZyi9eOL8+aMn+6NhwXGcIOrgOsRx
      HM/zpFiqPD08VzbGB04///VvYO4uPgu+qMe1DcvEXDQRla/7NbtG7ezAZGtDdL6siUI4Habm
      K6rneYF61iGL9XL17EkulrHUCqG4zu6esZFr76wqX0bNFEWrlgt2Degbc7pwct++HeFwuNmy
      JYFnaMr2iMCxjhOsGfqDrcHoEeh5agWbzYsz9k2P7PUQyzc3MLwAQGH3+oIOds3LF4c6Nm0M
      Caw/6mG4qABzKmcZNkR5AGA4IZUSAODmuoAQePz5hzILX/sCFK/Bz58CKbEyG5HY7Tey19M0
      UYywcXPXke99u3fX436Ne9INTZGICO/p4IHrEUJg5iz8zQ/D1k9CdhfMX657CZ6jfuPZr7Xv
      +ECuIernTlKjfhkAAA6LSURBVAVCBAfRMNYQQuDKC/D1n4XD/wl2/yS0Pwpjr9e9EM8x+h7Z
      p1Uq4NO4pzY/ferM2YWK6nLJXOOWoI9aCwiB438I5/8OfuyvoWETIATth+DlLwPB9fXrRRQz
      PjISycRnCglf1BNON+VaW/fujFTppkA6a4FjwIu/BqUR+Pw3QE5dfzPVA+o8mFUQ43UsimbD
      0TjrYUx8mrEjitrcs2FwtNCQqHNGzIC7oObh7z8H2IPP/N1N6WBCdCRCohNmL9S3NIpmso1p
      iWMKRdWn2GHl1469JSSSiQdtkQaslsJV+PpPwZYfgQM/v3jSuaTZr10tfPPcdEmzv7rtoDB2
      FDofr2+Z4Wi8UJlLx2Rf2h4hFD90cJcMuL4ZlgLuZORVePbT8Ni/hYO/aGH0vSv5X3r27DP/
      69ixaws/eahDZOkr3BaYOA51XZLFnn3m1OmpmQnNcv3yLQzH0nv2p30yHgAEw5m/gTf/yHnm
      zy/ijm/+U//3r+R7M+FPPJL9L89slTkaIXRlTnmlpOwoj4OjAyfXq2SK5tpaOiers1ZN80s9
      +fm8wAJhI9F3Y/yedY6tua/+zsiFYy90/NeXv65J3MA/29H88090pUPCrQvLT/Smv/Tc7C9l
      tjGTJ6DrQ3UsP5WRB8bI5h2+ZViamZ6anRjs3vWxQD11gxCiFSYuHHnl5PlvFZJ25tefjDf/
      /gcau9Khu4agb0/JDiZT0V3tY0frq55qRenuzs3OFP1ST5RzKrHOhobgMHk9ICQ/N/XiiQvP
      X5yr8M2Pb/nsf/jRpo2NkftHymVp6tENqe8bPV+c/YN6Pgt2iRBhTS2Z9We9BwA0Fzxlbnau
      Emlb4T7LeoFg8BygGEAUIEQIIQQwkMXkJotZTlyMNcuLyyxLU3VMbUIIKev2yxenXjgzMlZx
      nuhr/dLnDmxriTEUWmK+iw9vavj9l8pf0OaRtvD2OtDq8Gy9WnM3tCVGJ/1pe0y1XJjLTyyo
      fbH6r/cQQs4OTjUlpHhYus9lE/kaALTet/ErK8ZMSe/JxTEBQoiHiWq5qmkrtapimKqiKuV5
      o1bk1fkJNqewaZ2SDUxbjmc57q1/MCYCJ/Ac3ZIK92QiGxvDvY3hpgjHIo8CspgIBRO4NG10
      pMWwxN0RZupWIQzPViSeiYfFU2OlFy7Mnhme2dVAPrene+/Gdo5hAMCzrdmKVlbtnlz8PgrS
      LWdoutLXmZkom9WGvtjMGeg+vKTv90EwQiSXqZ4emPnA/n1+nUS+eOYkzVBCqrszG337Xc+e
      zlcS0RBNE8tjwhK/gpPIpWLpF/52IETZEdYFAARkMQ7UzZ8ICADM2jIAZDidAIUBYbjLV624
      rOYxKUohBGOMCSFA0YDo69cSAAAHaI2IIWQw4AEAIKAA00AowBRgCggFGAAmcUMC1QgAuVEQ
      RTyGOBR4i3YwovMoHUVamLYJxRJABCHyjqcqWAJDYZloHsaIYmTaZfg7fwMXTMbwqJxk37sB
      QqqDijb7padanr1U2V/8+tMdBJ78zaV8vTdrRKuVbOB4hrFtMxKN3tqmeo554vTFPXt2+dVz
      iRxz+tLgocObbn1z9Org/EJlEBDyYN+B/SuzHIvHDm9NnJwoz5qM7Xq2h20X265386freRy4
      Imd5QF8GFJe5mMTFJSbJWCnGSDFWktFTSElSCtDinLBhq7yAYq0o3gpSCiEKELq1ObAc5/x4
      dXtbjL+3NwsGcnm8uLE5xjJvb8wQANcjEyV9cE65Mle7lld01cjbGFEcz1I8QwsszbOMwCCR
      cgVPFfUZUZ3c6ea7UtzmnYeonsPvTDK6+FhzZa2oWJtbE/dpezTT+sdTU0cGFj7U2/SPr/Q8
      Pf6Xy93w6h8YIsQt5guZ9i2PbI3e+l8T1wZampMXB6f9Uo/psck4b6s2JN5eafAw4Vlac2iW
      MnXb8WxD13XDMCzLkiTJtm1CCM/zhmGwLEvTtGEYgiBgjB3HEUXRsiyEEMdxH+oOPdWXQAgZ
      pimIouu4juuKgmiYBqIohmFrmkGxPEsBcaxQSHYdBwgWBMEwDIZhGIa5abnNcRxRtCwLPOBt
      W9d1juMoijJNUxRF13Vd192WkwytZlEUx3G6ri+6KN18ZoyxIAgZ0TUNTXXdW59T1/VGiW/s
      DO1vZkUxZ1i252FRFEzTZBmaZVjTvP4Ytm1L4m7bNAC7vBSqmTZrmBRl3/oYNy3HRI4jWNeU
      m4+x6EsqCIJpmjRNMwxjGcYndmX+4pWR/MTE2Vq06tW0q+f4VNvid3vzA3qed8d3axgGLLph
      URSFIRSJqUqV3PL7hF2rulB+4/vHCUh+9VxnTp5o6eiMxBI8e8s+qWtemyo0JmMCTysmiUfk
      IIaGryyUa7/93IURzfol8w8/+MzPQM9TD7zlZo1Ui/MWEkSW8RwzFEswd3PV8su/h1jV7738
      0ptnBm5z8GGEDe0toXCY4aR4pG6rnwH3IhWPfPbRNskjR93NMLo8X59oMtOQiIbDciyRvJt0
      3GpZ9Us9vBzt7GirLczZQb6bh8rOjbknt6Tn+U3m5GnA9amM0Utn3zh5VnO929Rz7dK56ZmZ
      fFmxLBsAijNjx954fWgsb1kWxl5hdKhketjzPM+1bHtkeKRUqlqW7Xne4vW3EgnJNqYPPHYo
      8F9+uCCEPv34xnCq/WJJJEZp9QYJwYCwaZieh28bNeuGkx8esFwOu2r3jgPmQlHTjYXJgZe+
      c6WlvYMzNWZOb5Q8xXAQL1Tnpj3Ho1iK5mPIsw9++AnxhhQ9x+ofGLA8ornchx7duczcYQF1
      RhD4PRszXyl/vnN6JNmz2q1rz9FOnTyrEDrZ1HlbxUrhaDoelUMhipUozwJO3r51GyuImzZu
      bm/OUBwfF9FUvhqSBc8h8UQinoiznJBIJLo6mm4NM4U9b9P2PV0drV1dnYF01gNbOjNjFvsX
      Z4nnrbbzoln54AcfTciSHL49ZuqGjT23XdiYAYBMJrP4r61bty+xAOzZ1UpFVfRQNui31gWd
      KZlIcn7i6osn4z9woHc1pohnvfnGCTmV5Wnky3oPJ0Y29fUBIMaf82IBy4Whqcd6G4U3nv3+
      +aaeXHxDS8OKTVGM+Mynf9yyHZZdVsLZJYMoimVZClwt8C1cN3x4Y8Mpb8NP5Eb+6nvDqm6s
      xtTIpbOXr14r1Qy/RiWXTp84c+5ycMx4/bAtF5sMbc2i+e2t0WdfvYpXmrcRe45lGlf7+xcq
      vq33kAcFTAxYYziG2t+TPTKqfOJg11zFPHF5YmV2EKLaNz/y1Eef7GhO+qIeZX7qwuWBt946
      XVEtP+wHrIzDmzMvLSR4I//Th3u/dnxivlhdgRFE0bZWGhocKlV1X9QjJ1Lbt21py7XKoTrH
      QgxYDQe6khdJlzLd35iK/cj+3J9/d9C2VzK4ME1jemK8ppm+qMfWK6fP9ZuuG8zX1xUiS2/e
      0HF6ZB4ADmxpS4XZv/xuf7GiLteO56ADjx9kKdqf81zRxp/4whee+eEfTAanAdcTCKEPb2p8
      ZdQCz6Eo6rFN6aPD2vfPjS/XjiAxE8OTNO+PegDgzPGjp06dvnkakBBsmibGeHFfDGPvgTkQ
      AvzgA92pU+WQqRQBoLut8ZcOtz65q/1eF3uea1q257qO63qe57ruoj9PZaHksgxP+5Ol13Uc
      7NmFstay4fq6uFErnjt/0QNeVbVwIkZ7dvfWXalIcMp9rWkIC/FMy+DY9PYdjQzD7N2Uu8/F
      M5Mjw6PTLMu5QNGuTnGxPfseYWkkSpw6X/R8ympLsNfe05c27IjEAUB+akT1WFlOAeWlw8xY
      2aKJx7G0oiir33YJWBYUhZ7oTb8yPLN9O7lrUDpCiKIoPM+PDV0WI6l0Y7uhV0RilxdMXqBp
      mgIA1wUG2cWFmi89F8sLrqGUFkq2CwDQkOtsCNO6YzRlszoT3b1106P7tuuGGQ6HaToYWK81
      j/ekjo6q3j18fRBC4XCY47ievkewUTMstTmTiDa0bNt9oKc1ZTkeACDE8GKsvSPj1z5UrVq6
      culaoqUrJrMAEEpkD+zPAkDDjT3XoNN6WHRloqZHTS1U2zLJ+1/Z1tPXdtsb14/mIcpxCdZU
      f2bsAECY6Ic/clDkgl3SdQfDMB/sCr0yWFyxBUIoS60Ui4pf6mGRNTI2e/0sU8A640Ndke9d
      ya/sXuw5NCeLQqgp589OBQAoikZzvBD4hq1LdrQ3TM7MFle4j0SGr10TQqJj2n7VLk2D4zhB
      y7M+YWPZA9HS0aGFFdxLPLdSVhZr1j/1IGWhUKkGu6TrEoSe7JJe6p9fya0U3b2hvVQq+xX1
      EgAA02I02ZAO+WU/YHXs60z1j07VjGXvknquWdK9jRuytZLml3pc4okS76xoCzdgDZDbdvaY
      589OVJZ/K3Z0c6GkuJ7n14yaZdDMxFwt1x0PNkrXJUhOfaRRf2lg/rGe1BKjAS3CCvEPHr4e
      hNWnDEu2KEcYXorFg0XB9QpFH+qInB6astyVb1f7ox5D6b86HolHsBtsY61fGjv6PkLedFbh
      7OCLejzHMYMRz7qHat71K+GXwszKf8P9yUsqhDZ2tVgPI8F7wDIIZyC5AeyVJ4j1xzNVKZcM
      TxaQrrt+2A+oDxQDn/zKitO/gU/qcWzLdRzTsEwzWC18L1Pn2GGEEFVdhpe1aZqLWTAD1gnL
      qpE6r/cs+hbd8WY1P17QRH1hSEy3F8cGGzt6x4eHdxw4EOIoAAgiz603JElCCKnFqXmFN4rD
      YrqtND6Yae8dH76248DBqMjevHIt9sApnjYWSo6Y0qfPUenOscHTyXR0vlRb9JNfgwcIWDqE
      ENM0Pc+jeMpYKDtiQp8+j9KdY4OnE+n4wu3Hd9ZCPbIcESNhUp1l0xvNmcGmtr7ZqUIqFpZl
      maICF471BUJIlmWWZSU5IkXCpDrHpnut6cGmtr65qfwd0Sb9ipm6RIKYqeuNZdVI4DkasDyw
      a547fc5FVFNbz/8H3q0sbsE127UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 91' width='191'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='144' name='Sheet 81' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAACQCAIAAAAeHsdkAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAABQElEQVR4nO3SMQHAMAzAsKz8OWePObSHhMCHv90dmDm3A3iF
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFcgP9eEEHcxAtUgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 17' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 82' width='191'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 90' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Conserve-by-' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
