<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0408.1805                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='Escillation Rate: Gas' datatype='real' default-format='p0.00%' name='[Escillation Rate: Electricity (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.02'>
        <calculation class='tableau' formula='0.02' />
        <range max='1.0' min='0.0' />
      </column>
      <column caption='Colour by:' datatype='string' name='[Focus on ERS (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;HVAC system&quot;'>
        <calculation class='tableau' formula='&quot;HVAC system&quot;' />
        <members>
          <member value='&quot;Best+fuel&quot;' />
          <member value='&quot;Best-for-homeowner&quot;' />
          <member value='&quot;HVAC system&quot;' />
          <member value='&quot;DHW system&quot;' />
          <member value='&quot;DHWR+SDHW&quot;' />
          <member value='&quot;Main Wall &quot;' />
          <member value='&quot;PV&quot;' />
        </members>
      </column>
      <column caption='Municipal Taxes' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='0.0069646999999999999'>
        <calculation class='tableau' formula='0.0069646999999999999' />
        <range max='1.0' min='0.0' />
      </column>
      <column caption='Escillation Rate: Electricity' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.016500000000000001'>
        <calculation class='tableau' formula='0.016500000000000001' />
        <range max='1.0' min='0.0' />
      </column>
      <column caption='Ott-GasBase-GasAnnCost' datatype='real' default-format='c&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' name='[Parameter 10]' param-domain-type='any' role='measure' type='quantitative' value='1000.0'>
        <calculation class='tableau' formula='1000.0' />
        <desc>
          <formatted-text>
            <run>Ottawa gas annual cost when base case is a gas house.  Value needs updating if base case parameters change in bps simulation. Entered by JTB 21-AUG-2014.&#10;</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Ott-ElecBase-AnnUtilityCost' datatype='real' default-format='c&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' name='[Parameter 11]' param-domain-type='any' role='measure' type='quantitative' value='3345.0'>
        <calculation class='tableau' formula='3345.0' />
        <desc>
          <formatted-text>
            <run>Ottawa annual utility cost when base case is an all electric house. Note that 3345 is just an estimate (by JTB) since not running an electric base case as of 21-AUG-2014.</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='BaseEnergyTotalGJ' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Parameter 12]' param-domain-type='any' role='measure' type='quantitative' value='132.38399999999999'>
        <calculation class='tableau' formula='132.38399999999999' />
      </column>
      <column caption='Amoritization period ' datatype='real' default-format='n#,##0&quot; yrs&quot;;-#,##0&quot; yrs&quot;' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25.0'>
        <calculation class='tableau' formula='25.0' />
        <range min='1.0' />
      </column>
      <column caption='Base Case heating fuel type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Natural gas&quot;'>
        <calculation class='tableau' formula='&quot;Natural gas&quot;' />
        <members>
          <member value='&quot;Natural gas&quot;' />
          <member value='&quot;Electricity&quot;' />
          <member value='&quot;Fuel neutral&quot;' />
        </members>
      </column>
      <column caption='ERS equip mod' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='31.0'>
        <calculation class='tableau' formula='31.0' />
      </column>
      <column caption='ERS House Volume (mÂ³)' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='853.89999999999998'>
        <calculation class='tableau' formula='853.89999999999998' />
      </column>
      <column caption='ERS DHW Mod ' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='11.473000000000001'>
        <calculation class='tableau' formula='11.473000000000001' />
      </column>
      <column caption='Utilities: Assessment year' datatype='real' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <members>
          <member value='0.0' />
          <member value='5.0' />
          <member value='10.0' />
          <member value='15.0' />
          <member value='20.0' />
          <member value='25.0' />
        </members>
      </column>
      <column caption='PV costs ($/W installed)' datatype='real' default-format='c&quot;$&quot;#,##0.000;-&quot;$&quot;#,##0.000' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='3.2000000000000002'>
        <calculation class='tableau' formula='3.2000000000000002' />
        <range max='10.0' min='0.0' />
      </column>
      <column caption='FIT' datatype='real' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
      </column>
      <column caption='Ott-GasBase-ElecAnnCost' datatype='real' default-format='c&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='1650.0'>
        <calculation class='tableau' formula='1650.0' />
        <desc>
          <formatted-text>
            <run>Ottawa electricity annual cost when base case is a gas house.  Value needs updating if base case parameters change in bps simulation. Entered by JTB 21-AUG-2014.</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Interest rate (%)' datatype='real' default-format='p0.00%' name='[generation Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.035000000000000003'>
        <calculation class='tableau' formula='0.035000000000000003' />
        <range max='1.0' min='0.0' />
      </column>
    </datasource>
    <datasource caption='CloudResultsAllData (CloudResultsAllData.csv)' inline='true' name='csv.41869.613428807868' version='8.2'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='C:\cygwin\home\jeffblake\HousingModels\trunk\Opt-Results\OTT-LEEP' driver='' filename='CloudResultsAllData.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='CloudResultsAllData#csv' table='[CloudResultsAllData#csv]' type='table' />
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column caption='Annual savings, 20% markup' datatype='real' name='[Annual savings, 10% markup (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;-&#13;&#10;(  [Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]&#13;&#10;  +[Calculation_7830311143752081])*1.20&#13;&#10;&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column caption='Annual savings, 30% markup' datatype='real' name='[Annual savings, 20% markup (copy) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;-&#13;&#10;(  [Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]&#13;&#10;  +[Calculation_7830311143752081])*1.30&#13;&#10;&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column caption='Annual savings, 40% markup ' datatype='real' name='[Annual savings, 30% markup (copy) (copy) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;-&#13;&#10;(  [Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]&#13;&#10;  +[Calculation_7830311143752081])*1.40&#13;&#10;&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column caption='Upgrade CostAdjuster by Fuel type ($)' datatype='integer' name='[Calculation_0000328154041002]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([Parameters].[Parameter 2] = &quot;Natural gas&quot; OR &#13;&#10;     ( [Parameters].[Parameter 2] = &quot;Fuel neutral&quot; AND [Calculation_4270328153916499] = &quot;Natural gas&quot; ) ) then 0&#13;&#10;else 1600&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Cost of ownership --- difference from base case ($/year), no markup' datatype='real' name='[Calculation_0040311143954202]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]+&#13;&#10;[Calculation_7830311143752081]-&#13;&#10;([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Adjusted ElecFurn cost' datatype='integer' name='[Calculation_1010313135857628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [GOtag:Opt-HVACSystem] = &quot;elec-baseboard&quot; ) then 4950 - 1600&#13;&#10;else 0 &#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='PVTooltipString' datatype='string' name='[Calculation_1110818173408769]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [GOtag:Opt-StandoffPV] = &quot;NoPV&quot; Then &#13;&#10;   &quot;No PV&quot;&#13;&#10;Else &#13;&#10;   RIGHT([GOtag:Opt-StandoffPV],3)+&quot; of PV&quot;&#13;&#10;End' scope-isolation='false' />
      </column>
      <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// JTB: Need to modify for Ottawa electricity rates&#13;&#10;([UtilCostElecDoll]-[EnergyPVkWh]*[Parameters].[Parameter 8])*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([UpgradeCostDoll] &#13;&#10; -7905    // JTB: Adjusted to remove cost of base Windows (19-AUG-2014)&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
      </column>
      <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
      </column>
      <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Water conservation package ($)' datatype='integer' name='[Calculation_2900312105624061]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([GOtag:DHWLoadScale]=&quot;Low-Flow&quot; ) then 80&#13;&#10;else 0&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Best+fuel' datatype='string' name='[Calculation_3690403141636492]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_8750403103901360]+&quot;\&quot;+[Calculation_4270328153916499]' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Bad-point\\Electricity&quot;' value='Non-cost-effective, electric heating' />
          <alias key='&quot;Bad-point\\Natural gas&quot;' value='Non-cost-effective, gas heating s' />
          <alias key='&quot;Good\\Electricity&quot;' value='Cost-effective, electric heating' />
          <alias key='&quot;Good\\Natural gas&quot;' value='Cost-effective, gas heating' />
        </aliases>
      </column>
      <column caption='Energy savings (%)' datatype='real' name='[Calculation_3710312133127667]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Parameters].[Parameter 12]-[EnergyTotal])/[Parameters].[Parameter 12]' scope-isolation='false' />
      </column>
      <column caption='Cost of Borrowing ($)' datatype='real' name='[Calculation_3730311142712896]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(( [Calculation_3950311142640640] * ( 1 + [Calculation_3950311142640640] ) ^ ([Parameters].[Parameter 1] * 12 ) )  &#13;&#10;/&#13;&#10;( (1 + [Calculation_3950311142640640]  ) ^ ( [Parameters].[Parameter 1] * 12 ) - 1 )&#13;&#10;* [Calculation_1760312105551885] ) &#13;&#10;* [Parameters].[Parameter 1] * 12' scope-isolation='false' />
      </column>
      <column caption='MonthlyInterestRate (%)' datatype='real' name='[Calculation_3950311142640640]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[generation Parameter]/12' scope-isolation='false' />
      </column>
      <column caption='Base-or-upgrade' datatype='string' name='[Calculation_4130311125228917]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ([Calculation_2160328153208285]=&quot;1&quot;) then &quot;BASE&quot;&#13;&#10;ELSE &quot;UPGRADE&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Utilities: Adjusted Base case charges ($/year)' datatype='real' name='[Calculation_4380312104008812]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// JTB: Adjusted for Ontario base case&#13;&#10;&#13;&#10;if ( [Parameters].[Parameter 2] = &quot;Natural gas&quot; OR &#13;&#10;     ( [Parameters].[Parameter 2] = &quot;Fuel neutral&quot; AND [Calculation_4270328153916499] = &quot;Natural gas&quot; )&#13;&#10;    ) then &#13;&#10;    // Added parameter for Gas Base electricity annual cost&#13;&#10;    [Parameters].[Parameter 9]*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;    +&#13;&#10;    // Added parameter for Gas Base gas annual cost&#13;&#10;    [Parameters].[Parameter 10]*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else&#13;&#10;    // Added parameter for total annual utility cost&#13;&#10;    [Parameters].[Parameter 11]*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='ERS-int' datatype='string' name='[Calculation_4480331150059234]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;ERS&quot;+str(int([Calculation_8430311144549035]))' scope-isolation='false' />
      </column>
      <column caption='Wall-insulation-type' datatype='string' name='[Calculation_4800326161225524]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='//BaseR20?&#13;&#10;if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R325-Wall&quot; OR&#13;&#10;     [GOtag:Opt-MainWall] = &quot;SIPS-R28-Wall&quot; OR&#13;&#10;     [GOtag:Opt-MainWall] = &quot;DblStud-R37-Wall&quot; OR&#13;&#10;     [GOtag:Opt-MainWall] = &quot;DblStud-R52-Wall&quot; OR&#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot;    ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Adjust ACH cost ($)' datatype='real' name='[Calculation_5080312144736857]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Calculation_4800326161225524] = &quot;OC&quot; ) then &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then 0&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -3049&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -3260&#13;&#10;    end&#13;&#10;else &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;    end&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Annual savings to homewoner: Base-case-reference' datatype='real' name='[Calculation_5440312091758636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_4130311125228917] = &quot;BASE&quot; then [Calculation_2640311145556471]&#13;&#10;else -100000&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Better off?' datatype='string' name='[Calculation_6170407152248136]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [Calculation_2640311145556471] &gt; 0 ) then &#13;&#10;str(round([Calculation_2640311145556471]))+&quot; better off&quot; &#13;&#10;else&#13;&#10;str(round(abs([Calculation_2640311145556471])))+&quot; worse off&quot; &#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Filter-gas-options' datatype='string' name='[Calculation_6670331150314929]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4130311125228917]+&quot;:&quot;+[Calculation_4270328153916499]+&quot;:&quot;+[Calculation_4480331150059234]+&quot;:&quot;+[GOtag:DHWLoadScale]+&quot;:&quot;+[GOtag:ElecLoadScale]+&quot;:&quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
      </column>
      <column caption='ERS-HDD-byRegion' datatype='integer' name='[Calculation_6940311144727088]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF     [GOtag:Opt-Location] = &quot;Calgary&quot;    THEN  5200&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Edmonton&quot;   THEN  5400&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Halifax&quot;    THEN  4100&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Ottawa&quot;     THEN  4600&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Toronto&quot;    THEN  3650&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Quebec&quot;     THEN  5200&#13;&#10;ELSEIF  [GOtag:Opt-Location]= &quot;Montreal&quot;   THEN  4250&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Vancouver&quot;  THEN  2925&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Winnipeg&quot;   THEN  5900&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Regina&quot;     THEN  5750&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Fredricton&quot; THEN  4650&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Whitehorse&quot; THEN  6900&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Energy savings for base (%)' datatype='real' name='[Calculation_7130313100558856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -0.5&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='ERS DHW adj' datatype='real' name='[Calculation_7350403120027264]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [GOtag:DHWLoadScale] = &quot;Low-Flow&quot; ) then 19/16&#13;&#10;else 1 &#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='UTILITIES: Total adjusted bill ($/year)' datatype='real' name='[Calculation_7370312102644552]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1130312101746663]+[UTILITIES: Adjusted Electricity Bill  (copy)]' scope-isolation='false' />
      </column>
      <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
      </column>
      <column caption='Annual cost of borrowing ($/year)' datatype='real' name='[Calculation_7830311143752081]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3730311142712896]/[Parameters].[Parameter 1]' scope-isolation='false' />
      </column>
      <column caption='Upgrades: PV cost adjustment ($)' datatype='real' name='[Calculation_8190312105315011]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[PVSizekW]*([Parameters].[Parameter 7]*1000-4687)' scope-isolation='false' />
      </column>
      <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Electric conservation package ($)' datatype='integer' name='[Calculation_8710312105714395]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [GOtag:ElecLoadScale] = &quot;NGERSNoReduction19&quot; ) then 0 &#13;&#10;else 140&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Main Wall adjust cost (No air sealing credit) ' datatype='integer' name='[Calculation_8710326154745859]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [GOtag:Opt-MainWall] &#13;&#10;  when &quot;BaseR20&quot; then 0 &#13;&#10;  when &quot;Stud-R275-Wall&quot; then    1655&#13;&#10;  when &quot;Stud-R305-Wall&quot; then    3685&#13;&#10;  when &quot;Stud-R325-Wall&quot; then    3470&#13;&#10;  when &quot;SIPS-R28-Wall&quot; then     9796&#13;&#10;  when &quot;DblStud-R37-Wall&quot; then  7340&#13;&#10;  when &quot;DblStud-R52-Wall&quot; then  11900&#13;&#10;  else -9000000&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='EnergyPVGJ' datatype='real' name='[Calculation_9440311154155886]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[EnergyPVkWh]*3600/1E06' scope-isolation='false' />
      </column>
      <column caption='Breakeven' datatype='string' name='[Calculation_9470403125230887]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='//if ( [Annual savings, 40% markup ] &gt; 0 ) then &quot;40%+&quot;&#13;&#10;if ( [Annual savings, 20% markup (copy) (copy)] &gt; 0 ) then &quot;Builder markup is 30%+&quot;&#13;&#10;elseif ( [Annual savings, 10% markup (copy)] &gt; 0 ) then &quot;Builder markup is 20%+&quot;&#13;&#10;elseif ( [Cost of ownership --- difference from base case ($/year), no markup (copy)] &gt; 0 ) then &quot;Builder markup is 10%+&quot;&#13;&#10;elseif ( [Calculation_2640311145556471] &gt; 0 ) then &quot;Builder markup is 0%+&quot;&#13;&#10;else &quot;Homeowner won&apos;t break even&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Colour-params' datatype='string' name='[Calculation_9520430094845731]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ([Parameters].[Focus on ERS (copy 2)] = &quot;Breakeven&quot;) then [Calculation_9470403125230887]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Better off?&quot; ) then [Calculation_6170407152248136]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Best-for-homeowner&quot; ) then [Calculation_8750403103901360]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Best+fuel&quot; ) then [Calculation_3690403141636492]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;HVAC system&quot; ) then [GOtag:Opt-HVACSystem]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;DHW system&quot; ) then [GOtag:Opt-DHWSystem]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;DHWR+SDHW&quot; ) then [GOtag:Opt-DWHRandSDHW]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Main Wall &quot; ) then [GOtag:Opt-MainWall]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;PV&quot; ) then [GOtag:Opt-StandoffPV]&#13;&#10;else [Calculation_4130311125228917]&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Annual savings, 10% markup' datatype='real' name='[Cost of ownership --- difference from base case ($/year), no markup (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;-&#13;&#10;(  [Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]&#13;&#10;  +[Calculation_7830311143752081])*1.10&#13;&#10;&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column datatype='real' name='[EnergyPlugGJ]' role='measure' type='quantitative'>
      </column>
      <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
        <aliases>
          <alias key='75' value='ERS 75' />
          <alias key='76' value='ERS 76' />
          <alias key='77' value='ERS 77' />
          <alias key='80' value='80' />
        </aliases>
      </column>
      <column caption='EstimatedERS (correct?)' datatype='real' name='[EstimatedERS (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='/// TEST _ PASTE FROM ALEX&#13;&#10;&#13;&#10;100-&#13;&#10;([EnergyPlugGJ]+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+[Parameters].[Parameter 3]&#13;&#10;)*20' scope-isolation='false' />
      </column>
      <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[ID]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Simulation_Number]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Step_Number]' role='dimension' type='ordinal'>
      </column>
      <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='// JTB: Need to adjust for Ontario&#13;&#10;if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;  [UtilCostGasDoll]*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
      </column>
      <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5440312091758636]' derivation='Max' name='[max:Calculation_5440312091758636:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9520430094845731]' derivation='None' name='[none:Calculation_9520430094845731:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_3710312133127667]' derivation='Sum' name='[sum:Calculation_3710312133127667:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7130313100558856]' derivation='Sum' name='[sum:Calculation_7130313100558856:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8430311144549035]' derivation='Sum' name='[sum:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EnergyPlugGJ]' derivation='Sum' name='[sum:EnergyPlugGJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EstimatedERS (copy)]' derivation='Sum' name='[sum:EstimatedERS (copy):qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\cygwin\home\jeffblake\HousingModels\trunk\Opt-Results\OTT-LEEP\CloudResultsAllData (CloudResultsAllData.csv).tde' schema='Extract' tablename='Extract' update-time='8/23/2014 2:07:40 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1010313135857628]' formula='if ( [GOtag:Opt-HVACSystem] = &quot;elec-baseboard&quot; ) then 4950 - 1600&#13;&#10;else 0 &#13;&#10;end' />
            <calculation column='[Calculation_1110818173408769]' formula='If [GOtag:Opt-StandoffPV] = &quot;NoPV&quot; Then &#13;&#10;   &quot;No PV&quot;&#13;&#10;Else &#13;&#10;   RIGHT([GOtag:Opt-StandoffPV],3)+&quot; of PV&quot;&#13;&#10;End' />
            <calculation column='[Calculation_2160328153208285]' formula='str([ID])' />
            <calculation column='[Calculation_2900312105624061]' formula='if ([GOtag:DHWLoadScale]=&quot;Low-Flow&quot; ) then 80&#13;&#10;else 0&#13;&#10;end' />
            <calculation column='[Calculation_3690403141636492]' formula='[Calculation_8750403103901360]+&quot;\&quot;+[Calculation_4270328153916499]' />
            <calculation column='[Calculation_3710312133127667]' formula='(119.04-[EnergyTotal])/119.04' />
            <calculation column='[Calculation_4130311125228917]' formula='if ([Calculation_2160328153208285]=&quot;1&quot;) then &quot;BASE&quot;&#13;&#10;ELSE &quot;UPGRADE&quot;&#13;&#10;END' />
            <calculation column='[Calculation_4270328153916499]' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' />
            <calculation column='[Calculation_4800326161225524]' formula='//BaseR20?&#13;&#10;if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R325-Wall&quot; OR&#13;&#10;     [GOtag:Opt-MainWall] = &quot;SIPS-R28-Wall&quot; OR&#13;&#10;     [GOtag:Opt-MainWall] = &quot;DblStud-R37-Wall&quot; OR&#13;&#10;     [GOtag:Opt-MainWall] = &quot;DblStud-R52-Wall&quot; OR&#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot;    ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' />
            <calculation column='[Calculation_5080312144736857]' formula='if ( [Calculation_4800326161225524] = &quot;OC&quot; ) then &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then 0&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -3049&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -3260&#13;&#10;    end&#13;&#10;else &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;    end&#13;&#10;end' />
            <calculation column='[Calculation_6940311144727088]' formula='IF     [GOtag:Opt-Location] = &quot;Calgary&quot;    THEN  5200&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Edmonton&quot;   THEN  5400&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Halifax&quot;    THEN  4100&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Ottawa&quot;     THEN  4600&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Toronto&quot;    THEN  3650&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Quebec&quot;     THEN  5200&#13;&#10;ELSEIF  [GOtag:Opt-Location]= &quot;Montreal&quot;   THEN  4250&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Vancouver&quot;  THEN  2925&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Winnipeg&quot;   THEN  5900&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Regina&quot;     THEN  5750&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Fredricton&quot; THEN  4650&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Whitehorse&quot; THEN  6900&#13;&#10;END' />
            <calculation column='[Calculation_7130313100558856]' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -0.5&#13;&#10;end' />
            <calculation column='[Calculation_7350403120027264]' formula='if ( [GOtag:DHWLoadScale] = &quot;Low-Flow&quot; ) then 19/16&#13;&#10;else 1 &#13;&#10;end' />
            <calculation column='[Calculation_7380401093918234]' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' />
            <calculation column='[Calculation_8710312105714395]' formula='if ( [GOtag:ElecLoadScale] = &quot;NGERSNoReduction19&quot; ) then 0 &#13;&#10;else 140&#13;&#10;end' />
            <calculation column='[Calculation_8710326154745859]' formula='case [GOtag:Opt-MainWall] &#13;&#10;  when &quot;BaseR20&quot; then 0 &#13;&#10;  when &quot;Stud-R275-Wall&quot; then    1655&#13;&#10;  when &quot;Stud-R305-Wall&quot; then    3685&#13;&#10;  when &quot;Stud-R325-Wall&quot; then    3470&#13;&#10;  when &quot;SIPS-R28-Wall&quot; then     9796&#13;&#10;  when &quot;DblStud-R37-Wall&quot; then  7340&#13;&#10;  when &quot;DblStud-R52-Wall&quot; then  11900&#13;&#10;  else -9000000&#13;&#10;end' />
            <calculation column='[Calculation_8750403103901360]' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' />
            <calculation column='[Calculation_9440311154155886]' formula='[EnergyPVkWh]*3600/1E06' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='75001' timestamp-start='2014-08-23 02:07:40.442000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.359302' measure-ordering='alphabetic' measure-percentage='0.437209' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:GOtag:Opt-MainWall:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;BaseR20&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;DblStud-R52-Wall&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Stud-R305-Wall&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Stud-R275-Wall&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;SIPS-R28-Wall&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Stud-R325-Wall&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;DblStud-R37-Wall&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-HVACSystem:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;basefurnace&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Combi-P9-a&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;GSHP&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;elec-baseboard&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Combi-P9-ecmV2&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;IMS-P10&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CCASHP&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_9520430094845731:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;BaseDHW&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1-plate&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;BASE&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bad-point&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bad-point\\Electricity&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;BaseR20&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Builder markup is 0\%+&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;NoPV&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1-plate-DWHR-4-60&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;DblStud-R52-Wall&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ElectricHP&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Good\\Electricity&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;SizedPV|5kW&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;basefurnace&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;DWHR-4-60&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;GSHP&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2-plate-DWHR-4-60&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Combi-P9-ecmV2&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Stud-R305-Wall&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2-plate-DWHR-4-36&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Combi-P9-a&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;GasInstantaneous&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Stud-R275-Wall&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;IMS-P10&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;none&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2-plate&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;CCASHP&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;ElectricStorage&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Good\\Natural gas&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;SIPS-R28-Wall&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;SizedPV|8kW&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;DWHR-4-36&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Stud-R325-Wall&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;elec-baseboard&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1-plate-DWHR-4-36&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bad-point\\Natural gas&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;DblStud-R37-Wall&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;ElecInstantaneous&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Homeowner won&apos;t break even&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;SizedPV|3kW&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;UPGRADE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41869.613428807868].[sum:Calculation_3710312133127667:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[csv.41869.613428807868].[max:Calculation_5440312091758636:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[csv.41869.613428807868].[sum:Calculation_7130313100558856:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[csv.41869.613428807868].[sum:EnergyPlugGJ:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[csv.41869.613428807868].[sum:EstimatedERS (copy):qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41869.613428807868].[sum:Calculation_8430311144549035:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Escillation Rate: Gas' datatype='real' default-format='p0.00%' name='[Escillation Rate: Electricity (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.02'>
          <calculation class='tableau' formula='0.02' />
          <range max='1.0' min='0.0' />
        </column>
        <column caption='Colour by:' datatype='string' name='[Focus on ERS (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;HVAC system&quot;'>
          <calculation class='tableau' formula='&quot;HVAC system&quot;' />
          <members>
            <member value='&quot;Best+fuel&quot;' />
            <member value='&quot;Best-for-homeowner&quot;' />
            <member value='&quot;HVAC system&quot;' />
            <member value='&quot;DHW system&quot;' />
            <member value='&quot;DHWR+SDHW&quot;' />
            <member value='&quot;Main Wall &quot;' />
            <member value='&quot;PV&quot;' />
          </members>
        </column>
        <column caption='Municipal Taxes' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='0.0069646999999999999'>
          <calculation class='tableau' formula='0.0069646999999999999' />
          <range max='1.0' min='0.0' />
        </column>
        <column caption='Escillation Rate: Electricity' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.016500000000000001'>
          <calculation class='tableau' formula='0.016500000000000001' />
          <range max='1.0' min='0.0' />
        </column>
        <column caption='Ott-GasBase-GasAnnCost' datatype='real' default-format='c&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' name='[Parameter 10]' param-domain-type='any' role='measure' type='quantitative' value='1000.0'>
          <calculation class='tableau' formula='1000.0' />
          <desc>
            <formatted-text>
              <run>Ottawa gas annual cost when base case is a gas house.  Value needs updating if base case parameters change in bps simulation. Entered by JTB 21-AUG-2014.&#10;</run>
            </formatted-text>
          </desc>
        </column>
        <column caption='Ott-ElecBase-AnnUtilityCost' datatype='real' default-format='c&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' name='[Parameter 11]' param-domain-type='any' role='measure' type='quantitative' value='3345.0'>
          <calculation class='tableau' formula='3345.0' />
          <desc>
            <formatted-text>
              <run>Ottawa annual utility cost when base case is an all electric house. Note that 3345 is just an estimate (by JTB) since not running an electric base case as of 21-AUG-2014.</run>
            </formatted-text>
          </desc>
        </column>
        <column caption='BaseEnergyTotalGJ' datatype='real' default-format='n#,##0.000;-#,##0.000' name='[Parameter 12]' param-domain-type='any' role='measure' type='quantitative' value='132.38399999999999'>
          <calculation class='tableau' formula='132.38399999999999' />
        </column>
        <column caption='Amoritization period ' datatype='real' default-format='n#,##0&quot; yrs&quot;;-#,##0&quot; yrs&quot;' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25.0'>
          <calculation class='tableau' formula='25.0' />
          <range min='1.0' />
        </column>
        <column caption='Base Case heating fuel type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Natural gas&quot;'>
          <calculation class='tableau' formula='&quot;Natural gas&quot;' />
          <members>
            <member value='&quot;Natural gas&quot;' />
            <member value='&quot;Electricity&quot;' />
            <member value='&quot;Fuel neutral&quot;' />
          </members>
        </column>
        <column caption='ERS equip mod' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='31.0'>
          <calculation class='tableau' formula='31.0' />
        </column>
        <column caption='ERS House Volume (mÂ³)' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='853.89999999999998'>
          <calculation class='tableau' formula='853.89999999999998' />
        </column>
        <column caption='ERS DHW Mod ' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='11.473000000000001'>
          <calculation class='tableau' formula='11.473000000000001' />
        </column>
        <column caption='Utilities: Assessment year' datatype='real' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='0.0'>
          <calculation class='tableau' formula='0.0' />
          <members>
            <member value='0.0' />
            <member value='5.0' />
            <member value='10.0' />
            <member value='15.0' />
            <member value='20.0' />
            <member value='25.0' />
          </members>
        </column>
        <column caption='PV costs ($/W installed)' datatype='real' default-format='c&quot;$&quot;#,##0.000;-&quot;$&quot;#,##0.000' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='3.2000000000000002'>
          <calculation class='tableau' formula='3.2000000000000002' />
          <range max='10.0' min='0.0' />
        </column>
        <column caption='FIT' datatype='real' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='0.0'>
          <calculation class='tableau' formula='0.0' />
        </column>
        <column caption='Ott-GasBase-ElecAnnCost' datatype='real' default-format='c&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='1650.0'>
          <calculation class='tableau' formula='1650.0' />
          <desc>
            <formatted-text>
              <run>Ottawa electricity annual cost when base case is a gas house.  Value needs updating if base case parameters change in bps simulation. Entered by JTB 21-AUG-2014.</run>
            </formatted-text>
          </desc>
        </column>
        <column caption='Interest rate (%)' datatype='real' default-format='p0.00%' name='[generation Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.035000000000000003'>
          <calculation class='tableau' formula='0.035000000000000003' />
          <range max='1.0' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Conservation Savings'>
      <table>
        <view>
          <datasources>
            <datasource caption='CloudResultsAllData (CloudResultsAllData.csv)' name='csv.41869.613428807868' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='FIT' datatype='real' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='csv.41869.613428807868'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Annual savings to homewoner: Base-case-reference' datatype='real' name='[Calculation_5440312091758636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_4130311125228917] = &quot;BASE&quot; then [Calculation_2640311145556471]&#13;&#10;else -100000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Filter-gas-options' datatype='string' name='[Calculation_6670331150314929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4130311125228917]+&quot;:&quot;+[Calculation_4270328153916499]+&quot;:&quot;+[Calculation_4480331150059234]+&quot;:&quot;+[GOtag:DHWLoadScale]+&quot;:&quot;+[GOtag:ElecLoadScale]+&quot;:&quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5440312091758636]' derivation='Max' name='[max:Calculation_5440312091758636:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6670331150314929]' derivation='None' name='[none:Calculation_6670331150314929:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41869.613428807868].[EstimatedERS (bin)]'>
            <groupfilter from='70' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41869.613428807868].[none:Calculation_4270328153916499:nk]'>
            <groupfilter function='member' level='[none:Calculation_4270328153916499:nk]' member='&quot;Natural gas&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41869.613428807868].[none:Calculation_6670331150314929:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_6670331150314929:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41869.613428807868].[none:Calculation_7380401093918234:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_7380401093918234:nk]' member='&quot;Natural gas / BaseDHW&quot;' />
              <groupfilter function='member' level='[none:Calculation_7380401093918234:nk]' member='&quot;Natural gas / ElecInstantaneous&quot;' />
              <groupfilter function='member' level='[none:Calculation_7380401093918234:nk]' member='&quot;Natural gas / ElectricHP&quot;' />
              <groupfilter function='member' level='[none:Calculation_7380401093918234:nk]' member='&quot;Natural gas / ElectricStorage&quot;' />
              <groupfilter function='member' level='[none:Calculation_7380401093918234:nk]' member='&quot;Natural gas / GasInstantaneous&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41869.613428807868].[none:GOtag:DHWLoadScale:nk]'>
            <groupfilter function='member' level='[none:GOtag:DHWLoadScale:nk]' member='&quot;OldERS&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41869.613428807868].[none:GOtag:ElecLoadScale:nk]'>
            <groupfilter function='member' level='[none:GOtag:ElecLoadScale:nk]' member='&quot;NoReduction&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41869.613428807868].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter from='&quot;BaseDHW&quot;' function='range' level='[none:GOtag:Opt-DHWSystem:nk]' to='&quot;GasInstantaneous&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41869.613428807868].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41869.613428807868].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41869.613428807868].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41869.613428807868].[none:GOtag:Opt-DHWSystem:nk]</column>
            <column>[csv.41869.613428807868].[none:Calculation_6670331150314929:nk]</column>
            <column>[csv.41869.613428807868].[EstimatedERS (bin)]</column>
            <column>[csv.41869.613428807868].[none:Calculation_4270328153916499:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]' scope='rows' value='Annual Savings (including borrowing costs, $/year)' />
            <format attr='display' class='0' field='[csv.41869.613428807868].[max:Calculation_5440312091758636:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41869.613428807868].[max:Calculation_5440312091758636:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='height' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='65' />
            <encoding attr='space' class='0' field='[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1000.0' min='-2500.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' field='[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]' value='Calibri' />
            <format attr='font-size' field='[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]' value='16' />
            <format attr='text-format' data-class='subtotal' field='[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='font-family' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='Calibri' />
            <format attr='font-size' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='16' />
            <format attr='width' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='35' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41869.613428807868].[none:Calculation_4270328153916499:nk]' value='-90' />
            <format attr='font-family' field='[csv.41869.613428807868].[none:Calculation_4270328153916499:nk]' value='Calibri' />
            <format attr='font-size' field='[csv.41869.613428807868].[none:Calculation_4270328153916499:nk]' value='16' />
            <format attr='font-family' field='[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]' value='Calibri' />
            <format attr='font-size' field='[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]' value='16' />
            <format attr='text-format' field='[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='font-family' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='Calibri' />
            <format attr='font-size' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='16' />
            <format attr='text-orientation' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 8]' value='FIT ($/kWh)'>
              <formatted-text>
                <run>FIT ($/kWh)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41869.613428807868].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]' formula='constant' id='refline0' label='' label-type='custom' scope='per-table' value='0.0' value-column='[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41869.613428807868].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41869.613428807868].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[csv.41869.613428807868].[max:Calculation_5440312091758636:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[csv.41869.613428807868].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
                <format attr='size' value='1.8350828886032104' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41869.613428807868].[none:Calculation_4270328153916499:nk] * ([csv.41869.613428807868].[max:Calculation_2640311145556471:qk] + [csv.41869.613428807868].[max:Calculation_5440312091758636:qk]))</rows>
        <cols>[csv.41869.613428807868].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='En% vs. Adj Cost (Scatter)'>
      <table>
        <view>
          <datasources>
            <datasource caption='CloudResultsAllData (CloudResultsAllData.csv)' name='csv.41869.613428807868' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41869.613428807868'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll] &#13;&#10; -7905    // JTB: Adjusted to remove cost of base Windows (19-AUG-2014)&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Energy savings (%)' datatype='real' name='[Calculation_3710312133127667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Parameters].[Parameter 12]-[EnergyTotal])/[Parameters].[Parameter 12]' scope-isolation='false' />
            </column>
            <column caption='Energy savings for base (%)' datatype='real' name='[Calculation_7130313100558856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -0.5&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Colour-params' datatype='string' name='[Calculation_9520430094845731]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Parameters].[Focus on ERS (copy 2)] = &quot;Breakeven&quot;) then [Calculation_9470403125230887]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Better off?&quot; ) then [Calculation_6170407152248136]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Best-for-homeowner&quot; ) then [Calculation_8750403103901360]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Best+fuel&quot; ) then [Calculation_3690403141636492]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;HVAC system&quot; ) then [GOtag:Opt-HVACSystem]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;DHW system&quot; ) then [GOtag:Opt-DHWSystem]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;DHWR+SDHW&quot; ) then [GOtag:Opt-DWHRandSDHW]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Main Wall &quot; ) then [GOtag:Opt-MainWall]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;PV&quot; ) then [GOtag:Opt-StandoffPV]&#13;&#10;else [Calculation_4130311125228917]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[GOtag:DHWLoadScale]' derivation='Attribute' name='[attr:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='Attribute' name='[attr:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='Attribute' name='[attr:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='Attribute' name='[attr:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='Attribute' name='[attr:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='Attribute' name='[attr:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='Attribute' name='[attr:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='Attribute' name='[attr:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='Attribute' name='[attr:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='Attribute' name='[attr:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='Attribute' name='[attr:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='Attribute' name='[attr:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='Attribute' name='[attr:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='Attribute' name='[attr:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9520430094845731]' derivation='None' name='[none:Calculation_9520430094845731:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3710312133127667]' derivation='Sum' name='[sum:Calculation_3710312133127667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7130313100558856]' derivation='Sum' name='[sum:Calculation_7130313100558856:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41869.613428807868].[none:Calculation_9520430094845731:nk]'>
            <groupfilter from='&quot;CCASHP&quot;' function='range' level='[none:Calculation_9520430094845731:nk]' to='&quot;elec-baseboard&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41869.613428807868].[none:Calculation_9520430094845731:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41869.613428807868].[sum:Calculation_3710312133127667:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41869.613428807868].[sum:Calculation_3710312133127667:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[csv.41869.613428807868].[sum:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41869.613428807868].[sum:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[csv.41869.613428807868].[sum:Calculation_7130313100558856:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[csv.41869.613428807868].[sum:Calculation_1760312105551885:qk]' field-type='quantitative' max='5961.7126486532652' min='-4675.6745750527261' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[csv.41869.613428807868].[sum:Calculation_3710312133127667:qk]' field-type='quantitative' max='0.061619832041343608' min='-0.082130167958656394' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[csv.41869.613428807868].[sum:Calculation_7130313100558856:qk]' field-type='quantitative' fold='true' max='0.061619832041343608' min='-0.082130167958656394' range-type='fixed' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41869.613428807868].[sum:Calculation_3710312133127667:qk]' value='p0%' />
            <format attr='font-family' field='[csv.41869.613428807868].[sum:Calculation_3710312133127667:qk]' value='Calibri' />
            <format attr='font-size' field='[csv.41869.613428807868].[sum:Calculation_3710312133127667:qk]' value='16' />
            <format attr='font-family' field='[csv.41869.613428807868].[sum:Calculation_1760312105551885:qk]' value='Calibri' />
            <format attr='font-size' field='[csv.41869.613428807868].[sum:Calculation_1760312105551885:qk]' value='16' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[csv.41869.613428807868].[sum:Calculation_3710312133127667:qk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='698' />
                <format attr='maxwidth' value='698' />
                <format attr='minheight' value='774' />
                <format attr='maxheight' value='774' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41869.613428807868].[sum:Calculation_3710312133127667:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41869.613428807868].[none:Calculation_9520430094845731:nk]' />
              <tooltip column='[csv.41869.613428807868].[attr:GOtag:DHWLoadScale:nk]' />
              <tooltip column='[csv.41869.613428807868].[attr:GOtag:ElecLoadScale:nk]' />
              <tooltip column='[csv.41869.613428807868].[attr:GOtag:HRVcontrol:nk]' />
              <tooltip column='[csv.41869.613428807868].[attr:GOtag:Opt-AirTightness:nk]' />
              <tooltip column='[csv.41869.613428807868].[attr:GOtag:Opt-BasementSlabInsulation:nk]' />
              <tooltip column='[csv.41869.613428807868].[attr:GOtag:Opt-BasementWallInsulation:nk]' />
              <tooltip column='[csv.41869.613428807868].[attr:GOtag:Opt-CasementWindows:nk]' />
              <tooltip column='[csv.41869.613428807868].[attr:GOtag:Opt-Ceilings:nk]' />
              <tooltip column='[csv.41869.613428807868].[attr:GOtag:Opt-DHWSystem:nk]' />
              <tooltip column='[csv.41869.613428807868].[attr:GOtag:Opt-DWHRandSDHW:nk]' />
              <tooltip column='[csv.41869.613428807868].[attr:GOtag:Opt-HRVSpec:nk]' />
              <tooltip column='[csv.41869.613428807868].[attr:GOtag:Opt-HVACSystem:nk]' />
              <tooltip column='[csv.41869.613428807868].[attr:GOtag:Opt-MainWall:nk]' />
              <tooltip column='[csv.41869.613428807868].[attr:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Colour-params:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[none:Calculation_9520430094845731:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GOtag:DHWLoadScale:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[attr:GOtag:DHWLoadScale:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GOtag:ElecLoadScale:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[attr:GOtag:ElecLoadScale:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GOtag:HRVcontrol:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[attr:GOtag:HRVcontrol:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GOtag:Opt-AirTightness:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[attr:GOtag:Opt-AirTightness:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GOtag:Opt-BasementSlabInsulation:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[attr:GOtag:Opt-BasementSlabInsulation:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GOtag:Opt-BasementWallInsulation:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[attr:GOtag:Opt-BasementWallInsulation:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GOtag:Opt-CasementWindows:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[attr:GOtag:Opt-CasementWindows:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GOtag:Opt-Ceilings:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[attr:GOtag:Opt-Ceilings:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GOtag:Opt-DHWSystem:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[attr:GOtag:Opt-DHWSystem:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GOtag:Opt-DWHRandSDHW:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[attr:GOtag:Opt-DWHRandSDHW:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GOtag:Opt-HRVSpec:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[attr:GOtag:Opt-HRVSpec:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GOtag:Opt-HVACSystem:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[attr:GOtag:Opt-HVACSystem:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GOtag:Opt-MainWall:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[attr:GOtag:Opt-MainWall:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>GOtag:Opt-StandoffPV:&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[attr:GOtag:Opt-StandoffPV:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>Upgrades: Adjusted Upgrade cost ($, no markup):&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[sum:Calculation_1760312105551885:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Energy savings (%):&#9;</run>
                <run bold='true'>&lt;[csv.41869.613428807868].[sum:Calculation_3710312133127667:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' y-axis-name='[csv.41869.613428807868].[sum:Calculation_7130313100558856:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[csv.41869.613428807868].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
                <format attr='size' value='3.3922650814056396' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41869.613428807868].[sum:Calculation_3710312133127667:qk] + [csv.41869.613428807868].[sum:Calculation_7130313100558856:qk])</rows>
        <cols>[csv.41869.613428807868].[sum:Calculation_1760312105551885:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='CloudResultsAllData (CloudResultsAllData.csv)' name='csv.41869.613428807868' />
          </datasources>
          <datasource-dependencies datasource='csv.41869.613428807868'>
            <column datatype='real' name='[EnergyHeatingGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyTotal]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[EnergyHeatingGJ]' derivation='Sum' name='[sum:EnergyHeatingGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyTotal]' derivation='Sum' name='[sum:EnergyTotal:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41869.613428807868].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;Combi-P9-a&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;Combi-P9-ecmV2&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;IMS-P10&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;basefurnace&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41869.613428807868].[none:GOtag:Opt-HVACSystem:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41869.613428807868].[none:GOtag:Opt-HVACSystem:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41869.613428807868].[none:GOtag:Opt-HVACSystem:nk] * [csv.41869.613428807868].[sum:EnergyTotal:qk])</rows>
        <cols>[csv.41869.613428807868].[sum:EnergyHeatingGJ:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Upg Costs vs. ERS - HVAC'>
      <table>
        <view>
          <datasources>
            <datasource caption='CloudResultsAllData (CloudResultsAllData.csv)' name='csv.41869.613428807868' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41869.613428807868'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll] &#13;&#10; -7905    // JTB: Adjusted to remove cost of base Windows (19-AUG-2014)&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41869.613428807868].[EstimatedERS (bin)]'>
            <groupfilter from='74' function='range' level='[EstimatedERS (bin)]' to='100' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41869.613428807868].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;CCASHP&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;GSHP&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;basefurnace&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;elec-baseboard&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41869.613428807868].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41869.613428807868].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41869.613428807868].[EstimatedERS (bin)]</column>
            <column>[csv.41869.613428807868].[none:GOtag:Opt-StandoffPV:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='73' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='82' />
            <format attr='cell-w' value='120' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[csv.41869.613428807868].[min:Calculation_1760312105551885:qk]' value='Calibri' />
            <format attr='font-size' field='[csv.41869.613428807868].[min:Calculation_1760312105551885:qk]' value='16' />
            <format attr='font-family' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='Calibri' />
            <format attr='font-size' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='16' />
            <format attr='text-orientation' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-format' field='[csv.41869.613428807868].[min:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='rounding' id='annotation_0' value='medium' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41869.613428807868].[none:GOtag:Opt-HVACSystem:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='true' x-axis='false' y-axis='true' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41869.613428807868].[min:Calculation_1760312105551885:qk]</rows>
        <cols>[csv.41869.613428807868].[EstimatedERS (bin)]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>CCASHP becomes attractive</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.625'>
                  <node-reference>
                    <fields>
                      <field>[csv.41869.613428807868].[EstimatedERS (bin)]</field>
                    </fields>
                    <multibucket>
                      <bucket>82</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='8052.6423734765103'>
                  <node-reference>
                    <axis>[csv.41869.613428807868].[min:Calculation_1760312105551885:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.35'>
                  <node-reference>
                    <fields>
                      <field>[csv.41869.613428807868].[EstimatedERS (bin)]</field>
                    </fields>
                    <multibucket>
                      <bucket>84</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='456.73326088590647'>
                  <node-reference>
                    <axis>[csv.41869.613428807868].[min:Calculation_1760312105551885:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Walls'>
      <table>
        <view>
          <datasources>
            <datasource caption='CloudResultsAllData (CloudResultsAllData.csv)' name='csv.41869.613428807868' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41869.613428807868'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll] &#13;&#10; -7905    // JTB: Adjusted to remove cost of base Windows (19-AUG-2014)&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41869.613428807868].[EstimatedERS (bin)]'>
            <groupfilter from='74' function='range' level='[EstimatedERS (bin)]' to='100' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41869.613428807868].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-MainWall:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41869.613428807868].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41869.613428807868].[EstimatedERS (bin)]</column>
            <column>[csv.41869.613428807868].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41869.613428807868].[none:GOtag:Opt-MainWall:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='73' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[csv.41869.613428807868].[min:Calculation_1760312105551885:qk]' value='Calibri' />
            <format attr='font-size' field='[csv.41869.613428807868].[min:Calculation_1760312105551885:qk]' value='16' />
            <format attr='font-family' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='Calibri' />
            <format attr='font-size' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='16' />
            <format attr='text-orientation' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-format' field='[csv.41869.613428807868].[min:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41869.613428807868].[none:GOtag:Opt-MainWall:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='true' x-axis='false' y-axis='true' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41869.613428807868].[min:Calculation_1760312105551885:qk]</rows>
        <cols>[csv.41869.613428807868].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Windows'>
      <table>
        <view>
          <datasources>
            <datasource caption='CloudResultsAllData (CloudResultsAllData.csv)' name='csv.41869.613428807868' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41869.613428807868'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll] &#13;&#10; -7905    // JTB: Adjusted to remove cost of base Windows (19-AUG-2014)&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41869.613428807868].[EstimatedERS (bin)]'>
            <groupfilter from='74' function='range' level='[EstimatedERS (bin)]' to='100' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41869.613428807868].[none:GOtag:Opt-CasementWindows:nk]'>
            <groupfilter from='&quot;DoubleLowEHardCoatArgFill&quot;' function='range' level='[none:GOtag:Opt-CasementWindows:nk]' to='&quot;TripleLowESoftCoatKryFill&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41869.613428807868].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41869.613428807868].[EstimatedERS (bin)]</column>
            <column>[csv.41869.613428807868].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41869.613428807868].[none:GOtag:Opt-CasementWindows:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='73' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[csv.41869.613428807868].[min:Calculation_1760312105551885:qk]' value='Calibri' />
            <format attr='font-size' field='[csv.41869.613428807868].[min:Calculation_1760312105551885:qk]' value='16' />
            <format attr='font-family' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='Calibri' />
            <format attr='font-size' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='16' />
            <format attr='text-orientation' field='[csv.41869.613428807868].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-format' field='[csv.41869.613428807868].[min:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41869.613428807868].[none:GOtag:Opt-CasementWindows:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='true' x-axis='false' y-axis='true' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41869.613428807868].[min:Calculation_1760312105551885:qk]</rows>
        <cols>[csv.41869.613428807868].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='En% vs. Adj Cost (Scatter)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41869.613428807868].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[csv.41869.613428807868].[none:Calculation_9520430094845731:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Focus on ERS (copy 2)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41869.613428807868].[none:Calculation_9520430094845731:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:HRVcontrol:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-BasementSlabInsulation:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-BasementWallInsulation:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <tuple-selection>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[csv.41869.613428807868].[sum:Calculation_1760312105551885:qk]</field>
                </x-fields>
                <y-fields>
                  <field>[csv.41869.613428807868].[sum:Calculation_3710312133127667:qk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[csv.41869.613428807868].[none:Calculation_9520430094845731:nk]</field>
                <field>[csv.41869.613428807868].[sum:Calculation_1760312105551885:qk]</field>
                <field>[csv.41869.613428807868].[sum:Calculation_3710312133127667:qk]</field>
                <field>[csv.41869.613428807868].[attr:GOtag:DHWLoadScale:nk]</field>
                <field>[csv.41869.613428807868].[attr:GOtag:ElecLoadScale:nk]</field>
                <field>[csv.41869.613428807868].[attr:GOtag:HRVcontrol:nk]</field>
                <field>[csv.41869.613428807868].[attr:GOtag:Opt-AirTightness:nk]</field>
                <field>[csv.41869.613428807868].[attr:GOtag:Opt-BasementSlabInsulation:nk]</field>
                <field>[csv.41869.613428807868].[attr:GOtag:Opt-BasementWallInsulation:nk]</field>
                <field>[csv.41869.613428807868].[attr:GOtag:Opt-CasementWindows:nk]</field>
                <field>[csv.41869.613428807868].[attr:GOtag:Opt-Ceilings:nk]</field>
                <field>[csv.41869.613428807868].[attr:GOtag:Opt-DHWSystem:nk]</field>
                <field>[csv.41869.613428807868].[attr:GOtag:Opt-DWHRandSDHW:nk]</field>
                <field>[csv.41869.613428807868].[attr:GOtag:Opt-HRVSpec:nk]</field>
                <field>[csv.41869.613428807868].[attr:GOtag:Opt-HVACSystem:nk]</field>
                <field>[csv.41869.613428807868].[attr:GOtag:Opt-MainWall:nk]</field>
                <field>[csv.41869.613428807868].[attr:GOtag:Opt-StandoffPV:nk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>&quot;basefurnace&quot;</value>
              <value>875.0</value>
              <value>-0.079739545564418687</value>
              <value>&quot;OldERS&quot;</value>
              <value>&quot;NoReduction&quot;</value>
              <value>&quot;EightHRpDay&quot;</value>
              <value>&quot;Typical23&quot;</value>
              <value>&quot;R12EdgeP6&quot;</value>
              <value>&quot;OBC-min-R12&quot;</value>
              <value>&quot;DoubleLowESoftCoatArgFill&quot;</value>
              <value>&quot;CeilR50&quot;</value>
              <value>&quot;BaseDHW&quot;</value>
              <value>&quot;none&quot;</value>
              <value>&quot;BaseHRV_SRE70&quot;</value>
              <value>&quot;basefurnace&quot;</value>
              <value>&quot;BaseR20&quot;</value>
              <value>&quot;NoPV&quot;</value>
            </tuple>
          </tuple-reference>
        </tuple-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Conservation Savings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41869.613428807868].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card custom-title='true' mode='type_in' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 10]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41869.613428807868].[EstimatedERS (bin)]</field>
          <field>[csv.41869.613428807868].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41869.613428807868].[none:Calculation_6670331150314929:nk]</field>
          <field>[csv.41869.613428807868].[none:Calculation_7380401093918234:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-DHWSystem:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Upg Costs vs. ERS - HVAC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41869.613428807868].[none:GOtag:Opt-HVACSystem:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41869.613428807868].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41869.613428807868].[EstimatedERS (bin)]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Walls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41869.613428807868].[none:GOtag:Opt-MainWall:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41869.613428807868].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41869.613428807868].[none:GOtag:Opt-MainWall:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41869.613428807868].[EstimatedERS (bin)]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Windows'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41869.613428807868].[none:GOtag:Opt-CasementWindows:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41869.613428807868].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41869.613428807868].[none:GOtag:Opt-CasementWindows:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41869.613428807868].[EstimatedERS (bin)]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41869.613428807868].[none:GOtag:Opt-HVACSystem:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41869.613428807868].[none:GOtag:Opt-Location:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='En% vs. Adj Cost (Scatter)' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nOx9d3hUZfb/ee+903vJzKT3RgoJkNB7ld4EFcEC
      KmvvveFavrtYVl0QRVBXFJWOdKRILwkhIZT0Xiczmd5ueX9/3BhCgEBY3d+zaz5PHpi595y3
      3Hvmfc973nPOizDG0IMe3BKI/98N6MF/MSj+P7fbffM8fr9fJBJ1QcBxHEF0Ty67y/JH0wOA
      1WrVarV/XBXu003e/GZhpHJ35Kndlbu1Yu3fh/294WDROtvm1LjMESljCEQAgPesmaNZWT8T
      hzhvwCsTyjqVY99RQde7hOEK5ZjIbcc2bvbuJAnyoxEfSSkp3yT79gq6wUX0VS91LQ9wAZZj
      XbRLSkkf6v1Qii4FAOhGt31bOQAgiiD1EqbRTQVJ0QT9i4dfpDkaAcKAF6YuLGgpON14GgBG
      hI/wMb4TDSfapEcm69ymjmBpX11Ta0RYsM1mU6vVN6RnGIaiqJt/jrfA8kfTA4DP5+u6m/9m
      FbQTBxpoSsYOHzm8wF4wKmKUhBKLj3nuZscQxZQkUUCpxX6ze9vh9WJWOCpk+rKWVTsrdr41
      6K0J0RP4Ejy0p9xeHt3b5HU3KjJCwcKGH5cURV3KCsvWKDSFLYVGFGTSh7TmtZIY0F7r48Fz
      1HcmvJnz1gnLiTuT7swKz0IIAQCOlLgtJTjAKUaGy0aFcmY/pRYRUsGSEUscAcfh2sNVjqq+
      4X2TTEkbKjc4Ag5lq7KXrletvxZ1qffgQ/v3qo0RPnuL388aQjWkNCRML/f5fHK5vIvnwrIs
      SZI3/xxvgeWPpofujz3drYLxBOhShzBKSSqFbZcwdu2rdR2sBQT6xzOoIEluQ86ifQ8gAAIR
      HGAM+P6U+x/LeAwAqh3Vb596+3TT6bkJc5M1yTHqmF4o/pt1yz9VfCskhHMT53578Vs9p/k5
      cx3T7PWdtzBNHgDQLkrB4aKVBSsLrYX39bqvf3B/vuatn67eKNp9p33i4GHjZFkmP+dv8jSF
      ykMp4orfw+J9i082nmz/2uVvhW4tr7FHQX1CUkJFZWVJcV1otEgcpmdZ9oY/su7+0G+B5Y+m
      J0nyj61CCqJMo/t0o7vaKRhtePLUMyxm/znyU124AglJkUmOEIrSRocqQps9zTRHh8hC7ul1
      z+S4ySRJNlkb5u2e56JdAPBj8Y8AoBQq987eO2X+3adOFKfqUwNsAAB82Ac+VjU2UjUyonVj
      ye6Wfd/n//0h4qF9tfsqHZVCUjg4fDDflu3JJ/KbimWstPfPCS61/57zD7V4W+5MuvPF/i92
      bPIz/Z7ZUral1ll7pO4Ii9kue0uKtVq1BDyEwsT6SxRKmdvazEJitx5oD7oCh+1byzHDNYpq
      TllPAUCFozItJa39vlFm3D5je6On8eeyn4eHDY9XxVMU5Txa17KngIjAYpFoYdqiZWeXAUCs
      OlZACGhMl7SWVDoqJZQkRBr8t7R3ZfEmhBAIkHZu4rH9/6ysqdxRvmNBrwWbyzbPTZzbXtHC
      9EXSS7IZZcMovaRRYm/2NgMA/29HJOuSk3XJDMcUthQu2LmgS+khpAOzkr2cwChhhH2zZRTb
      YHF3b/TvQdcgkHxoaKDSkT4w9tmmZznM9dL16kRCEmSoPHRx78UAwDAMADBNHrVf/s+Kl6W3
      hSWkZ0YoIljMjosaJyAFu0t3W/1WnlFACOKjkxF5WZF/JOORIEnQ7ITZydrk2QmzO9YyKGTQ
      oJBBeARmGMYooF6nX3cz7umx0/2sf2XBSgkluS/1Pl6LBwCKoNZcXIMBd633XBtut/vPoDVb
      LBadTvdHN4l//rz2epMsrJt27Kvm3LR6SgwpFwJASWtJXnPe+KjxM7bMMHvNGpGm1d+aZcy6
      P+X+d0+/OzV26uLei72Mt9ZZG62K7qjKYIxPNJwotZXennC7mBJf3YsDNQce3/84AKydtFZC
      Sf564q9DQocsSls0YcOEOlddt7WTPyc4H8Pa/ZRBepOv+QpgTLd4CQnFv+lOuIUCSZmAc9P+
      MhvT7OHLfHT/o/Wu+pLWkjuT7jxQc+Cl7Jc44KKlUcvPLKtx1uys2Lm49+JnDj5zpO7I/OA7
      FosXUDqxuJcOIeSknY/vf9zH+khE3p5w+4aSDWqhWkSJWrwt0+KmCUlhvDo+WBYsoSRhirD3
      c97PbcotbS1dlLZocszkzws+75Gem4J5VSFd69TMTpD1NXaX11dub1ldSCqExqf6EiIywAa2
      lW8zSA0DjAO6VQ7N0hetFyNEYdRFnzffDAC+UpsoRl3tqCYRiQCZZKb7U+9fmLbQW23zHKjz
      mIvHO1PZjBnjBkwBALPXjAF/V/9jo71qkWVW/NPDKLUYAeLFlwPuRMOJd06+QyGKA47DHEVQ
      M+JnhCnCts/cjgBRBJXTmAMAIyNGAsD0uOnnLed7bM03BRxgAQNmuFth5jBwGLMYMAaADcUb
      3jj2xqP7Hq20V3armPdOvTdv57wF6+fZNpchAQEE8l6wlFUUTd8yvc5ZNzF6Yrm9vMJRcaz+
      2ITDU9+1f8xYfEEBzWPaB7JMWQDw/vD3BwQPYBG3R31sXcIBQioAALlAHq4IB4Amd9PxhuMA
      wGCGwxwAaMQavl4BIeAnu+eynpsRN+Oh9IcAIEwR9tmYz3rGnptC0ANpjNkrjFTeAq8oTm14
      NIOQCQgxBQByoRwAhKRQRHVlr78aDe4GAGgSWpGAEMWqfZesTKPHddHDYhYQ7KjYgQGzHKsR
      a2ys/ZAm783EVzHC8v7BPHukMvLdIe++e+rdo3VH+w4cQghJAEAIpevTqxxVceq4nPJT7XWN
      Ch81IPiKobHMVra+eP2IsBFhirD2iz1a83Xxe2nN3sIW7wWLfGiYMFgGABzm8s35apE6XBbe
      rSZV2Cs2Fm8cFDqovz4bEci2o5y1+tXT44rZMozx8tPLjjcef4y9Z+isyX87/bdYdewjGY9I
      CEmnKjjMFZgL3jj2xqCQQS9kvwAADMd4aI9CqGg8VPxNzlc/6HYOCB24dPjSSntlojaR5dgV
      BSv0Er3FZ1l1bpVKqDp0x6HLi6+bb30Pbg2tW8s4RwAznO6uZAAgEJFpyITflt/XA+sK2LaW
      CYwyxchwRCAAiFZFP5H5RLs0aKbG8R96Qa/zLecz6KT7yseGKsKCNXGL0hY9su+RE/Unvrvt
      u07SgwCdvnS83F5e76rnpcfLeO1+++nG0xdk58tjzaydA4APcj7YWLJxXvK87ODs1YWrKUQt
      iJgHAPaAvcBckGHI4EvrkZ4/HJI0vTffLE5uG8YwyzkP1SIBKelv6ILLV9TqLWjxkhb5wGAk
      FTAcs7l0s5gQT4qddPUy7eF9D1t91on9xr478j0AcNGuABuwuVqd+6ppTqQaH4kEbXY6utbl
      PtkABvCxvkuNF2MNcfN3zq92VAMAzdEakQYAtGIti1kMmMVsmj6tv6m/QWrILItFABhBvjmf
      lx5fSWtX0uO1VB8qqE1NTqiruOiiySi9RGiIC9MrbvEp/lmhnhyjnhANVNsr91bbtx/bpGc1
      Q6KnU6GC63GJEzSSNL3AIEViCgBON55ecnwJiciUoJRoVXQn4hBZiNVnjYiMJZUiABgRNmJg
      8MD66qra40UmWidO0JCxcgxYSAoJhdAoMSCMJJzIt6rcPU7hcNhojk7Xp7f4WsZFjkvSJI2O
      HI0Bz4ibkaJLEVGiL8Z9AQABoz17f3qu+PzXhV8frz++NPM9+9fnu5Iejgl4/X6aYQQCAfLY
      y5u4fuFEIBBgGIZl2a4YOa5rgn+f5Y+m/52rIAC4Nv3yKHv63dAvZViyVTpeyMoAAHPYX2BB
      QkKUrIX2YUVKqu9IAAAOc8DC+qL1AMBi9pvz37zW/zXOHkAiEonbRpQVo1csL1he3Fp8vuV8
      kibJz/pzm3P9An+OrHCGerI3iFu8824v4/3nyH+GCEyTs2b20g1i19frnUrXhor/Ez9ROd0/
      pde0d0698/X5r7Vi7YnGEwQiHuv9GIUovkfVzupVDV+Osfafzox8KfLjlvqWo2HHKw1nyTff
      fPN6j0Mo0yTGRR06eGDEyBFVVXUEgZsaG6OjoliWFYlE6PrAGJMk2QXBv8/yR9MjhLxer0wm
      +92r8OPAnqo9kZqoWYmzRQIRQoiudlr/ddF73iLLMJAy4dUsJWcLfiz7qZWzAwIxJZ5IjDJ/
      lu89b5Gm6jlbgJQLxQLxUwefKrWVumjXuKhxFEEphAqtUHNH9BxdekQzZV1+7jOrz7q3aq+/
      2BZ8kNK7FBEzMkiVyF/t+FG9a6VjTYALMJi5aL3oZbyXrJcuWi8aZcbeht58Az4v+Hxd6foK
      dePTGU9KIzUMZr4r+f6U+FxX0uOwNpeUlYdExJK0UxseLwK/TKUP0mlomhYKr9HJ7j7Hf4fl
      PyM9Uqn0d69CL9HPSZwzK36WkBDy9EAg3yUrpyQ+Jb7eVbt7UMggISlECAGHA9XOckvZgycf
      rkfNYUTwE2mP35N5n7SV8uaZ3di9umFN0+GSGFW00CSvcdZYvJa7e90dr4lHCKUFpY2OHA2F
      btumUoVPYuwTfaz+mJt2n6bPRtLByVFpsiyTMFopTdHvxYeLXMURyoiXsl9K1ibbfDaCIJwB
      57zkeZGqSIQQ0+JltzdVoNo52XfGpqY0eBoQoHMt54xSY8+K/broYsXur7C7jtXLBwaLYtRd
      VMFyrI/1Salr7290pMc0V+4on7ltFgfcl+O+5N1unIdr7TsqTmrOv2lYRiLykYyH70u538k4
      pZQUqr3rGjf/rfgDCSfem7FF1SeEwxzN0m1i9xtsO8pdh+okGUHauYm5TbmvH3vd7rf/Y+CH
      hY7zRrlpdOToHeU7RKRITIkdAUeNs+belHvFSPzysZd3Ve7qa+z79YSvAcCTb7auvYQBl2rr
      P4laW+otV4lUfxv6txh1TM+a61bgOFDjL24llUJRjPqXql+Wn11+X+p9o2EIw4IoXt3+/pbm
      LN1RsePV/q+OixrXdYFIQERoIu/udbebdqfp2zw0EIkAYKC2/+t9tBWO8u+L1h6pP1pqK03V
      p64YsyJbMyjWvDlD31uRYQIAAhFXmx9lo8IkvXSCYBlCqJ+p38apG1mW2VS06cO8jwggZjXN
      Wle8DgH6ftL3Lx1+ycN4giRBs+Nm6yV6ANCL9Xwh4l7avWlnz1rOlotqK731ACBmhYOCByEC
      9UjPrUCaEcRafcJwBQDsqNhRYivZnLc+M18LDBf0UG9hmDxQ7xIESXObclt9rYWWwhtKDwAI
      CMFzWc91vCLrHyyMVFFa8e2SzE/OfNLibbF4LRhwkbUIA07QJKybvI4kyHbb3dVAFCGKUgGA
      2WNmMWuSmex7K5RnfUITpVMEacVtnpMUQd0WfVu+Ob+PsQ8APNX3qamxUyOVkfxdTMJy/C+f
      ytderJ121FSVR0TH9kjPrUCaaZBmGPj10QNpD8gF8hlh08hyDvsYQkY5j9Q5dleKE7VvT337
      ZMPJKbFTbq0WRBLCUDmHufXF6120yyg1BkmDpsdNT9en88ObgLzugr8j6l31M7fOZDl2zcQ1
      mmp/H3vSpqSv6JEKmUCWrEtWi9RJ2qTXB77OcqyAFDAMIySFybrkdnYCEfel3ney4WRVQ3lQ
      QFMuquFIzEkAeqyFtwaEUPvSOlmX/NbgtwAg8LCPJEhCcvmRJmoTE7X/ritmg7vhnZPvMByD
      ADV5mhalLer4am8IhmPK7eVe2osBOwPOmJm9PEWWH8ifV2//RiaQrZ+6nh+BCEQQ5LXHMITQ
      xNAJftY/p3ikqJX4LmhHmbauhqmPgp6x5/cDIaZIigIAxZBQUYxKECS9HiXmsGN3ZaDJrZ2V
      QCqu4fTTEXqxfmjoUIvXopPoWrwtVzsfdo2Pcj/6oeiHIWFD7kq6q4+xD4GIDU0//DP3MwAg
      EGH2mIWEkN+43VG+Y3n+8gfTHpwaN5Xn5XwM3eRhHf6lh986JMuNCA6zqewO5IQAbCzZODRs
      aI/03Ap8ZTbngRrF8DBxvObqu4giRBFd7cbT9S7noVrA4Cu1yTK72q8AABEl+mjERxgwQoih
      GZGwTTW2+Wy/1v7az9QvVB7aBXutszbABsSUWCqQ+hgficgfL/0IAKHy0EVpi+7ffb9KpPp+
      0vdqkXpX5a4qR9Wuyl289FywXHh+33OZ9bEP++5OJCJPSAoyQ/rWueouWi7GaeJ4n+ge6bkV
      uE80+EttwlD5NaXnhghUOwEDUEgcq74xNQBJtNmUMXHZvLI0Z+nWsq2putS1k9d2JPYz/v01
      +3vpevFq7+sDXx8fNf6r818t2LlgSsyUwaGD6931APBi9ov1rnpHwOEIOJrcTWqR+uGMh4Ok
      QTNjZwbYwHun3jvZcLLGW2NRtkhEsn2CY3JKfnfy3THqGB/jU4qUAFDrrO2Rnq7AOgOsIyAI
      kXUy2MgHhWCaEyXciugAgDQjiGn1ESYJoehK7cUY234uD1Q7tLMTBKbOBjadWAcAOklni9Ta
      orUf5HwQqYj8ecbPZ81nq13Vk2ImrS5cDQBO2hmrjjXJTLGq2MEhgwtbCklERiojeQexJG3S
      awNeYximxFayvng9AIyLHDeoKe1v5DIv+ICD002nk3RJQlIIAE3upju23XED6XFYGppdgL0W
      D0NFBkndpCb0T7NLijlsXlnAtPi0dyVJU/Udb4miVaJo1S2XTEgF6kkxDMNwmPPSXpngCum0
      eC0nG08OCRmiIOXu4/WAwXvBcrX0PJr56MSYifyLBwysK4CEJBISRq9WiAVRqqgAG3ji4BOO
      gINE5D9G/iPfnJ9tyg6SBm2ZtkVACASkYGflTg5zI4KGSQhJx5Jj1bG3J9zOYe6l/i+t+uf7
      XrUPAGbEzZgaOxUAmtxNn+V/ZpKZbhTPhbnc/NMOl0qnxgGGabWIhw+LuOVH9l8JfqL4w9KM
      fJj74bbybS9lvzQhekK9q77KUZVlylpyfMmBmgOjI0bfmXhn/PBQtsYtSQ+6mldICpO0Sfxn
      f6W95atCrxHn96/37W9Yip4bPGc6gxkWswBgkpnONp910S61WA0AUkGbOt/gbsCAm06Xe4RN
      siwThzkX7RIjsZASvj7wdZ4mNiuNKluvE+ue7ve01C5wVTas59ZvKNlAEdSjGY92JT1VF3KF
      6mB3s/m2cSNPHj8a4OijJ073y0yjafoGnk3d3M2+BZY/mh4AWI7V3t+Lc9BUiPR6/S23l6+9
      uHZizMRMQ2Z3q2BY5mjdUavPWmAuGG0atWj3olpX7RsD3giTh5GI3Fe970DNgfcGvzduzDj4
      zZXselXQdh8OcF/SP2w/fwiMEMIYtnEzK23lbtoNAE2upjdOvMFwTKQiMsuY1c71evbrw2sy
      0i0RWIAYhllzcc2q86vuTb73npR7ODeNOUwqhKOzJ+5MyxaTYjkpb/mhgKl3p6SGhchC6t31
      /zjzj66kxxjTS+a2WOs9XodZF5nsaipnSVIsFv9JIpEpihJqpNClbvPNxW+2lm0tdZR+O/Hb
      TlV48pq9F63KcZECveSavBesF6qd1SQiZybMdO6olJpJUkqqxKqn45+e32v+Y/sfq3BUKMXK
      Ts2mKOqXql/2VO1J0aVMiZ3CW2tOqs/tSNwoDVZDEwCATK8SyEWJ0sSFKQs5xA2PGJ5RluEM
      OGM1sR1LC5IHzZxzj9/usUjtBsQVWgttfts56zlws+Z/nAWGC1qcLgxVmBQmP+v3sT5RqIK1
      +rJTB/+UPGrm1pkt3pauHqhYIhNLZFMmRwCAygAQ09XK8M+JsZFjC1sKJ8dOvvqWfXcla/NT
      WpFqQmdnLh7YEiAYpJZodGId62l4u+YxRzYhkOhojg6WB68av8rmt0UorlQVMHjPWz4u+LAy
      ULOzYmeDu+HF7BcB4KO8f1QRVdPk08LcYbWu2nhNPB9S82jGo7y4fDH2C947rFMbCAn1Yf6n
      PxT9MDF64tN9n+6lTB4TPdbv8f5D9Q2H8Ouut4Sg8DG+B/Y8UOOs+XDYh70nZBFSSorQmolr
      rF5rVx4a1wPvodEFwf9G/h7eQ6Nrmkhl5Nykuam6VIRQ5yoQAMPJh4Zdzx5IbrfG1honqccn
      9OktilcrovVf+Nf8LfdvVp81RZfy7ql3bX5bH2OfNoUag6/c5itpta0vRj5sDnJhAk+Lm8ar
      Phiww+94MP3BYHnwkbojNc6aBSkLBISAb9InZz75LP+zFH1KkPQa+tO64nWVjkq5UD4bTwzf
      IZBz0rpw23s1H5aJa0anj+cw99j+x/LN+V7Gm6hNzAjN5NujECoMUkPPiv3fAuq4Z3ElFIND
      FYMvj9bOgBNjrCDl1h+LmFaf7o6kEwlFr8E/BZxwgyMtUhkpSdR6630A4KbdR+qO7K7cfbDm
      4F1Jd/GGYLrJ3fLlOcBASKmp5Lh7Rz/pEfjUyrZtznnJ8+YlzwOACGVEqa00WZssJsXtVa8q
      XMVh7ueyn3vpetn8NpqlSUTKBDJ+T/6V/q8MDhk8KHRQ4KCdtQf8xbbYMSlzEuZwmEvUJm4r
      25ZvzgcANaeYEtF5iO2Rnv8ELF7LnG1zWI5dM+ArONcCAL6SVrPSziHs5/xWn5W37L028LVx
      UeMGBg8McIExEWMStAnt6yOgCEQRAKBflEZIBS2rCzk3LbsvRRh2hQGFJMgUXUqqPrXMXiYi
      RcGSYACYnTA7pzEnTBG29tLaZXnLPIyHJMhUXepXE74CAJPMNDdxrjPg5AbSSqlAGK8SksLX
      Br7GFxiviec/zHKPU5Cdkzb1SE+3gTH2njVjhpP2MfIuODeEM+C0eq0ccG6Z3zg0lG31S1J0
      MwQzLF6LUqhM16fzZFqx9rbo2/jPH438CAAcfkdec15fU1+5Xm54PJNlWaFJTjd7GLMHMNBN
      HlIh3H9o+xpi892p88dGjl2Rv+LbC9+qhCo/65cIJD9N/MmkML024LUaZ82MLTP8rJ8vnObo
      85bz7d3ZW7X3ryf+ypuFUrUhHVsuF8iFhJBAxPRpd/PRjB3RIz3dBt3gtv5YBACkSiS+vrnZ
      caDGW9iimR4nDFdEKiNXjlvJYjZBl4gmtQmcgiE7OfS0lc/SH+Z+6PN574i8femlj042npyd
      MPuNgW8IgqSIYQCgXmTe2uvIOPWokDS982DNxsrNZ5R5lSeqQuWhIbIQAhFB0qBaZy10sFJ5
      aE+ADSBA96TcE6+Jr3XW8j5orDPQur74hHevTWYDgEO1h36p/GVs9NjeQb15xmhV9L9u+xeB
      iChd3NVN7ZGeboOUCwiFADOYVHW1dHAeqMYBznW8XhueyLv2dSJgGj3OnGZZtkkYcsWMUOGo
      +O7idxjwntJdDtKNAKlFV2yH/T3n74e4Q7Uq29+E/QXBslm54/IURVafdVv5tmf7PTsqYpRG
      pKl11YpIEe8lCACJ2sQVY1dgjAeFDOpo13Ydq/cVtc4gR+yJOWonnTtLd9R663Kac36Y/ANP
      gBBK0adcr4890tNtkEqR6am+GAMpu+4uVaDWiQMcACDBdRd6rl9qfJesuY05x3uXzOs1L0YV
      w1+PUkZND51iv9gECvI4lfdY5mN3Jt0JGOhmD8uyVLCin7FfYUsh7wcoSdWPjJ7zWqPml5pf
      ZsTNIBARIg+B3/SVjkbOQSGD2j8zHLMif4Xdb38w+O5SRS0ECWgBAxjUMg0mYWzkWADAGJ9p
      PtPsaR4TOUZAXO4pzdFbSrdIBdLbom7rkZ5bAZ+A4ppo8baISBGqdQEAEpPKcVHXoxSn62mz
      5wvRjxeLS/2s/+0hb/PXhaRwyai32T5+To7sjEMv0SOEGKuveVkeABif6LOg1wIX7SowF4wK
      HxUkDSLlwklxkybFTepYOMbYz/oRRtRVAwSHuQM1Bz4v+BwA9Bn6lRErGcw8lPbg2ZazrT7b
      wtSFfFoxe8D+6L5HXbTrk5Gf8FlXeByrO7bk+BIEKEoZdVMmEDrg8/oCmGP9ga42KHqwq2LX
      6HWjp2ya4k0iVBOidHclk9Lr/j7F6brg57JmDpwbo4rp5PiMCERpxUKhKEga1DbRIACE+L9W
      f+uXBV9uLdu6vXz79QrPacqZtmXaq0dfXX1udauvFWO8s2LnzoqdvI783K/PAUCiOqG/Nksu
      lEsF0kmxk2PVcRetF7/OX429DACISXGsOlYv0QfL27JwMBav9aciVQUloSQY8OrC1V2NPQG3
      vais0uZhCcbpZ5BBITDEZRiEPcPVdVHtrOYwZ/FZrJwtccRN+aTekXTHHUl3dLyCMQ5U2Fk3
      Leml59d0GGO31K/4SyKJSUojVmFydOTo0tbSgSEDbX7b4/sfxxh/POrjdi93AMhrzqt31de7
      6ndV7XLRrgnRE1449AIAxKpi/awfYxyjivlK87Hz69p/DV4mGWjQS/TT46ZXVJUMKEk0f3nO
      8FimmBJ/Oe7LABvgvXkAwH2q0XOm2agRzRs7b3XhahEp6koUhDIFhf0eLxtpUDc1NjbYkcbn
      9onQ//YuaY2z5pOzn/Q19h2rG9t1N6+uYlr0tHpHfbgiPFoR7Te7kfgKN2cA8DLeU02nUrQp
      eon+ek3iXHTL1xdwgNXckyyKVwPAhtINH+R+IKWkKbqU93XvCwjB34f8nSfObcrNa84DgPPm
      8wODB7YXMjN2Jk3TpfbSsy1nU7QpWqE2WhkNAFqRdnzEeOMYY5gizLPRup88Lm3STqHuYhk2
      RhHz9+i37LmlLMGwDAMIUUBRJNX+EATJaqqsVZyieyDlgZGhI6NV0V1FAzI0jQi0Zcv26VPH
      HzqaSxAsAjR06ND/sWjAABsgEdnuv/fJmU9WnlspIAR7J+695fw9/nJby1fnSa3Y+GhGe/4K
      APg079MvCr7gA+2u1yTOz5q/KGAdgaBFqQKjDADeOfHOD0U/AICUku6ZvUclUnF+xnuuRRiu
      ZHXEuyff5TD3cv+XL5sWf4Of9rPASigJQsjH+ACAT20JfCKfirwFh+4jCGLjtI28zo457Cmx
      igwySiOGmyd+HlcAACAASURBVECXM5fPVV5V13/QYJfd3qd/f1dzDUPeYN/nvw5ltrJnfn0m
      Xh3/3tD3+Pxqw8KG7a7c3Z5E/dbA+VjMcJyHwdwVGxl6iZ4iKJZjbX6b/CrTLQ9CRAY9lA4M
      166bP5LxSLwm3kW7ohRRSqESAFzH6h27qyiD1PR0Xz6ioxMwxr/W/nrRcnFBygJec2qTGwyc
      n/Fw3qeOPF3rqlWKlM6Ac1fFrgfTH6x0VG4p3TItZlqcRgcAHOZ+LPqx1ln7l95/4XdL3LT7
      VOOpVF1q+35ZV9IjVWhSUy9bw5QR194r/q/Gecv5MltZvavex/j4Z5RhyNg+czsAWCyW7pbG
      71YKSaE4SatfmEYqhYToigTXcxPncphbenrpA3se+G7Cd1eXcMFy4Z2T74yOGH1/6v38FQ/t
      EVPiOYlzAIBhGF4UKL0UiUlB8HVngAAXeOHQCx7Go5fobk+c036dNnvMn+eXiWtPGE4AwPzk
      +Wsurvks/zOGY3ZV7qpx1lQ5qj4Z9QkA2Hy2paeX0hydqk+dEDXBz/qXnl66oWRDuj79u0lt
      Lf+zq8BjIsY0ZjZGq6Jlgm4caHI9/Frz61MHnzJJTeumrJPHXcPjnUCEWqTGGPN+W1djb9Xe
      AnNBo7uRl55Ke+V9u++TUJI1E9d0VIolqTpRdD9+64BmabgqMpAMoP7WlEOKM9uKt2WZsqNU
      UZjlbFvLfGU2r8cbQuuCQvR2zjEjfsYl6yUv4/2p6Cd7wC4TyEaGty3OMWCTzNTkaUrSJu2u
      3P1B7gd+xg8AHeOd/+zSIxVIH0x/8PcqrdpRzXBMg7vBRbv4kexqTIiaYJAawuRhbRHEvNr5
      2/Q2O2G22WMeGjYUADDGZTVFLZ4WQLCrYle8Jv7bC99OiZkyNmosQojP1OwMOB/a+xCHuc/H
      fq4SXXa1JoWCV2VP3c0+ccaat6FkwzP9nmFdtPt003Hp2RWx6/poM62uVhaz9e76VeNXAcCy
      s8v2Ve97c9CbKZo2y/Lzh56vcdYAwCXrpdONpxvdjSm6lI9GfhSnvrxl8WeXnt8XtyfeTiAi
      VBFqlF2Z1hkD3ewGDiiTlCRIPgUuwzAYY8eeKn+lQzs7ntJJACBUHtpuNgxUO2N/Et+nnH4o
      suC9U+8JCAHN0fWu+rFRYxmOOVp/NFweTnN0YUshBlznqmuXHhazLb4WzYKE+Zfu21uzd3zU
      eAAgFULVuMiL9dubaWs5VfNg+oNWnzXL2HbI0qOZjz6a+Sj8Zp7+uexnfimnEWkIRCxMW6iT
      6EaFj+oUxtqTgeW6+B1PGmCsvqaPcjGHjU/0ERik7fQkIurfOI4ZTjYwWD4oRBAk/aLgixP1
      J57u93SqPtVXZmtZXUhIqS2jc1YUrcw0ZlKImho3dWrs1O8ufvd/p/5PIVD8cvsvOyt2cpib
      lTCrPR3C2ktrl55eOjlm8uv9X+/UpGZP8/ri9UNDh6YFpXVuZYdezNo6q7i1eGDwwEpHZZOn
      6d0h706KmdSJssZZ0zP2/EdAIuDzQnXy6CCQamqM96zZfbzBc6bZ9HTf5WeXs5j9qeinVH2q
      KEZlWNybkFAPaPuNShgboYwQgICXBi/jBQAf68OAp8VNO15/vNxeHquK5QeSBlcDzdF1rrqr
      G2KQGh7OePiG7X0o/aHt5dsX9178ypFXmnhnaQCzx7ytfNuwsGGx6lhXwDV/x3zA3YfL5eqa
      gKbp7pbZXZY/mh5j3NLS8jtWQbd6aasXc5evbCnZ8srhV+pd9YFGV+2rR+qWHGMc/jeOvjFm
      3ZhDNYc4jrtGIb9V4Q64v7vw3fH64xjj3RW7U79OHfbDMA/t4e+6Aq6d5TsbXY119rpz5nMs
      x95yL1pszaf3HQhYPRjjt46/lfp16vwd8/kqRv44smfs+Q+BUne2v72f+36rrzVMEbY4/SHj
      k32AJEiF8M1Bb2IO27eXt+w8p7k9gVSJcptyKYLqHdS7o2eFyE/NVk7lbYkasUZKSY1SI4na
      rANSEI9g+vvOu+aWLWykm14b8Fqn85RuBkXWol9rfx1VkWk6TjYXXzA+2DsjKGNP5Z5+xn4A
      sKNiR6u/y4y7Pfgj4KbdKwtWhivC5yXNO1J3ZFTEKECIV5l5YD/rOtEALPaX2mpj7Iv2LCIQ
      sWX6lrawUQAAaP4sn7X41DPi5P2D+xn7bZy2USVUtYdM2PdUuQ7X0YhhYvyckPu57OdbkJ63
      jr9V0FJQyY6eIh3yOrUsdl/ix6M+HhM5RkSKACCnMYfhmBtk3C0pKTWERTmaaz0sFREktbGy
      P08k8vWAMfZdsDgP1ipGhElS9Ddm4J1Z882Yw9IMw681v64qXCUkhLtm7Hqo90NXkHEYAJCY
      VE+KoZs9kl46OccqhUoBKZBSV1j5ORcNAJwrAADritetOrdqTuKchWkL+buEiAQE0mDVC+JH
      fjLs6bQLe5MYFDqoxlkzNHu8zc81nmqxN7u9tJePRsUYZxgyLlkvdbXmov1eFhG7du3VaZQc
      x2EODRsxnEB/9jWX83CtY1819rHywSHqKbE3U0WgztX8aR4ABC1Ot+jdz/76bLQq+rXs10SE
      kPMyhFyAEGLcgfp/5QkEQuP89I4WaqvPytsYO1bhr3IczNnNpIgnJEx8aO9DJxtPGqXG9VPX
      82SYw4zZQ+kkLHC3/CIwxgxmKEQFuMCG4g2h8tBhYcP42bPaUT19y3Sao7sqWiCSNBXnB0cl
      pkbpT586xQqkOWfy01MS/7f32NvBMMw1u+k8VIt9LKkRCWJUHQn4Kmx+2zfnv+lr7DskdEj7
      LSxGhITCGGMJaRAb/jX+Xzy9ZUOxr6BFOTlammX8rHDFF5KVsf7wHyw/UIbLI42SUsJVkchm
      teMV798CJwMaue6eXvcUWgqbPE3L85Y/3+95ngDpRCx0O8E5XPmgECAWWBLIOfFz+FsYcIAN
      yEhZhDLiBit2V0vtjiP5I0eMYHxOdWiCq7nc6/X+qSKRr8minhjjLbKqxkVR2s6KMEVRmy5s
      +vri11vKtxy649Dl6zrK+ExfwNApMpCz+oHF2B6gKOqi8xIgqJDUiYIV18zQ27EXGqkmVh1r
      9VnDlGERyojpcdM3lWyK08SRiHAdb0AUIetvatsRu7leY4w5L0OISCCBP++ysKWw1lU7JnIM
      hSgMmDcmbSrZ9N6p9+Ymzv1h0g82v+3PYi10HK4NlNlVE6MFhpt1E7g1a+E587nnDz8/LHTY
      S/1fuh4lhzkEyF/vdO2rFRgkipHhhIi6ZLn0xbkvsk3ZcxPnXk962nvN2PyeZjsVJZcIJICB
      BdYZcKpEKv8Fq+XbiwAQ9HBvUYTymkefYpr1VzmF4YqO86P7dGPrllJZH6NiajRFUQ6/Y+z6
      sR7G80r/V/hDlp/t92ySNunxA48frDmoEWn438afZc3l2F0JDKb0EvXkmH+/NIwxYPBxvkp7
      ZbwmvuM5sWlBaTtn7uyCt9Hd+MqRV6JUUQ9enEYX2YHTEiIKAEIUIWW2sgJzwfDw4cGy4M41
      0izd7EU6If/Gmped5ZwB1W3RlmoHY/bo7kzWBGswxoRCCCRCBGr32McYf5L3SV5z3iumZ0Kw
      Udo7yLa9wn2iQZIRpLsjqb18utkDDPZXOtgNpUKjjBqkU4qUPtaHENpUuonm6If2PrR95vbe
      Qb0P1x5O1afyXH8W6ZFlmfwlNklKN8aSLuDJaXLsq/4+fNc3zPrFvRffjPW2HUfqjpxqPHW6
      8fQdsZPlZrEkXQ8AjN1fX1hSba9igG10N14tPa2bSj1nmmUDTJrp8fBbqAbnY3wXLIDBV9oq
      CJYdrT+6onDFnbNuHx8zvt28xGDm2wvf+ln/9oJ1s61jSYUQCQhAwJ8N2A7l6AiBUcraA469
      VT6yRS0i1/Rd7dbQUaooZ8C5In+FUqQkEXl/6v0ToibclH/P/xIUk6I03VfFrgfPuRbW5veJ
      XFiLA2ygW7x8rji5UK7uExY0rO01tP5ULC1zLUyaGzI4sT0SryN+W6LT/FfDIxmszScIliMB
      wZi90gwDAGwo2pBvzheSwkl9prUzfpDzAd/CTdr9o9Bgk1akmhAt7WNon8EbXA05TTkjwkco
      +plYR8BXbedsAduWMkIuiH65P9PsnSeYedvU2+QiOe+72PFkyT+L9Py+UI4MdwqIxVlPjFfP
      SQ9K7xbv9xe/B4B7et3TfmwsAFB6yU/2Pd/A1qRLSTPjZwIAy7EBLiAmxby+opkV771kFSa2
      7aKTMgE/NylHtaVoYT30tPyBNNk6L/u+jtWdaTqDAQNAq8ABC4IprQQAhMGXvUdePvJyTlPO
      gl4Lnst6jlQKtfOTmUrX2bX7OD1lotnmz/Kxj1HPjJNnXyPTXo/03Ara8xbqoNs5jVq8LQDQ
      yRlNPTXGeYSESqh31fNXXjn6yv7q/f839P9GRYwCAFIlkvcP7spQQnPxrWEv0guDpG1DV5mt
      7J0T7yiFymf6PcO7E6UZrrGvHq2KPtdyLkJ5OVGQPdj/RPTf/Zz/7rzi6WQ/MVC8BAfYQJWj
      KkoV1R4c2CM9/2ksH7O8pLVkYPDAjnHmiCSe6P9ktD4mMyiTv1LYUuhlvMWtxbz0dAJj8Xov
      WaW9g3gfMQAgVaKgB9NwgBVGtG0G7K3ae7rpNAC8N/S9a2bu4fFS/5cWpS0yyUxt3zFQBEUQ
      BMuy3xT9S6chxrqzfSWtsizTW8ff2lK25a6ku9qXkz3S85+GQWLIb87Pa87rE9Sn43WtWHtv
      yr3tXz8a8dHZ5rMTYyZ2pMlrzvv83OcjIkaMP5LuL7MzjW71zHgMGAFCCPHZWHyMz8N4NCLN
      +KjxOY058Zr4q7PydsRPRT99mPPh/WEL5jkni3tp7XsqGzU2H+sDgDB5WKa8L9QBH1dk9poB
      oNnTDAABNrDs7LIe6flPY1PppiXHlxCIWDdpXYIuodNdzHK2n8s5LxM7LTY+Mb7T3XUl6042
      nrxgvTAl4vtAtVMQplhVuOqTM5/MS573fNbzCCGGYxbtWVTcWrxs9LIsU9aK0StuaBUrMBcE
      uEDuhePTavp4Csyci0ZNHkWiAgvwVxO+0om0W0M2RkSI+2H85sA3D9YeHBMxBgDOms/eIJb0
      cpc6WBS7MIP2oGsEapy+klZhEAUAJCKFxDVScNANbveJBgAQJ2pkfa5wb8UMN9E1rBYqxqVP
      UvaKVIwKRxRxdv9ZDHhd8bpWX+uSwUsQoGpHtZfxNrobr9mGi5aLPxX9NDthdntmjGf7PZuq
      Tx3YnEp5GOXYSF+VnTgnWFm/RDM3wSAzbSje8GbxO6Iy0a5Zu4LlwXcm3clzJWuTh4YO7crW
      jNnAjk3rsifOK8k94KbJSL1EGpIUplf8N9qa//96pvJoWHqatfgUI8Jq+rkVQkWoNLQjPcbY
      k9vEOgL+Sgf2s7q7kkjVFae1ufOaW38sQiIy+KXs9kRMtc7a1YWr1xWvA4DvJn6XHpRe3Fpc
      5agaGT6SIqirm/T4/scP1BwYHDx4xbgV12xkwONveu/0ZsUvuLd88ZjHj9Ufe/LAkzqJbvO0
      zQphZ/eKrnqLWTZIr/YzoJAraKulqgVlhGOfz/cn3yW95SqEcSqfhybD5Unq8KvpWauvdWMJ
      cKC5N1kUp8ZX5k8BAKQVIglJGqUs4rjfbpkkpuf7Pk9iEgASVAkMw8QoYqLFUZ79daRWTKV0
      jgoaFzK2rPTikPwkb5LdqfV/lPeRRqx5IuOJds8yTIJ1ErXy0kbciFNqMoeHDd84eaNCqJAQ
      kqufRlfSQwglMrEAANIyMg4cPCoi8cXCs0OHDGVZliTJLhgB4IYE/z7Lf4D+961COz0epl+h
      ynSkJ9QSUYyac9PiEAXRsRwWu3OaSKVQkqz1P520o3pHupNM1aV2LOTlgS93LNZbaHX8Ug0U
      MsT2JZVXzI+3hU/IbNBhH4sCeGvF1m3l2wDAJDXNiJ8hF7QZgQxpkaJSkZ/1y0VykiSjNdeN
      Au3SO4z2ujkJbqpW+Mj0rIHOxgqGbDug9Ybazy2oR91l+Q/Q/6FVeBnvJ7mf6MS6B9IfIBGJ
      hKR+YerVhbjPNts2lwIBpmf6fVX+9VcXvlKJVEfuONJFycJwhcAkowwSJCbbS6M5GgEipZTh
      od6chxZGq9Ib00WkyM/6l+YsPdV46p+j/wkAgLGmXrw88UN/CMoyZSGEWI6tclSFK8KvPoqw
      y7FHIMkeNLT9qy7u3z3m7s8DX5mNcwUkaUGIuK485Zpzf7j0AwGEl/FOiZkSp4lDCGGGs6wv
      4ty09o4k3ppM6cRIQBAyASGhwuRhBBDh8vCVBStrnDXP9nu2PT1KR1A6ieGJTOgwOZa0lty/
      +36FUPH9pO/Vpjb/QKlAumX6luVnl28t20ogIsAGKIIK1LqsqwuDSWR6uh/vlbGiYMUXBV9M
      j52+ZPASAGBavEhM8namnhX77w/WGbB8fR7TnE5ESZK01yNL16WPDB95qvHU6sLVv9b8unn6
      ZgBg7X5vvhkwBGqdkkQtAAijlKYXshBFYIYbdS49Xf+FdGjwtM3TGMwMCB7QySCEOezJN5MK
      gThOY/PbXD5XmCoMAC5YLtj8NpvfVu+q5/0PD9cdfmz/Y0GSoPVT1k+Lm2b2mIf9OAwAHo1c
      PEqahIQE+s1/w+l3cpizB+wA4K+0m1eeI+UC41N9CfHvt3HYg3YgEUkZpKzd33UeE6VQ+fHI
      j18/9vrm0s06iQ5z2L6rknMFFCPDOZo9RuWqGjX9TP0uBx0frvWdMcsRGAbr5yXPq3ZWX53o
      w3fJ2vpjERIQsieT7jg4z+qzfjX+qxR9Cr/BKSAEBmnbUYQkIjnMNXmaSmwl2absT898yofW
      H3Ifu/OZeYhA7cu6J/o+MSRsiISSTNw4sRcd9zg3m2Awf25Qj/T8bjhef/yT/E9uT7h9TuIc
      w196Yw5fM+Ul66Z9FyziBA3ISITQq/1fnRE3I0GTwFh9rsO1gEF3b0qBquSpPc+ISNG2Gdva
      g5pFMWpSIxIYpAK5+Jl+z8BVGhJr99t+LgMAyihlBdgRcPhZv5txY4YbohrwTN9nguXB/Jlw
      ANA3qI8Cy5zgbnA1AMA9KfcQiMhvyb+3173klVkZJZRkSOiQH4t+rHHWWCjLm395UyyX8rLV
      Iz3dxr7qfR+f+XhBrwWdwlx2V+2+ZL20sWTjnMQ5iLquvmPfWeHJaRInatTzkwBARIn47KdY
      w8kHhrAeWhSlNPgNGrFGI9Z03EwVhsr1T2VSAuq6nodWH9vqrxE1JswYqlXovr3tW6vH2tfY
      1/z5uUC1c9aksYrUy3u6hJl5u/KRWmHzaHIwAChFykcyHwEAhmE4H4MDLKm8wto0OWay1WtN
      0ibJwjXtDeiRnm5jT+WeCnvFtvJtnaRnfvJ8giA6KSJXQ2CSAYmuPuvPX+VAQkI9IpoQU1Gi
      qO0ztpMEKaGuOJ0JEV0tA4WRygtjLM/Vvh1+Knzj1I2x6thIeSSBCLrehTnuQnmBKY3hjzQA
      AIFRlpHaP4PF0rArbEJcgG1ZUcja/UGL0oThl82DMoHsLxl/6VRjj/TcABjjTi/sgfQH5EL5
      1JipnShj1bFP9Hli2dllRdai+b3mt+ck6AT54BBZHwMSUyzHAsC5lnPfX/x+auzU6I0CpsUL
      GFS3RSOErpfApQsgAhHxclyH+RMFcptyq2xVU+Kn6O7udST/wDPuJcKtwhVjV2jEmhhVDKII
      7awEAOh8SAuLWWcAB1jOQ9+wxs7SU9fYEmq6qQi3PwmONxwfEDygoyjEqeNeG/DaNYk3lmzk
      Nw2Ghw2PUkVdkwYhhHjFggMA+OzsZ4frDpe0lqxKe99TYObTXHYXdr99deHqNH3aqIhRayau
      McqMftb/8C8PexiPWCiemDBRKjfhvdjH+hbuXogBfzzy4xHhI3i5cQVch2oPZRoy+cy6hIQK
      ejCNc9Kia2Wv6oTLD8Xt8X7+/bY6K11V13QLHfifBAb87YVvL1gu3CR9si5ZSAijlFHtKf5v
      iOHhw9Ui9aiIUcpxkaan+4pi1b4yW6Da0a12bivftrpw9atHX8UYpwelG6VGESlK1iUjQDmN
      OTafbWDwwDUT17w39D0WsxzmzB5zO+/KcytfOPzCi4dfbL8iDJaLEzRdWKracVl6ahua7S7f
      qZxT4cGXz5dvrKtxuH0NNRWllbV+l7XR4upWr/7b4fA7Tjac/KXql5ukHxI65OidRzdO3Xjz
      886chDl7Z+9ND0q/ZL2ESIKudbWsKjSvPMe0+m6+nVnGrDh13KSYSe1jpJAUfjnuS41Ys654
      3bKzyxBCofLQAcED3h3y7sz4ma3+1nYnxlB5qIAQ8PoQ56E5d1cTltlrzmvO4+dc6DhzMQwz
      aUSfEGMQ8ZvQ1RflNEBwfd4+tUqJMVdfiQcNG37zXfrvxfH648fqjnm8nlaulebobeXbGI4B
      ADmW3hE8Wx1u6IK3PaXtTQIhlNOU88i+RxQCxbaZ22QSISEmkZBEwm5ssSVoE9ZNWUcgoqOK
      RhFUgibhVOOpKFVUk7tp1tZZGPDfh/29sKVwY8nGAnMBvzUxO2H2yPCRapGaddPN/8zDfjbo
      4YzrnaV67857q53Vz/R7hndkuyw9KYmxnUgbG5tDs/rVl+alJsefzTvLCeXnzl9Mjo+habrr
      fKI3s436b7J0l75bHhoxgpgcNmdt9Vpe/WzyNH1z4ZteVMKTRXe4USm7EEB2japvuQsCWiCl
      pFqR1tnqZCkpdU8UIpDN54CrRp/uVvFa6mvuZLfmPFG985RL62QRt+z0skhVZHFrsUFgaH+J
      BBAOr4Nwc5yLxgxnqW8+XHuKw9zo8NEAcLThaIO7YVrMNDft5t0LHS4Hz3v5gfo8zorKapaD
      0MhojUIKAKHh4Rfy8wRCqQCxMkO0r7XW1trKRyKr1V2pVP8D/j2P6h+NUcS8mNOmDQwKGfR+
      r/ccJZcIEanWaa55Os4tN0mr1W41bBVT4jYHmuurTJdTFADObcz1Mt7BoYOvt7gDABWjoiiq
      8acck1k1VT5ms2hvVnjWIxmPPOt91iA1dAxiBACsxdIHRKyPrg9q/evWvwJA78jeRqnx7fy3
      fawvxhTzY9GPXsY7KmLUX7L+wjvGX+YXkGRwcNCJMyWJSW17+saYVFWwjxKKEOb6aUM4Jhqj
      bvtd/JcCIWT32QFAIVC4aJfZY5aHaCRP9kEk0cXBSrdcl06iW3NxDYe5+cnz27PWdwIGnNuU
      68f+IaFDGt2Ni39ZTHP0NxO+yTBkdF2+ekqs93zLq8Peel6xRCqQtp/CdLDmYF5z3r0p9/Kx
      QQghPnhZz5BhijAOc0GSIKlAmmnMrHHUxKnj+K2Mw7WHC1sKMw2Z0FF6CAJOnMwzhUUKLv+A
      kFjCz38EABCCrg4z+9/DMfOxwaGD3xjwxomGE0tzllY5qqLUUf9mmT7Gl9uUm6RN4j3VOcxt
      KNngpt39jP3eP/0+BtzX2Jc/tY/z0KyLpoIk7apMg6vhkQOP0Cz91YSvYtWxRqmRz+u75PgS
      jPFL2S/xmZSrHFWf53+eZcqaET/jYO3BX+t+fTD9wfCEeADo9P5ePfKqPWBXIsXCPos6XleL
      1ZumbQIAPtHT8tHLWczyi7jzlvMsZgNswEW7tpZuvSw9fq9bYwqPMOmcbo9C9r92okB3wXBM
      linrrvS7BIRgevz0tKC0Olfd9Uw4N4+vCr/6LP+z/sH9V45bCQDVzup3TrzDYvbTUZ9mmbI4
      zEUpozjMIQzNnxcwZq/u7mRJr7adKblAzkuMllArsOynKT+xmC1tLV1fvB4AJkZPzA7OBoBv
      L3z7c/nPuyp3zYif8UHuB7WuWpVQ9WzWs+1taPW1SiiJmBKPFQ475TzdqywU+nRuJy83PCiC
      4g/5eq7fcyPCRmjEmjR92or8Fcvzl3eYuaQqvczSaLZGx173rM0/D0hETgqbxM/uCFCcOi5W
      1XlVcQuQC+UEIvizJgDAKDH2D+7f4m2pd9W/PvD1MHnYmeYzLx95eWz4mPmBkcBhHLjsvaoU
      KdfetpbzM75V5U10S9DidEotS9QmDgsd5mN9GrGGwxyBiH7GftvKt/U19gWAuYlz91Tt4Q//
      4jBHc/Ql66VH9z0apYpaNW7VC32fd5ysUw+IuGZTr4ZUIB0e3rboDleGI0BXeMW3WMw11XWZ
      mTeYR3u84m+5CoZjKu2Vrf7WaFW0WqCmKIrhmJUFK5fnL0/UJK6fun5Z3rIVBSuCZcE7xvzM
      tvqEkcqOVjuGYcBGN36UCxw2PJJh1/qqnFXJ2uQ3jr1xsObgy/1fnhk/E2PsYTwiUsR7xfNr
      NITQG8fe2Fu5N0GbkNuUqxKqds/efc3DFW7yQWGMbX7bladH2VtVGp2fZkWCP4t2fMtg3TQi
      0dWHTHcNiqDK7GXPH3o+Shm1btI6/kq4MlxICPlY4DuT78SA+wf3p9QiSi26ugRSJ9Yv6OXY
      X2PfVTlf9Wydp35SzKR6V72f9Td5mgAAISRo5uy/lsj6GqlYZbvadKTuiJN2Cgnh0mFLQ+Wh
      nRIhXg8c5vZX7xdT4sEhgzsakxBCGrHmis7X1tWUVDWnZWZkpiRfVU4PLoOxeJuX5wuCZUGL
      rp1xvWugK3cmJ0ZP7G/qz/uYasVaPuP/NSq1+a0bikUhcuX4qMA3F4DDzng7UOCm3R8M/6Cw
      pXCgPIsLsISQdB2p9xa0sDa/Nvay8/ySQUsO1R6aFT8rUXsDD+NmTzOBCH6zpcBc8PTBpymC
      envI25X2ylkJs4zSy1FmV0hPRHgER8ljo/4HT1L6fcF5Gc5Ds3b/LfCOjRwbNjHMKDMSiPAx
      vhcPv+gMOD8Y/kFHRfWaqC4r+c729cDGjFEjwhVDQ/3l9tVDVlaK6vsa++olenWN0PJloSdU
      bvhLhrSfkWn1yftfkQRoSOiQjqkUO8FDe1y0yyA11Dpr79x5J0VQG6ZuMEgN/J9MIFuWt6za
      We0MbhUkEgAAGdJJREFUOF/IfqGd6wrpMVusSrVWKeuerf1PCEGoXL8wjZDdin8LgQg+jpNh
      mAZ3w4GaAxzmilqLbnie3Fp6y0/6PQWyytHiu1W3RQOAASAR2gY/zkUDg1mbHwDEsWpxbFuO
      1ZtpEsuxD+x9oKS15I2Bb4RKQ32Mj3eSB4AQecjW6VsJRKw8t/Lnsp+zTdkdGTv0n/FJFFoG
      9wQa3xgIIfFNODDcEBHKiKf6PuUKuG5o8QOAQaGDjtQdGRs/HgBavC0KoaJ9uGpyN10IupAx
      L1ERcl0n/AAbaHQ3hspDr7ZGYsD1rnov433x8Iu9g3p/O/FbEpHtWZ54n+hHMh55IO2BTgMk
      +eabb7Z9JKiA03K+rCYxrm3mwhxzeO82eUjihTNHSyrrwWNxgUwpFdE0LRR2ZTnkOI4gbuqs
      7ltm+aPpAcDr9Uql11YtMWC7z04gouObuMkqAmxge8V2DnM6sY4iqQxDRnZwdqdNg2siShk1
      M3Zmdkj2odpD9+++v7ClMEwRtr1iu0FqeO7Qc19f+FpmVGdHD+jI0rFJrx177a3jb0koCW8m
      7giE0NDQoWX2Ml77fjH7xasztiCEKKKzU+wVjXbYbSr1ZeHFtA9zjJcGhBDrs5c1stnhFE3T
      LMt2HXXLcd3OFNxdlj+aHgC66ObpptPP/vrsjLgZT/Z5srtVbC7Z/NeTf9WKtbun7+5utCGF
      KMzhake1m3aXtJY8ceCJFm9LXlOeXqynEKURaTo1oGOTLB4Li1mL19KRhuEYL+tVCBRRiqi3
      B729qWRTP2O/m39QV0iPSCYzV9YCAHD0xYvFYTHxerUcADIy+x4/eZpmArm5OUMGDbxhkOWt
      RWF2i+WPpocOh4BejQZ3g4fxNHmaOi1i27+uvbR2V+Wup/o8dfWUFKmMjFJGRauiOzlU3Az4
      Km5PuF0r0SZpkp479FyLt0Xy/9o78+ioyvOPv3ebfcks2SdMJjskERIiGDAqIoRoEKwY0Rbr
      qb8eRRRPT7XVWk5P+bX2J+eAti4tFi20HopV3AABCwETWQIJZU9IQhIymSSTTDKZ/c7c5f39
      ce0wGTKTmWESAt7Pn3fe7d557vK+7/N8H1xcZahalrOsIr0iqMHAIf2h4g/nLOduT7mde08J
      MWGiJPEXdb84NXDqtTtfm58+P0WasnrWaoZhIh/V6F1WFqanpwIAAEpMLyxkKQ8l1DoHu91q
      ccmccpell8LEOI6jKBr+EX1rvLmEQmGoKstzlpcklWjEmsACgV182fHlxaGL9b31pSmjdgGM
      DiMXwYkiKE3TY7YPWch6aFSCIwjC+hhfp41IkXJ6GlwXYlRcnVUNABBhIgDASfPJvV17Jbik
      tqY2aAEwcEhqsZpbKa7vqX+u9jmFQLH7od11pjoa0nW9dRUZFZFfKAihi3KJcFHAdw8ACILq
      dDoC/+5djmBESmqqVq0UiqUCDJXKlQqZBADAf/f4jA7kwLBYJcMTRMPk8L7OfVqxVoyJ/V3M
      Tp6dp8pbkbsiMAesi3Kt3L1ye8v2mYkzM+QZoYbkONwzvL0ZwVChXmH7qnNwV+vnPbu2OT7C
      UMygMARWyVflq0Sqxwsebx5unp0yuzKzMshbY8wubF7bvq59SZKkmrwaIS6kWfqpoqeSJEmt
      1tY3T71JMqROrrP77Ndmd/fT0N/wk/0/uWS9NOrZ43ZYvz1+smxOeYo2DhOKWxhnvclzzoKr
      RcJM5abGTV9c/uLejHs33rXRXyBLmZWlDJYVRwAiwAQYgvlVI8eEMjkgyfhMTgAApNg6edMb
      wm2gG/Q4ehakLwgsWZxYzCWInJs6F0OwUK4dQRRri79c/qUYF3MZff1Jfd87+97+rv37u/Zv
      vbDV5DRtXrQ5lBzspeFLQ+RQo7lxlPWMOFw5Br2PGj8U43uOtCyZsXs52VSD0iDEhNkJ4++h
      SgjJ1iVbHT7HtYYViLI6W2hQioq0AADl/YYc/WxR80cSQrJqxqpQVfyZuSiG2tC4YYQcWVe+
      zr8XGwSCIP545EDmpc073nu8NLm0ydzkpJyctuuYrMhbgaN4sbZ4VGbJC2dP7d69u+VyV/jk
      g3xmyUAYlrG4LTRDB3Yx4Br4xviNh/LEZUgWt8XutY9bhaWZy23Nt229rWhrUX1PfVRdQAhZ
      lnV4HaSP3HBiQ/HW4nf+8864VUa9FHEcz8zJz8/Sh7kzblJctT0Dfz7t63HEvWUUQTViTdBb
      48VvXlxzcM22C9uiauqc5VxDX4O31+HtssEA3weNWCMjZIPuQc7POhSuhn7sA/Mj9sqHcx++
      dlHHj5tyv3v63S/avzA5TKsPrF5/bD3FUgAALgQRQ7BOWycEsNZYG1Sxydz0cv3L5wbP+Y+M
      XqQiR0xepDCaE75ZcNT1ABq6Tw9ysrQTjVqkxhGcy6QXId327if3PUmz9P+ani91FCQ+fZtQ
      f/XVc8h46KVvXipJKtlSuSVUC5BmMYg+LfxR4rxw8vV1PXV/PvNnASbgUlsCAFbmr8xTX1Vv
      XTNrDcVSD+c+HFRx85nNx/qOkTS56Z5NnbbORHHiKOuRqxJBlHFoNwuyu3S+thHJrJCi1/Hl
      tYrXBtwDgSkdxsTsNrdb229PuV2ACTAUwxGcBaxAIEAEaGD6IwCA2WX2sb5TA6dW7l55f9b9
      T8x44trWZPPSBDo5Pl4KqSJt0QzNDL1CX2WoOtB9IEOeESgUDwCAAJ4dPGtymuanz2+1tjb0
      NTya/6hGrPlB7g/sPvvynOX7u/b/qv5XhdrCUdZjMg+nJU3S9Z1kZPfq8MWZk9adGBf79QbC
      sLZ2bfNQ84tlLz5R+ES6LH37A9s9tKdAlIcwEB2tN7gib4VWot19eXetsdZFuca0HgRHhVmj
      s0lAyNh9qIwIdDFTCBRrS9ZyiUW9jFeEifwf3RwuyuVlvA6fg2bpdUfWGR1GFrLPlTy3xLBk
      iWEJAGBn604GMk7KOWqXNFln8Pmiy/jCMy6sl0FwBMGufmJCCMmWYZ/FrcQUGIL5lWzDTNwI
      jFikX5Qtz1YKlWPmHhgT1ze9jlqj/K505ZKrXjfrj6//uuvrVTNWqUSqAfdAPVnPubT6C9ye
      cvv7le8rBUqVSLUgY8GB7gOcn6ufZTnLdHKdXqEPsB5ypPZYU5o2Idvw3U3jc9ta2jsxUYLX
      1uemcb1WjKj0uu99TuSo8F6xD29vFugV6scKrmbn89DD/2yBPva1R37tnAeDXhx+IISuhn5f
      t125xMBJn05TTFs/f33kvTPDJGAhbfEEHpTiUgRBxLj4oZyHOm2dJUkl2OhAKxRB/eby87Kf
      ry1dGyRMjqM4508SYD2ylB+vqA4sJJAoi4uKdn/1dbJG7nXZ23zy8gwhTdMsy7IsG2bQ3PQv
      8pOMocpEl7/+LiDNkueGvF12xuYj20YgCyHy3TQK4giRqaD6XEISVwmTAAQsvFqRhSzN0gJM
      AFho29MBKRZPk8rmpcUwJGnlNEG2UpSnujxy+d9X/l2dVZ0mTfvlnF8+VvCYQWloHm4+ajra
      am1drF/sl9u9tgsCIbj5+bXtj9qpuApLNV9sEckTTh87lD3zjsL8XJPRxELK1Nc3TaejKIog
      wq2Wsiwb7f5ftFUmujwAwOPxiMVjh3NH0oWr0Wz7tJ0e8igrM2V3pqMJAbcvikhu09L9bmed
      iXH4RNNHOeVsatz02onXcpQ56XIdYCCCIrI70xExFsNZQAwI0mQIgb7y7Suftn9q9VgXTluI
      I7hGpEERdG/X3lpjrcVjuVd3r3/9MKouQriVoMT0wkKnxWQhUbXLbht0GApLHeYOBpMSBOHz
      +cJHU0MIo41jj7bKRJcHAKAoGlUVlmWdtFNGyLi1H0GiFBHjwgy5rCJ9jP8DA5iUAAjARDiG
      YZCFkGIRAYogyGHT4V5Xb9Ng0zzdPOXoL/2Yz3pe+ry2kba5aXMDq1dmVh4yHkoUJ+Zr8v3H
      o+ri+5ITeRIicj5q/mjTqU0P5T70fMnz3F4346JQIYbgY+/OUl4fHPaZBAOfd30x33yb7pRU
      uSRTWpbS2N/Y0NewNHupCBclihMDLS/ms3ZTbg/tUYvU4z5Xouoium1nnjC0jbS5afeOlh0P
      fPrA6YHTAABMSoQyHQAAgqGCVNkbZ9784PwH/9f9BuukvF12AEBZStnTM59+uf7lBz59oKG/
      IZKuaZZ2+pyhHgRW0lqzu+aRXY902jtjOrOQ8NYTN54pfubXc38tJaRD5FCbtS3CWkXaIhEm
      Ks2fo1iSqVj03WwXQtjn6vMy3iFPOKUbP6/Uv7J45+KdbTvH/LXX2XvFfmXQM9g5Emfr4VUv
      40aCKKEmvyZXldtqbV2avXTMMhBC9+lBxkrKK9IZwBy+crhQU7j34b0qoSpwp4zAiC2Ltxgd
      xjAxNIHU9dS5afex3mNBMq4c/2j+BwCgMrPyTl1ErUUObz3xBEGQ0uRSTn95TFgXZf2kFTAQ
      14r3iet/c/Q3AICPl358rc5hdkJ2dkI2hJBhmXF9WNeVrztiOvJk4ZMMyzT0N6RJ0/RKvT/m
      8ETfCQBAkaYoVMgYSZM7Wnbo5LqF0xZGdb689UwqqAgXF6ipIY9AJ5fb5SiCEigRJMocyK6O
      XX87/7fVM1dzSgahqM6q5nxV93Xue6nuJa1Yu+/hfX5b2XTPprODZ7lE3WNyyHhoY9NGESb6
      90NfS1Fp5EbBW884RHLrBzJCjgyRQwalgbv1uXRU/l8RHNX8aAYAACBggWLBF8u+uDB04fUT
      r9fk19yTcc+1re3p2NM+0r63c2946/GjFCqFmFAr1gbuPMxKmuV3zufcPNJloxYRCtQFeoU+
      UzDN+ZdLHgrV/k9xKN3CIEKsFobl1vZrdlPunW07IYByRN7j7Xn24LOX25oLT6cKMpVoWCVK
      lmUBAlbtXbX57OYCdYH2DDGyu4NIkQaLGSDfCWyzLKuWqLec3XLQeHDAPbA8Z/m1bXKhF08W
      Psm92sY9iwx5xtKspTUFNdzzLKj8oHtwxa4Vf7/499nJszn5MA6VSFWTX3Of9G734V5IMqJs
      JTHeRj0H/+wJZmfbzg0nNySKEz9e+PHR3qMtwy1XmK5VrfeK8lSSWeHUUsF/gw1YyJI06Wzo
      Y4ZIz3lLoJvOtdTk19h8tkfzHx3z1yJtUZG2aMyfQsGJdo+Jm3bbfXaapa2kNegnHMWxNLli
      SSZL0qK8SAWcwuYlhSzpIQmhyGkddDFYiko84gEaZbh1wluA3ITcBGEC55v3YPaD/a7+6Ra9
      mNAIs8d39cJQ7P3K93udvSVJJb4HRjzNQ7I7Rv2XkGFHPm+nrV7Vw7lAjgMAylLKylLKYhgn
      xVIMy0Ql8KtX6N9d+K7NZxtzlx5BEcU9GTRNI3g81pp9bnu3qb+1q1cuxiALCQTOvONOCYHd
      2mvN8L/BSjarLVr1JwzHPJQHR/Egjxk/1KDbvLEJAJDwYLZoTlJsV4mF7Nv/efvrK187fc43
      FrwR6IRq8Vj+dOpPeaq8H07/IYIgE/1HhCgHocfjEYiklHMIIoLsaSmtra0uTNrd1Z2ZkXrL
      50QWoSLAAoZhos2JfMJ84oVDL0xTTNu2eNvYTwUFIS5LYm0+Ik8Z81UaIoe2nNsCAQQANPY1
      Fquvagh93vb5Z+2foQhapa9SCqPuAlIsQzMg4q3hUFbGmPv7pQpFWk5Rq/EbraagQ56Mee0D
      /aaCXAPDMOOaZ7QmH0OViS6PYVi0VbrsXSRDdto6vdArw8dKNoADzYrvxJdieDAAAHAc10g0
      9xvub7G2FGoKl+cuD2ykPK38X63/KlAXKMVKCCGCIpF3wXrogXfOsl4mafVMXB3RCzHcm4uh
      vMae3sTUdJT24hIZabcyqDBBIb2131x+YtAtpAD1SesnGfKMu3V3x3c/MtoqTeamV799tSKt
      4tXyVyNtfNjTv7EJMDDxmZnCzHBf+n7CDQUjhJkGzqNRAAAgEkJqw9zyuE72k21W5RJD+JtS
      jIvDxOxNJo39jSanqban9lUQqfXgarH2yUKGpAT6SN1H+Rl7RNj2dbEuikiSKO67OYLdavJr
      aEiXaENGdY2JKFcVRjnkWnjriQj53Try0rC4eJyAExayjf2NWrE2KyFcrPEkoBKp1sxaE9VX
      fwzwHhoRIb9Ll/jT24jkcVZgd7btfOrrp1buWRkYBM76GKrfBdng70uj07i9efuwZzjoOAvZ
      Dy9++MH5D7i0TlMZ/tkTT7jYAxzBA6MUhj+6RF4cUlYZ5HeNCg5cf3x9o7nx8sjldeWj8lRe
      Hrm84eQGCGBJUkmYgOKpAG898eTBnAdzEnLUIjWXdYYDehkAQWDOAI5ibfHFoYszNDOCjqfL
      0uekzvHS3vBSG364R1Qkyodxh7eeeIIAhFPTDUT9WAHV57p2Drwse1lWQlZVZlXgwW5791v/
      eWtZ9rJQ/mUcEMJuR7dKqPIy3prdNQCAHQ/sSJYmh6kyEfDfPROOE3d/Ru/tdHYFHV97aO26
      I+u4HMp+Pmv/bF/Xvjeb3gzf5p6OPdWfVdfsrjE6jRaPxeKx9Lp64zvsSOCfPRPOX8/9dduF
      bTPUMz5a+lHg8Qx5htltTpGmBB6sMlSdHTy7IGMBCIvJaQIA9Ln6ClQFv5v/OwjgrMTxFZ/j
      zjjWYzF1mBwo5h1y07g+UUxJUvlI5GiZrp4uwSXXqrhtvGuji3EliketAuSp8t6vfH/cNh+f
      /jiKoLmqXAkhWZazLJ7DjYZwOxUQMrWHvnI7FeoExkVShEh5T8VcAIDb7Q4lB8kxBbPaxjCk
      4eFhtTrE8joErIdGxXhgupIwXZA0KcSFQclNIhwSyZAIQDg300k466iqhHj2sFRzc6vb2kcT
      cvOQZenSHxytO+ymnLV1R+bPLeMEv8OPIKoRx1BlosuDsGrfzroe54EeeZVeWp4aWD5UUwRC
      sExw/HkkQzK7zav2rhJggg+rPkwQJkzOWUdeOFwkMgCFALiPYm22QWNK7m3O/g4al3A5kb/n
      e+zskA+wELiDr0PchzTiG7GQFhRBnbRTK9VORBfXU4WPRA5JmD12xkWRzUOifDUmv+oFNhFD
      ghAe7jlMoAQX2DUJZx0P7zCesGBSQlqWMn65aDjed/y9s++VJZc9O+tZ/0EEQcadf91A+PWe
      qcKOlh0n+0/+5cxfbvRAooB/9sSTDlvHmYEzlZmVYWT6Q/Fo/qMj3pEgjbcpDm89sWMlracH
      T89Nmeu3lZ8d+lmHrcPsNj8z85loWytPKy9PK4/3GCcW/s0VO1svbF1bu/ad0+/4jxSoC0SY
      KMLdzVsA/tkTOzJChiGYRnR1Xvb7O3/voT1+DcCogBDafDYpIQ2fA2VKwVtP7Py48MeVmZXp
      snT/ERzF/fK50bLj0o4NJzeUJpVGslMxReCtJ3YEmCCUWG4MXLBcoFn6vOV8vBqcBCKyHpfd
      6mEwjULk8DAKWRQyojyRs6ZkTbIkOYz2zxQknPU4TM17mkwVc2Z1tjczLJQSIG/WTTYpmJq4
      KTeO4ujoKUuqNPX50udv1JBiI5z1EFJVqsbWY+rVpSR2dXVZGallYECQrLnlI5H9VaKNRI6k
      WIetY3Xt6hRJyrv3vCsF0UlK3CS7pCzV3NyamKqbP7fsq6/2lxXddcVsF7Fek7EjS5/O75Je
      Txd9nr4B94DD5yBZUokrxy0fQxfXUz6qKuF2Sb1uR0eXMT0zG/W5cFmCa7ifRiXJ2gR+l/R6
      uqBZem/nXq1YW5ZURuDRTc6n2i4pv8cekgmynusZ0lTrgl9r5okd3np4Yoe3nrhxoPvAwo8X
      vn8univF5wbP/fbYb1uGW+LYZhzhrSduHOk9MuAeONh9MI5tvn367U9aP9l8ZnMc24wj/E5F
      3Php0U81Ys0i/aI4tlmdVT3oHqwyVI35q91r33ZhW746f5F+UbTZx+ICP+cKyVSYc0EIuaSh
      nHEEVdl6fuvGpo0CVPDtY9+OKTjP+zV/r0EQJChpaCAF6gIpIS1QFdwopw7eem5i7ki748CK
      AwJMcEMENMB41gO72lsZQsq4rC4Gz0wUu3FNOh+JPJWQCWLxRIsX4eZcVmNzS69TnZAwYLEM
      D5jOXDKlaXjTCYfRYVx9YPXrJ15n2Ki3J29GQnw1s1Rzcytl77dLDYOd56urFjcc+dYLMEIo
      mVM6kyRJmSycyd/6cewhutjavPXtM28DAHY9uEsn141bfqpdpWirhItE9tq03zS1qtSJ7pEB
      TWahy9xB4wI+EjkMC6YtOGg8qFfo0xRpODZ+3Sl4laKqws/YQzIVZuxTvAt+rZkndnjr4Ykd
      3nrCcXnk8mN7HvvjqT/e6IFMUXjrCUd9T/15y/ntzdtv9ECmKPxacziqs6uvOK7MTrqZlAkm
      E956wqEVa39T/psbPYqpC//m4okd3np4Yici6/GRbpebhCxNeqmJHhDPTUS47x6XfbjL2He+
      pU2XrPLSiFaGp+WVioQ3jT4Iz0QTznqkCnWGZticnpOogH19vWa7RO1ykALARyLHpYspeJWi
      rRIuElmXlXv05Pm7q5YJAdlrcQgRurO9RVdRwe+SxquLKXiVoqoSXu0b5BfNFOOIY9gxe+4c
      52APjUUt5shzCzOOlRkMBgCAXJ0EAJDrMidhQDw3EfyMnSd2eOvhiR3eeq4XFrI2r42B3wtH
      5iB467le/tnyz/s+ue+tU2/d6IHcAHjruV5ara0kTU5ZoYIJhd9jv15eKH2hSFPEZUD6vsFb
      z/WiFqkfyX8EABDVwvStwTixpB63GyOErhGLm8FTVOIRD9AkRCfzyXMLE856bL1tx9ttPsdQ
      glIKWdiNwFl3VEzayG4WSJo8O3h2hmaGCBXd6LFMNv8PsJbRjSvoSssAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Conservation Savings' width='192'>
      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
      T/x/vHeInugTuNEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Upg Costs vs. ERS - HVAC' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Walls' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Windows' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2dd3xTR9b3z9VVr1ax5d6wwZViegmdQALpjWwh
      5dns+5BPerJPNiRPNtmELLsEdlPYhLCbTd88mwQSSugtxhhwMLhgW66y5CJLVu+3zfuHCbFk
      G8vGxpat71/26N6rY/mnmTMz55zBEEIQIcKgYI20ARHCmIh6Igwe9kgbMNqpra7giFVpSXF2
      mxXD2VKJpKvd57Jh/CgeG2jCU12vZ3O5bMqLCWRCnKTZ4gS10mJsEyoTSI9DKpV63G6BUIRh
      I/unDD0R9fSDRqPJmyzYtetbhkExUWyLXyASChV8oqZWK1LF4RjiIaKiFa1Zlq+pqeWIoxQS
      DkugUPApzaUKg6cuQQEGs3tiRnqUOiVOIRzpv2aIiainH8RiMUEjuYhPskUYONTqOB6bMRua
      VdHRuFiWoBK3t7TGKDkkQSamZ7CAYQHtZSgMw9h8EY9gMAyLjY2lKXrsdTwAgEXmXMMBQsjr
      9QqFlzsbj8ctEIzBkWvI1ONwOHAcH5JHRQgXhmzkwnFcJBIN1dMihAWRGXuEwRNRT4TBE1FP
      hMETUU+EwRNRT4TBE1FPhMETUU+EwRNRT4QBUNJWQjHUlV8j6okwAL649AXDMFd+jagnQqhQ
      NOWm3Rycc6Ulop4IodLmbEuRpWDdNnsj6okQKk32pnRpeveWiHoihIrGpkmUJHZviagnQqi0
      2FuyFFndW0JRDzKZTMNkUIRwgUFMi6tFLpR3b+w/vqfw2GHgioVisbZeo203L5iceqJUOyU/
      V4E7amwcq1azdNVKDmvMhc1FCIRmaCFbiGMBAYD99z1Ws0kgVQj4fKlY6HK5MYyFs8Dl8VCE
      9/D3e/NmL8ABud3uSITr2Mbutct4MiwwurZ/9dxy9y849sbS+o6ElAlSxosUqatXLq2/VMYA
      pKcmamobMQwTCoXY2IvajdCNOntdalRqUGO/IxdZdPgoKVIWqPllF8uV6VnI3lHWYpg0uUAo
      Zc+YHe8xav004rMj3vcYR2vTTpJPCmrsVz2cydOnc6QKAQefVjCtq2mqKrbrh0wFQFL0EJsZ
      YVTSYG+YlzAvqLF/r1mqjOhjvIMQ0jv18ZL4oPbIiBOhf0iaFGCC7jtcXUTUE6F/LD4Ln8vv
      2R5RT4T+6XR3JkuTe7ZH1BOhf6osVWmyNAAIWtWLqCdC/+icuhRZCgBs/r7KR9JX2iPqidA/
      Zrc5WZyMELqgs3HwSHxPhJChGdrsN4v54hazO1EuwFk/ayaingj9YPPZ5Hw5AGgMzpx4WfeX
      IuqJ0A8GlyFFkgIAZa323Hhp95ci6onQDzXWmpSoFIRQTbsjO9L3RBgQWrs2TZJGM4gmaZEg
      YLk5op4I/WB0GxOkCXY3ESXmsQYa3xNhPIMQshN2EUd0XmfNS5AFvcoOutbv9zqcbpzNkclk
      eCTedNzj8rskHAkbZzcaXVOSooJe7a4eVHH+tNFBsHEWQsjn9RXMvSEmKlKKcFzT6m5ViVQA
      oDE4fjE7eKur+8iF5c+YP3d6ntNhIxB72Y0rI9KJoLPrMqIyKJpxeUmpiBf0arDfo9Xql626
      ZUqaqtXkuF4WRhi9NNgbMmQZZqdfLg6WDvRUj1zKP3TwYHHppYaqC50ODwAAoNa2tuG3M8Jo
      pMHWkChLrOtwpkSLe74aHJmKcwVREqHfzy6YPVcu4gHAkf17JcrYKLlcW6/RaNuWz84tqW4h
      fL7ZObGXTCyrvuGmW1ZH8rnGKiRJSrnSS61NBUnynq8G9z2quJT58+dnp8e7PURXC036CAbn
      cnkSId/vJxqqNZOmTRcwDruHOnrwwOzFyyP5XGMVH+mjMZqDczQGZ3pML31PsHoMzXUHDhyo
      1VsUsq4zFtCKNXcpofNigyExbaKCRfhwlttNUgjnsiE/L6v0QhmGYSKRKJLPNfbQOXRqkZqi
      GaOLiJGGEJlKktTsG5ZE8Rinxw8AAHTRof0mTJWTIKkoK4+dNGXWrHnuNk1y1lSlKnb6zDkT
      okV+OtLrjE3anG25ilyz068Uc3vtHQL8HrvZ6KPhwCc74icVZF/e0WAXzJ3PFkl5bNaUaVO7
      LiuYPqPrh1QZQGwvw2GEsYHGpslV5dZ3OPPig1eZuwjoe9hcLknRN99x97ScCVeCgESyKF4k
      VXRc0uJoyZJnVbTaMntzeiBIPSJJFA95K6vrWltb/d3CVyOMQxBCZq9ZxpdVtzsnxkl7vSZ4
      xp6WPS02zYcQCHmRYwPHNTSiKUThLHanyx8j6cVlhp7q0TdUlVVqzA7vjbfdk6SM7FSMX8xu
      c5IkqdPuixbz2H24Lj1acf6SpYskIgFiIiPXuKbKWpUqS20wuXpd6ekiWD1JKal2l3/qtGnR
      srF2gG+EAdFsb06LSrugtwXFMncnWD111eV2tw/HI07PeKfZ3pwhy6g3urL7cJmhp3rEPFxT
      16jT6X2ROdc4BiGkc+qUQqXN5VP1tsrcRXAfQ2K8xYsWyYQcnB3pfsYvJE1KcAlJgoDL5rL7
      POo6WCISsbimohQAy5s2I6pHNFCEcYLZa+ZyuRdbbBNj+xy2oKd6ohNSoxNSh9GuCOFAm6st
      XZZe3ebI6dtlhp5+j8tq2Lt796FjhQTN9HpDhLGMxw7GOgBosjdNkk+qNzinJPa+w9VFsHqa
      dW0rbl4zfVJCmzESmTrOQAhO/BksWgCotdYmShPNLp+ij1XmLnqs9yTEHt6/93RZfYxSMnx2
      RhiN+D1gqoeJSwCgw92h5MSycfzqWVnB6qEoisPlAkN5/eQwGhphFFL6CcxYByw2SZMMw+gt
      ZIZafPWgv2Cv2Wy1zZ6/WMxn43if87QIYxDCA9Xfw7pvAMDiswi4gspW++TE4PS/IIL7HplY
      VFpy5vTpM/af4pojjAvOfwpZNwGHCwBtjrZ0aXplq31ibD/eS3DfE5M0YWnShOEyMVxorYT4
      XBg/kdoUAfUn4d4Pun7T2DTJkpRCiyexvyCL3nfeO1sbyzXariwJW2f7gUPHKJrWNdW1dphJ
      n6uiolyrN5A+p8XhMXUYKGZsxTUTPtj1CFDjye1rOAnJs4EnRggxBGFwGZS8BCGXzerv+9OL
      ehiGFinjo4UsEgEAHDl+auH8WTRFy6PjigtPOI3NFh8vNSnWaWgsPF18rqIeH2NfUZsOrFpw
      jZsD7Rgaiv8OU+9HCHVs3eo8caLV0er3iLKvuk7YRXf1IM35wiaT++i+b48cOcqWxXBZAAB5
      E1P3Hzhk99E8Fs3mi8WqJBnH/e2egwjgxx8vzpo9A6Gxlc9l7wCgwdYy0nZcL2qPQPREkMV4
      KytJbbNk2TIradWZIafvrfUrBPQ9qpjoSyWFtDhhQUF2SfFZggEASiCNSVVLjGbLrl278yfn
      e/xUjDoWxxAALF6x/MTBAzQaW/lcpnLIvA06L420HdeL8p0w7zHG7ze98676hd87CGcMP6ay
      zZmh7n/BL8Br9iLBjIJpSpWK8num5XE8Hh9XzHN26MRp0zJjZdHCFQhAIBQTBHnjyuVsjJkX
      h6HcCWNGNpextkHWGjBWjLQd14X2KuBLUFSi+R//lK68kRsfX2e6FCOK+bHWm6zoPzwwQD1C
      Pru8stLj9bFwtiImbqo6AQDLm3ND16vq2MvHcsWo1V0/CNgAvOBzU8Iemw5mPgS1e0bajutC
      4RaYs96n0fiqqxM3/wUAGm2Nck6chItzOf0v+HVXD6aISVi8NGHYLA0TCBfIk8DnHmk7hp/O
      ZiDdjDrf9OxzsS9uwHAcALR2bSI+KzGEjgd6zrmMHQYGgc9lszi8Q2/u6MfjBJEaODwABIR/
      pK0ZZkp2wML/MX/yiXjhDdy4uK62JkeT3sKZ3KPIXK8EjFxuS/uuXd/JlSqczVu+cuXQmzv6
      sWlBogAAiEoERzuoUkfYnuHD1QkWnY+QecsrErduudLs9Dv1DmZldkh75AHqESni1t5zN5vP
      rajU8LnjMjLV3AQxeQAAUWlg0Y5l9RS/h3JvMW7Zqv798yzOZefV7XdLOBKTg0xWDmrkatU3
      HT98VCjgto/PynMd5SBPAwBQpkJn1UhbM2x47KjlR0uFT7TwBl7y5VqWCKEzbWfUggQBBxeE
      NhkKVs+knFypXMkXSuKj+18sGoPY20GVAQAQnQ229pG2Ztio3EWoFrlOFSnuuaerASH0YfmH
      h5oPLU/4VUJoLjP0VE+DplqhjnMYW83j0GtGCDw2EMoAACQqsDaOtEHDA+FlKvZ0fFepfu7Z
      rnmWh/S8VPgSg5hNizY1GP1Xj2XuTrB6+Hxup7HD6nCxWOOv6gpigPRAVyYkVwhjNaGt/Gtr
      UZVg1lx+ZiYAtDnbXvzhxSWJS34z5TcYhlW22qf0F9ZzhWDXOEoZn6uIo/x+qZA7xEaPftx2
      kMYCxgIAwNkAJBA+6O0s4DCGIqmiD93M5MR1vwaAOnPdlpIt66etn6Ke0vW6xeGNkw925GrR
      a3kCCeZ3dlicQ2hzeGCsAFW32CZlOljH3F6ptsh+sTX6hT9iPN7J5pN/LvnzKwteuSIdP0kR
      DBJwQw0rDe57MidNKiw8wRJELZg3aSiNDgtsBlB1+6tV2dBZC+qMkTNo6GGObWaveo43MXNH
      2Q6tXfvusnf5nJ871wtaS268LPQN7+C+h8MXL12xcvGC2exxWILZWAaK1J9/lSdCZ82IGTMc
      1J/0ttvx1ff8seiPbGC/dsNr3aVjdvq2Hq779bzU0J8XrB5Ta8PufYc6je029/iLazY3gaLb
      yBWdC7bWkbNmqEEMOrm5LXbJhuI/zImb89CUh3DWzyMURTMvf1v5P6smXT2BK4hg9ZjNjlil
      1GwyOtzjbMZO00AB8Ls5jBIF2LQwZqLeGoscZy6+F9XycP7Dqyas6j48IYQ+LGycnCCbka4a
      0CMD1MPQdOqECT6Ps9PFxKvG2Woh5Qt2AnE2sESAxkRGNkOjk5styhtJhfiKj3yF802WMr3t
      N4sHnA0RoJ42be13u3a2WT0NVRdNDt81mRt22I0gTw9owViAkeD3jJBBQ4q22HGqpDJ/wlT1
      1CCn2Obyb9pf/cZdk/GBr/AFfN0SJ2RPcbmQUOGzGEiCBBBcq9FhhLkGouKCG6MzwdwMiXkj
      YdDQwTDo+CaHN/9CCvlgyorur9A089xXZS/fkisb1PJesNwm5k0Fn1OoSkyMHmd57GYtqPOD
      G1W5YNaMhDVDSlOho6iUt/L+eltjgiQg+u+9Y3ULMlT5oUXz9KTnKSf1Gk3t6cKTHbbLXrOh
      pWnv9wf9JNlQW93Q3IIYqrbmUnNrB+G2GixOvbaJHBv5XGYNKNKCGxWJ0Bnm6kEMKnrH7sw2
      z83KVmV3n2cVaYx6i+dX81IHndHQo36Pn1myaF60Sun/qQpC4elzy5YsZGFYfHLaxR/PNVWc
      9QvU1aXFnQZdYWGhRm9mj42FIZcJxDHBjcossIf5Tntjod/kxTNmn/JVzo2be6W50+HdfrL+
      96tz2PjgNzSD75RKpUJF/IyCaUkxl+dcs6blfb9nj9HuA8LFEcpsFpdCIeFzwEdBVVVNTl72
      WMjnokhgsF62tMRysOvCeNKOEBS9Y22Jld15R4WxYk78nK5mgqI3fFP+7KqsXs+LDJ1g9Xis
      hn37D9XWNzi9XauFlMeHYpUSp9P+xb+/TktNiklKqLpw0cMIpTxs0Y03FR36nkQQ9vlcnk7g
      9bZKxmIBVwFU2C6cNhbSuIwk+P7sVDaLfWVl+d0jdYsmxUxJVlzj44P3uURydQ5PoVZKy0pL
      Z8+dzWPjfIxKnb4wXiZIfeABhDAenxeTRLDYbByDG5IwNCWTNQb2NOwmkPex2sHGwGsFTuz1
      NWgoQAhOveVkLRXNkZ43XpgVN6ur+XiVwWD3Pr1yCPYxe0Sm6rQU6TlxoigpSa1r7QTA0vKm
      JkSJMIzF5wsEAj4Lw7g8HhvHMRaO4yw2u/9c+TDAVAGqHi5zF6pMsITnfkXTaZDG2osqpatW
      FbUVdamnudP1yWnthjW5QzJWBKsnfUJ6U6OWoqma6hqpbNxM2q1toOhjL12VDZ3V19eaoYBh
      oHCrV30rWy5HcpnJbUqVpSKENu6temblpCjR0ARvBavH7/OSNMPmCRcsWaGOGjerhZZ6iOoj
      DVKRBJ2119eaoaD5DJKobSdKo+67t8HakChNZLFYx6o74uWC/N5ONx4cwerx+oj5i5ZNnZRk
      tbuZ8J1rDBRPJ4ije39JPgFc5utrzTXDMFC4Bc1+3F9bK8zP/6H1h8WJiwmS/vKs7qllmUP4
      PsHqEQqFVeWlWoOlubbS6hwfW11+L/Dk0NfBLkIpOFvDbNKuLQJJnO2Hi9JVKzEcrzRV5kbn
      fvOjfs4EZZR4KANtA9Tjc5hrta04i5WQmrlgwQKldHyMXO4O4PX9l7JYwFcBET7xKoiBi1+h
      uY87jx+XrVljcpu4OJeDiXZeaL1/dsrQvlXgqbZ8UUZGRkZGht/aarC4hvadRi+GaojtscPV
      HZEcnOGz4txYDNJYV72Jn5WNi8WnWk4tTV66aV/VE8szh/y00AD1UD53XV1dXV1dg7adN/ZK
      q/SFqQaic692QfQEMNZfL2uuDZqC4r+juf9t++pr+b33AkBRa5GIybJ4iBsm9tiHuWYCxMiT
      yOfMmQMAOM4eC2uAIWLVQt4dV7tAPRVaSgDCoSzEpT2QOI2weoCNcxMTfKTPR/r/c8a8YfVV
      vx6DJaDvwTAWh8PhcDjjSDoA4HH1sj/aHWk0WOqulzXXAEVAyT9g1m/sX38TdccdAFDcVtzc
      IU+Qi/qtnTs4AvoeXV1l8blSEhfSXteqO+9Ty8aB18zQ4DMB56ozEXEc+MLBay58CwrWMSy+
      t7ZW9eh6ADjXft7UMem3t6X3e+vgCFBPcmae0+VVpUz0GrU+HwHjQT1uG8hS4OpBmTwBeE3A
      MP1cNrK4LNB8GhY+7So8JczLZXG5CKGD5eR/z50bPWz/xx6xhdk5moslrQ4mYZzU0DBrQJ7U
      zzUYBpJ48Nivi0GDAiE49BIs+h1i4bZvvpHdfjsANFuNXmvefbOSh+9tg9XTaWixuMjM5Gi7
      a6zXXevCbgB5CJ+vSDGqS2oYqoAiUcoc+8GDuETCjY8HgL2llmeX5gqGs4pXsHqcLo9MzNfr
      9OPlhCVTFaiy+r9MlQmW0ZrTzjDo0EsuwZLmR35LNDTGvvQSALRZPR+WXLx5yvAGlgSrJyEl
      PVop44kVqvHg9ACASQOKEPoe9WQwj9KsZKZit62o0lXdkvDnTdGPrseFQoTQ9pP1eRntQm6o
      1TAGR3DVy0++3KWMjgGGUcYmxCnEw/reowISA14IgSgyNZhH14IhQog0Gs3b3lLx94g27JGn
      /tyDXmqx76774cmVA0sMHQTBVS/vvPUWsUJRU1Onkg3LCsHogqaBcfS5P9odgRLIUVQNirLb
      O3fs8NfWRU9jc2a/CN2kgxDadrwuN00/J/6h4Tajh9fc2V547AgGTKvR9lMbo9Pph9uOkcGi
      h6i0kM7h4nDBbwFm5LOSGb/f/MUXLU89LZwxI3nL60J2A0y+s/sFPzaao8VsidiR0Ve829AR
      /LXLyJyE8RWqKKFYcXnGvn/3tzGJaaqYmJITuwlp9owk1oGS5rkzp8kY4wUDWFuabr3jVk6Y
      rk1bakGZGtKVGAayJHDZQHqtkeTXAmWztW3YIF64KGXHBxiOw97fw/JXgf1zoCBNM+8er390
      hWS/Xs1mDXvN5B75XE6ny2E5W1xsc1+esfM4LJvTy8LxmbNmshDiiqLUCnG7oQMhdPzI4UUr
      b8IhbDNyLFpQTQz1YmnsyIaoIopqff55xbp1irX3YWw2GDXgMkDqrO7X7K9on5oUpXGeX5S0
      6DqYFKwehqEIghAIhT/FQzELlq5OEHgrtZ1d59zyJNGLFs7vaGliAGZMn1pcfBbDwvaEpc56
      iLlqbEZ3VBNHsBAdoqj2TZukq1eLZs8GAGAoOLIRVrzSfdh1+8mPiprWL8m40HFhSkxwoYzh
      IKBzc9ptHL5IqVQJklO4iGCQkIWhkhOHGFXynFRlU12ViE3aHfbW1rYZc2+QiNCM6amErcNP
      I3445pMiBNYmkPYRkNqTmFyo/M9wGtQnCCHT9u1shUJ+662Xm+pOgDK9ex4IQujT09pfzk7x
      0k6chSsE12OEDVCP3+sFNo4Q43E5LR0tbjIrJVZeMH8RLhBycNbEnMtyViovTwUTJADRsutg
      5bDA0MASdXca+iEqHkwjs9Nu27OHslrjXnjh8u+EB4rfg3v+0f2aVqvnh1rTp4/MOdp8JFuZ
      fX0MC1CPx2m5UFHtZ3BEkctW36oU8wBAIB6jqz5+F8BAdmN4YmDYgNB1PivZdfas6/DhhK1b
      uypzAwD8+ClMWgWin1MjGITeP17/1PKJOIt1ru3cutx118e2APUkZeQ4Xd7k7CluQ6PXS2AD
      KWEXftg7QJU5ACmwcKAdwNAhrQ8NEV6NxvLxJ/Gvv37lIBJwGKDhONz/SffLypqtBMXMTFfS
      DK1z6uIl8dfHvIAPAsOwlNTk4wf3Ake0ZNlYP5XdVBlQX7dfMAyiUsFpgaihD/HsFdJsNrzy
      asLf/spW/NTNeB1w6GWY+Uj3AZeime0n6+6fJ9pVu6vUUDo9djr7euk74G0QYgiK5nFwfUeH
      n6DEQx1EPbowaSBl/sBuiUoEUyVELR0egwKgnc72/31Z/eIGbtc5njQFVfvg7D9h/mMwaSkA
      0Axt9pgvGi8erDQ3e23HDR0z42Y+WvBorPj6pdwHzrk6mj784vtb77o9IdmjHNvDFgA4OkA5
      wNQ41SQwt8BQ5tP1DtO1tPPgg8K8PEAIDDVwdCOos9C6//MAc0534kzbGa1dqxQos+V59c1R
      /374zijRNdVSGRwB6pHGTnhi/UM/njvT1GpWpySrJGN3mx0hsDWDbIBf0+hsaN4xPAb9DKLp
      jq1/FS9aLJ41CzxW+OHtZu2xssm3X8J8umPP8Di8gpiCOzLvmKicyMJY7x6p/cVs3ohIB3ru
      VHAF4nmLls9FDIIwXMIJHZIAnmrAkabyRDA3DI9BP9P5wQc+EceyMJNdtI0o/ecuRbQhb2me
      MvVX6hlqiZrD4lxZmLU4fWU667Z1M4bbpL4IVo/P4+bwhTThBzaXyw71tIvww2uGkM/y+Bku
      D4AHNA34NXwyDA0MAyw8SLsMYvR2/YH6feexr1VC4sEv3pHOesb/8KGHBfLuxQavgBD684Ga
      h29IH8F/U7B6bJ0maVyy324BkYorHrvq6WwasNPTBYsGygv4YNfArHrY/STgUiDMgGgQxDIc
      HuAYxuGWWesuWKvT6ZhfJ04RYhjc9m9QJF1lQNK02X0EPTtj2IN4rkKwethcrt9hPFVSvnj5
      il5vGCN0aiC6zwVZ2utl8fm979zJ08DZCbw+1ePwO860nlEKlUmiJIVQ0dVtXH6UtQV2Pgar
      XoeEfISQ0+c4qPmuUHsoky9bk7RwwrmYNCpZtvJWTBoLSVOvvhDFMOhPBzSv3Jo7sqW3evQ9
      ZsPZsroFcwusdreEH7a7EP1ia4bEgl5fIdrbdb95RLRgfvSjj7JlPT4B5QQwVvV1VjJFU5vP
      bk6Vptbaave497S524QsIQFEvCh+Fkcy/cevmhY+HSuWn6/7rlBfSCN6acrSN256X8wT248c
      cda54/74DsYOaZXkWLUhP16aFj3C2wDBtsYnJKqNHqk0ijdWNyi6sHdAVO+l5oxvvZXw5mba
      Zmt55ln52rXS5csCOiF5Khh7LwaFEHrv4nt5qrx7s+/tugUhxCCGoAlr01nxsVfrFz5Z6NM5
      Ky9ly7M3zNkgF8i7LrMfPuI4cCDhT2+wQpOOj6S3n2z84IERc5avEGxuU7M+Ri7x+9x2gp0a
      N2RFpkYXDAP2RhD08vXwlJUBSfGzsjAM4+fmmt5+23XsWMyzz3BUP7kXynSo3d/rU/c37Hf4
      HY9Oe/SK2jAMwzFcoCsTnH4X7v2kQJHUs7uzHzniOHAg/rU/srih7td+errpnumJ8hGapQeA
      AnFZjd9+/Z89B456CRoNBJfLNaDrRxKPA335257NDE3rn33O19zcvdFZVNT4y1/ZDh5kGAYh
      hPw+9PG9Pe+9ZLz0+KHH3YSbtNn87e0M/dOn1/AD2nEjsrX28nYMYz9+XPf005TbHbrtZqdv
      7XtFPoIK/ZbhI6Dv0TdUVWq0HIEIaMLjJ/hXz+4OX+x6kCh7NrtOnWKrY7hJAaml4nnzBJMn
      mz7Y4Tx+Qv30U+zoaAxwoKnue6U2r+31o8+/3DbXtOs5DGcDhgHDSFcsl2bwWRc/h/s+A0lw
      FBFCyF1cbH5/e/I/duDCn/NmKvXWb0pbrhKn2Wx2P7ksg8cZFdPhAPUkpE1yu72K5CyvUUsQ
      oyiFYIixGyAqOIcLUVTn+9uT3n2n51QLF4tjn3naW1XVumGDbNVNUVwe5rGAJIZyODwlJa7C
      U2/Lzz0WvShx3kLB+im4QAAAlNXm+seLvuJjdu5dMp1RkK3EAld33KeLTe+8k/Te3/Gf/EuE
      0L4LLd9dbHt6xURJ3zuMfC4eHTW8WVqhg6FAnZtaGotKLiKMu/TGlTLhAApAud1ukSgckngY
      Gr76f7D8ZVAGCMi2bx/RrIt5dP3VbvX7O7d/wK16B+Xe59BYMYwlnF5QGOvwJMh/mf/rgEvL
      d4NmP7p1q1dTZ9+7l2hoFC9dKl21kqNUAoCnqsq4cWPi22+zlZe7QD9Jv7m/mkHo+ZtzuKOj
      XwmFHjsVfL6Az3N7SZKmAcZi+bCa/SBVB0mHdjhsO3clvfvO1W9l8XgxTzzOXIilv39dOi2P
      JeUjiY6r3X2j7DdQfxqEUuAJga+Eyp2gOwu3/RXjCoSTJwsnT6bdbsfhw+0v/4ElEokXL7bt
      3Bm/ZcsV6bTbPK/tvrQ0S33njKTwqpwU3PdUlV9QKWT1LcbEtOxktQwASMJXW9+Uk52FGJpi
      gMvBvR4Pi39oYKsAAA6JSURBVM3l4BiNMERTbC6XhWHh0feQBPz713D72yBVd2/u/Mc/WGKx
      Yu3akB6CEFAkUITd3vy3Y89smPUyx9UGLiN4HeDUAUlDVCws3dCzJhBCyN/c7C4slNx44+W4
      C4AfGzvfOVL3u1VZecnhN8MN7ntU0dFSZQyruV0lvzweH/h+36ScfJ/fX3z0OyoqpyAJr2z1
      O0ytcycnXWwlHcaO2267OWy+MBc+h8ylQdKhbDb32XNJb78V4jNOaozfl7flxUuPmb59dOGf
      2AnTQgxQxDCMn5rKT03t+hUh9NnppjMN5jfXTouWhuUEJXiT2WZsKT5XKpRImZ/yJpVSUV1D
      M4Ox5y+YhwPoGvWZeTlSLun0wfEjx5bdtIoVLvlchBfKv4IZDwQ1mz/9TPHAOpYgpHAUj4/8
      uKjpofmpB/W7FeTCHYfIB3acefNAzQ81HbaBlLf2EtSL35R12H1v/XJ6mEoHevY9MYkTpCSD
      Y8ho6BCmJLIwevKshW2aczX6zrxoAACpTNDZ6fBTbAEXFiycf+zwsdvXLBeJRG63ewTMHxAn
      t8Kc9UEDCtHS6rtQenVnuTsfFjWtyo9r8JzOS/M/P3sBABAUU6azVrTYvvpR73ATSpkgUy3J
      UAmVEr5KzFWJeQIeO2gepzO7X95Zft+s5FWT48MyD+4ngtVTX1Vm8TFA0XyJBOMK0+KjKk4f
      h7jMWWmqhtoauZBOyJ2nb9BMnr1AKWLNkOOM20IyiIeP+o/A1gL6M7D8haBm80f/Uj3xBBZa
      xIXTS56p73x6jej/ak++dsNrXf94HgefNUE1a4IKAEiKNjp8GoPTYPdWtjraHV6/n2pxEgli
      LuCseBk/WspnsbCT1R0vrcnJiAv7bcRgr7m1qaa0sqZd35GUnpw9dV5qrIz0+1kcLt6fazOq
      vWaEYN8LkH83pATsDXlray0f/iv+T2+E0gEghP52sCYnQfCl/tVNCzepxep+b+mCYZCfpBw+
      yuz0dzp9Jg+5PFs9uDOIRxvBfU+UXIkBlpqVs2DebAGfCwAc3ijYT7lGWkrBYwqSDmIY05at
      Mc//T4hjh87sLtXbiKjd9066N3TpAACLhQl4HAGPM/Zq0AZ7zc3N+mWrbpmSHm20eUf9aBQa
      NA2nt8HC3wU1eysq8JgYXlofh7r14P0TDQtzCbPPvCp91VCbGK4E9z0KKf/QwYOI8EqiDGLh
      LJV0tCyKD57aw6BIA3VA6hZDEKZt2+Jffz3Ejqe6xeYjfKXOL19d8GpY+7lDS4B6aNLPEqnm
      zlKJpTIhP/wHLABgaDjzPty1PWhJxnHoED8nhxMTUl4fw6C3j9aJYk6sTl8dI7pOqYBhQYB6
      CK+zuroaACP8/unzFiqu7bjlUcH5L2DSTUHLg4zfb9+zJ/6NN0J8xrlGc4evaaLAevOEm4fB
      xDAmQD18iXLBggUAYNLXO92+sFeP3wPnP4T/CgjmQghZPv9CumIFR9lLkEZPKIr556k6luLw
      EwWvskZzrfiRIEA9Pqe55GIVAAJcMG9uyEW1Ri1ntsP8Z4OWB+3f7/drtfGv/CHEZxyobCvs
      /O5/Zy6Ol16n0gJhRIB6BFLVwoULR8qUIcaig8bjsPCp7m3uCxfs+/Ylbd2ChdaLUDSz5WjF
      /GxibXZoG6jjjN4/RHunweYJ55MGEAOnt8Gi57s7y76GBuOWLYmb/8Lih7qv9HWJzsk98+K8
      x3rNx4vQQz0I+X0+CmEcPJzH+JaLQHogbd6VBrKzs+PNN+NefRUPeUHc7iG2nDj35OLsdPlw
      nVAU7gSv9zTWXGxst2EABbPnjYag/cFAEfDDFli64UrHw/j9bb9/IfqpJ/kTBlCU6KOipkkp
      trU5w14zO3wJVg9FEmyeUCrgssMmZicQhOD0dkiaCXGXz1JEFGXY9GfZnXcI8/JCf4zV5d9Z
      Uf3xQ6s5+FgMsBwiAtRDkWTKxHyl2wsA/OE8mWcYqTkCVi3csvlKg3HbNl56etTNA1uq+evh
      mocWJKTKE4bavjFFgEQM+mbEYWu1egBWfsGMkaoKM3jaK+H8R3DX+13lKRBC1p07Ga9P8Yv7
      B/SYOoNdZ/G8dMvIJ2uOcgJcY6VS2tB4ORdupAwaPG4LHH4VVr0Ggstn3riLz7iOHI197tkQ
      w3e6cHmJvxws/92NWVx2ZMzqhwD1sFgsi6nD5vKlZWSK+WH12dEkfP88zHscVJfnR97qavNn
      n8X/eVOIdQUAgGaYI5fa1+44uTwrMScxathsHUME5ZYyDKOrLXvtjxvbrQNIj0Ujm4nMMOjo
      JlT0wZUGwmRqvP8XhNEY8gOYc/Wme//+Q+7mPx6uOzM8Vo5BAr6XXpth98ETQqnyt+vXK8Mo
      VLvyW3B1wqLnun4jjEbDq6+qX9zAiQ7pFIG6dvt7JxqEXMRSf/ZOwdolqbOH09YxRWC9Zpyb
      lj6BhWE6bSNflC8VBERPWk36+hZXQV5am8HIF0oVUr6PYjGEVyiV4iMY8mKohtJ/w9oPu6rB
      eS5d6njjT+oNLwhzc/u91ez0bT9e32b3PrIo5fPGN29SzV+SumT4LR47BMc19wXpsX5/rGR6
      Qb6Qtpxt9N0wM4cw1p5pchEe7y03L8NHKhvQ64DP18JdO0CegBCy7d7t2LcvftMmjqKfMz4c
      XuKjwsaLettjSzNzEsWvnP5DtjJ7Xe66SOTXgAh1O4LNl8gFTOmFSo4sVimgT50uAYCiwtML
      lyzC0AjlczE07HoUlr8C8gSGIDr++jdfVVXSu+/2K50fm8xPfl46IUa8/YGZecmSP5x+OVsR
      kc5gCFU9NEVOnnmDBNnMPjx/cr7PZWMAFi1dfPTgIQQjcT4XQnD8L5C6CFJmUjZby7PPcZOS
      Yp9/vt8aSuebzP/8oeHdX01fPTWRxYIXC1/MUeasy4tIZ1CE6F3TFLn3m6+aO8yE11VTXePw
      +Eify+r0WExGP0Wj6z/nqtiNdj6BEPJUVzc9/F+usrJQbmq3uO/edqrT4UUI0Qy9+czmf5X/
      63JZpwgDJ1T1IIRoirrKx3yd1ENRyNyMKvaif93G+L3248e16x8NqvbVFya7d90Hpxs7HAgh
      mqbfPvf2+6XvR6RzLQxgM4t1LSWuBw1C4HWAUQP6s2DSgNMI0niIy0e3v9/5yWdEU1Pim5u7
      197qCz9JP/XlhWdunJgWI6EZ+r3S97hs7iNTH4kMWNdCqHOufhnKORdCYG2FlrPQWgamWuAI
      IToD4qdB/FSQxgALp2y2jq1buSkpqgcfDGUXgiDpV7+rnJ+hunlqgo/0bS7ZHCOIeWTqIyws
      nGOYRgGjbyMdITj3EdTuh5zbYep9oEgH3uUUTMQwhF5v/c9/vJWXlA8/JF0U0rG/CKG/7K/O
      VEtunppgcps2Fm9cnrJ8dcbqSK9z7Ywy9VAUHHwZ2Hz4xRfdy0oyBOEuLrb8+0u2QhF1z93q
      554L/X//+ekmNgt7YEFao6Vx45mN66etnxEX2TwfGkbTyOWxwr4NkDwHZv0afhpTyM5O65f/
      5y0vF86YLluzhhMXN6A+Y8+FlqI608a7p5zSF35c9fHGBRvjJHHXZGSEboyavsfaAt8+CfP+
      GyYuBwxDNO0uKbHv2cs4HNI1q1W/fST0YthXKNdZvi1t+dsvCz6u/KjeWr9t+TYBZ6zVIRhZ
      Rkff01QMP2xFN73BiOJ9Go37VJGnsoKXni6/7z5eaurgHJSadvvG3Ze23p//QeXbMcKYB/Mf
      jMSYDjkjrR6EoOwb4tA2p/I+T3kN4/cJ8vJEc+byc3Pw0ErB9YrV5X/s8/PPrEr6tG7L6vTV
      y9OWR3zk4WDE1EPZbO7iYqF5L6E56+TdLJg5Xzh9+s/HQVwVhBCDmL5yrIrrTe8dq79vHv9b
      /d8fK3hsinpK6FZFGBDXWz0MSbqLi63ffIMRPjnniOiux+GGxwFjhdI3MAyjMWv2Ne2r6axB
      LMQFrhAX+pCPx+apBWoJT457px8qc9Bs3eppnDOdR/+08E+RkhfDynCph6RITmBcMGk2Ow4c
      dBw6JJ4/T7ZgGufCW9i0X0P2jf2Wq2UYptnefEx3rLi1OFmWvDptdV5MHo/NYxiGRjRBEx7C
      u+diwz+LdWuysjPTzF6kZ4C+J+seISf8iw+NboZLPdvObzN4DA/lP5QmS/M3NNj37vVWXoq6
      607JDQtxSxWceBOW/S8kXC3BikFMm6PtUPOhUkNprDh2SfKSaeppQYLwEtTesrYfqjsmxst+
      MTt57J8CPsoYLvUghEpaz3x0aKOUL7+thD35waeE+fkYhkHFXij7Am7ZAlG9l6RgGHSosm3H
      qXovTeo9NYlSztq8hfEKeYZSIBPzxHwOm8VisTCPn/y6RPd9efstUxLumJEo5EXmUyPAcKnH
      fvCg9euvBVlZlnsWfdq4k8vmrsv+VXrZLrBp4ZatwOklU6zT1Xm4/tKBHxFfwKyZgS1ImE5R
      bK3Va3P5dVZvh92rs3pJgmIYRAJGkPQtU+PvmZkcrlmLY4LhUo/n0iVeenrXrBsh1Gio8Hz1
      qwZxdM6t72UqM7v7yHq7/pju2DFt8Zla6RTRmk13TE2LkfTlRHdZS9EMzmKF14EgY5LrMufq
      bIS9z6J5T+rVaR9Vfuwlvbdl3hYvjj+hO3G67bScpxAQeec1yl/OnHTnzGR2WNfuGGcMv3oa
      TkHh3+CmN0B9uRiZ1qb9rOozL+FdkLhggnjaZ6eNgNATKyaqpJFthDBjAOpBCDEMg/cRT9OL
      ehADF3eCZh+s/kvPoxUpmtlV2rL3QstvF2fMy4yOrAWHI6G6nIihyy+c0Zmo1ctmXyyv5Ahl
      GXGSdg/HY2qZlD+Z09MFYWg48gZQfrj7Awhc+GEYdL7JvONkw4w0xfYHZ0Xc3vAl1P8c6XPU
      NHbefscaTelJaeqs5pKjUZzUE2drcvMLepEOABz4A6gyYdbPxxmRFH2h2bq3vL3Z5CxIVfzh
      jvwEeWQ1L7z5/6leiTX1tdACAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='191'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
