<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8100.14.0213.2024                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.2'>
      <aliases enabled='yes' />
      <column caption='ERS equip mod' datatype='real' name='[ERS House Volume (m³) (copy)]' param-domain-type='any' role='measure' type='quantitative' value='24.376999999999999'>
        <calculation class='tableau' formula='24.376999999999999' />
      </column>
      <column caption='Escillation Rate: Gas' datatype='real' default-format='p0.00%' name='[Escillation Rate: Electricity (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.02'>
        <calculation class='tableau' formula='0.02' />
        <range max='1.0' min='0.0' />
      </column>
      <column caption='Colour by:' datatype='string' name='[Focus on ERS (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Best+fuel&quot;'>
        <calculation class='tableau' formula='&quot;Best+fuel&quot;' />
        <members>
          <member value='&quot;Breakeven&quot;' />
          <member value='&quot;Better off?&quot;' />
          <member value='&quot;Best+fuel&quot;' />
          <member value='&quot;Best-for-homeowner&quot;' />
          <member value='&quot;EstimatedERS -bin&quot;' />
          <member value='&quot;HVAC system&quot;' />
          <member value='&quot;DHW system&quot;' />
          <member value='&quot;DHWR+SDHW&quot;' />
          <member value='&quot;Main Wall &quot;' />
          <member value='&quot;PV&quot;' />
          <member value='&quot;Conserved kWH - no PV&quot;' />
          <member value='&quot;Conserved kWH - w/ PV&quot;' />
        </members>
      </column>
      <column caption='Focus on fuel' datatype='string' name='[Focus on ERS (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Electricity&quot;'>
        <calculation class='tableau' formula='&quot;Electricity&quot;' />
        <members>
          <member value='&quot;Electricity&quot;' />
          <member value='&quot;Natural gas&quot;' />
        </members>
      </column>
      <column caption='Municipal Taxes' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='0.0069646999999999999'>
        <calculation class='tableau' formula='0.0069646999999999999' />
        <range max='1.0' min='0.0' />
      </column>
      <column caption='Escillation Rate: Electricity' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.0395'>
        <calculation class='tableau' formula='0.0395' />
        <range max='1.0' min='0.0' />
      </column>
      <column alias='Upgrade costs' caption='Examine:' datatype='string' name='[Parameter 10]' param-domain-type='list' role='measure' type='nominal' value='&quot;UpgCosts&quot;'>
        <calculation class='tableau' formula='&quot;UpgCosts&quot;' />
        <aliases>
          <alias key='&quot;ElecConservation&quot;' value='Electricity conservation' />
          <alias key='&quot;HomeOwnerSavings&quot;' value='Homeowner Savings (PITE)' />
          <alias key='&quot;UpgCosts&quot;' value='Upgrade costs' />
        </aliases>
        <members>
          <member alias='Upgrade costs' value='&quot;UpgCosts&quot;' />
          <member alias='Homeowner Savings (PITE)' value='&quot;HomeOwnerSavings&quot;' />
          <member alias='Electricity conservation' value='&quot;ElecConservation&quot;' />
        </members>
      </column>
      <column caption='Amoritization period ' datatype='real' default-format='n#,##0&quot; yrs&quot;;-#,##0&quot; yrs&quot;' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25.0'>
        <calculation class='tableau' formula='25.0' />
        <range min='1.0' />
      </column>
      <column caption='Base Case heating fuel type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Fuel neutral&quot;'>
        <calculation class='tableau' formula='&quot;Fuel neutral&quot;' />
        <members>
          <member value='&quot;Natural gas&quot;' />
          <member value='&quot;Electricity&quot;' />
          <member value='&quot;Fuel neutral&quot;' />
        </members>
      </column>
      <column caption='Base Energy amount' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='103.19'>
        <calculation class='tableau' formula='103.19' />
      </column>
      <column caption='ERS House Volume (m³)' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='653.0'>
        <calculation class='tableau' formula='653.0' />
      </column>
      <column caption='ERS DHW Mod ' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='11.473000000000001'>
        <calculation class='tableau' formula='11.473000000000001' />
      </column>
      <column caption='Utilities: Assessment year' datatype='real' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <members>
          <member value='0.0' />
          <member value='5.0' />
          <member value='10.0' />
          <member value='15.0' />
          <member value='20.0' />
          <member value='25.0' />
        </members>
      </column>
      <column caption='PV costs ($/W installed)' datatype='real' default-format='c&quot;$&quot;#,##0.000;-&quot;$&quot;#,##0.000' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='3.2000000000000002'>
        <calculation class='tableau' formula='3.2000000000000002' />
        <range max='10.0' min='0.0' />
      </column>
      <column caption='Focus on ERS' datatype='integer' name='[Parameter 8]' param-domain-type='range' role='measure' type='quantitative' value='89'>
        <calculation class='tableau' formula='89' />
        <range max='100' min='76' />
      </column>
      <column caption='BuilderMarkup' datatype='real' default-format='p0%' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='6555.0'>
        <calculation class='tableau' formula='6555.0' />
      </column>
      <column caption='Interest rate (%)' datatype='real' default-format='p0.00%' name='[generation Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.035000000000000003'>
        <calculation class='tableau' formula='0.035000000000000003' />
        <range max='1.0' min='0.0' />
      </column>
    </datasource>
    <datasource caption='Mark-up (Optimization-cost-adj.xlsx)' inline='true' name='excel.41732.485975347219' version='8.2'>
      <connection auto-extract='yes' class='excel' driver='Ace12' filename='\\s0-ott-nas1\CETC-CTEC\SBC\Housing_&amp;_Buildings\HBCS_2012_2016_Initiatives\PERD_Housing_Subprogram\LEEP\Manitoba_LEEP\4_Deliverables_Contracting_Internal\Meeting_3_Reporting\Costing\Optimization-cost-adj.xlsx' header='yes' imex='1'>
        <relation name='&apos;Mark-up$&apos;' table='[&apos;Mark-up$&apos;]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column caption='Markup-string' datatype='string' name='[Calculation_5270403114305868]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='Str([Markup])' scope-isolation='false' />
      </column>
      <column datatype='real' name='[Markup]' role='measure' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\cygwin\home\aferguso\HousingModels\Opt-Results\MB-LEEP\Mark-up (Optimization-cost-adj.xlsx).tde' schema='Extract' tablename='Extract' update-time='4/3/2014 3:45:20 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_5270403114305868]' formula='Str([Markup])' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='11' timestamp-start='2014-04-03 15:45:20.663000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (LEEP-MB-Good_subset.xlsx)' inline='true' name='excel.41736.417335405094' version='8.2'>
      <connection auto-extract='yes' class='excel' driver='Ace12' filename='C:\cygwin\home\aferguso\HousingModels\Opt-Results\MB-LEEP\LEEP-MB-Good_subset.xlsx' header='yes' imex='1'>
        <relation name='Sheet1$' table='[Sheet1$]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' datatype-customized='true' name='[ID#]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Status]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='BAD' />
        </aliases>
      </column>
      <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Status:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;GOOD&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' inline='true' name='csv.41709.530460324073' version='8.2'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='C:\cygwin\home\aferguso\HousingModels\Opt-Results\MB-LEEP' driver='' filename='CloudResultsAllData.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='CloudResultsAllData#csv' table='[CloudResultsAllData#csv]' type='table' />
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[csv.41709.530460324073].[avg:EnergyCoolingGJ:qk]&quot;' value='Cooling' />
          <alias key='&quot;[csv.41709.530460324073].[avg:EnergyDHWGJ:qk]&quot;' value='Water heating' />
          <alias key='&quot;[csv.41709.530460324073].[avg:EnergyHeatingGJ:qk]&quot;' value='Space heating' />
          <alias key='&quot;[csv.41709.530460324073].[avg:EnergyPlugGJ:qk]&quot;' value='Plug loads' />
          <alias key='&quot;[csv.41709.530460324073].[avg:EnergyVentGJ:qk]&quot;' value='Ventilation' />
        </aliases>
      </column>
      <column caption='Annual savings, 20% markup' datatype='real' name='[Annual savings, 10% markup (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;-&#13;&#10;(  [Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]&#13;&#10;  +[Calculation_7830311143752081])*1.20&#13;&#10;&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column caption='Annual savings, 30% markup' datatype='real' name='[Annual savings, 20% markup (copy) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;-&#13;&#10;(  [Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]&#13;&#10;  +[Calculation_7830311143752081])*1.30&#13;&#10;&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column caption='Annual savings, 40% markup ' datatype='real' name='[Annual savings, 30% markup (copy) (copy) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;-&#13;&#10;(  [Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]&#13;&#10;  +[Calculation_7830311143752081])*1.40&#13;&#10;&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column caption='DHWR-table-calc' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(AVG([Calculation_2640311145556471])) - LOOKUP(ZN(AVG([Calculation_2640311145556471])))) / ABS(LOOKUP(ZN(AVG([Calculation_2640311145556471]))))' scope-isolation='false'>
          <table-calc ordering-field='' ordering-type='Field' tc-options='Fixed'>
            <address>
            </address>
          </table-calc>
        </calculation>
      </column>
      <column caption='Upgrade CostAdjuster by Fuel type ($)' datatype='integer' name='[Calculation_0000328154041002]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([Parameters].[Parameter 2] = &quot;Natural gas&quot; OR &#13;&#10;     ( [Parameters].[Parameter 2] = &quot;Fuel neutral&quot; AND [Calculation_4270328153916499] = &quot;Natural gas&quot; ) ) then 0&#13;&#10;&#13;&#10;&#13;&#10;else 1600&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Cost of ownership --- difference from base case ($/year), no markup' datatype='real' name='[Calculation_0040311143954202]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]+[Calculation_7830311143752081]-([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column caption='Fuel Switch' datatype='string' name='[Calculation_0540328160719477]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [Parameters].[Parameter 2] = [Calculation_4270328153916499] ) then &quot;No&quot; &#13;&#10;Else &quot;Yes&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Adjusted ElecFurn cost' datatype='integer' name='[Calculation_1010313135857628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [GOtag:Opt-HVACSystem] = &quot;elec-baseboard&quot; ) then 4950 - 1600&#13;&#10;else 0 &#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(6.85*12 +([FuelEleckWh]-[EnergyPVkWh])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
      </column>
      <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
      </column>
      <column caption='Electricity savings-range (kWh/yr)' datatype='real' name='[Calculation_2250403105642621]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([Calculation_3280402162812085])-min([Calculation_3280402162812085])' scope-isolation='false' />
      </column>
      <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
      </column>
      <column caption='Electricity: total benefit to utility - range' datatype='real' name='[Calculation_2710403111306845]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([Calculation_8140403110609232])-min([Calculation_8140403110609232])' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Water conservation package ($)' datatype='integer' name='[Calculation_2900312105624061]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([GOtag:DHWLoadScale]=&quot;Low-Flow&quot; ) then 80&#13;&#10;else 0&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Non PV costs' datatype='real' name='[Calculation_3340312154727269]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1760312105551885]-[PVSizekW]*([Parameters].[Parameter 7]*1000)' scope-isolation='false' />
      </column>
      <column caption='Best+fuel' datatype='string' name='[Calculation_3690403141636492]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_8750403103901360]+&quot;\&quot;+[Calculation_4270328153916499]' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Bad-point\\Electricity&quot;' value='Non-cost-effective, electric heating' />
          <alias key='&quot;Bad-point\\Natural gas&quot;' value='Non-cost-effective, gas heating s' />
          <alias key='&quot;Good\\Electricity&quot;' value='Cost-effective, electric heating' />
          <alias key='&quot;Good\\Natural gas&quot;' value='Cost-effective, gas heating' />
        </aliases>
      </column>
      <column caption='Energy savings (%)' datatype='real' name='[Calculation_3710312133127667]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(106.65-[EnergyTotal])/106.65' scope-isolation='false' />
      </column>
      <column caption='Cost of Borrowing ($)' datatype='real' name='[Calculation_3730311142712896]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(( [Calculation_3950311142640640] * ( 1 + [Calculation_3950311142640640] ) ^ ([Parameters].[Parameter 1] * 12 ) )  &#13;&#10;/&#13;&#10;( (1 + [Calculation_3950311142640640]  ) ^ ( [Parameters].[Parameter 1] * 12 ) - 1 )&#13;&#10;* [Calculation_1760312105551885] ) &#13;&#10;* [Parameters].[Parameter 1] * 12' scope-isolation='false' />
      </column>
      <column caption='MonthlyInterestRate (%)' datatype='real' name='[Calculation_3950311142640640]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[generation Parameter]/12' scope-isolation='false' />
      </column>
      <column caption='calc-ers' datatype='real' name='[Calculation_4080312115913460]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='rank_percentile(max([Calculation_2640311145556471]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Base-or-upgrade' datatype='string' name='[Calculation_4130311125228917]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ([Calculation_2160328153208285]=&quot;130777&quot; or [Calculation_2160328153208285]=&quot;144923&quot;) then &quot;BASE&quot;&#13;&#10;ELSE &quot;UPGRADE&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='SHOW-ERS-Filter' datatype='string' name='[Calculation_4250401113310063]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [Calculation_4480331150059234] = &quot;ERS&quot;+str([Parameters].[Parameter 8]) ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Pv costs' datatype='real' name='[Calculation_4270312154807625]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Parameters].[Parameter 7]*1000)' scope-isolation='false' />
      </column>
      <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Utilities: Adjusted Base case charges ($/year)' datatype='real' name='[Calculation_4380312104008812]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Parameters].[Parameter 2] = &quot;Natural gas&quot; OR &#13;&#10;     ( [Parameters].[Parameter 2] = &quot;Fuel neutral&quot; AND [Calculation_4270328153916499] = &quot;Natural gas&quot; )&#13;&#10;    ) then &#13;&#10;    905*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;    +&#13;&#10;    563.4*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;    2108.43*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='ERS-int' datatype='string' name='[Calculation_4480331150059234]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;ERS&quot;+str(int([Calculation_8430311144549035]))' scope-isolation='false' />
      </column>
      <column caption='Limit-by-Parameter' datatype='integer' name='[Calculation_4730403095905672]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='index()' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Wall-insulation-type' datatype='string' name='[Calculation_4800326161225524]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot;    ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='OptCriteria' datatype='real' name='[Calculation_4950311164239763]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[UtilBillNetDoll]+[UpgradeCostDoll]/25' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Adjust ACH cost ($)' datatype='real' name='[Calculation_5080312144736857]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Calculation_4800326161225524] = &quot;OC&quot; ) then &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then 0&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -3049&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -3260&#13;&#10;    end&#13;&#10;else &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;    end&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Wall+ACH' datatype='string' name='[Calculation_5420326152016626]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4130311125228917]+&quot; : &quot;+[GOtag:Opt-MainWall]+&quot; &amp; &quot;+[GOtag:Opt-AirTightness]' scope-isolation='false' />
      </column>
      <column caption='Annual savings to homewoner: Base-case-reference' datatype='real' name='[Calculation_5440312091758636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_4130311125228917] = &quot;BASE&quot; then [Calculation_2640311145556471]&#13;&#10;else -100000&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades- Adj upg cost range' datatype='real' name='[Calculation_5660403112505970]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([Calculation_1760312105551885])-min([Calculation_1760312105551885])' scope-isolation='false' />
      </column>
      <column caption='Better off?' datatype='string' name='[Calculation_6170407152248136]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [Calculation_2640311145556471] &gt; 0 ) then &#13;&#10;str(round([Calculation_2640311145556471]))+&quot; better off&quot; &#13;&#10;else&#13;&#10;str(round(abs([Calculation_2640311145556471])))+&quot; worse off&quot; &#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Filter-gas-options' datatype='string' name='[Calculation_6670331150314929]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4130311125228917]+&quot;:&quot;+[Calculation_4270328153916499]+&quot;:&quot;+[Calculation_4480331150059234]+&quot;:&quot;+[GOtag:DHWLoadScale]+&quot;:&quot;+[GOtag:ElecLoadScale]+&quot;:&quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
      </column>
      <column caption='ERS-HDD-byRegion' datatype='integer' name='[Calculation_6940311144727088]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF     [GOtag:Opt-Location] = &quot;Calgary&quot;    THEN  5200&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Edmonton&quot;   THEN  5400&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Halifax&quot;    THEN  4100&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Ottawa&quot;     THEN  4600&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Toronto&quot;    THEN  3650&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Quebec&quot;     THEN  5200&#13;&#10;ELSEIF  [GOtag:Opt-Location]= &quot;Montreal&quot;   THEN  4250&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Vancouver&quot;  THEN  2925&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Winnipeg&quot;   THEN  5900&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Regina&quot;     THEN  5750&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Fredricton&quot; THEN  4650&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Whitehorse&quot; THEN  6900&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Energy savings for base (%)' datatype='real' name='[Calculation_7130313100558856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -0.5&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='PaybackOK?' datatype='string' name='[Calculation_7140311130548537]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [SimplePaybackYrs] &gt; 0 ) then &quot;OK&quot;&#13;&#10;else &quot;BAD!&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='ERS DHW adj' datatype='real' name='[Calculation_7350403120027264]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [GOtag:DHWLoadScale] = &quot;Low-Flow&quot; ) then 19/16&#13;&#10;else 1 &#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='UTILITIES: Total adjusted bill ($/year)' datatype='real' name='[Calculation_7370312102644552]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1130312101746663]+[UTILITIES: Adjusted Electricity Bill  (copy)]' scope-isolation='false' />
      </column>
      <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
      </column>
      <column caption='Annual cost of borrowing ($/year)' datatype='real' name='[Calculation_7830311143752081]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_3730311142712896]/[Parameters].[Parameter 1]' scope-isolation='false' />
      </column>
      <column caption='HVAC+PV' datatype='string' name='[Calculation_7860313141128771]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[GOtag:Opt-HVACSystem]+&quot; &amp; &quot;+[GOtag:Opt-StandoffPV]' scope-isolation='false' />
        <aliases>
          <alias key='&quot;CCASHP &amp; SizedPV|5kW&quot;' value='CCASHP &amp; 5kW PV' />
          <alias key='&quot;GSHP &amp; SizedPV|5kW&quot;' value='GSHP &amp; 5 kW PV' />
          <alias key='&quot;basefurnace &amp; NoPV&quot;' value='Gas Furnace &amp; NoPV' />
          <alias key='&quot;basefurnace &amp; SizedPV|5kW&quot;' value='Gas Furnace &amp; 5kW of PV' />
          <alias key='&quot;elec-baseboard &amp; NoPV&quot;' value='Electric Furnace &amp; NoPV' />
          <alias key='&quot;elec-baseboard &amp; SizedPV|5kW&quot;' value='Electric Furnace &amp; 5 kW of PV' />
        </aliases>
      </column>
      <column caption='Electricity: total benefit to utility' datatype='real' name='[Calculation_8140403110609232]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' scope-isolation='false' />
      </column>
      <column caption='Upgrades: PV cost adjustment ($)' datatype='real' name='[Calculation_8190312105315011]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[PVSizekW]*([Parameters].[Parameter 7]*1000-4687)' scope-isolation='false' />
      </column>
      <column caption='Annual Savings to Homeowner --- range' datatype='real' name='[Calculation_8270403112829760]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([Calculation_2640311145556471])-min([Calculation_2640311145556471])' scope-isolation='false' />
      </column>
      <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
      </column>
      <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Electric conservation package ($)' datatype='integer' name='[Calculation_8710312105714395]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [GOtag:ElecLoadScale] = &quot;NGERSNoReduction19&quot; ) then 0 &#13;&#10;else 140&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Main Wall adjust cost (No air sealing credit) ' datatype='integer' name='[Calculation_8710326154745859]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [GOtag:Opt-MainWall] &#13;&#10;  when &quot;BaseR20&quot; then 0 &#13;&#10;  when &quot;DblStud-R37-Wall&quot; then   1350&#13;&#10;  when &quot;DblStud-R52-Wall&quot; then   1350&#13;&#10;  when &quot;Stud-R21-2x4&quot; then       0 &#13;&#10;  when &quot;Stud-R275-Wall&quot; then    619&#13;&#10;  when &quot;Stud-R305-Wall&quot; then    555&#13;&#10;  when &quot;Stud-R275MW-Wall&quot; then   505&#13;&#10;  when &quot;AdvFrm-R20-Wall&quot; then   110&#13;&#10;  else -9000000&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Estimated-ers-range' datatype='real' name='[Calculation_8710402163702414]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max([Calculation_8430311144549035])-min([Calculation_8430311144549035])' scope-isolation='false' />
      </column>
      <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='EnergyPVGJ' datatype='real' name='[Calculation_9440311154155886]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[EnergyPVkWh]*3600/1E06' scope-isolation='false' />
      </column>
      <column caption='Breakeven' datatype='string' name='[Calculation_9470403125230887]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='//if ( [Annual savings, 40% markup ] &gt; 0 ) then &quot;40%+&quot;&#13;&#10;if ( [Annual savings, 20% markup (copy) (copy)] &gt; 0 ) then &quot;Builder markup is 30%+&quot;&#13;&#10;elseif ( [Annual savings, 10% markup (copy)] &gt; 0 ) then &quot;Builder markup is 20%+&quot;&#13;&#10;elseif ( [Cost of ownership --- difference from base case ($/year), no markup (copy)] &gt; 0 ) then &quot;Builder markup is 10%+&quot;&#13;&#10;elseif ( [Calculation_2640311145556471] &gt; 0 ) then &quot;Builder markup is 0%+&quot;&#13;&#10;else &quot;Homeowner won&apos;t break even&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Colour-params' datatype='string' name='[Calculation_9520430094845731]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ([Parameters].[Focus on ERS (copy 2)] = &quot;Breakeven&quot;) then [Calculation_9470403125230887]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Better off?&quot; ) then [Calculation_6170407152248136]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Best-for-homeowner&quot; ) then [Calculation_8750403103901360]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Best+fuel&quot; ) then [Calculation_3690403141636492]&#13;&#10;//elseif ( [Colour by:] = &quot;EstimatedERS -bin&quot; ) then &#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;HVAC system&quot; ) then [GOtag:Opt-HVACSystem]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;DHW system&quot; ) then [GOtag:Opt-DHWSystem]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;DHWR+SDHW&quot; ) then [GOtag:Opt-DWHRandSDHW]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Main Wall &quot; ) then [GOtag:Opt-MainWall]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;PV&quot; ) then [GOtag:Opt-StandoffPV]&#13;&#10;//elseif ( [Colour by:] = &quot;Conserved kWH&quot; ) then [Electricity: total benefit to utility]&#13;&#10;else [Calculation_4130311125228917]&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='ERS+Fuel' datatype='string' name='[Calculation_9830403103027661]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_4480331150059234]+&quot; = &quot;+ [Calculation_4270328153916499]' scope-isolation='false' />
      </column>
      <column caption='Show Fuel' datatype='string' name='[Calculation_9940401113855898]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = [Parameters].[Focus on ERS (copy)] ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot; &#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Annual savings, 10% markup' datatype='real' name='[Cost of ownership --- difference from base case ($/year), no markup (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;-&#13;&#10;(  [Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]&#13;&#10;  +[Calculation_7830311143752081])*1.10&#13;&#10;&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
      </column>
      <column caption='Electricity savings (kWh/yr) (bin)' datatype='integer' name='[Electricity savings (kWh/yr) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[Calculation_3280402162812085]' peg='0' size='1000' />
      </column>
      <column caption='Electricity: total benefit to utility (bin)' datatype='integer' name='[Electricity: total benefit to utility (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[Calculation_8140403110609232]' peg='0' size='1000' />
      </column>
      <column caption='Upgrades: Cost of base case ($)' datatype='real' name='[Energy savings for base (%) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -50000&#13;&#10;end' scope-isolation='false' />
      </column>
      <column datatype='real' name='[EnergyCoolingGJ]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[EnergyDHWGJ]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[EnergyHeatingGJ]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[EnergyPlugGJ]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[EnergyVentGJ]' role='measure' type='quantitative'>
      </column>
      <column caption='EstimatedERS (What I think it shoiuld be) (bin)' datatype='integer' name='[EstimatedERS (What I think it shoiuld be) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[EstimatedERS (copy)]' peg='0' size='1' />
        <aliases>
          <alias key='75' value='ERS 75' />
        </aliases>
      </column>
      <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
        <aliases>
          <alias key='75' value='ERS 75' />
          <alias key='76' value='ERS 76' />
          <alias key='77' value='ERS 77' />
          <alias key='80' value='80' />
        </aliases>
      </column>
      <column caption='EstimatedERS (What I think it shoiuld be)' datatype='real' name='[EstimatedERS (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100-&#13;&#10;([EnergyPlugGJ]+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+[Parameters].[ERS House Volume (m³) (copy)]&#13;&#10;)*20&#13;&#10;&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
      </column>
      <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
          <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
          <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
        </aliases>
      </column>
      <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[GOtag:Opt-DHWSystem (copy) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[GOtag:Opt-DHWSystem (copy)]'>
          <bin value='&quot;BaseDHW&quot;'>
            <value>&quot;BaseDHW&quot;</value>
            <value>&quot;ElectricStorage&quot;</value>
            <value>&quot;GasInstantaneous&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[GOtag:Opt-DHWSystem (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[GOtag:Opt-DHWSystem]' />
      </column>
      <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
          <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
        </aliases>
      </column>
      <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
          <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
          <alias key='&quot;none&quot;' value='Base case' />
        </aliases>
      </column>
      <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
          <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
        </aliases>
      </column>
      <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
          <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
          <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
          <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
        </aliases>
      </column>
      <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;NoPV&quot;' value='No PV' />
          <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
        </aliases>
      </column>
      <column datatype='string' name='[ID (copy 2)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;B&quot;+str([batch])+&quot;:&quot;+str([ID])+&quot;:&quot;+str([row])+&quot;:&quot;+str([Simulation_Number])+&quot;:&quot;' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[ID (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[ID]' />
      </column>
      <column caption='ID-filter (ERS-83-gas notes' datatype='string' name='[ID-filter (ERS-83-gas) (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 82401 ) then &quot;Includes HP water heater&quot; &#13;&#10;elseif ( [ID] = 66514 ) then &quot;Includes gas water heating&quot; &#13;&#10;elseif ( [ID] = 107566 ) then &quot;Improves insulation levels&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot;other&quot;&#13;&#10;end' scope-isolation='false' />
        <aliases>
          <alias key='&quot;ERS 83, gas, Cheapest &amp; Most affordable&quot;' value='ERS 83 Cheapest &amp; most affodable' />
          <alias key='&quot;ERS 83, gas, durable &quot;' value='ERS 83: Invest in envelope ' />
        </aliases>
      </column>
      <column caption='ID-filter (ERS-83-gas)' datatype='string' name='[ID-filter (copy 2)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 82401 ) then &quot;ERS 83, gas, Cheapest &amp; Most affordable&quot; &#13;&#10;elseif ( [ID] = 66514 ) then &quot;ERS 83, all gas&quot; &#13;&#10;elseif ( [ID] = 107566 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot;other&quot;&#13;&#10;end' scope-isolation='false' />
        <aliases>
          <alias key='&quot;ERS 83, all gas&quot;' value='ERS 83: all gas heating' />
          <alias key='&quot;ERS 83, gas, Cheapest &amp; Most affordable&quot;' value='ERS 83: Cheapest &amp; most affodable' />
          <alias key='&quot;ERS 83, gas, durable &quot;' value='ERS 83: Invest in envelope ' />
        </aliases>
      </column>
      <column datatype='string' name='[ID-filter (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ( [ID] = 27073 ) then &quot;Base Case (ERS 76 code)&quot;&#13;&#10;elseif ( [ID] = 48198 ) then &quot;Money Saver (ERS 76)&quot; &#13;&#10;elseif ( [ID] = 48208 ) then &quot;ERS 80&quot; &#13;&#10;elseif ( [ID] = 45338 ) then &quot;ERS 83 --- lowest operating cost&quot; &#13;&#10;elseif ( [ID] = 40768 ) then &quot;ERS 83 --- lowest upgrade cost&quot; &#13;&#10;elseif ( [ID] = 34248 ) then &quot;ERS 86 --- lowest upgrade cost&quot; &#13;&#10;elseif ( [ID] = 15157 ) then &quot;ERS 86 --- lowest operating cost&quot; &#13;&#10;elseif ( [ID] = 37382 ) then &quot;CCASHP: Optimum design today&quot;&#13;&#10;elseif ( [ID] = 37382 ) then &quot;CCASHP: Optimum design in 2040&quot;&#13;&#10;elseif ( [ID] = 16848 ) then &quot;GSHP: Optimum design today&quot;&#13;&#10;elseif ( [ID] = 16437 ) then &quot;GSHP: Optimum design in 2040&quot;&#13;&#10;elseif ( [ID] = 48198 ) then &quot;Gas heating: Optimum design today&quot; &#13;&#10;elseif ( [ID] = 48198 ) then &quot;Gas heating: Optimum design in 2040&quot; &#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column datatype='string' name='[ID-filter (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_8470312121221798]' default='&quot; &quot;'>
          <bin value='&quot;ERS 76, electric, base case&quot;'>
            <value>&quot;ERS 76, electric, base case&quot;</value>
            <value>&quot;ERS 76, gas, Base Case, gas heat&quot;</value>
            <value>&quot;ERS 83, electric, Durable&quot;</value>
            <value>&quot;ERS 83, electric, cheapest&quot;</value>
            <value>&quot;ERS 83, gas, Cheapest&quot;</value>
            <value>&quot;ERS 83, gas, Most affordable&quot;</value>
            <value>&quot;ERS 83, gas, durable &quot;</value>
            <value>&quot;ERS 86, elec, cheapest &quot;</value>
            <value>&quot;ERS 86, elec, durable &quot;</value>
            <value>&quot;ERS 86, gas, affordable &quot;</value>
            <value>&quot;ERS 86, gas, cheapest &quot;</value>
            <value>&quot;ERS 86, gas, durable &quot;</value>
            <value>&quot;ERS 89, electric, GSHP&quot;</value>
            <value>&quot;ERS 89, electric, cheapest&quot;</value>
            <value>&quot;ERS 89, electric, durable&quot;</value>
            <value>&quot;ERS 89, gas, durable &quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot; &quot;' value='Other' />
          <alias key='&quot;ERS 76, electric, base case&quot;' value='Display' />
        </aliases>
      </column>
      <column caption='ID-string (intereting...)' datatype='string' name='[ID-string (Interesting points (copy)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_2160328153208285]' default='&quot;99999&quot;'>
          <bin value='&quot;100567&quot;'>
            <value>&quot;100567&quot;</value>
            <value>&quot;102332&quot;</value>
            <value>&quot;107631&quot;</value>
            <value>&quot;108820&quot;</value>
            <value>&quot;114270&quot;</value>
            <value>&quot;115642&quot;</value>
            <value>&quot;115943&quot;</value>
            <value>&quot;122591&quot;</value>
            <value>&quot;124250&quot;</value>
            <value>&quot;130777&quot;</value>
            <value>&quot;130840&quot;</value>
            <value>&quot;131290&quot;</value>
            <value>&quot;131404&quot;</value>
            <value>&quot;132280&quot;</value>
            <value>&quot;132360&quot;</value>
            <value>&quot;144923&quot;</value>
            <value>&quot;148168&quot;</value>
            <value>&quot;155642&quot;</value>
            <value>&quot;65013&quot;</value>
            <value>&quot;85933&quot;</value>
            <value>&quot;86735&quot;</value>
            <value>&quot;91653&quot;</value>
            <value>&quot;97876&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;100567&quot;' value='Interesting' />
          <alias key='&quot;99999&quot;' value='Other' />
        </aliases>
      </column>
      <column datatype='string' name='[ID-string (Interesting points]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_2160328153208285]' default='&quot;99999&quot;'>
          <bin value='&quot;100567&quot;'>
            <value>&quot;100567&quot;</value>
            <value>&quot;65013&quot;</value>
          </bin>
          <bin value='&quot;102332&quot;'>
            <value>&quot;102332&quot;</value>
            <value>&quot;107631&quot;</value>
            <value>&quot;115642&quot;</value>
            <value>&quot;115943&quot;</value>
            <value>&quot;131404&quot;</value>
            <value>&quot;132360&quot;</value>
            <value>&quot;155642&quot;</value>
          </bin>
          <bin value='&quot;108820&quot;'>
            <value>&quot;108820&quot;</value>
            <value>&quot;114270&quot;</value>
            <value>&quot;122591&quot;</value>
            <value>&quot;124250&quot;</value>
            <value>&quot;131290&quot;</value>
            <value>&quot;148168&quot;</value>
            <value>&quot;91653&quot;</value>
          </bin>
          <bin value='&quot;130777&quot;'>
            <value>&quot;130777&quot;</value>
            <value>&quot;144923&quot;</value>
          </bin>
          <bin value='&quot;130840&quot;'>
            <value>&quot;130840&quot;</value>
            <value>&quot;132280&quot;</value>
            <value>&quot;85933&quot;</value>
            <value>&quot;86735&quot;</value>
            <value>&quot;97876&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;100567&quot;' value='GSHP' />
          <alias key='&quot;102332&quot;' value='Cheapest' />
          <alias key='&quot;108820&quot;' value='Durable' />
          <alias key='&quot;130777&quot;' value='Base' />
          <alias key='&quot;130840&quot;' value='Affordable' />
          <alias key='&quot;99999&quot;' value='Other' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Simulation_Number]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Step_Number]' role='dimension' type='ordinal'>
      </column>
      <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;  (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
      </column>
      <column datatype='real' name='[UpgradeCostDoll]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[Upgrades: Adjust ACH cost ($) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Upgrades: Adjusted Upgrade cost ($, no markup) (bin)' datatype='integer' name='[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[Calculation_1760312105551885]' peg='0' size='6000' />
        <aliases>
          <alias key='0' value='Less than $6,000' />
          <alias key='1' value='$6,000-$12,000' />
          <alias key='2' value='$12,000-$18,000' />
          <alias key='3' value='$18,000-$24,000' />
          <alias key='4' value='$24,000-$30,000' />
          <alias key='5' value='$30,000-$36,000' />
          <alias key='6' value='$30,000-$35,000' />
        </aliases>
      </column>
      <column datatype='real' name='[UtilCostElecDoll]' role='measure' type='quantitative'>
      </column>
      <column datatype='real' name='[UtilCostGasDoll]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[batch (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[batch]' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[batch]' role='dimension' type='ordinal'>
      </column>
      <column caption='generation (bin)' datatype='integer' name='[generation (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[generation]' peg='0' size='25' />
      </column>
      <column aggregation='Sum' datatype='real' name='[generation (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[generation]' />
      </column>
      <column datatype='real' name='[generation]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[row (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[row]' />
      </column>
      <column-instance column='[Calculation_1760312105551885]' derivation='Avg' name='[avg:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2640311145556471]' derivation='Avg' name='[avg:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3710312133127667]' derivation='Avg' name='[avg:Calculation_3710312133127667:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EnergyCoolingGJ]' derivation='Avg' name='[avg:EnergyCoolingGJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EnergyDHWGJ]' derivation='Avg' name='[avg:EnergyDHWGJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EnergyHeatingGJ]' derivation='Avg' name='[avg:EnergyHeatingGJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EnergyPlugGJ]' derivation='Avg' name='[avg:EnergyPlugGJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EnergyVentGJ]' derivation='Avg' name='[avg:EnergyVentGJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1760312105551885]' derivation='Count' name='[cnt:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1760312105551885]' derivation='Avg' name='[diff:avg:Calculation_1760312105551885:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[diff:min:Calculation_1760312105551885:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[csv.41709.530460324073].[Calculation_4270328153916499]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[diff:min:Calculation_1760312105551885:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_7370312102644552]' derivation='Min' name='[diff:min:Calculation_7370312102644552:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[csv.41709.530460324073].[Calculation_4270328153916499]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5440312091758636]' derivation='Max' name='[max:Calculation_5440312091758636:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2640311145556471]' derivation='Min' name='[min:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3280402162812085]' derivation='Min' name='[min:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3340312154727269]' derivation='Min' name='[min:Calculation_3340312154727269:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_8140403110609232]' derivation='Min' name='[min:Calculation_8140403110609232:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy savings for base (%) (copy)]' derivation='Min' name='[min:Energy savings for base (%) (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Min' name='[min:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3690403141636492]' derivation='None' name='[none:Calculation_3690403141636492:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_7860313141128771]' derivation='None' name='[none:Calculation_7860313141128771:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_9470403125230887]' derivation='None' name='[none:Calculation_9470403125230887:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_9520430094845731]' derivation='None' name='[none:Calculation_9520430094845731:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
      <column-instance column='[batch]' derivation='None' name='[none:batch:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_2640311145556471]' derivation='Avg' name='[pcdf:avg:Calculation_2640311145556471:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1130312101746663]' derivation='Sum' name='[sum:Calculation_1130312101746663:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3730311142712896]' derivation='Sum' name='[sum:Calculation_3730311142712896:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4380312104008812]' derivation='Sum' name='[sum:Calculation_4380312104008812:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7130313100558856]' derivation='Sum' name='[sum:Calculation_7130313100558856:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_7370312102644552]' derivation='Sum' name='[sum:Calculation_7370312102644552:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EstimatedERS (copy)]' derivation='Sum' name='[sum:EstimatedERS (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Sum' name='[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[UpgradeCostDoll]' derivation='Sum' name='[sum:UpgradeCostDoll:qk]' pivot='key' type='quantitative' />
      <column-instance column='[UtilCostElecDoll]' derivation='Sum' name='[sum:UtilCostElecDoll:qk]' pivot='key' type='quantitative' />
      <column-instance column='[UtilCostGasDoll]' derivation='Sum' name='[sum:UtilCostGasDoll:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4080312115913460]' derivation='User' name='[usr:Calculation_4080312115913460:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[csv.41709.530460324073].[EstimatedERS (bin)]' ordering-type='Field' />
      </column-instance>
      <group name='[GOtag:Opt-AirTightness &amp; GOtag:Opt-MainWall (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GOtag:Opt-AirTightness]' />
          <groupfilter function='level-members' level='[GOtag:Opt-MainWall]' />
        </groupfilter>
      </group>
      <group name='[GOtag:Opt-StandoffPV &amp; ERS-int (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GOtag:Opt-StandoffPV]' />
          <groupfilter function='level-members' level='[Calculation_4480331150059234]' />
        </groupfilter>
      </group>
      <group name='[ID-string &amp; ERS-int (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2160328153208285]' />
          <groupfilter function='level-members' level='[Calculation_4480331150059234]' />
        </groupfilter>
      </group>
      <group name='[OC-ext-ins-systems]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[GOtag:Opt-MainWall]' member='&quot;Stud-R21-2x4&quot;' />
          <groupfilter function='member' level='[GOtag:Opt-MainWall]' member='&quot;Stud-R275-Wall&quot;' />
          <groupfilter function='member' level='[GOtag:Opt-MainWall]' member='&quot;Stud-R305-Wall&quot;' />
        </groupfilter>
      </group>
      <group caption='Valid Wall / ACH combinations' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Calculation_5420326152016626]' member='&quot;BASE : BaseR20 &amp; Typical23&quot;' />
          <groupfilter from='&quot;UPGRADE : BaseR20 &amp; Cdn1ACH&quot;' function='range' level='[Calculation_5420326152016626]' to='&quot;UPGRADE : Stud-R21-2x4 &amp; PassiveHouse&quot;' />
          <groupfilter function='member' level='[Calculation_5420326152016626]' member='&quot;UPGRADE : Stud-R275-Wall &amp; Cdn1ACH&quot;' />
          <groupfilter function='member' level='[Calculation_5420326152016626]' member='&quot;UPGRADE : Stud-R275-Wall &amp; PassiveHouse&quot;' />
          <groupfilter from='&quot;UPGRADE : Stud-R275MW-Wall &amp; Cdn1ACH&quot;' function='range' level='[Calculation_5420326152016626]' to='&quot;UPGRADE : Stud-R305-Wall &amp; PassiveHouse&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\cygwin\home\aferguso\HousingModels\Opt-Results\MB-LEEP\LEEP-MB-optimization-data (CloudResultsAllData.csv).tde' schema='Extract' tablename='Extract' update-time='3/28/2014 7:19:15 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1010313135857628]' formula='if ( [GOtag:Opt-HVACSystem] = &quot;elec-baseboard&quot; ) then 4950 - 1600&#13;&#10;else 0 &#13;&#10;end' />
            <calculation column='[Calculation_2900312105624061]' formula='if ([GOtag:DHWLoadScale]=&quot;Low-Flow&quot; ) then 80&#13;&#10;else 0&#13;&#10;end' />
            <calculation column='[Calculation_3710312133127667]' formula='(106.65-[EnergyTotal])/106.65' />
            <calculation column='[Calculation_4800326161225524]' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot;    ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' />
            <calculation column='[Calculation_4950311164239763]' formula='[UtilBillNetDoll]+[UpgradeCostDoll]/25' />
            <calculation column='[Calculation_5080312144736857]' formula='if ( [Calculation_4800326161225524] = &quot;OC&quot; ) then &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then 0&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -3049&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -3260&#13;&#10;    end&#13;&#10;else &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;    end&#13;&#10;end' />
            <calculation column='[Calculation_6940311144727088]' formula='IF     [GOtag:Opt-Location] = &quot;Calgary&quot;    THEN  5200&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Edmonton&quot;   THEN  5400&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Halifax&quot;    THEN  4100&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Ottawa&quot;     THEN  4600&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Toronto&quot;    THEN  3650&#13;&#10;ELSEIF [GOtag:Opt-Location] = &quot;Quebec&quot;     THEN  5200&#13;&#10;ELSEIF  [GOtag:Opt-Location]= &quot;Montreal&quot;   THEN  4250&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Vancouver&quot;  THEN  2925&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Winnipeg&quot;   THEN  5900&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Regina&quot;     THEN  5750&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Fredricton&quot; THEN  4650&#13;&#10;ELSEIF [GOtag:Opt-Location]= &quot;Whitehorse&quot; THEN  6900&#13;&#10;END' />
            <calculation column='[Calculation_7140311130548537]' formula='if ( [SimplePaybackYrs] &gt; 0 ) then &quot;OK&quot;&#13;&#10;else &quot;BAD!&quot;&#13;&#10;end' />
            <calculation column='[Calculation_7860313141128771]' formula='[GOtag:Opt-HVACSystem]+&quot; &amp; &quot;+[GOtag:Opt-StandoffPV]' />
            <calculation column='[Calculation_8470312121221798]' formula='if ( [ID] = 76423 ) then &quot;Base Case (ERS 76 code)&quot;&#13;&#10;elseif ( [ID] = 3486 ) then &quot;ERS 80: Most affordable &quot; &#13;&#10;//elseif ( [ID] = 96901 ) then &quot;Gas Furnace: Cheapest ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' />
            <calculation column='[Calculation_8710312105714395]' formula='if ( [GOtag:ElecLoadScale] = &quot;NGERSNoReduction19&quot; ) then 0 &#13;&#10;else 140&#13;&#10;end' />
            <calculation column='[Calculation_8710326154745859]' formula='case [GOtag:Opt-MainWall] &#13;&#10;  when &quot;BaseR20&quot; then 0 &#13;&#10;  when &quot;DblStud-R37-Wall&quot; then   1350&#13;&#10;  when &quot;DblStud-R52-Wall&quot; then   1350&#13;&#10;  when &quot;Stud-R21-2x4&quot; then       0 &#13;&#10;  when &quot;Stud-R275-Wall&quot; then    619&#13;&#10;  when &quot;Stud-R305-Wall&quot; then    555&#13;&#10;  when &quot;Stud-R275MW-Wall&quot; then   505&#13;&#10;  when &quot;AdvFrm-R20-Wall&quot; then   110&#13;&#10;  else -9000000&#13;&#10;end' />
            <calculation column='[Calculation_9440311154155886]' formula='[EnergyPVkWh]*3600/1E06' />
            <calculation column='[GOtag:Opt-DHWSystem (copy) (group)]' formula='CASE [GOtag:Opt-DHWSystem (copy)]&#10;  WHEN &quot;BaseDHW&quot; THEN &quot;BaseDHW&quot;&#10;  WHEN &quot;ElectricStorage&quot; THEN &quot;BaseDHW&quot;&#10;  WHEN &quot;GasInstantaneous&quot; THEN &quot;BaseDHW&quot;&#10;  ELSE [GOtag:Opt-DHWSystem (copy)]&#10;END' />
            <calculation column='[GOtag:Opt-DHWSystem (copy)]' formula='[GOtag:Opt-DHWSystem]' />
            <calculation column='[ID (copy 2)]' formula='&quot;B&quot;+str([batch])+&quot;:&quot;+str([ID])+&quot;:&quot;+str([row])+&quot;:&quot;+str([Simulation_Number])+&quot;:&quot;' />
            <calculation column='[ID (copy)]' formula='[ID]' />
            <calculation column='[ID-filter (copy)]' formula='if ( [ID] = 27073 ) then &quot;Base Case (ERS 76 code)&quot;&#13;&#10;elseif ( [ID] = 48198 ) then &quot;Money Saver (ERS 76)&quot; &#13;&#10;elseif ( [ID] = 48208 ) then &quot;ERS 80&quot; &#13;&#10;elseif ( [ID] = 45338 ) then &quot;ERS 83 --- lowest operating cost&quot; &#13;&#10;elseif ( [ID] = 40768 ) then &quot;ERS 83 --- lowest upgrade cost&quot; &#13;&#10;elseif ( [ID] = 34248 ) then &quot;ERS 86 --- lowest upgrade cost&quot; &#13;&#10;elseif ( [ID] = 15157 ) then &quot;ERS 86 --- lowest operating cost&quot; &#13;&#10;elseif ( [ID] = 37382 ) then &quot;CCASHP: Optimum design today&quot;&#13;&#10;elseif ( [ID] = 37382 ) then &quot;CCASHP: Optimum design in 2040&quot;&#13;&#10;elseif ( [ID] = 16848 ) then &quot;GSHP: Optimum design today&quot;&#13;&#10;elseif ( [ID] = 16437 ) then &quot;GSHP: Optimum design in 2040&quot;&#13;&#10;elseif ( [ID] = 48198 ) then &quot;Gas heating: Optimum design today&quot; &#13;&#10;elseif ( [ID] = 48198 ) then &quot;Gas heating: Optimum design in 2040&quot; &#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Upgrades: Adjust ACH cost ($) (copy)]' formula='if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;end' />
            <calculation column='[batch (copy)]' formula='[batch]' />
            <calculation column='[generation (bin)]' formula='SYS_NUMBIN([generation],25)' />
            <calculation column='[generation (copy)]' formula='[generation]' />
            <calculation column='[row (copy)]' formula='[row]' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='167472' timestamp-start='2014-03-28 19:19:15.031000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.378764' group-percentage='0.0808241' measure-ordering='alphabetic' measure-percentage='0.350238' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='circle'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Cost to borrow funds for upgrade ($) (copy) (copy):qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Calculation_3730311142712896:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Cost to borrow funds for upgrade ($) (copy):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[generation (bin)]' type='palette'>
            <map to='#1c5794'>
              <bucket>176</bucket>
            </map>
            <map to='#1c5895'>
              <bucket>175</bucket>
            </map>
            <map to='#1c5897'>
              <bucket>174</bucket>
            </map>
            <map to='#1c5998'>
              <bucket>173</bucket>
            </map>
            <map to='#1c5a98'>
              <bucket>172</bucket>
            </map>
            <map to='#1c5a99'>
              <bucket>171</bucket>
            </map>
            <map to='#1c5b9a'>
              <bucket>170</bucket>
            </map>
            <map to='#1c5c9b'>
              <bucket>169</bucket>
            </map>
            <map to='#1c5d9b'>
              <bucket>168</bucket>
            </map>
            <map to='#1c5d9c'>
              <bucket>167</bucket>
            </map>
            <map to='#1c5e9d'>
              <bucket>166</bucket>
            </map>
            <map to='#1c5f9e'>
              <bucket>165</bucket>
            </map>
            <map to='#1c609e'>
              <bucket>164</bucket>
            </map>
            <map to='#1c609f'>
              <bucket>163</bucket>
            </map>
            <map to='#1c61a0'>
              <bucket>162</bucket>
            </map>
            <map to='#1c62a0'>
              <bucket>161</bucket>
            </map>
            <map to='#1c63a1'>
              <bucket>160</bucket>
            </map>
            <map to='#1c63a2'>
              <bucket>159</bucket>
            </map>
            <map to='#1c64a3'>
              <bucket>158</bucket>
            </map>
            <map to='#1c65a3'>
              <bucket>157</bucket>
            </map>
            <map to='#1c66a4'>
              <bucket>156</bucket>
            </map>
            <map to='#1c66a5'>
              <bucket>155</bucket>
            </map>
            <map to='#1c67a5'>
              <bucket>154</bucket>
            </map>
            <map to='#1c68a6'>
              <bucket>153</bucket>
            </map>
            <map to='#1c69a7'>
              <bucket>152</bucket>
            </map>
            <map to='#1c69a8'>
              <bucket>151</bucket>
            </map>
            <map to='#1c6aa8'>
              <bucket>150</bucket>
            </map>
            <map to='#1c6ba9'>
              <bucket>149</bucket>
            </map>
            <map to='#1c6caa'>
              <bucket>147</bucket>
            </map>
            <map to='#1c6caa'>
              <bucket>148</bucket>
            </map>
            <map to='#1c6dab'>
              <bucket>146</bucket>
            </map>
            <map to='#1c6eac'>
              <bucket>145</bucket>
            </map>
            <map to='#1c6fad'>
              <bucket>143</bucket>
            </map>
            <map to='#1c6fad'>
              <bucket>144</bucket>
            </map>
            <map to='#1c70ae'>
              <bucket>142</bucket>
            </map>
            <map to='#1c71af'>
              <bucket>141</bucket>
            </map>
            <map to='#1c72b0'>
              <bucket>139</bucket>
            </map>
            <map to='#1c72b0'>
              <bucket>140</bucket>
            </map>
            <map to='#1c73b1'>
              <bucket>138</bucket>
            </map>
            <map to='#1d558f'>
              <bucket>180</bucket>
            </map>
            <map to='#1d5591'>
              <bucket>179</bucket>
            </map>
            <map to='#1d5692'>
              <bucket>178</bucket>
            </map>
            <map to='#1d5693'>
              <bucket>177</bucket>
            </map>
            <map to='#1d73b1'>
              <bucket>137</bucket>
            </map>
            <map to='#1e538c'>
              <bucket>183</bucket>
            </map>
            <map to='#1e548d'>
              <bucket>182</bucket>
            </map>
            <map to='#1e548e'>
              <bucket>181</bucket>
            </map>
            <map to='#1e74b1'>
              <bucket>136</bucket>
            </map>
            <map to='#1f5187'>
              <bucket>187</bucket>
            </map>
            <map to='#1f5188'>
              <bucket>186</bucket>
            </map>
            <map to='#1f5289'>
              <bucket>185</bucket>
            </map>
            <map to='#1f528b'>
              <bucket>184</bucket>
            </map>
            <map to='#1f75b1'>
              <bucket>135</bucket>
            </map>
            <map to='#204f83'>
              <bucket>190</bucket>
            </map>
            <map to='#204f85'>
              <bucket>189</bucket>
            </map>
            <map to='#205086'>
              <bucket>188</bucket>
            </map>
            <map to='#2075b1'>
              <bucket>134</bucket>
            </map>
            <map to='#2076b1'>
              <bucket>133</bucket>
            </map>
            <map to='#214d7e'>
              <bucket>194</bucket>
            </map>
            <map to='#214d80'>
              <bucket>193</bucket>
            </map>
            <map to='#214e81'>
              <bucket>192</bucket>
            </map>
            <map to='#214e82'>
              <bucket>191</bucket>
            </map>
            <map to='#2176b2'>
              <bucket>132</bucket>
            </map>
            <map to='#224b7b'>
              <bucket>197</bucket>
            </map>
            <map to='#224b7c'>
              <bucket>196</bucket>
            </map>
            <map to='#224c7d'>
              <bucket>195</bucket>
            </map>
            <map to='#2277b2'>
              <bucket>131</bucket>
            </map>
            <map to='#234976'>
              <bucket>201</bucket>
            </map>
            <map to='#234977'>
              <bucket>200</bucket>
            </map>
            <map to='#234a78'>
              <bucket>199</bucket>
            </map>
            <map to='#234a7a'>
              <bucket>198</bucket>
            </map>
            <map to='#2378b2'>
              <bucket>130</bucket>
            </map>
            <map to='#244772'>
              <bucket>204</bucket>
            </map>
            <map to='#244774'>
              <bucket>203</bucket>
            </map>
            <map to='#244875'>
              <bucket>202</bucket>
            </map>
            <map to='#2478b2'>
              <bucket>129</bucket>
            </map>
            <map to='#25456f'>
              <bucket>207</bucket>
            </map>
            <map to='#254670'>
              <bucket>206</bucket>
            </map>
            <map to='#254671'>
              <bucket>205</bucket>
            </map>
            <map to='#2579b2'>
              <bucket>128</bucket>
            </map>
            <map to='#26456e'>
              <bucket>208</bucket>
            </map>
            <map to='#2679b3'>
              <bucket>127</bucket>
            </map>
            <map to='#267ab3'>
              <bucket>126</bucket>
            </map>
            <map to='#277ab3'>
              <bucket>125</bucket>
            </map>
            <map to='#287bb3'>
              <bucket>124</bucket>
            </map>
            <map to='#297cb3'>
              <bucket>123</bucket>
            </map>
            <map to='#2a7cb3'>
              <bucket>122</bucket>
            </map>
            <map to='#2b7db4'>
              <bucket>121</bucket>
            </map>
            <map to='#2c7db4'>
              <bucket>120</bucket>
            </map>
            <map to='#2d7eb4'>
              <bucket>118</bucket>
            </map>
            <map to='#2d7eb4'>
              <bucket>119</bucket>
            </map>
            <map to='#2e7fb4'>
              <bucket>117</bucket>
            </map>
            <map to='#2f80b4'>
              <bucket>116</bucket>
            </map>
            <map to='#3080b5'>
              <bucket>115</bucket>
            </map>
            <map to='#3181b5'>
              <bucket>114</bucket>
            </map>
            <map to='#3281b5'>
              <bucket>113</bucket>
            </map>
            <map to='#3382b5'>
              <bucket>111</bucket>
            </map>
            <map to='#3382b5'>
              <bucket>112</bucket>
            </map>
            <map to='#3483b5'>
              <bucket>110</bucket>
            </map>
            <map to='#3584b6'>
              <bucket>109</bucket>
            </map>
            <map to='#3684b6'>
              <bucket>108</bucket>
            </map>
            <map to='#3785b6'>
              <bucket>107</bucket>
            </map>
            <map to='#3885b6'>
              <bucket>106</bucket>
            </map>
            <map to='#3986b6'>
              <bucket>105</bucket>
            </map>
            <map to='#3a87b7'>
              <bucket>104</bucket>
            </map>
            <map to='#3b88b7'>
              <bucket>103</bucket>
            </map>
            <map to='#3c89b8'>
              <bucket>102</bucket>
            </map>
            <map to='#3d8ab9'>
              <bucket>101</bucket>
            </map>
            <map to='#3f8bba'>
              <bucket>100</bucket>
            </map>
            <map to='#408cbb'>
              <bucket>99</bucket>
            </map>
            <map to='#418dbc'>
              <bucket>98</bucket>
            </map>
            <map to='#438ebc'>
              <bucket>97</bucket>
            </map>
            <map to='#448fbd'>
              <bucket>96</bucket>
            </map>
            <map to='#4590be'>
              <bucket>95</bucket>
            </map>
            <map to='#4691bf'>
              <bucket>94</bucket>
            </map>
            <map to='#4893c0'>
              <bucket>93</bucket>
            </map>
            <map to='#4994c1'>
              <bucket>92</bucket>
            </map>
            <map to='#4a95c1'>
              <bucket>91</bucket>
            </map>
            <map to='#4c96c2'>
              <bucket>90</bucket>
            </map>
            <map to='#4d97c3'>
              <bucket>89</bucket>
            </map>
            <map to='#4e98c4'>
              <bucket>88</bucket>
            </map>
            <map to='#5099c5'>
              <bucket>87</bucket>
            </map>
            <map to='#519ac6'>
              <bucket>86</bucket>
            </map>
            <map to='#529bc6'>
              <bucket>85</bucket>
            </map>
            <map to='#539cc7'>
              <bucket>84</bucket>
            </map>
            <map to='#559ec8'>
              <bucket>83</bucket>
            </map>
            <map to='#569fc9'>
              <bucket>82</bucket>
            </map>
            <map to='#57a0ca'>
              <bucket>81</bucket>
            </map>
            <map to='#59a1cb'>
              <bucket>80</bucket>
            </map>
            <map to='#5aa2cb'>
              <bucket>79</bucket>
            </map>
            <map to='#5ba3cc'>
              <bucket>78</bucket>
            </map>
            <map to='#5da4cd'>
              <bucket>77</bucket>
            </map>
            <map to='#5ea5ce'>
              <bucket>76</bucket>
            </map>
            <map to='#5fa6cf'>
              <bucket>75</bucket>
            </map>
            <map to='#60a7d0'>
              <bucket>74</bucket>
            </map>
            <map to='#62a8d0'>
              <bucket>73</bucket>
            </map>
            <map to='#63aad1'>
              <bucket>72</bucket>
            </map>
            <map to='#64abd2'>
              <bucket>71</bucket>
            </map>
            <map to='#66acd3'>
              <bucket>70</bucket>
            </map>
            <map to='#67add4'>
              <bucket>69</bucket>
            </map>
            <map to='#67aed4'>
              <bucket>68</bucket>
            </map>
            <map to='#68aed4'>
              <bucket>67</bucket>
            </map>
            <map to='#68afd5'>
              <bucket>66</bucket>
            </map>
            <map to='#69b0d5'>
              <bucket>65</bucket>
            </map>
            <map to='#6ab1d6'>
              <bucket>63</bucket>
            </map>
            <map to='#6ab1d6'>
              <bucket>64</bucket>
            </map>
            <map to='#6bb2d6'>
              <bucket>62</bucket>
            </map>
            <map to='#6bb3d7'>
              <bucket>61</bucket>
            </map>
            <map to='#6cb4d7'>
              <bucket>60</bucket>
            </map>
            <map to='#6cb5d8'>
              <bucket>59</bucket>
            </map>
            <map to='#6db5d8'>
              <bucket>58</bucket>
            </map>
            <map to='#6eb6d8'>
              <bucket>57</bucket>
            </map>
            <map to='#6eb7d9'>
              <bucket>56</bucket>
            </map>
            <map to='#6fb8d9'>
              <bucket>55</bucket>
            </map>
            <map to='#6fb8da'>
              <bucket>54</bucket>
            </map>
            <map to='#70b9da'>
              <bucket>53</bucket>
            </map>
            <map to='#71badb'>
              <bucket>52</bucket>
            </map>
            <map to='#71bbdb'>
              <bucket>51</bucket>
            </map>
            <map to='#72bcdb'>
              <bucket>50</bucket>
            </map>
            <map to='#72bcdc'>
              <bucket>49</bucket>
            </map>
            <map to='#73bddc'>
              <bucket>48</bucket>
            </map>
            <map to='#73bedd'>
              <bucket>47</bucket>
            </map>
            <map to='#74bfdd'>
              <bucket>46</bucket>
            </map>
            <map to='#75bfdd'>
              <bucket>45</bucket>
            </map>
            <map to='#75c0de'>
              <bucket>44</bucket>
            </map>
            <map to='#76c1de'>
              <bucket>43</bucket>
            </map>
            <map to='#76c2df'>
              <bucket>42</bucket>
            </map>
            <map to='#77c3df'>
              <bucket>40</bucket>
            </map>
            <map to='#77c3df'>
              <bucket>41</bucket>
            </map>
            <map to='#78c4e0'>
              <bucket>39</bucket>
            </map>
            <map to='#79c5e0'>
              <bucket>38</bucket>
            </map>
            <map to='#79c6e1'>
              <bucket>37</bucket>
            </map>
            <map to='#7ac6e1'>
              <bucket>36</bucket>
            </map>
            <map to='#7ac7e1'>
              <bucket>35</bucket>
            </map>
            <map to='#7cc8e1'>
              <bucket>34</bucket>
            </map>
            <map to='#7dc8e1'>
              <bucket>33</bucket>
            </map>
            <map to='#7fc8e1'>
              <bucket>32</bucket>
            </map>
            <map to='#81c9e1'>
              <bucket>31</bucket>
            </map>
            <map to='#82c9e0'>
              <bucket>30</bucket>
            </map>
            <map to='#84c9e0'>
              <bucket>29</bucket>
            </map>
            <map to='#85cae0'>
              <bucket>28</bucket>
            </map>
            <map to='#87cae0'>
              <bucket>27</bucket>
            </map>
            <map to='#89cbe0'>
              <bucket>26</bucket>
            </map>
            <map to='#8acbdf'>
              <bucket>25</bucket>
            </map>
            <map to='#8ccbdf'>
              <bucket>24</bucket>
            </map>
            <map to='#8eccdf'>
              <bucket>23</bucket>
            </map>
            <map to='#8fccdf'>
              <bucket>22</bucket>
            </map>
            <map to='#91ccde'>
              <bucket>21</bucket>
            </map>
            <map to='#93cdde'>
              <bucket>20</bucket>
            </map>
            <map to='#94cdde'>
              <bucket>19</bucket>
            </map>
            <map to='#96cdde'>
              <bucket>18</bucket>
            </map>
            <map to='#98cedd'>
              <bucket>17</bucket>
            </map>
            <map to='#99cedd'>
              <bucket>16</bucket>
            </map>
            <map to='#9bcedd'>
              <bucket>15</bucket>
            </map>
            <map to='#9ccfdd'>
              <bucket>14</bucket>
            </map>
            <map to='#9ecfdd'>
              <bucket>13</bucket>
            </map>
            <map to='#a0cfdc'>
              <bucket>12</bucket>
            </map>
            <map to='#a1d0dc'>
              <bucket>11</bucket>
            </map>
            <map to='#a3d0dc'>
              <bucket>10</bucket>
            </map>
            <map to='#a5d0dc'>
              <bucket>9</bucket>
            </map>
            <map to='#a6d1db'>
              <bucket>8</bucket>
            </map>
            <map to='#a8d1db'>
              <bucket>7</bucket>
            </map>
            <map to='#aad1db'>
              <bucket>6</bucket>
            </map>
            <map to='#abd2db'>
              <bucket>5</bucket>
            </map>
            <map to='#add2da'>
              <bucket>4</bucket>
            </map>
            <map to='#afd2da'>
              <bucket>3</bucket>
            </map>
            <map to='#b0d3da'>
              <bucket>2</bucket>
            </map>
            <map to='#b2d3da'>
              <bucket>1</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:batch:ok]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>5</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>6</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold'>
              <bucket>9</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray'>
              <bucket>8</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>2</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>1</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink'>
              <bucket>7</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>4</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>3</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal'>
              <bucket>10</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:batch:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>10</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>3</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>8</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>6</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>5</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>19</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>15</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>16</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>9</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>11</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>13</bucket>
            </map>
            <map to='#d62728'>
              <bucket>4</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>14</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>7</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>12</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>18</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>17</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-DHWSystem:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;BaseDHW&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ElectricStorage&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;GasInstantaneous&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;ElectricHP&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[ID-string (Interesting points]&#10;[none:Calculation_8470312121221798:nk]' type='palette'>
            <map-pri to='multiordinal_blue'>
              <bucket>&quot;130840&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown'>
              <bucket>&quot;99999&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green'>
              <bucket>&quot;102332&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange'>
              <bucket>&quot;130777&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple'>
              <bucket>&quot;100567&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red'>
              <bucket>&quot;108820&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Calculation_7860313141128771:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;basefurnace &amp; NoPV&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;GSHP &amp; NoPV&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;GSHP &amp; SizedPV|5kW&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;basefurnace &amp; SizedPV|5kW&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;elec-baseboard &amp; NoPV&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;elec-baseboard &amp; SizedPV|5kW&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CCASHP &amp; NoPV&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;CCASHP &amp; SizedPV|5kW&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-Ceilings:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;CeilR50&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;CeilR70&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;CeilR80&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CeilR60&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-DWHRandSDHW:nk]' type='palette'>
            <map to='#2ca02c'>
              <bucket>&quot;2-plate-DWHR-4-60&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;DWHR-4-60&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;none&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;DWHR-4-36&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2-plate-DWHR-4-36&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2-plate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:DHWLoadScale:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Low-Flow&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;No-Reduction&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:ElecLoadScale:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;NGERSNoReduction19&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;NGERSReducedA16&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Calculation_8470312121221798:nk]' type='shape'>
            <map to=':filled/times'>
              <bucket>&quot;ERS 76, electric, base case&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 76, gas, Base Case, gas heat&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 83, electric, Durable&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 83, electric, cheapest&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 83, gas, Cheapest&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 83, gas, Most affordable&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 83, gas, durable &quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 86, elec, cheapest &quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 86, elec, durable &quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 86, gas, affordable &quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 86, gas, cheapest &quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 86, gas, durable &quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 89, electric, GSHP&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 89, electric, cheapest&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 89, electric, durable&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;ERS 89, gas, durable &quot;</bucket>
            </map>
            <map to='Proportions/0.png'>
              <bucket>&quot; &quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[EstimatedERS (bin)]' type='palette'>
            <map to='#26456e'>
              <bucket>96</bucket>
            </map>
            <map to='#e5e5e5'>
              <bucket>75</bucket>
            </map>
            <map to='#e6e2e2'>
              <bucket>76</bucket>
            </map>
            <map to='#e8e0e0'>
              <bucket>77</bucket>
            </map>
            <map to='#eadddd'>
              <bucket>78</bucket>
            </map>
            <map to='#ecdbdb'>
              <bucket>79</bucket>
            </map>
            <map to='#edd9d9'>
              <bucket>80</bucket>
            </map>
            <map to='#efd6d6'>
              <bucket>81</bucket>
            </map>
            <map to='#f0d4d4'>
              <bucket>82</bucket>
            </map>
            <map to='#f2d1d2'>
              <bucket>83</bucket>
            </map>
            <map to='#f3ced0'>
              <bucket>84</bucket>
            </map>
            <map to='#f5ccce'>
              <bucket>85</bucket>
            </map>
            <map to='#f6c9cb'>
              <bucket>86</bucket>
            </map>
            <map to='#f7c7c9'>
              <bucket>87</bucket>
            </map>
            <map to='#f8c4c6'>
              <bucket>88</bucket>
            </map>
            <map to='#f9c2c4'>
              <bucket>89</bucket>
            </map>
            <map to='#fbbfc2'>
              <bucket>90</bucket>
            </map>
            <map to='#fcbcbf'>
              <bucket>91</bucket>
            </map>
            <map to='#fdb7ba'>
              <bucket>93</bucket>
            </map>
            <map to='#fdbabd'>
              <bucket>92</bucket>
            </map>
            <map to='#feb4b8'>
              <bucket>94</bucket>
            </map>
            <map to='#ffb2b6'>
              <bucket>95</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[ID-string (Interesting points]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;130840&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;102332&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;100567&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;99999&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;108820&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;130777&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[ID-string (Interesting points (copy)]' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>&quot;100567&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;99999&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_9470403125230887:nk]' type='palette'>
            <map to='#1c73b1'>
              <bucket>&quot;Builder markup is 20\%+&quot;</bucket>
            </map>
            <map to='#1e1e1e'>
              <bucket>&quot;40\%+&quot;</bucket>
            </map>
            <map to='#26456e'>
              <bucket>&quot;Builder markup is 30\%+&quot;</bucket>
            </map>
            <map to='#2c69b0'>
              <bucket>&quot;30\%+&quot;</bucket>
            </map>
            <map to='#67add4'>
              <bucket>&quot;Builder markup is 10\%+&quot;</bucket>
            </map>
            <map to='#6ba3d6'>
              <bucket>&quot;20\%+&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;never breakseven&quot;</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>&quot;Builder markup is 0\%+&quot;</bucket>
            </map>
            <map to='#b5c8e2'>
              <bucket>&quot;0\%+&quot;</bucket>
            </map>
            <map to='#b5dffd'>
              <bucket>&quot;10\%+&quot;</bucket>
            </map>
            <map to='#c81518'>
              <bucket>&quot;Homeowner won&apos;t break even&quot;</bucket>
            </map>
            <map to='#c81518'>
              <bucket>&quot;No breakeven&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_3690403141636492:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Good\\Electricity&quot;</bucket>
            </map>
            <map to='#d5dfeb'>
              <bucket>&quot;Bad-point\\Electricity&quot;</bucket>
            </map>
            <map to='#f4d9c3'>
              <bucket>&quot;Bad-point\\Natural gas&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Good\\Natural gas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Electricity savings (kWh/yr) (bin)]' type='palette'>
            <map to='#1696ac'>
              <bucket>0</bucket>
            </map>
            <map to='#18a188'>
              <bucket>1</bucket>
            </map>
            <map to='#1f83b4'>
              <bucket>-1</bucket>
            </map>
            <map to='#29a03c'>
              <bucket>2</bucket>
            </map>
            <map to='#54a338'>
              <bucket>3</bucket>
            </map>
            <map to='#6f63bb'>
              <bucket>18</bucket>
            </map>
            <map to='#8061b4'>
              <bucket>17</bucket>
            </map>
            <map to='#82a93c'>
              <bucket>4</bucket>
            </map>
            <map to='#9658b1'>
              <bucket>16</bucket>
            </map>
            <map to='#adb828'>
              <bucket>5</bucket>
            </map>
            <map to='#b446b3'>
              <bucket>15</bucket>
            </map>
            <map to='#c04aa7'>
              <bucket>14</bucket>
            </map>
            <map to='#c94d8c'>
              <bucket>13</bucket>
            </map>
            <map to='#d23e4e'>
              <bucket>12</bucket>
            </map>
            <map to='#d8bd35'>
              <bucket>6</bucket>
            </map>
            <map to='#e75727'>
              <bucket>11</bucket>
            </map>
            <map to='#ff810e'>
              <bucket>10</bucket>
            </map>
            <map to='#ff9c0e'>
              <bucket>9</bucket>
            </map>
            <map to='#ffb022'>
              <bucket>8</bucket>
            </map>
            <map to='#ffbd4c'>
              <bucket>7</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-CasementWindows:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;DoubleLowEHardCoatArgFill&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;TripleLowEHardCoatKryFill&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;TripleLowESoftCoatKryFill&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;DoubleLowESoftCoatArgFill&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-AirTightness:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Typical23&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Cdn1ACH&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;PassiveHouse&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;R2000&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-StandoffPV:nk]' type='palette'>
            <map to='#729ece'>
              <bucket>&quot;NoPV&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;SizedPV|5kW&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_8470312121221798:nk]' type='palette'>
            <map to='#09622a'>
              <bucket>&quot;ERS 83, gas, Most affordable&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;CCASHP: Optimum design today&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;ERS 80&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;ERS 83 --- lowest operating cost&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;ERS 83 --- lowest upgrade cost&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;ERS 86 --- lowest operating cost&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;GSHP: Optimum design in 2040&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;GSHP: Optimum design today&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Gas heating: Optimum design today&quot;</bucket>
            </map>
            <map to='#1c66a4'>
              <bucket>&quot;ERS 86, gas, cheapest &quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;ERS 83, electric, CCASHP 2&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Electric Furnace: Most affordable ERS 89 option&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Gas furnace: Cheapest ERS 80 option&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Gas furnace: Most affordable&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Gas furnace: Most affordable ERS 80 option&quot;</bucket>
            </map>
            <map to='#207a36'>
              <bucket>&quot;ERS 83, gas, durable &quot;</bucket>
            </map>
            <map to='#26456e'>
              <bucket>&quot;ERS 86, gas, durable &quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Base Case, electric heat (ERS 76 code)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;CCASHP Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ERS 80: Most affordable &quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;ERS 83, Cheapest, gas heat&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;</bucket>
            </map>
            <map to='#339444'>
              <bucket>&quot;ERS 83, gas, Cheapest&quot;</bucket>
            </map>
            <map to='#3a87b7'>
              <bucket>&quot;ERS 86, gas, affordable &quot;</bucket>
            </map>
            <map to='#71badb'>
              <bucket>&quot;ERS 86, elec, durable &quot;</bucket>
            </map>
            <map to='#7eb172'>
              <bucket>&quot;ERS 83, electric, Durable&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;ERS 76, electric, base case&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Gas Furnace: Cheapest ERS 80 option&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;ERS 83, Durable, gas heat &quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gas furnace: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;ERS 83, Most affordable, gas heat&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Electric Furnace: Most affordable ERS 83 option&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Electric Furnace: Most affordable ERS 86 option&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gas furnace: Cheapest &amp; Most affordable ERS 80 option&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gas furnace: Cheapest &amp; Most affordable ERS 83 option&quot;</bucket>
            </map>
            <map to='#9c0824'>
              <bucket>&quot;ERS 89, gas, durable &quot;</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>&quot;ERS 86, elec, cheapest &quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;ERS 76, gas, Base Case, gas heat&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Gas Furnace: Most affordable ERS 80 option&quot;</bucket>
            </map>
            <map to='#bccfb4'>
              <bucket>&quot;ERS 83, electric, cheapest&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot; &quot;</bucket>
            </map>
            <map to='#ca1618'>
              <bucket>&quot;ERS 89, electric, GSHP&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Base Case, gas heat (ERS 76 code) &quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;ERS 83, Cheapest, electric heat&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Electric Furnace: Cheapest ERS 83 option&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Base Case (ERS 76 code)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;ERS 83, electric, Most affordable&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;ERS 83, gas, Durable&quot;</bucket>
            </map>
            <map to='#e96150'>
              <bucket>&quot;ERS 89, electric, durable&quot;</bucket>
            </map>
            <map to='#f58173'>
              <bucket>&quot;ERS 89, electric, cheapest&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;HIDE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_4270328153916499:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Electricity&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Natural gas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[csv.41709.530460324073].[sum:UpgradeCostDoll:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[avg:Calculation_2640311145556471:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[avg:Calculation_3710312133127667:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[ID-filter (group)]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[min:Calculation_2640311145556471:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[min:Calculation_3280402162812085:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[pcdf:avg:Calculation_2640311145556471:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Cost to borrow funds for upgrade ($) (copy) (copy):qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[sum:EstimatedERS (copy):qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[csv.41709.530460324073].[usr:Calculation_4080312115913460:qk:1]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[csv.41709.530460324073].[diff:avg:Calculation_1760312105551885:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:5]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Calculation_3730311142712896:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Calculation_4380312104008812:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[csv.41709.530460324073].[sum:UtilCostGasDoll:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[csv.41709.530460324073].[sum:UtilCostElecDoll:qk]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyCoolingGJ:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyPlugGJ:qk]&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyVentGJ:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[csv.41709.530460324073].[min:UTILITIES: Adjusted Electricity Bill  (copy):qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Calculation_7370312102644552:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[avg:Calculation_1760312105551885:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[cnt:Calculation_1760312105551885:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[min:Calculation_3340312154727269:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[min:Energy savings for base (\%) (copy):qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[Multiple Values]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[none:batch:ok]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[csv.41709.530460324073].[sum:Cost to borrow funds for upgrade ($) (copy):qk]&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyHeatingGJ:qk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyDHWGJ:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Electricity: total benefit to utility (bin)]' type='palette'>
            <map to='#12a0a8'>
              <bucket>1</bucket>
            </map>
            <map to='#1891ae'>
              <bucket>0</bucket>
            </map>
            <map to='#1da173'>
              <bucket>2</bucket>
            </map>
            <map to='#1f83b4'>
              <bucket>-1</bucket>
            </map>
            <map to='#29a039'>
              <bucket>3</bucket>
            </map>
            <map to='#4aa236'>
              <bucket>4</bucket>
            </map>
            <map to='#6ea53e'>
              <bucket>5</bucket>
            </map>
            <map to='#6f63bb'>
              <bucket>24</bucket>
            </map>
            <map to='#7b61b5'>
              <bucket>23</bucket>
            </map>
            <map to='#8860b0'>
              <bucket>22</bucket>
            </map>
            <map to='#90ae35'>
              <bucket>6</bucket>
            </map>
            <map to='#9f53b1'>
              <bucket>21</bucket>
            </map>
            <map to='#b1b926'>
              <bucket>7</bucket>
            </map>
            <map to='#b645b3'>
              <bucket>20</bucket>
            </map>
            <map to='#bf48aa'>
              <bucket>19</bucket>
            </map>
            <map to='#c54f9e'>
              <bucket>18</bucket>
            </map>
            <map to='#cc4878'>
              <bucket>17</bucket>
            </map>
            <map to='#d1bd30'>
              <bucket>8</bucket>
            </map>
            <map to='#d33d49'>
              <bucket>16</bucket>
            </map>
            <map to='#e3502b'>
              <bucket>15</bucket>
            </map>
            <map to='#f1be46'>
              <bucket>9</bucket>
            </map>
            <map to='#f67116'>
              <bucket>14</bucket>
            </map>
            <map to='#ff8b0e'>
              <bucket>13</bucket>
            </map>
            <map to='#ff9f0e'>
              <bucket>12</bucket>
            </map>
            <map to='#ffaf1d'>
              <bucket>11</bucket>
            </map>
            <map to='#ffb93d'>
              <bucket>10</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_8750403103901360:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;bad point&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bad-point&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Good-point&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-MainWall:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Stud-R21-2x4&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Stud-R275-Wall&quot;</bucket>
            </map>
            <map to='#32a251'>
              <bucket>&quot;AdvFrm-R20-Wall&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Stud-R275MW-Wall&quot;</bucket>
            </map>
            <map to='#b85a0d'>
              <bucket>&quot;Stud-R305-Wall&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;BaseR20&quot;</bucket>
            </map>
            <map to='#ff7f0f'>
              <bucket>&quot;DblStud-R37-Wall&quot;</bucket>
            </map>
            <map to='#ffb977'>
              <bucket>&quot;DblStud-R52-Wall&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-HVACSystem:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;basefurnace&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;GSHP&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;elec-baseboard&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CCASHP&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GOtag:Opt-HVACSystem:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <multibucket>
                <bucket>&quot;basefurnace&quot;</bucket>
                <bucket>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2ca02c'>
              <multibucket>
                <bucket>&quot;GSHP&quot;</bucket>
                <bucket>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d62728'>
              <multibucket>
                <bucket>&quot;elec-baseboard&quot;</bucket>
                <bucket>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff7f0e'>
              <multibucket>
                <bucket>&quot;CCASHP&quot;</bucket>
                <bucket>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' type='palette'>
            <map to='#29a03c'>
              <bucket>0</bucket>
            </map>
            <map to='#adb828'>
              <bucket>1</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>-1</bucket>
            </map>
            <map to='#d23e4e'>
              <bucket>6</bucket>
            </map>
            <map to='#d8bd35'>
              <bucket>2</bucket>
            </map>
            <map to='#ff810e'>
              <bucket>5</bucket>
            </map>
            <map to='#ffb022'>
              <bucket>4</bucket>
            </map>
            <map to='#ffbd4c'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_9520430094845731:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;1000 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1020 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1040 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1060 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1080 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;109 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1100 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1120 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1140 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1160 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1180 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;119 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1200 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1220 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1240 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1260 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1280 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;129 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1300 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1320 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1340 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1360 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1380 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;139 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1400 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1420 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1440 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1460 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1480 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;149 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1500 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1520 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1540 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1560 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1580 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;159 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1601 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1622 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1642 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1662 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1683 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;169 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1703 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1723 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1743 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1764 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1784 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;179 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1804 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1825 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1846 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1867 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1888 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;189 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;19 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1909 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1932 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1957 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;1979 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;199 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2001 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2026 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2053 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2079 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;209 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2103 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2129 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2159 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2196 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;220 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2236 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2288 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;231 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2328 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2391 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;244 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2447 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2492 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2555 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;257 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2641 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;269 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;2815 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;284 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;29 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;300 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;320 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;340 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;360 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;380 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;39 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;400 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;420 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;440 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;460 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;480 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;49 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;500 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;520 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;540 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;560 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;580 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;59 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;600 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;620 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;640 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;660 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;680 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;69 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;700 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;720 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;740 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;760 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;780 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;79 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;800 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;820 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;840 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;860 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;880 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;89 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;9 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;900 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;920 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;940 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;960 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;980 worse off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;99 better off&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Bad-point\\Natural gas&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;10 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;100 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1002 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1022 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1042 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1062 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1082 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;110 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1102 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1122 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1142 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1162 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1182 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;120 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1202 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1222 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1242 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1262 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1282 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;130 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1302 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1322 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1342 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1362 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1382 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;140 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1402 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1422 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1442 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1462 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1482 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;150 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1502 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1522 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1542 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1562 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1583 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;160 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1603 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1624 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1644 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1664 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1685 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;170 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1705 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1725 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1745 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1766 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1786 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;180 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1806 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1827 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1848 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1869 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1890 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;190 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1912 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1934 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1959 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1981 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;20 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;200 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2003 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2028 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2055 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2081 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;210 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2105 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2134 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2165 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2199 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;221 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2240 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2293 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;233 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2333 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2395 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2450 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;246 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2499 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2566 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;258 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2645 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;270 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2829 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;285 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;30 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;302 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;322 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;342 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;362 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;382 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;40 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;402 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;422 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;442 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;462 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;482 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;50 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;502 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;522 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;542 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;562 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;582 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;60 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;602 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;622 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;642 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;662 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;682 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;70 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;702 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;722 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;742 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;762 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;782 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;80 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;802 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;822 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;842 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;862 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;882 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;90 better off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;902 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;922 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;942 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;962 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;982 worse off&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bad-point&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;BaseR20&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Breakeven&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Good\\Natural gas&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;NoPV&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;basefurnace&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1006 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;102 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1026 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1046 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1066 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1086 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1106 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;112 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1126 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1146 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1166 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1186 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;12 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1206 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;122 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1226 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1246 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1266 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1286 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1306 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;132 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1326 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1346 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1366 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1386 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1406 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;142 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1426 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1446 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1466 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1486 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1506 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;152 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1526 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1546 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1566 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1587 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1607 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;162 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1628 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1648 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1668 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1689 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1709 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;172 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1729 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1749 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1770 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1790 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1810 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;182 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1831 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1853 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1873 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1894 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1917 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;192 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1940 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1963 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1986 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2009 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;202 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2035 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2060 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2087 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2109 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;212 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2140 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2173 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;22 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2208 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;224 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2259 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2307 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2346 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;235 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2402 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2458 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;248 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2518 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2581 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;260 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2681 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;273 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2862 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;287 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;306 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;32 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;326 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;346 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;366 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;386 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;406 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;42 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;426 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;446 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;466 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;486 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;506 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;52 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;526 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;546 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;566 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;586 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;606 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;62 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;626 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;646 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;666 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;686 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;706 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;72 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;726 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;746 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;766 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;786 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;806 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;82 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;826 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;846 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;866 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;886 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;906 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;92 better off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;926 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;946 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;966 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;986 worse off&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Builder markup is 10\%+&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;DblStud-R52-Wall&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Good\\Electricity&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;elec-baseboard&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1016 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1036 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1056 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;107 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1076 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1096 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1116 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1136 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1156 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;117 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1176 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1196 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1216 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1236 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1256 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;127 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1276 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1296 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1316 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1336 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1356 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;137 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1376 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1396 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1416 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1436 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1456 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;147 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1476 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1496 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1516 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1536 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1556 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;157 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1576 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1597 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1618 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1638 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1658 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;167 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1678 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1699 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;17 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1719 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1739 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1760 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;177 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1780 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1800 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1821 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1841 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1863 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;187 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1884 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1904 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1928 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1953 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;197 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1974 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;1997 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2020 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2048 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;207 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2073 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2099 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2124 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2154 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;217 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2189 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2229 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2279 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;229 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2321 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2380 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;241 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2439 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2485 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2546 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;255 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2631 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;266 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;27 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2762 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;281 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;296 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;316 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;336 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;356 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;37 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;376 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;396 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;416 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;436 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;456 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;47 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;476 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;496 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;516 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;536 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;556 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;57 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;576 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;596 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;616 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;636 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;656 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;67 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;676 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;696 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;7 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;716 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;736 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;756 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;77 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;776 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;796 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;816 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;836 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;856 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;87 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;876 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;896 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;916 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;936 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;956 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;97 better off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;976 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;996 worse off&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;UPGRADE&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1012 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1032 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;105 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1052 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1072 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1092 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1112 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1132 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;115 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1152 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1172 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1192 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1212 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1232 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;125 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1252 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1272 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1292 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1312 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1332 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;135 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1352 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1372 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1392 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1412 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1432 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;145 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1452 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1472 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1492 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;15 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1512 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1532 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;155 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1552 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1572 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1593 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1614 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1634 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;165 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1654 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1674 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1695 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1715 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1735 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;175 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1756 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1776 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1796 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1816 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1837 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;185 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1859 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1879 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1900 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1924 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1947 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;195 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1970 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;1993 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2016 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2043 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;205 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2066 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2093 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2117 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;215 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2150 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2184 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2225 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2269 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;227 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2315 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2367 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;239 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2418 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2471 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;25 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;251 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2533 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2614 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;263 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2742 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;277 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;292 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;312 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;332 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;35 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;352 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;372 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;392 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;412 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;432 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;45 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;452 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;472 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;492 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;5 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;512 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;532 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;55 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;552 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;572 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;592 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;612 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;632 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;65 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;652 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;672 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;692 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;712 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;732 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;75 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;752 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;772 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;792 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;812 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;832 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;85 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;852 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;872 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;892 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;912 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;932 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;95 better off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;952 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;972 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;992 worse off&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Homeowner won&apos;t break even&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Stud-R275MW-Wall&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1010 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1030 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;104 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1050 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1070 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1090 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1110 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1130 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;114 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1150 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1170 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1190 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1210 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1230 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;124 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1250 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1270 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1290 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1310 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1330 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;134 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1350 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1370 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1390 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;14 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1410 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1430 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;144 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1450 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1470 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1490 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1510 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1530 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;154 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1550 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1570 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1591 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1612 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1632 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;164 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1652 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1672 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1693 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1713 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1733 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;174 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1754 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1774 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1794 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1814 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1835 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;184 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1857 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1877 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1898 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1922 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;194 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1944 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1967 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;1991 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2014 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;204 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2040 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2064 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2091 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2115 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;214 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2147 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2180 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2222 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;226 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2267 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2313 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2361 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;238 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;24 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2408 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2468 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;250 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2528 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2602 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;262 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2740 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;276 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;291 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;310 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;3120 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;330 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;34 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;350 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;370 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;390 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;410 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;430 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;44 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;450 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;470 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;490 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;510 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;530 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;54 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;550 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;570 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;590 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;610 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;630 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;64 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;650 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;670 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;690 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;710 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;730 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;74 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;750 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;770 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;790 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;810 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;830 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;84 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;850 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;870 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;890 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;910 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;930 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;94 better off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;950 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;970 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;990 worse off&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Builder markup is 30\%+&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Stud-R275-Wall&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1 better off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1007 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;102 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1027 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1047 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1067 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1087 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1107 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;112 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1127 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1147 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1167 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1187 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;12 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1207 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;122 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1227 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1247 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1267 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1287 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1307 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;132 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1327 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1347 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1367 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1387 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1407 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;142 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1427 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1447 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1467 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1487 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1507 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;152 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1527 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1547 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1567 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1588 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1608 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;162 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1629 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1649 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1669 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1690 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1710 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;172 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1730 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1751 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1771 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1791 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1811 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;182 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1832 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1854 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1874 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1895 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1918 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;192 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1941 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1964 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;1988 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2011 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;202 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2037 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2061 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2088 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2110 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;213 better off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2141 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2175 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;22 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2209 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;224 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2261 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2308 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2348 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;236 better off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2403 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2462 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;248 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2520 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2582 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;261 better off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2695 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;274 better off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;288 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;2942 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;307 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;32 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;327 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;347 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;367 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;387 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;407 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;42 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;427 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;447 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;467 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;487 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;507 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;52 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;527 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;547 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;567 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;587 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;607 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;62 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;627 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;647 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;667 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;687 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;707 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;72 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;727 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;747 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;767 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;787 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;807 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;82 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;827 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;847 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;867 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;887 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;907 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;92 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;927 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;947 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;967 worse off&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;987 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1001 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1021 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1041 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1061 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1081 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;109 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1101 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1121 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1141 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1161 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1181 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;119 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1201 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1221 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1241 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1261 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1281 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;129 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1301 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1321 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1341 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1361 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1381 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;139 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1401 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1421 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1441 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1461 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1481 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;149 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1501 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1521 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1541 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1561 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1582 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;159 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1602 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1623 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1643 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1663 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1684 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;169 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1704 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1724 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1744 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1765 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1785 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;179 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1805 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1826 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1847 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1868 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1889 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;189 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;19 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1911 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1933 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1958 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;1980 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;199 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2002 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2027 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2054 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2080 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;210 better off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2104 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2133 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2163 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2198 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;221 better off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2237 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2289 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;232 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2329 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2393 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2448 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;245 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2494 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2565 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;257 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2644 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;270 better off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;2823 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;284 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;29 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;301 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;321 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;341 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;361 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;381 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;39 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;4 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;401 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;421 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;441 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;461 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;481 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;49 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;501 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;521 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;541 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;561 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;581 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;59 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;601 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;621 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;641 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;661 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;681 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;69 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;701 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;721 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;741 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;761 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;781 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;79 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;801 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;821 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;841 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;861 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;881 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;89 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;9 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;901 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;921 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;941 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;961 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;981 worse off&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;99 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;0 better off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;10 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;100 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1003 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1023 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1043 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1063 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1083 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;110 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1103 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1123 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1143 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1163 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1183 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;120 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1203 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1223 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1243 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1263 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1283 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;130 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1303 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1323 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1343 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1363 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1383 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;140 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1403 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1423 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1443 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1463 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1483 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;150 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1503 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1523 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1543 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1563 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1584 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;160 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1604 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1625 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1645 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1665 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1686 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;170 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1706 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1726 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1746 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1767 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1787 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;180 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1807 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1828 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1850 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1870 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1891 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;190 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1913 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1935 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1960 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;1982 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;20 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;200 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2005 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2029 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2057 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2082 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2106 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;211 better off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2135 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2166 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2202 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;222 better off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2244 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2298 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;233 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2334 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2397 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2451 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;246 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2500 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2571 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;259 better off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2650 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;271 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2830 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;285 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;30 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;303 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;323 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;343 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;363 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;383 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;40 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;403 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;423 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;443 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;463 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;483 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;50 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;503 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;523 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;543 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;563 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;583 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;60 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;603 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;623 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;643 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;663 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;683 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;70 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;703 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;723 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;743 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;763 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;783 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;80 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;803 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;823 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;843 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;863 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;883 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;90 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;903 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;923 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;943 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;963 worse off&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;983 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1018 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1038 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1058 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1078 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;108 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1098 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1118 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1138 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1158 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1178 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;118 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1198 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1218 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1238 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1258 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1278 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;128 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1298 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1318 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1338 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1358 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1378 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;138 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1398 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1418 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1438 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1458 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1478 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;148 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1498 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1518 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1538 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1558 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1578 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;158 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1599 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1620 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1640 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1660 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;168 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1680 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1701 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1721 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1741 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1762 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;178 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1782 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;18 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1802 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1823 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1843 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1865 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;188 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1886 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1906 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1930 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1955 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1977 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;198 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;1999 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2024 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2050 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2076 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;208 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2101 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2127 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2156 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;218 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2192 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2233 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2283 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;230 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2324 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2385 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;243 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2444 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2487 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2551 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;256 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2636 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;268 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2788 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;28 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;282 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;298 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;318 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;338 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;358 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;378 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;38 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;398 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;418 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;438 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;458 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;478 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;48 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;498 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;518 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;538 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;558 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;578 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;58 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;598 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;618 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;638 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;658 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;678 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;68 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;698 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;718 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;738 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;758 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;778 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;78 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;798 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;8 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;818 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;838 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;858 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;878 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;88 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;898 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;918 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;938 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;958 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;978 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;98 better off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;998 worse off&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Bad-point\\Electricity&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1013 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1033 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;105 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1053 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1073 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1093 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1113 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1133 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;115 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1153 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1173 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1193 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1213 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1233 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;125 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1253 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1273 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1293 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1313 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1333 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;135 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1353 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1373 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1393 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1413 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1433 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;145 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1453 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1473 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1493 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;15 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1513 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1533 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;155 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1553 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1573 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1594 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1615 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1635 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;165 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1655 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1675 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1696 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1716 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1736 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;175 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1757 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1777 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1797 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1817 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1838 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;185 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1860 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1880 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1901 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1925 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1949 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;195 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1971 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;1994 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2017 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2045 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;205 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2068 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2096 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2121 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2151 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;216 better off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2185 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2226 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2270 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;228 better off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2317 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2368 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;240 better off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2422 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2474 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;25 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;252 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2535 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2617 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;264 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;2748 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;278 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;293 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;313 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;333 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;35 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;353 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;373 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;393 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;413 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;433 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;45 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;453 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;473 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;493 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;5 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;513 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;533 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;55 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;553 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;573 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;593 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;613 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;633 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;65 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;653 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;673 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;693 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;713 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;733 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;75 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;753 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;773 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;793 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;813 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;833 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;85 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;853 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;873 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;893 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;913 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;933 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;95 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;953 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;973 worse off&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;993 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1011 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1031 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;104 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1051 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1071 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1091 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1111 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1131 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;114 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1151 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1171 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1191 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1211 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1231 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;124 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1251 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1271 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1291 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1311 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1331 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;134 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1351 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1371 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1391 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;14 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1411 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1431 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;144 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1451 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1471 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1491 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1511 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1531 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;154 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1551 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1571 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1592 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1613 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1633 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;164 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1653 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1673 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1694 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1714 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1734 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;174 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1755 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1775 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1795 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1815 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1836 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;184 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1858 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1878 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1899 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1923 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;194 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1945 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1968 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;1992 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2 better off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2015 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;204 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2041 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2065 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2092 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2116 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2149 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;215 better off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2181 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2223 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;226 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2268 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2314 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2363 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;239 better off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;24 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2416 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2469 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;251 better off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2531 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2604 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;263 better off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;2741 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;277 better off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;292 better off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;311 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;3300 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;331 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;34 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;351 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;371 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;391 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;411 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;431 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;44 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;451 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;471 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;491 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;511 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;531 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;54 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;551 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;571 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;591 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;611 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;631 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;64 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;651 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;671 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;691 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;711 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;731 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;74 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;751 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;771 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;791 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;811 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;831 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;84 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;851 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;871 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;891 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;911 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;931 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;94 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;951 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;971 worse off&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;991 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1017 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1037 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1057 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;107 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1077 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1097 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1117 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1137 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1157 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;117 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1177 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1197 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1217 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1237 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1257 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;127 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1277 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1297 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1317 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1337 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1357 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;137 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1377 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1397 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1417 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1437 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1457 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;147 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1477 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1497 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1517 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1537 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1557 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;157 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1577 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1598 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1619 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1639 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1659 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;167 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1679 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;17 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1700 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1720 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1740 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1761 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;177 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1781 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1801 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1822 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1842 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1864 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;187 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1885 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1905 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1929 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1954 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;197 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1975 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;1998 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2021 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2049 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2075 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;208 better off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2100 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2126 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2155 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;218 better off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2190 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2232 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2280 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;230 better off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2322 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2384 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;242 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2440 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2486 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;255 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2550 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2632 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;267 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;27 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;2787 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;282 better off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;297 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;3 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;317 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;337 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;357 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;37 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;377 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;397 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;417 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;437 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;457 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;47 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;477 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;497 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;517 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;537 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;557 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;57 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;577 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;597 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;617 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;637 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;657 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;67 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;677 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;697 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;7 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;717 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;737 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;757 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;77 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;777 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;797 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;817 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;837 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;857 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;87 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;877 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;897 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;917 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;937 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;957 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;97 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;977 worse off&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;997 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1008 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1028 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;103 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1048 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1068 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1088 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1108 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1128 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;113 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1148 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1168 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1188 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1208 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1228 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;123 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1248 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1268 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1288 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;13 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1308 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1328 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;133 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1348 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1368 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1388 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1408 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1428 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;143 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1448 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1468 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1488 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1508 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1528 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;153 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1548 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1568 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1589 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1610 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;163 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1630 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1650 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1670 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1691 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1711 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;173 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1731 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1752 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1772 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1792 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1812 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;183 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1833 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1855 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1875 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1896 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1919 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;193 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1942 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1965 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;1989 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2012 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;203 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2038 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2062 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2089 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2111 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;213 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2144 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2178 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2217 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;225 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2264 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;23 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2311 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2353 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;236 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2404 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2464 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;249 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2523 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2587 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;261 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2715 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;274 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;289 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;3001 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;308 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;328 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;33 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;348 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;368 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;388 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;408 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;428 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;43 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;448 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;468 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;488 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;508 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;528 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;53 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;548 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;568 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;588 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;608 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;628 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;63 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;648 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;668 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;688 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;708 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;728 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;73 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;748 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;768 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;788 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;808 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;828 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;83 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;848 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;868 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;888 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;908 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;928 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;93 better off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;948 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;968 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;988 worse off&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Builder markup is 20\%+&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;GSHP&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Stud-R21-2x4&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1019 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1039 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1059 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1079 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;108 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1099 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1119 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1139 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1159 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1179 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;118 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1199 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1219 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1239 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1259 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1279 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;128 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1299 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1319 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1339 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1359 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1379 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;138 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1399 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1419 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1439 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1459 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1479 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;148 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1499 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1519 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1539 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1559 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1579 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;158 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1600 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1621 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1641 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1661 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;168 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1681 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1702 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1722 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1742 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1763 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;178 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1783 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;18 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1803 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1824 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1845 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1866 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;188 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1887 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1907 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1931 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1956 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;1978 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;198 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2000 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2025 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2052 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2078 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;209 better off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2102 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2128 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2157 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;219 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2194 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2235 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2287 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;231 better off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2325 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2386 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;244 better off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2446 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2488 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2554 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;256 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2638 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;269 better off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;2792 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;28 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;283 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;299 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;319 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;339 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;359 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;379 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;38 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;399 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;4 better off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;419 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;439 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;459 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;479 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;48 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;499 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;519 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;539 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;559 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;579 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;58 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;599 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;619 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;639 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;659 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;679 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;68 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;699 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;719 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;739 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;759 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;779 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;78 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;799 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;8 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;819 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;839 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;859 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;879 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;88 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;899 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;919 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;939 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;959 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;979 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;98 worse off&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;999 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1014 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1034 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1054 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;106 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1074 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1094 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1114 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1134 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1154 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;116 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1174 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1194 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1214 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1234 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1254 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;126 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1274 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1294 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1314 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1334 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1354 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;136 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1374 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1394 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1414 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1434 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1454 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;146 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1474 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1494 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1514 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1534 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1554 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;156 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1574 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1595 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;16 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1616 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1636 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1656 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;166 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1676 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1697 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1717 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1737 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1758 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;176 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1778 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1798 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1818 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1839 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;186 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1861 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1881 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1902 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1926 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1950 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;196 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1972 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;1995 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2018 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2046 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;206 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2069 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2097 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2122 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2152 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;216 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2187 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2227 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2277 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;228 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2318 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2372 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;240 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2433 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2475 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;253 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2538 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;26 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2620 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;265 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2758 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;279 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;294 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;314 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;334 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;354 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;36 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;374 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;394 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;414 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;434 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;454 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;46 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;474 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;494 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;514 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;534 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;554 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;56 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;574 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;594 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;6 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;614 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;634 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;654 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;66 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;674 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;694 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;714 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;734 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;754 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;76 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;774 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;794 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;814 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;834 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;854 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;86 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;874 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;894 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;914 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;934 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;954 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;96 better off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;974 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;994 worse off&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;BASE&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Stud-R305-Wall&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1015 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1035 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1055 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;106 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1075 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1095 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1115 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1135 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1155 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;116 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1175 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1195 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1215 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1235 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1255 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;126 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1275 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1295 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1315 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1335 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1355 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;136 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1375 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1395 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1415 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1435 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1455 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;146 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1475 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1495 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1515 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1535 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1555 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;156 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1575 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1596 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;16 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1617 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1637 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1657 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;166 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1677 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1698 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1718 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1738 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1759 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;176 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1779 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1799 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1820 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1840 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;186 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1862 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1882 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1903 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1927 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1952 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;196 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1973 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;1996 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2019 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2047 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;207 better off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2071 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2098 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2123 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2153 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;217 better off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2188 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2228 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2278 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;229 better off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2319 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2375 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;241 better off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2436 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2483 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;254 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2543 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;26 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2624 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;265 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;2761 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;280 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;295 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;3 better off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;315 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;335 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;355 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;36 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;375 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;395 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;415 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;435 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;455 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;46 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;475 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;495 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;515 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;535 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;555 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;56 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;575 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;595 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;6 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;615 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;635 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;655 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;66 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;675 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;695 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;715 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;735 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;755 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;76 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;775 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;795 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;815 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;835 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;855 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;86 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;875 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;895 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;915 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;935 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;955 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;96 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;975 worse off&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;995 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1004 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;101 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1024 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1044 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1064 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1084 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;11 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1104 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;111 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1124 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1144 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1164 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1184 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1204 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;121 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1224 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1244 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1264 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1284 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1304 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;131 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1324 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1344 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1364 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1384 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1404 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;141 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1424 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1444 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1464 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1484 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1504 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;151 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1524 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1544 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1564 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1585 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1605 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;161 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1626 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1646 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1666 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1687 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1707 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;171 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1727 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1747 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1768 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1788 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1808 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;181 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1829 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1851 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1871 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1892 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;191 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1914 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1937 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1961 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1983 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2006 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;201 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2032 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2058 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2083 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;21 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2107 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;211 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2136 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2167 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2205 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;222 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2245 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2301 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;234 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2340 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2398 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2452 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;247 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2510 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2574 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;259 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2661 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;272 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2847 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;286 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;304 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;31 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;324 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;344 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;364 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;384 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;404 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;41 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;424 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;444 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;464 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;484 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;504 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;51 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;524 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;544 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;564 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;584 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;604 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;61 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;624 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;644 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;664 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;684 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;704 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;71 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;724 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;744 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;764 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;784 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;804 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;81 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;824 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;844 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;864 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;884 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;904 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;91 better off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;924 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;944 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;964 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;984 worse off&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Builder markup is 0\%+&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;CCASHP&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;DblStud-R37-Wall&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;SizedPV|5kW&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1009 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1029 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;103 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1049 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1069 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1089 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1109 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1129 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;113 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1149 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1169 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1189 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1209 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1229 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;123 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1249 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1269 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1289 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;13 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1309 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1329 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;133 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1349 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1369 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1389 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1409 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1429 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;143 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1449 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1469 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1489 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1509 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1529 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;153 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1549 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1569 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1590 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1611 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;163 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1631 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1651 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1671 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1692 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1712 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;173 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1732 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1753 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1773 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1793 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1813 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;183 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1834 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1856 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1876 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1897 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1920 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;193 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1943 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1966 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;1990 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2013 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;203 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2039 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2063 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2090 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2113 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;214 better off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2146 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2179 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2218 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;225 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2266 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;23 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2312 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2355 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;237 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2407 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2465 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;250 better off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2524 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2591 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;262 better off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;2716 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;275 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;290 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;3027 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;309 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;329 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;33 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;349 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;369 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;389 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;409 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;429 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;43 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;449 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;469 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;489 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;509 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;529 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;53 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;549 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;569 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;589 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;609 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;629 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;63 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;649 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;669 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;689 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;709 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;729 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;73 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;749 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;769 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;789 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;809 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;829 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;83 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;849 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;869 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;889 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;909 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;929 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;93 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;949 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;969 worse off&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;989 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;0 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1005 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;101 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1025 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1045 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1065 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1085 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;11 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1105 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;111 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1125 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1145 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1165 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1185 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1205 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;121 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1225 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1245 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1265 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1285 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1305 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;131 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1325 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1345 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1365 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1385 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1405 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;141 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1425 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1445 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1465 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1485 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1505 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;151 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1525 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1545 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1565 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1586 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1606 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;161 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1627 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1647 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1667 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1688 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1708 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;171 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1728 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1748 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1769 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1789 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1809 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;181 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1830 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1852 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1872 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1893 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;191 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1915 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1939 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1962 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;1985 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2008 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;201 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2033 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2059 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2084 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;21 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2108 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;212 better off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2137 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2170 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2207 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;223 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2256 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2305 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;234 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2344 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2400 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2457 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;247 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2517 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2577 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;260 better off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2669 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;273 better off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;2853 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;287 better off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;305 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;31 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;325 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;345 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;365 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;385 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;405 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;41 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;425 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;445 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;465 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;485 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;505 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;51 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;525 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;545 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;565 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;585 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;605 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;61 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;625 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;645 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;665 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;685 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;705 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;71 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;725 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;745 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;765 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;785 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;805 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;81 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;825 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;845 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;865 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;885 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;905 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;91 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;925 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;945 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;965 worse off&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;985 worse off&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='ERS equip mod' datatype='real' name='[ERS House Volume (m³) (copy)]' param-domain-type='any' role='measure' type='quantitative' value='24.376999999999999'>
          <calculation class='tableau' formula='24.376999999999999' />
        </column>
        <column caption='Escillation Rate: Gas' datatype='real' default-format='p0.00%' name='[Escillation Rate: Electricity (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.02'>
          <calculation class='tableau' formula='0.02' />
          <range max='1.0' min='0.0' />
        </column>
        <column caption='Colour by:' datatype='string' name='[Focus on ERS (copy 2)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Best+fuel&quot;'>
          <calculation class='tableau' formula='&quot;Best+fuel&quot;' />
          <members>
            <member value='&quot;Breakeven&quot;' />
            <member value='&quot;Better off?&quot;' />
            <member value='&quot;Best+fuel&quot;' />
            <member value='&quot;Best-for-homeowner&quot;' />
            <member value='&quot;EstimatedERS -bin&quot;' />
            <member value='&quot;HVAC system&quot;' />
            <member value='&quot;DHW system&quot;' />
            <member value='&quot;DHWR+SDHW&quot;' />
            <member value='&quot;Main Wall &quot;' />
            <member value='&quot;PV&quot;' />
            <member value='&quot;Conserved kWH - no PV&quot;' />
            <member value='&quot;Conserved kWH - w/ PV&quot;' />
          </members>
        </column>
        <column caption='Focus on fuel' datatype='string' name='[Focus on ERS (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Electricity&quot;'>
          <calculation class='tableau' formula='&quot;Electricity&quot;' />
          <members>
            <member value='&quot;Electricity&quot;' />
            <member value='&quot;Natural gas&quot;' />
          </members>
        </column>
        <column caption='Municipal Taxes' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='0.0069646999999999999'>
          <calculation class='tableau' formula='0.0069646999999999999' />
          <range max='1.0' min='0.0' />
        </column>
        <column caption='Escillation Rate: Electricity' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.0395'>
          <calculation class='tableau' formula='0.0395' />
          <range max='1.0' min='0.0' />
        </column>
        <column caption='Amoritization period ' datatype='real' default-format='n#,##0&quot; yrs&quot;;-#,##0&quot; yrs&quot;' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25.0'>
          <calculation class='tableau' formula='25.0' />
          <range min='1.0' />
        </column>
        <column caption='Base Case heating fuel type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Fuel neutral&quot;'>
          <calculation class='tableau' formula='&quot;Fuel neutral&quot;' />
          <members>
            <member value='&quot;Natural gas&quot;' />
            <member value='&quot;Electricity&quot;' />
            <member value='&quot;Fuel neutral&quot;' />
          </members>
        </column>
        <column caption='ERS House Volume (m³)' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='653.0'>
          <calculation class='tableau' formula='653.0' />
        </column>
        <column caption='ERS DHW Mod ' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='11.473000000000001'>
          <calculation class='tableau' formula='11.473000000000001' />
        </column>
        <column caption='Utilities: Assessment year' datatype='real' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='0.0'>
          <calculation class='tableau' formula='0.0' />
          <members>
            <member value='0.0' />
            <member value='5.0' />
            <member value='10.0' />
            <member value='15.0' />
            <member value='20.0' />
            <member value='25.0' />
          </members>
        </column>
        <column caption='PV costs ($/W installed)' datatype='real' default-format='c&quot;$&quot;#,##0.000;-&quot;$&quot;#,##0.000' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='3.2000000000000002'>
          <calculation class='tableau' formula='3.2000000000000002' />
          <range max='10.0' min='0.0' />
        </column>
        <column caption='Focus on ERS' datatype='integer' name='[Parameter 8]' param-domain-type='range' role='measure' type='quantitative' value='89'>
          <calculation class='tableau' formula='89' />
          <range max='100' min='76' />
        </column>
        <column caption='Interest rate (%)' datatype='real' default-format='p0.00%' name='[generation Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.035000000000000003'>
          <calculation class='tableau' formula='0.035000000000000003' />
          <range max='1.0' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='csv.41709.530460324073'>
      <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
      <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel.41732.485975347219'>
      <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel.41736.417335405094'>
      <column datatype='string' datatype-customized='true' name='[ID#]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[ID#]' derivation='None' name='[none:ID#:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='csv.41709.530460324073' target='excel.41732.485975347219'>
      <column-mapping>
        <map key='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' value='[excel.41732.485975347219].[none:GOtag:Opt-Location:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='csv.41709.530460324073' target='excel.41736.417335405094'>
      <column-mapping>
        <map key='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' value='[excel.41736.417335405094].[none:ID#:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <shared-views>
    <shared-view name='csv.41709.530460324073'>
      <datasources>
        <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
      </datasources>
      <datasource-dependencies datasource='csv.41709.530460324073'>
        <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
        </column>
        <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
        </column>
        <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
        </column>
        <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
        <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
        <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' context='true'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Calculation_7380401093918234:nk]' member='&quot;Electricity / ElectricHP&quot;' />
          <groupfilter function='member' level='[none:Calculation_7380401093918234:nk]' member='&quot;Electricity / ElectricStorage&quot;' />
          <groupfilter from='&quot;Natural gas / BaseDHW&quot;' function='range' level='[none:Calculation_7380401093918234:nk]' to='&quot;Natural gas / GasInstantaneous&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' context='true'>
        <groupfilter function='level-members' level='[none:GOtag:DHWLoadScale:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' context='true'>
        <groupfilter function='level-members' level='[none:GOtag:ElecLoadScale:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 15' />
      <command command='tsc:brush'>
        <param name='field-captions' value='batch,Measure Names' />
        <param name='target' value='Sheet 15' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 82' />
      <command command='tsc:brush'>
        <param name='field-captions' value='EstimatedERS (bin)' />
        <param name='target' value='Sheet 82' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 5' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Electricity: total benefit to utility (bin),Best+fuel' />
        <param name='target' value='Dashboard 5' />
      </command>
    </action>
    <action caption='Highlight 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Conserve-by-' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Breakeven' />
        <param name='target' value='Conserve-by-' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Annual-savings'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
            <datasource caption='Mark-up (Optimization-cost-adj.xlsx)' name='excel.41732.485975347219' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner --- range' datatype='real' name='[Calculation_8270403112829760]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([Calculation_2640311145556471])-min([Calculation_2640311145556471])' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Min' name='[min:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8270403112829760]' derivation='User' name='[usr:Calculation_8270403112829760:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41732.485975347219'>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' filter-group='3'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='DESC' using='[csv.41709.530460324073].[min:Calculation_2640311145556471:qk]'>
            <groupfilter function='member' level='[EstimatedERS (bin)]' member='83' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter from='&quot;2-plate&quot;' function='range' level='[none:GOtag:Opt-DWHRandSDHW:nk]' to='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='22' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <size column='[csv.41709.530460324073].[usr:Calculation_8270403112829760:qk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[min:Calculation_2640311145556471:qk]' formula='average' id='refline0' label-type='none' scope='per-cell' value-column='[csv.41709.530460324073].[min:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='103' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
                <format attr='aspect' value='0' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[min:Calculation_2640311145556471:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <join-lod-include-overrides>
          <column>[excel.41732.485975347219].[GOtag:Opt-Location]</column>
        </join-lod-include-overrides>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Batch analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Interest rate (%)' datatype='real' default-format='p0.00%' name='[generation Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.035000000000000003'>
              <calculation class='tableau' formula='0.035000000000000003' />
              <range max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[generation Parameter]' value='Interest rate'>
              <formatted-text>
                <run>Interest rate</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk] / ([csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk] / [csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]))</rows>
        <cols>[csv.41709.530460324073].[sum:Number of Records:qk]</cols>
        <subtotals>
          <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
          <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='COST-comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Design Strategies (</run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 6]</run>
            <run>&gt;</run>
            <run> years from today)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Energy savings (%)' datatype='real' name='[Calculation_3710312133127667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(106.65-[EnergyTotal])/106.65' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EnergyPVGJ' datatype='real' name='[Calculation_9440311154155886]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]*3600/1E06' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyHeatingGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyPlugGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyTotal]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyVentGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelEleckWh]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelNaturalGasM3]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelOilL]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[ID]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Main_Iteration]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[ID]' derivation='None' name='[none:ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3710312133127667]' derivation='Sum' name='[sum:Calculation_3710312133127667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8430311144549035]' derivation='Sum' name='[sum:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9440311154155886]' derivation='Sum' name='[sum:Calculation_9440311154155886:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyHeatingGJ]' derivation='Sum' name='[sum:EnergyHeatingGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Sum' name='[sum:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPlugGJ]' derivation='Sum' name='[sum:EnergyPlugGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyTotal]' derivation='Sum' name='[sum:EnergyTotal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyVentGJ]' derivation='Sum' name='[sum:EnergyVentGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FuelEleckWh]' derivation='Sum' name='[sum:FuelEleckWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FuelNaturalGasM3]' derivation='Sum' name='[sum:FuelNaturalGasM3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FuelOilL]' derivation='Sum' name='[sum:FuelOilL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Main_Iteration]' derivation='Sum' name='[sum:Main_Iteration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyHeatingGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:Calculation_9440311154155886:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyPVkWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyPlugGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyTotal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyVentGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:FuelEleckWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:FuelNaturalGasM3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:FuelOilL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:Main_Iteration:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot;Base Case (ERS 76 code)&quot;' />
              <groupfilter from='&quot;ERS 80&quot;' function='range' level='[none:Calculation_8470312121221798:nk]' to='&quot;ERS 86 --- lowest upgrade cost&quot;' />
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot;Money Saver (ERS 76)&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Base Case (ERS 76 code)&quot;</bucket>
              <bucket>&quot;Money Saver (ERS 76)&quot;</bucket>
              <bucket>&quot;ERS 80&quot;</bucket>
              <bucket>&quot;ERS 83 --- lowest upgrade cost&quot;</bucket>
              <bucket>&quot;ERS 83 --- lowest operating cost&quot;</bucket>
              <bucket>&quot;ERS 86 --- lowest upgrade cost&quot;</bucket>
              <bucket>&quot;ERS 86 --- lowest operating cost&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='Upgrade cost ($)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='Annual Savings to Homeowner ($/yr)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' value='p0%' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0&quot;/yr&quot;;-&quot;$&quot;#,##0&quot;/yr&quot;' />
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='40' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' value='244' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' value='p0%' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0&quot; &quot;;-&quot;$&quot;#,##0&quot; &quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' max='200.0' min='-200.0' num-steps='4' palette='tableau-red-black' type='interpolated' />
            <encoding attr='color' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' x-axis-name='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' />
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</rows>
        <cols>([csv.41709.530460324073].[sum:Calculation_3710312133127667:qk] + ([csv.41709.530460324073].[sum:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]))</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[generation (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Cheapest'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Base Case heating fuel type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Fuel neutral&quot;'>
              <calculation class='tableau' formula='&quot;Fuel neutral&quot;' />
              <members>
                <member value='&quot;Natural gas&quot;' />
                <member value='&quot;Electricity&quot;' />
                <member value='&quot;Fuel neutral&quot;' />
              </members>
            </column>
            <column caption='PV costs ($/W installed)' datatype='real' default-format='c&quot;$&quot;#,##0.000;-&quot;$&quot;#,##0.000' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='3.2000000000000002'>
              <calculation class='tableau' formula='3.2000000000000002' />
              <range max='10.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrade CostAdjuster by Fuel type ($)' datatype='integer' name='[Calculation_0000328154041002]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Parameters].[Parameter 2] = &quot;Natural gas&quot; OR &#13;&#10;     ( [Parameters].[Parameter 2] = &quot;Fuel neutral&quot; AND [Calculation_4270328153916499] = &quot;Natural gas&quot; ) ) then 0&#13;&#10;&#13;&#10;&#13;&#10;else 1600&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted ElecFurn cost' datatype='integer' name='[Calculation_1010313135857628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-HVACSystem] = &quot;elec-baseboard&quot; ) then 4950 - 1600&#13;&#10;else 0 &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(6.85*12 +([FuelEleckWh]-[EnergyPVkWh])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Water conservation package ($)' datatype='integer' name='[Calculation_2900312105624061]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([GOtag:DHWLoadScale]=&quot;Low-Flow&quot; ) then 80&#13;&#10;else 0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Wall-insulation-type' datatype='string' name='[Calculation_4800326161225524]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot;    ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjust ACH cost ($)' datatype='real' name='[Calculation_5080312144736857]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4800326161225524] = &quot;OC&quot; ) then &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then 0&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -3049&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -3260&#13;&#10;    end&#13;&#10;else &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;    end&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: PV cost adjustment ($)' datatype='real' name='[Calculation_8190312105315011]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PVSizekW]*([Parameters].[Parameter 7]*1000-4687)' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Electric conservation package ($)' datatype='integer' name='[Calculation_8710312105714395]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [GOtag:ElecLoadScale] = &quot;NGERSNoReduction19&quot; ) then 0 &#13;&#10;else 140&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Main Wall adjust cost (No air sealing credit) ' datatype='integer' name='[Calculation_8710326154745859]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [GOtag:Opt-MainWall] &#13;&#10;  when &quot;BaseR20&quot; then 0 &#13;&#10;  when &quot;DblStud-R37-Wall&quot; then   1350&#13;&#10;  when &quot;DblStud-R52-Wall&quot; then   1350&#13;&#10;  when &quot;Stud-R21-2x4&quot; then       0 &#13;&#10;  when &quot;Stud-R275-Wall&quot; then    619&#13;&#10;  when &quot;Stud-R305-Wall&quot; then    555&#13;&#10;  when &quot;Stud-R275MW-Wall&quot; then   505&#13;&#10;  when &quot;AdvFrm-R20-Wall&quot; then   110&#13;&#10;  else -9000000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Show Fuel' datatype='string' name='[Calculation_9940401113855898]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = [Parameters].[Focus on ERS (copy)] ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[GOtag:Opt-DHWSystem (copy)]'>
                <bin value='&quot;BaseDHW&quot;'>
                  <value>&quot;BaseDHW&quot;</value>
                  <value>&quot;ElectricStorage&quot;</value>
                  <value>&quot;GasInstantaneous&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[GOtag:Opt-DHWSystem]' />
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExposedFloor]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtBasementWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtLeftSideWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FrontWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-OverhangWidth]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='real' name='[PVSizekW]' role='measure' type='quantitative'>
            </column>
            <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;  (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[UpgradeCostDoll]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9940401113855898]' derivation='None' name='[none:Calculation_9940401113855898:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem (copy)]' derivation='None' name='[none:GOtag:Opt-DHWSystem (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExposedFloor]' derivation='None' name='[none:GOtag:Opt-ExposedFloor:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtBasementWindow]' derivation='None' name='[none:GOtag:Opt-ExtBasementWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtLeftSideWindow]' derivation='None' name='[none:GOtag:Opt-ExtLeftSideWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FrontWindows]' derivation='None' name='[none:GOtag:Opt-FrontWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-OverhangWidth]' derivation='None' name='[none:GOtag:Opt-OverhangWidth:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1130312101746663]' derivation='Sum' name='[sum:Calculation_1130312101746663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Sum' name='[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' context='true' />
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]'>
            <groupfilter count='1' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Calculation_1760312105551885])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;100169&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;100206&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;100414&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;100478&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;100485&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;100590&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;100661&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;100856&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;101033&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;101047&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;101166&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;101379&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;101404&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;101508&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;101831&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;102054&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;102084&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;102115&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;102151&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;102528&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;102624&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;102720&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;102772&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;102788&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;102915&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;102926&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;102938&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;102960&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103045&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103048&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103203&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103285&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103298&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103315&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103341&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103380&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103395&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103490&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103609&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103745&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103790&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103814&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103848&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103887&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;103980&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104032&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104058&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104150&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104155&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104203&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104272&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104299&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104468&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104601&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104628&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104643&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104690&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104893&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104942&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;104983&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105098&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105148&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105150&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105201&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105227&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105236&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105239&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105373&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105402&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105405&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105431&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105450&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105452&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105553&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105726&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105766&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105774&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105839&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105844&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105911&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105914&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;105965&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106068&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106143&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106286&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106319&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106356&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106384&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106386&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106387&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106440&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106591&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106605&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106609&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106610&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106732&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106753&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106882&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106914&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106919&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;106990&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107220&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107301&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107384&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107458&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107470&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107499&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107534&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107627&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107707&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107714&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107859&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107878&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107903&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107948&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107951&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;107979&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108034&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108046&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108093&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108116&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108186&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108252&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108269&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108477&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108490&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108549&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108578&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108596&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108602&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108626&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108654&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108686&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108848&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108884&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108896&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;108917&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109061&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109090&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109135&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109144&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109228&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109256&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109331&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109354&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109362&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109633&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109695&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109771&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109772&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109845&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109891&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;109991&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110173&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110237&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110239&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110252&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110305&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110347&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110362&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110478&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110592&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110608&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110770&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110782&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110818&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110832&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110856&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110907&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;110938&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111221&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111251&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111285&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111372&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111398&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111453&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111502&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111508&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111515&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111617&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111625&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111658&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111715&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111822&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111858&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111909&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;111958&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112056&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112101&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112108&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112127&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112302&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112324&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112358&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112381&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112438&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112489&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112559&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112571&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112654&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112692&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112735&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112830&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112851&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112907&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;112962&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113086&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113133&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113172&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113374&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113429&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113462&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113534&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113613&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113615&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113691&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113729&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113819&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113841&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113844&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113848&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;113900&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;114060&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;114064&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;114207&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;114270&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;114419&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;114438&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;114531&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;114879&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;114988&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;115020&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;115024&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;115151&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;115216&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;115284&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;115403&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;115469&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;115678&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;115734&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;115776&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;115915&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;116015&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;116069&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;116168&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;116172&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;116212&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;116299&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;116445&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;116458&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;116467&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;116536&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;116629&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;116726&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;116855&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;116876&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117007&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117094&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117132&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117138&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117309&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117339&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117518&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117572&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117578&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117588&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117648&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117676&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117704&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117707&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117734&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117783&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117847&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117897&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117966&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;117997&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118000&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118026&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118048&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118086&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118144&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118148&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118253&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118313&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118328&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118340&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118344&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118433&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118467&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118512&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118576&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118737&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118764&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118842&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118884&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;118991&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;119021&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;119053&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;119181&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;119224&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;119235&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;119278&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;119390&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;119514&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;119614&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;119627&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;119787&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;119795&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;119870&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;119886&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;120040&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;120053&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;120243&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;120406&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;120528&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;120532&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;120555&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;120615&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;120638&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;120641&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;120674&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;120926&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;120996&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;121042&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;121135&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;121301&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;121346&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;121381&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;121454&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;121613&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;121705&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;121707&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;121709&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;121725&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;121750&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;121957&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;121997&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122000&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122099&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122121&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122232&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122254&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122307&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122318&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122377&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122383&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122394&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122399&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122407&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122446&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122675&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122727&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122853&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122896&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122906&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;122922&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;123013&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;123041&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;123061&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;123098&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;123238&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;123252&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;123406&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;123540&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;123579&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;123625&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;123638&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;123692&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124080&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124142&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124190&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124341&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124349&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124366&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124545&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124570&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124648&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124836&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124866&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124895&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124909&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124917&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;124981&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;125003&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;125166&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;125258&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;125318&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;125341&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;125573&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;125612&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;125644&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;125740&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;125781&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;125787&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;125901&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;125950&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;125972&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;126000&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;126074&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;126155&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;126214&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;126478&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;126492&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;126503&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;126567&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;126868&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;126911&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;126962&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;126999&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127010&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127097&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127148&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127169&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127186&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127192&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127223&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127335&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127351&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127410&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127543&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127555&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127587&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127711&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127756&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127758&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127773&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127791&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;127951&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128046&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128139&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128141&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128149&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128221&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128289&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128334&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128356&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128562&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128580&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128665&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128708&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128814&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128829&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128865&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128887&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128944&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;128949&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;129149&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;129154&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;129203&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;129316&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;129372&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;129492&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;129675&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;129682&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;129695&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;129818&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;129899&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;129988&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130076&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130115&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130136&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130178&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130230&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130242&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130337&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130466&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130477&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130731&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130736&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130779&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130788&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130809&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130818&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130828&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130831&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130847&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130855&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130856&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130863&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130864&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130866&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130879&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130894&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130909&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130916&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130918&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130922&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130926&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130930&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130932&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130947&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130949&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130960&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130965&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130972&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130973&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130989&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;130996&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131000&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131002&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131004&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131005&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131010&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131024&quot;' />
                  <groupfilter from='&quot;131030&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;131033&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131035&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131048&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131054&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131065&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131073&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131075&quot;' />
                  <groupfilter from='&quot;131084&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;131086&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131088&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131095&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131097&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131107&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131117&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131129&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131135&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131139&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131142&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131145&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131155&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131156&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131159&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131168&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131172&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131179&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131198&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131199&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131216&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131228&quot;' />
                  <groupfilter from='&quot;131237&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;131239&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131241&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131243&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131246&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131260&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131264&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131267&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131274&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131290&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131292&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131295&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131300&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131301&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131306&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131309&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131334&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131346&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131347&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131355&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131357&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131363&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131368&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131369&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131377&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131387&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131394&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131404&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131406&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131424&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131425&quot;' />
                  <groupfilter from='&quot;131436&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;131438&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131441&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131448&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131451&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131454&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131472&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131474&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131480&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131486&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131495&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131498&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131501&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131506&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131512&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131517&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131521&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131533&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131534&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131536&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131538&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131542&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131544&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131545&quot;' />
                  <groupfilter from='&quot;131553&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;131556&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131559&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131568&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131569&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131572&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131573&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131581&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131583&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131587&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131589&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131599&quot;' />
                  <groupfilter from='&quot;131605&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;131607&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131610&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131613&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131616&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131619&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131622&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131630&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131631&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131634&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131635&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131643&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131654&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131655&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131660&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131664&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131665&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131668&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131677&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131697&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131699&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131700&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131706&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131714&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131717&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131719&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131723&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131726&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131732&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131733&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131739&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131750&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131765&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131774&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131775&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131781&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131784&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131785&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131789&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131797&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131804&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131811&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131814&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131818&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131822&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131832&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131845&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131850&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131852&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131854&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131856&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131862&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131865&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131874&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131876&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131880&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131883&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131904&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131905&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131907&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131909&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131925&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131927&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131932&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131933&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131961&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131969&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131972&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131976&quot;' />
                  <groupfilter from='&quot;131983&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;131985&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131988&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131990&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;131992&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132003&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132007&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132010&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132021&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132023&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132035&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132042&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132045&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132055&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132063&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132065&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132077&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132090&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132096&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132106&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132110&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132113&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132118&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132119&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132123&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132124&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132130&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132131&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132141&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132157&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132158&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132172&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132175&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132177&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132185&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132186&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132190&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132204&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132209&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132210&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132211&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132214&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132216&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132220&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132232&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132234&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132246&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132247&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132249&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132254&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132257&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132266&quot;' />
                  <groupfilter from='&quot;132270&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;132272&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132280&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132283&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132297&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132298&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132300&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132301&quot;' />
                  <groupfilter from='&quot;132311&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;132313&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132315&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132317&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132322&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132327&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132331&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132342&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132345&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132348&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132349&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132358&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132374&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132376&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132388&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132400&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132413&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132416&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132421&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132426&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132427&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132432&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132435&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132438&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132439&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132440&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132459&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132473&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132475&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132481&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132495&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132496&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132502&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132505&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132508&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132520&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132521&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132523&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132534&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132539&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132541&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132558&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132561&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132562&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132565&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132574&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132576&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132581&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132583&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132608&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132610&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132634&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132642&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132644&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132646&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132649&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132650&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132651&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132661&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132662&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132666&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132672&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132685&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132700&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132701&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132705&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132708&quot;' />
                  <groupfilter from='&quot;132714&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;132716&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132719&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132724&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132725&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132729&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132730&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132737&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132744&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132747&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132750&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132751&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132755&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132779&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132781&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132785&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132788&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132791&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132796&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132806&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132807&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132810&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132819&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;132824&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;140503&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;142362&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;144944&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;145420&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;145714&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;146049&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;146153&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;146692&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;147003&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;147662&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;147799&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;148846&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;148850&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;148960&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;149137&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;149193&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;149384&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;150899&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;151257&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;151265&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;151325&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;152863&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;152910&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;153486&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;154851&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;154968&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;155232&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;155336&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;155424&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;156041&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;156299&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;156308&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;156543&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;157189&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;157865&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;157964&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;158010&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;158361&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;158693&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;159119&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;161098&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;161671&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;162043&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;162212&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;162348&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;162841&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;163082&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;163098&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;163274&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;163814&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;163923&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;164006&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;164258&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;164461&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;164465&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;16767&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;18184&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;18448&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;18651&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;18859&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;18914&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;19639&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;19689&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;20244&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;20292&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;20509&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;20866&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;21683&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;22080&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;22658&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;23608&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;23702&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;24067&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;24455&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;24485&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;24737&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;25027&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;25173&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;25326&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;25626&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;25814&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;27404&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;27413&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;27956&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;28067&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;28537&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;29001&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;29046&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;29548&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;29571&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;30171&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;31018&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;31044&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;31219&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;31766&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;31808&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;32940&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;33030&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;33453&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;33901&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;34997&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;37003&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;37225&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;3753&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;37828&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;38000&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;38098&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;38169&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;38285&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;38992&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;39643&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;39892&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;40067&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;40563&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;40938&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;41005&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;41299&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;42187&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;43251&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;43347&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;43462&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;43666&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;43813&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;44008&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;44125&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;44850&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;44935&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;45783&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;45814&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;45968&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;46737&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;47341&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;47387&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;48100&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53157&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53163&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53174&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53188&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53193&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53203&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53207&quot;' />
                  <groupfilter from='&quot;53214&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;53216&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53219&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53226&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53234&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53236&quot;' />
                  <groupfilter from='&quot;53243&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;53245&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53251&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53253&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53264&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53265&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53267&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53268&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53274&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53277&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53281&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53290&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53291&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53293&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53295&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53312&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53329&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53334&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53335&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53339&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53343&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53344&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53351&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53357&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53361&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53362&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53365&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53373&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53385&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53390&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53392&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53394&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53401&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53406&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53415&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53418&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53423&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53425&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53430&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53434&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53435&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53437&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53447&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53457&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53476&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53484&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53485&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53493&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53494&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53500&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53509&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53513&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53525&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53529&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53531&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53532&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53537&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53549&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53563&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53565&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53581&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53589&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53598&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53600&quot;' />
                  <groupfilter from='&quot;53613&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;53615&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53624&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53630&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53637&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53643&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53651&quot;' />
                  <groupfilter from='&quot;53654&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;53657&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53659&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53660&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53663&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53678&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53682&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53697&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53699&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53702&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53709&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53710&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53714&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53719&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53720&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53736&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53741&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53742&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53744&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53749&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53752&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53754&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53760&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53761&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53768&quot;' />
                  <groupfilter from='&quot;53777&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;53779&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53782&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53787&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53788&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53794&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53800&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53804&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53817&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53830&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53831&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53847&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53851&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53859&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53863&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53864&quot;' />
                  <groupfilter from='&quot;53873&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;53876&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53888&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53889&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53890&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53891&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53908&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53912&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53914&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53918&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53919&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53926&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53935&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53939&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53940&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53941&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53943&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53947&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53948&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53958&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53964&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53971&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53974&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53975&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53978&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53980&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53983&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53992&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;53997&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54005&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54016&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54019&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54022&quot;' />
                  <groupfilter from='&quot;54030&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;54032&quot;' />
                  <groupfilter from='&quot;54036&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;54038&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54043&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54045&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54046&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54066&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54071&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54072&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54075&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54081&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54083&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54086&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54087&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54099&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54103&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54106&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54114&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54121&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54125&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54143&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54149&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54151&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54161&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54167&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54176&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54191&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54195&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54202&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54206&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54215&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54219&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54220&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54221&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54223&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54224&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54226&quot;' />
                  <groupfilter from='&quot;54231&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;54233&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54238&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54244&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54248&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54250&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54259&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54261&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54262&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54268&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54274&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54276&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54285&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54290&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54291&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54302&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54307&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54309&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54320&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54350&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54353&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54354&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54364&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54365&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54370&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54375&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54379&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54393&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54397&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54403&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54407&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54410&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54415&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54428&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54429&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54431&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54438&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54441&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54442&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54444&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54445&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54448&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54453&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54465&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54472&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54476&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54482&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54491&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54494&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54499&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54508&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54509&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54512&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54522&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54526&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54530&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54533&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54535&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54542&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54545&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54553&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54561&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54563&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54578&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54580&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54593&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54594&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54597&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54602&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54608&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54611&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54619&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54620&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54622&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54627&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54631&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54635&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54638&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54640&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54645&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54647&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54651&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54661&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54669&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54673&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54674&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54694&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54698&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54702&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54705&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54711&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54714&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54715&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54722&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54723&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54725&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54729&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54732&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54733&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54737&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54739&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54744&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54752&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54757&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54759&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54762&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54769&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54779&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54787&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54788&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54791&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54793&quot;' />
                  <groupfilter from='&quot;54796&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;54799&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54812&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54815&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54817&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54819&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54820&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54828&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54831&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54832&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54838&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54839&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54849&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54851&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54854&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54868&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54870&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54872&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54875&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54878&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54886&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54890&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54899&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54911&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54912&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54923&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54925&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54934&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54937&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54946&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54948&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54949&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54950&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54953&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54962&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54966&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54972&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54978&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54980&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;54997&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55006&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55007&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55009&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55013&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55018&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55019&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55024&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55026&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55035&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55036&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55040&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55044&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55049&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55059&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55063&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55068&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55071&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55072&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55083&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55086&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55088&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55089&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55098&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55109&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55111&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55118&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55122&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55124&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55137&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55141&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55147&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55160&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55171&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55175&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55177&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55186&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55187&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55191&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55195&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55200&quot;' />
                  <groupfilter from='&quot;55204&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;55206&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55210&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55214&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55215&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55218&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55237&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55264&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55268&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55269&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55278&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55281&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55291&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55292&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55294&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55307&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55316&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55334&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55336&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55344&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55345&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55351&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55361&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55366&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55377&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55388&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55398&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55399&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55402&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55414&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55415&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55419&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55426&quot;' />
                  <groupfilter from='&quot;55431&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;55434&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55438&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55445&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55447&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55448&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55457&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55462&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55466&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55475&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55478&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55480&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55482&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55488&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55490&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55491&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55498&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55501&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55503&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55504&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55508&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55511&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55514&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55522&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55530&quot;' />
                  <groupfilter from='&quot;55534&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;55537&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55539&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55542&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55549&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55555&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55556&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55559&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55561&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55569&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55575&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55578&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55585&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55586&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55592&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55621&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55623&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55628&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55631&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55636&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55641&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55651&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55656&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55660&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55662&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55669&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55680&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55686&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55693&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55695&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55696&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55706&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55712&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55729&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55730&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55733&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55734&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55740&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55745&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55759&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55763&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55765&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55767&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55771&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55776&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55785&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55797&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55801&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55803&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55807&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55810&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55819&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55823&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55834&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55835&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55838&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55843&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55844&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55846&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55850&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55861&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55863&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55865&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55866&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55869&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55877&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55885&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55887&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55892&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55897&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55917&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55931&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55953&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55956&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55962&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55967&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55969&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55971&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55975&quot;' />
                  <groupfilter from='&quot;55977&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;55979&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55993&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;55998&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56002&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56007&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56010&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56011&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56034&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56037&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56038&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56040&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56043&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56047&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56056&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56073&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56078&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56090&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56106&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56107&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56109&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56112&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56118&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;5612&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56121&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56125&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56129&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56130&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56141&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56156&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56159&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56160&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56161&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56168&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56175&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56179&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56182&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56185&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56198&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56206&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56214&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56226&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56236&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56259&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56266&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56269&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56283&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56288&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56291&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56295&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56313&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56316&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56318&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56329&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56336&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56340&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56344&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56350&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56355&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56357&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56366&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56375&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56378&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56380&quot;' />
                  <groupfilter from='&quot;56387&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;56389&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56392&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56393&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56403&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56408&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56415&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56427&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56430&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56436&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56452&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56454&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56463&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56464&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56467&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56468&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56474&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56478&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56479&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56487&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56497&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56505&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56508&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56515&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56523&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56529&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56531&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56538&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56539&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56544&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56545&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56555&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56560&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56571&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56578&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56592&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56598&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56599&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56601&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56602&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56606&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56609&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56615&quot;' />
                  <groupfilter from='&quot;56623&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;56625&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56635&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56640&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56663&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56671&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56672&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56674&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56685&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56689&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56691&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56693&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56694&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56708&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56722&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56728&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56729&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56732&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56734&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56743&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56753&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56756&quot;' />
                  <groupfilter from='&quot;56760&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;56762&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56765&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56769&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56770&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56782&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56784&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56785&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56788&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56789&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56797&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56811&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56815&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56822&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56825&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56834&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56836&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56838&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56853&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56860&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56864&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56865&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56876&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56879&quot;' />
                  <groupfilter from='&quot;56880&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;56882&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56890&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56891&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56895&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56898&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56901&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56905&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56912&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56918&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56920&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56930&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56937&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56948&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56953&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56960&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56961&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56986&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56989&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56991&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56995&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56996&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;56998&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57005&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57009&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57011&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57017&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57024&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57026&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57028&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57037&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57041&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57043&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57045&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57047&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57050&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57059&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57060&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57062&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57064&quot;' />
                  <groupfilter from='&quot;57066&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;57068&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57071&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57075&quot;' />
                  <groupfilter from='&quot;57082&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;57084&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57099&quot;' />
                  <groupfilter from='&quot;57102&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;57104&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57118&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57136&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57142&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57153&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57162&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57168&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57171&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57178&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57182&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57187&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57188&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57200&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57209&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57210&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57211&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57215&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57217&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57224&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57233&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57237&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57242&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57244&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57245&quot;' />
                  <groupfilter from='&quot;57256&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;57258&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57262&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57269&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57272&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57275&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57284&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57286&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57295&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57296&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57299&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57303&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57307&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57310&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57323&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57330&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57347&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57352&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57355&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57360&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57369&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57374&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57379&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57382&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57389&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57392&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57397&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57405&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57407&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57414&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57416&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57417&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57421&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57423&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57429&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57431&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57434&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57446&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57454&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57461&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57464&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57465&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57468&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57469&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57477&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57478&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57485&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57486&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57499&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57500&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57502&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57510&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57514&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57517&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57522&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57524&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57526&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57530&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57532&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57544&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57549&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57578&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57580&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57581&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57584&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57591&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57598&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57605&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57620&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57624&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57625&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57629&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57635&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57640&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57645&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57654&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57667&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57669&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57682&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57690&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57693&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57700&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57702&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57704&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57705&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57714&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57715&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57719&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57726&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57736&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57737&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57754&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57757&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57764&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57766&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57786&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57788&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57791&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57793&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57799&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57801&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57804&quot;' />
                  <groupfilter from='&quot;57806&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;57808&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57812&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57813&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57820&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57823&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57836&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57838&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57839&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57843&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57845&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57846&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57861&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57862&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57878&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57880&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57888&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57889&quot;' />
                  <groupfilter from='&quot;57904&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;57906&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57908&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57911&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57916&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57918&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57923&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57924&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57952&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57966&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57970&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57977&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57984&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57995&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;57999&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58004&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58007&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58008&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58023&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58031&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58035&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58043&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58045&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58052&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58053&quot;' />
                  <groupfilter from='&quot;58064&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;58066&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58070&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58072&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58079&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58087&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58091&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58092&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58096&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58099&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58102&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58104&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58106&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58112&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58122&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58126&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58127&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58132&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58134&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58136&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58141&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58142&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58150&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58152&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58154&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58156&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58158&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58161&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58168&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58172&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58174&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58182&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58194&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58197&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58201&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58202&quot;' />
                  <groupfilter from='&quot;58207&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;58209&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58210&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58212&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58221&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58223&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58226&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58232&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58235&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58238&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58250&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58262&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58265&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58270&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58275&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58276&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58284&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58285&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58287&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58295&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58300&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58311&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58318&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58331&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58332&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58339&quot;' />
                  <groupfilter from='&quot;58344&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;58346&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58351&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58352&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58357&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58360&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58361&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58364&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58366&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58376&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58380&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58384&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58394&quot;' />
                  <groupfilter from='&quot;58402&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;58405&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58409&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58410&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58416&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58426&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58430&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58451&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58452&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58456&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58457&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58462&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58465&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58470&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58477&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58482&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58487&quot;' />
                  <groupfilter from='&quot;58504&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;58506&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58510&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58512&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58518&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58519&quot;' />
                  <groupfilter from='&quot;58523&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;58525&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58532&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58534&quot;' />
                  <groupfilter from='&quot;58536&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;58538&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58545&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58562&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58566&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58575&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58576&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58578&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58583&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58592&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58593&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58595&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58603&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58610&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58618&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58625&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58626&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58632&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58637&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58642&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58662&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58669&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58673&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58681&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58699&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58703&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58705&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58707&quot;' />
                  <groupfilter from='&quot;58710&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;58713&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58716&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58730&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58732&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58739&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58756&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58764&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58770&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58775&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58787&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58791&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58813&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58819&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58827&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58830&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58832&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58834&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58836&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58840&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58859&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58862&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58863&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58873&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58877&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58882&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58884&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58888&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58892&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58894&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58897&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58901&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58902&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58917&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58920&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58921&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58925&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58927&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58936&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58938&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58942&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58945&quot;' />
                  <groupfilter from='&quot;58947&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;58949&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58953&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58955&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58958&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58960&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58968&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58974&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58981&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58984&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58988&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58991&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58994&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58997&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;58998&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59017&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59019&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59038&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59046&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59052&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59053&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59063&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59079&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59093&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59103&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59123&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59125&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59138&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59153&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59159&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59161&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59168&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59172&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59174&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59175&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59180&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59188&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59189&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59198&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59200&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59203&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59211&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59213&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59214&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59231&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59232&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59234&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59239&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59241&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59242&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59255&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59256&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59259&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59261&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59262&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59272&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59273&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59277&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59280&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59281&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59287&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59288&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59297&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59301&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59307&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59308&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59312&quot;' />
                  <groupfilter from='&quot;59316&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;59318&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59322&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59327&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59334&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59343&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59346&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59355&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59361&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59362&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59370&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59377&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59380&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59389&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59399&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59408&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59412&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59413&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59417&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59433&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59434&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59437&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59440&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59442&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59443&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59451&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59454&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59468&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59469&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59477&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59481&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59485&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59488&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59492&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59502&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59504&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59516&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59519&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59520&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59524&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59526&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59531&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59532&quot;' />
                  <groupfilter from='&quot;59534&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;59536&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59553&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59556&quot;' />
                  <groupfilter from='&quot;59561&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;59563&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59573&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59581&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59582&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59587&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59598&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59600&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59601&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59608&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59610&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59614&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59616&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59628&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59631&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59632&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59635&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59640&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59643&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59654&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59656&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59659&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59662&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59663&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59665&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59667&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59670&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59672&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59673&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59689&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59706&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59709&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59712&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59726&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59727&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59730&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59747&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59752&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59754&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59756&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59762&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59765&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59774&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59779&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59786&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59788&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59793&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59800&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59803&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59813&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59815&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59817&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59829&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59846&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59855&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59860&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59884&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59888&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59902&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59907&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59911&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59920&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59935&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59936&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59947&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59949&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59968&quot;' />
                  <groupfilter from='&quot;59976&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;59978&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59985&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59986&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;59993&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60002&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60020&quot;' />
                  <groupfilter from='&quot;60033&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;60035&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60040&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60045&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60053&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60055&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60061&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60062&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60064&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60065&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60073&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60080&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60083&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60103&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60106&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60113&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60121&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60125&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60127&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60137&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60138&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60144&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60163&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60168&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60178&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60181&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60184&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60186&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60189&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60213&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60224&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60225&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60231&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60235&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60238&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60240&quot;' />
                  <groupfilter from='&quot;60255&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;60258&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;60268&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64330&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64460&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64527&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64563&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64566&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64568&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64625&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64703&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64855&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64864&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64883&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64899&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64937&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64940&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;64965&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65000&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65034&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65050&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65073&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65132&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65278&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65286&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65423&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65491&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65546&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65549&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65619&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65683&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65717&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65735&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65820&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65840&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65872&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;65997&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;66027&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;66057&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;66095&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;66122&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;66285&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;66370&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;66666&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;66724&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;66876&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;66881&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;67051&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;67063&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;67228&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;67330&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;67349&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;67360&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;67412&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;67424&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;67816&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;67894&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;67948&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68023&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68080&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68123&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68134&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68135&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68155&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68162&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68313&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68365&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68449&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68547&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68679&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68744&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68761&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68851&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68866&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68928&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68938&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68946&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;68987&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;69301&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;69394&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;69435&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;69478&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;69523&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;69525&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;69574&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;69839&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;69880&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;69895&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;70048&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;70265&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;70322&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;70462&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;70827&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;71145&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;71185&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;71315&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;71363&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;71397&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;71967&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;72008&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;72017&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;72210&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;72295&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;72447&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;72470&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;72510&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;72558&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;72733&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;72877&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;73144&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;73167&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;73176&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;73185&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;73266&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;73400&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;73615&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;73711&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;73866&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;73891&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;73911&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;74022&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;74056&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;74063&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;74229&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;74233&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;74243&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;74381&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;74392&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;74469&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;74603&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;74730&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;74806&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;74823&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;74933&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75077&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75200&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75287&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75288&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75314&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75331&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75347&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75395&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75411&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75418&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75423&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75430&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75624&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75678&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75727&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75766&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75787&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;75935&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;76033&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;76095&quot;' />
                  <groupfilter from='&quot;76117&quot;' function='range' level='[none:Calculation_2160328153208285:nk]' to='&quot;76119&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;76183&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;76335&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;76623&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;76824&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;76943&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;76950&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;76969&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;77107&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;77113&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;77138&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;77416&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;77485&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;77633&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;77664&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;77755&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;77769&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;77921&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;78039&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;78186&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;78226&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;78231&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;78425&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;78454&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;78528&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;78589&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;78653&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;78841&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;78845&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;78923&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;78957&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;79062&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;79129&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;79268&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;79569&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;79674&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;79817&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;79934&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;80049&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;80130&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;80220&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;80245&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;80366&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;80426&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;80525&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;80594&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;80751&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;80983&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;81027&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;81258&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;81362&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;81442&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;81473&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;81554&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;81617&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;81833&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;81861&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;81977&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;81998&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;82038&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;82091&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;82224&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;82239&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;82248&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;82412&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;82428&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;82555&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;82704&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;82790&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;82803&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;82833&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;82887&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;82960&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;83072&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;83208&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;83257&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;83392&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;83408&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;83414&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;83473&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;83653&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;83855&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;83964&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;84127&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;84149&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;84256&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;84280&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;84339&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;84384&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;84612&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;84923&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;85077&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;85136&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;85299&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;85412&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;85620&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;85647&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;85811&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;85821&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;85935&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;86037&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;86357&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;86578&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;86604&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;86714&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;86730&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;86934&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;87169&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;87235&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;87338&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;87347&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;87548&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;87559&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;87636&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;87661&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;87695&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;87811&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;87839&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;88126&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;88189&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;88230&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;88392&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;88525&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;88584&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;88594&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;88718&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;88763&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;88867&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;89126&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;89173&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;89201&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;89449&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;89455&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;89557&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;89741&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;89848&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;89851&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;89873&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;89943&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;89965&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;90052&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;90129&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;90213&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;90264&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;90289&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;90315&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;90532&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;90603&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;90655&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;90686&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;90748&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;90801&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;90901&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;90922&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;91080&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;91097&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;91211&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;91216&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;91308&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;91434&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;91494&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;91827&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;91888&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;91977&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92101&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92137&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92232&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92283&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92383&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92419&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92450&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92574&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92601&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92628&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92710&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92806&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92817&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92862&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;92931&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;93279&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;93407&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;93479&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;93635&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;93772&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;93970&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;94024&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;94301&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;94317&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;94369&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;94370&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;94442&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;94458&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;94483&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;94636&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;94657&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;94930&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;94985&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;94999&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;95043&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;95065&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;95150&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;95192&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;95200&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;95568&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;95603&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;95668&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;95692&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;95726&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;95869&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;95985&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;96181&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;96362&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;96385&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;96447&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;96467&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;96531&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;96565&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;96734&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;96864&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;96872&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;96901&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;96920&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;96944&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;97079&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;97171&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;97202&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;97314&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;97322&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;97347&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;97390&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;97563&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;97570&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;97713&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;97822&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;97891&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;97968&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;97993&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;98031&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;98329&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;98509&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;98519&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;98528&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;98557&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;98752&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;98761&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;98789&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;98932&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;98959&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;98962&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;98964&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99111&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99202&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99262&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99270&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99272&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99334&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99336&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99461&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99543&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99586&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99616&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99717&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99733&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99762&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99796&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99865&quot;' />
                  <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;99917&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' direction='ASC' using='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_9940401113855898:nk]' member='&quot;SHOW&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[Set 1]</column>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1500.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='25000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-AirTightness &amp; GOtag:Opt-MainWall (Combined)]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem (copy):nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-DHWSystem (copy) (group)]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + ([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk] + [csv.41709.530460324073].[sum:Calculation_1130312101746663:qk])))</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='CompareID'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='SHOW-ERS-Filter' datatype='string' name='[Calculation_4250401113310063]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4480331150059234] = &quot;ERS&quot;+str([Parameters].[Parameter 8]) ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Show Fuel' datatype='string' name='[Calculation_9940401113855898]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = [Parameters].[Focus on ERS (copy)] ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4250401113310063]' derivation='None' name='[none:Calculation_4250401113310063:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9940401113855898]' derivation='None' name='[none:Calculation_9940401113855898:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]'>
            <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;355&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_4250401113310063:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_9940401113855898:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1500.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='25000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[min:Calculation_1760312105551885:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Concerve kWH: PV'>
      <layout-options>
        <title>
          <formatted-text>
            <run>How much electricity can we save?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Electricity: total benefit to utility' datatype='real' name='[Calculation_8140403110609232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Breakeven' datatype='string' name='[Calculation_9470403125230887]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='//if ( [Annual savings, 40% markup ] &gt; 0 ) then &quot;40%+&quot;&#13;&#10;if ( [Annual savings, 20% markup (copy) (copy)] &gt; 0 ) then &quot;Builder markup is 30%+&quot;&#13;&#10;elseif ( [Annual savings, 10% markup (copy)] &gt; 0 ) then &quot;Builder markup is 20%+&quot;&#13;&#10;elseif ( [Cost of ownership --- difference from base case ($/year), no markup (copy)] &gt; 0 ) then &quot;Builder markup is 10%+&quot;&#13;&#10;elseif ( [Calculation_2640311145556471] &gt; 0 ) then &quot;Builder markup is 0%+&quot;&#13;&#10;else &quot;Homeowner won&apos;t break even&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup) (bin)' datatype='integer' name='[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Calculation_1760312105551885]' peg='0' size='6000' />
              <aliases>
                <alias key='0' value='Less than $6,000' />
                <alias key='1' value='$6,000-$12,000' />
                <alias key='2' value='$12,000-$18,000' />
                <alias key='3' value='$18,000-$24,000' />
                <alias key='4' value='$24,000-$30,000' />
                <alias key='5' value='$30,000-$36,000' />
                <alias key='6' value='$30,000-$35,000' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9470403125230887]' derivation='Count' name='[cnt:Calculation_9470403125230887:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8140403110609232]' derivation='Min' name='[min:Calculation_8140403110609232:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9470403125230887]' derivation='None' name='[none:Calculation_9470403125230887:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' filter-group='3'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' direction='DESC' using='[csv.41709.530460324073].[cnt:Calculation_9470403125230887:qk]'>
          </sort>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;40\%+&quot;</bucket>
              <bucket>&quot;30\%+&quot;</bucket>
              <bucket>&quot;20\%+&quot;</bucket>
              <bucket>&quot;10\%+&quot;</bucket>
              <bucket>&quot;0\%+&quot;</bucket>
              <bucket>&quot;No breakeven&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Builder markup is 30\%+&quot;</bucket>
              <bucket>&quot;Builder markup is 20\%+&quot;</bucket>
              <bucket>&quot;Builder markup is 10\%+&quot;</bucket>
              <bucket>&quot;Builder markup is 0\%+&quot;</bucket>
              <bucket>&quot;Homeowner won&apos;t break even&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter from='&quot;2-plate&quot;' function='range' level='[none:GOtag:Opt-DWHRandSDHW:nk]' to='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NoPV&quot;</bucket>
              <bucket>&quot;SizedPV|5kW&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='Electrical savings per home, (kWh/year)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' field-type='quantitative' max='23000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' value='152' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' value='n#,##0&quot; kWh&quot;;-#,##0&quot; kWh&quot;' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='font-weight' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='bold' />
            <format attr='text-decoration' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='underline' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' max='292.33474069876388' min='-1375.6775233655071' num-steps='8' palette='tableau-red-black' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='14' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='1' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' value='Builder costs (no markup)'>
              <formatted-text>
                <run>Builder costs (no markup)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' />
              <text column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <lod column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[min:Calculation_8140403110609232:qk])</rows>
        <cols>([csv.41709.530460324073].[EstimatedERS (bin)] / [csv.41709.530460324073].[EstimatedERS (bin)])</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
    </worksheet>
    <worksheet name='ConcerveKWH-Costs'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Electricity: total benefit to utility' datatype='real' name='[Calculation_8140403110609232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Breakeven' datatype='string' name='[Calculation_9470403125230887]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='//if ( [Annual savings, 40% markup ] &gt; 0 ) then &quot;40%+&quot;&#13;&#10;if ( [Annual savings, 20% markup (copy) (copy)] &gt; 0 ) then &quot;Builder markup is 30%+&quot;&#13;&#10;elseif ( [Annual savings, 10% markup (copy)] &gt; 0 ) then &quot;Builder markup is 20%+&quot;&#13;&#10;elseif ( [Cost of ownership --- difference from base case ($/year), no markup (copy)] &gt; 0 ) then &quot;Builder markup is 10%+&quot;&#13;&#10;elseif ( [Calculation_2640311145556471] &gt; 0 ) then &quot;Builder markup is 0%+&quot;&#13;&#10;else &quot;Homeowner won&apos;t break even&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup) (bin)' datatype='integer' name='[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Calculation_1760312105551885]' peg='0' size='6000' />
              <aliases>
                <alias key='0' value='Less than $6,000' />
                <alias key='1' value='$6,000-$12,000' />
                <alias key='2' value='$12,000-$18,000' />
                <alias key='3' value='$18,000-$24,000' />
                <alias key='4' value='$24,000-$30,000' />
                <alias key='5' value='$30,000-$36,000' />
                <alias key='6' value='$30,000-$35,000' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9470403125230887]' derivation='Count' name='[cnt:Calculation_9470403125230887:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8140403110609232]' derivation='Min' name='[min:Calculation_8140403110609232:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9470403125230887]' derivation='None' name='[none:Calculation_9470403125230887:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' filter-group='3'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' direction='DESC' using='[csv.41709.530460324073].[cnt:Calculation_9470403125230887:qk]'>
          </sort>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;40\%+&quot;</bucket>
              <bucket>&quot;30\%+&quot;</bucket>
              <bucket>&quot;20\%+&quot;</bucket>
              <bucket>&quot;10\%+&quot;</bucket>
              <bucket>&quot;0\%+&quot;</bucket>
              <bucket>&quot;No breakeven&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter from='&quot;2-plate&quot;' function='range' level='[none:GOtag:Opt-DWHRandSDHW:nk]' to='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NoPV&quot;</bucket>
              <bucket>&quot;SizedPV|5kW&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='Electrical savings per home, (kWh/year)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' field-type='quantitative' max='23000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' value='n#,##0&quot; kWh&quot;;-#,##0&quot; kWh&quot;' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='font-weight' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='bold' />
            <format attr='text-decoration' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='underline' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' max='292.33474069876388' min='-1375.6775233655071' num-steps='8' palette='tableau-red-black' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='14' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='1' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' />
              <text column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <lod column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[min:Calculation_8140403110609232:qk])</rows>
        <cols>([csv.41709.530460324073].[EstimatedERS (bin)] / [csv.41709.530460324073].[EstimatedERS (bin)])</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
    </worksheet>
    <worksheet name='Conservation-savings'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Conservation: Benefits to homeowner&#10;(</run>
            <run fontcolor='#b40f1e'>&lt;[Parameters].[Parameter 6]&gt;</run>
            <run> years from today) </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Annual savings to homewoner: Base-case-reference' datatype='real' name='[Calculation_5440312091758636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_4130311125228917] = &quot;BASE&quot; then [Calculation_2640311145556471]&#13;&#10;else -100000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Filter-gas-options' datatype='string' name='[Calculation_6670331150314929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4130311125228917]+&quot;:&quot;+[Calculation_4270328153916499]+&quot;:&quot;+[Calculation_4480331150059234]+&quot;:&quot;+[GOtag:DHWLoadScale]+&quot;:&quot;+[GOtag:ElecLoadScale]+&quot;:&quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5440312091758636]' derivation='Max' name='[max:Calculation_5440312091758636:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6670331150314929]' derivation='None' name='[none:Calculation_6670331150314929:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter from='76' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_6670331150314929:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;BASE:Electricity:ERS76:No-Reduction:NGERSNoReduction19:ElectricStorage&quot;' function='range' level='[none:Calculation_6670331150314929:nk]' to='&quot;UPGRADE:Natural gas:ERS75:No-Reduction:NGERSNoReduction19:BaseDHW&quot;' />
              <groupfilter function='member' level='[none:Calculation_6670331150314929:nk]' member='&quot;UPGRADE:Natural gas:ERS76:No-Reduction:NGERSNoReduction19:BaseDHW&quot;' />
              <groupfilter function='member' level='[none:Calculation_6670331150314929:nk]' member='&quot;UPGRADE:Natural gas:ERS76:No-Reduction:NGERSNoReduction19:ElectricStorage&quot;' />
              <groupfilter from='&quot;UPGRADE:Natural gas:ERS77:Low-Flow:NGERSNoReduction19:BaseDHW&quot;' function='range' level='[none:Calculation_6670331150314929:nk]' to='&quot;UPGRADE:Natural gas:ERS92:Low-Flow:NGERSNoReduction19:GasInstantaneous&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter from='&quot;ElectricHP&quot;' function='range' level='[none:GOtag:Opt-DHWSystem:nk]' to='&quot;GasInstantaneous&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_6670331150314929:nk]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' field-type='quantitative' fold='true' max='500.0' min='-3000.0' range-type='fixed' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='Annual savngs (including borrowing costs, $/yr)' />
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='71' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='129' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' value='129' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1200.0' min='-800.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='35' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0;-&quot; $&quot;#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0&quot; &quot;;-&quot; $&quot;#,##0&quot; &quot;' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
            <format attr='font-weight' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='bold' />
            <format attr='text-decoration' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='underline' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' max='100.0' min='-100.0' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fb595e</color>
                <color>#f17478</color>
                <color>#e78d90</color>
                <color>#dda4a6</color>
                <color>#d3b8b9</color>
                <color>#cacaca</color>
                <color>#a1a1a1</color>
                <color>#797979</color>
                <color>#505050</color>
                <color>#282828</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='vertical-align' id='refline0' value='bottom' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='annotation'>
            <format attr='body-type' id='annotation_0' value='edge' />
            <format attr='border-style' id='annotation_0' value='solid' />
            <format attr='border-color' id='annotation_0' value='#1b1b1b' />
            <format attr='border-width' id='annotation_0' value='1' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
            <format attr='border-style' id='annotation_3' value='none' />
            <format attr='border-style' id='annotation_4' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' formula='constant' id='refline0' label='' label-type='custom' scope='per-table' value='0.0' value-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontcolor='#000000'>&lt;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&gt;</run>
                <run fontalignment='0' fontcolor='#d7d7d7'> /yr.</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
                <format attr='text-align' value='center' />
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='font-size' value='14' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
                <format attr='mark-color' value='#26794a' />
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * ([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[max:Calculation_5440312091758636:qk]))</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <mark-labels>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>89</value>
                <value>48.822787142155448</value>
                <value>-100000.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='9' y='42' />
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>86</value>
                <value>-346.88440238884618</value>
                <value>-100000.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>86</value>
                <value>-346.88440238884618</value>
                <value>-100000.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>86</value>
                <value>232.96097573359634</value>
                <value>-100000.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='10' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>86</value>
                <value>232.96097573359634</value>
                <value>-100000.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='3' y='51' />
          </mark-label>
          <mark-label id='11' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>89</value>
                <value>-443.25345491392761</value>
                <value>-100000.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='12' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>83</value>
                <value>109.67045620434908</value>
                <value>-100000.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='3' y='50' />
          </mark-label>
          <mark-label id='13' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>83</value>
                <value>311.33684161476498</value>
                <value>-100000.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.5' y='52' />
          </mark-label>
          <mark-label id='14' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>83</value>
                <value>109.67045620434908</value>
                <value>-100000.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='15' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>83</value>
                <value>311.33684161476498</value>
                <value>-100000.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='241'>
            <formatted-text>
              <run fontcolor='#787878'>Base case built to code&#10;(approximately ERS 76)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>174.89652876814273</value>
                    <value>0.023144158308923579</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='133' y='201' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='209'>
            <formatted-text>
              <run fontcolor='#787878'>Base case: ERS 76</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>438.57197745607004</value>
                    <value>0.027796040643352171</value>
                    <value>-145.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='215' y='124' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='239'>
            <formatted-text>
              <run fontcolor='#787878' underline='true'>Base Case: </run>
              <run fontcolor='#787878'>&#10;Code-built home with &#10;natural gas heating</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>4.6447872056601174</value>
                    <value>0.023040850006054825</value>
                    <value>&quot;Natural gas&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='167' y='62' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='222'>
            <formatted-text>
              <run fontcolor='#787878' underline='true'>Base Case: </run>
              <run fontcolor='#787878'>&#10;Code-built home with &#10;electric heating</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>0.0013217263322076178</value>
                    <value>0.0013217263322076178</value>
                    <value>&quot;Electricity&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='160' y='74' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='272'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878' underline='true'>Base case: </run>
              <run fontalignment='0' fontcolor='#787878'>&#10;Code-built home with &#10;electric heating</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>77</value>
                    <value>0.0010889779196077143</value>
                    <value>0.0010889779196077143</value>
                    <value>&quot;Electricity&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='184' y='74' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='ConserveKWHbySavings'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Electricity: total benefit to utility' datatype='real' name='[Calculation_8140403110609232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Breakeven' datatype='string' name='[Calculation_9470403125230887]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='//if ( [Annual savings, 40% markup ] &gt; 0 ) then &quot;40%+&quot;&#13;&#10;if ( [Annual savings, 20% markup (copy) (copy)] &gt; 0 ) then &quot;Builder markup is 30%+&quot;&#13;&#10;elseif ( [Annual savings, 10% markup (copy)] &gt; 0 ) then &quot;Builder markup is 20%+&quot;&#13;&#10;elseif ( [Cost of ownership --- difference from base case ($/year), no markup (copy)] &gt; 0 ) then &quot;Builder markup is 10%+&quot;&#13;&#10;elseif ( [Calculation_2640311145556471] &gt; 0 ) then &quot;Builder markup is 0%+&quot;&#13;&#10;else &quot;Homeowner won&apos;t break even&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9470403125230887]' derivation='Count' name='[cnt:Calculation_9470403125230887:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8140403110609232]' derivation='Min' name='[min:Calculation_8140403110609232:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9470403125230887]' derivation='None' name='[none:Calculation_9470403125230887:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' filter-group='3'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' direction='DESC' using='[csv.41709.530460324073].[cnt:Calculation_9470403125230887:qk]'>
          </sort>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;40\%+&quot;</bucket>
              <bucket>&quot;30\%+&quot;</bucket>
              <bucket>&quot;20\%+&quot;</bucket>
              <bucket>&quot;10\%+&quot;</bucket>
              <bucket>&quot;0\%+&quot;</bucket>
              <bucket>&quot;No breakeven&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter from='&quot;2-plate&quot;' function='range' level='[none:GOtag:Opt-DWHRandSDHW:nk]' to='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NoPV&quot;</bucket>
              <bucket>&quot;SizedPV|5kW&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='Electrical savings per home, (kWh/year)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' field-type='quantitative' max='23000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' value='n#,##0&quot; kWh&quot;;-#,##0&quot; kWh&quot;' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='font-weight' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='bold' />
            <format attr='text-decoration' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='underline' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' max='292.33474069876388' min='-1375.6775233655071' num-steps='8' palette='tableau-red-black' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='14' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='1' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' value='Breakeven'>
              <formatted-text>
                <run>Breakeven</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <lod column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[min:Calculation_8140403110609232:qk])</rows>
        <cols>([csv.41709.530460324073].[EstimatedERS (bin)] / [csv.41709.530460324073].[EstimatedERS (bin)])</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
    </worksheet>
    <worksheet name='CostOfChoosingNaturalGas'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Natural Gas: Costs to builder during construction</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[diff:min:Calculation_1760312105551885:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[csv.41709.530460324073].[Calculation_4270328153916499]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='89' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;SizedPV|5kW&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' scope='rows' value='true' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' scope='rows' value='Cost to switch to natural gas ($)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='96' />
            <format attr='width' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' value='96' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='Upgrade cost ($)' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' field-type='quantitative' max='24000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='28000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' value='false' />
            <format attr='break-on-special' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' value='false' />
            <format attr='show-null-value-warning' field='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-orientation' id='refline0' value='-90' />
            <format attr='text-align' id='refline0' value='center' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='text-format' id='refline0' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='line-pattern' id='refline0' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' formula='max' id='refline0' label=' &lt;Value&gt;' label-type='custom' scope='per-cell' value-column='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='right' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Dots-'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='integer' name='[batch]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[batch]' derivation='None' name='[none:batch:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:batch:ok]'>
            <groupfilter function='level-members' level='[none:batch:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:batch:ok]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:batch:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Elec conserv'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Electricity: total benefit to utility - range' datatype='real' name='[Calculation_2710403111306845]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([Calculation_8140403110609232])-min([Calculation_8140403110609232])' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Electricity: total benefit to utility' datatype='real' name='[Calculation_8140403110609232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8140403110609232]' derivation='Min' name='[min:Calculation_8140403110609232:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2710403111306845]' derivation='User' name='[usr:Calculation_2710403111306845:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' filter-group='3'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter from='&quot;2-plate&quot;' function='range' level='[none:GOtag:Opt-DWHRandSDHW:nk]' to='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NoPV&quot;</bucket>
              <bucket>&quot;SizedPV|5kW&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <size column='[csv.41709.530460324073].[usr:Calculation_2710403111306845:qk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' formula='average' id='refline0' label-type='none' scope='per-cell' value-column='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[min:Calculation_8140403110609232:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Electric base costs'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Total adjusted bill ($/year)' datatype='real' name='[Calculation_7370312102644552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1130312101746663]+[UTILITIES: Adjusted Electricity Bill  (copy)]' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7370312102644552]' derivation='Sum' name='[sum:Calculation_7370312102644552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;No-Reduction&quot;</bucket>
              <bucket>&quot;Low-Flow&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]'>
            <groupfilter function='member' level='[none:GOtag:Ext-DryWall:nk]' member='&quot;OneSheet&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-AirTightness:nk]' member='&quot;Typical23&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-BasementSlabInsulation:nk]' member='&quot;NoInsulation&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-BasementWallInsulation:nk]' member='&quot;MB-IntBatt-R20&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-CasementWindows:nk]' member='&quot;DoubleLowESoftCoatArgFill&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-Ceilings:nk]' member='&quot;CeilR50&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-DHWSystem:nk]' member='&quot;ElectricStorage&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-DWHRandSDHW:nk]' member='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-FloorSurface:nk]' member='&quot;wood&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-HRVSpec:nk]' member='&quot;BaseHRV_SRE70&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;elec-baseboard&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;BaseR20&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
              <text column='[csv.41709.530460324073].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[sum:Calculation_7370312102644552:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_7370312102644552:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[sum:Number of Records:qk] + ([csv.41709.530460324073].[sum:Calculation_7370312102644552:qk] + ([csv.41709.530460324073].[sum:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[sum:Calculation_2640311145556471:qk])))</rows>
        <cols>([csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk] / ([csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk] / ([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / [csv.41709.530460324073].[none:Calculation_2160328153208285:nk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Electric-break-even'>
      <layout-options>
        <title>
          <formatted-text>
            <run>How much can a homeowner save by switching to gas?&#10;</run>
            <run italic='true'> (</run>
            <run fontcolor='#b40f1e' italic='true'>&lt;[Parameters].[Parameter 6]&gt;</run>
            <run italic='true'> years from today) </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[diff:max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[csv.41709.530460324073].[Calculation_4270328153916499]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='89' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' />
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
            <column>[csv.41709.530460324073].[Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='75' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' scope='rows' value='Total savings for switching to gas (including borrowing costs, $/yr)' />
            <format attr='width' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' value='132' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' field-type='quantitative' max='2000.0' min='-250.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='48' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0&quot; &quot;;-&quot; $&quot;#,##0&quot; &quot;' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='text-format' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0&quot; &quot;;-&quot; $&quot;#,##0&quot; &quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' max='1000.0' min='-100.0' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fb595e</color>
                <color>#f17478</color>
                <color>#e78d90</color>
                <color>#dda4a6</color>
                <color>#d3b8b9</color>
                <color>#cacaca</color>
                <color>#a1a1a1</color>
                <color>#797979</color>
                <color>#505050</color>
                <color>#282828</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
            <format attr='vertical-align' id='refline0' value='bottom' />
            <format attr='fill-above' id='refline1' value='#f7f7f7' />
            <format attr='fill-below' id='refline1' value='#faf2f2' />
            <format attr='stroke-color' id='refline1' value='#b40f1e' />
            <format attr='line-pattern' id='refline1' value='dotted' />
            <format attr='text-align' id='refline0' value='left' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='8'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' formula='constant' id='refline0' label='Homeowner breaks even' label-type='custom' scope='per-table' value='0.0' value-column='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='datalabel'>
                <format attr='font-size' value='14' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='260'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Savings from conservation &#10;+ switching to gas heat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                      <field>[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>82</value>
                    <value>708.68959656525408</value>
                    <value>&quot;Natural gas&quot;</value>
                    <value>401.8891739664902</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-166' y='-58' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='237'>
            <formatted-text>
              <run fontcolor='#787878'>Savings from &#10;conservation alone</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                      <field>[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>82</value>
                    <value>306.80042259876387</value>
                    <value>&quot;Electricity&quot;</value>
                    <value>%null%</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-178' y='-31' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='222'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>Savings possible by &#10;switching to gas heat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                      <field>[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>734.98525015208543</value>
                    <value>&quot;Natural gas&quot;</value>
                    <value>734.98416117416582</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='214' y='-53' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Filter-summary'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='SHOW-ERS-Filter' datatype='string' name='[Calculation_4250401113310063]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4480331150059234] = &quot;ERS&quot;+str([Parameters].[Parameter 8]) ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4250401113310063]' derivation='None' name='[none:Calculation_4250401113310063:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]'>
            <groupfilter function='member' level='[none:Calculation_4250401113310063:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_8470312121221798:nk]' />
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot; &quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ERS 86, elec, cheapest &quot;</bucket>
              <bucket>&quot;ERS 86, elec, durable &quot;</bucket>
              <bucket>&quot;ERS 86, gas, cheapest &quot;</bucket>
              <bucket>&quot;ERS 86, gas, affordable &quot;</bucket>
              <bucket>&quot;ERS 86, gas, durable &quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[EstimatedERS (bin)] / ([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / ([csv.41709.530460324073].[none:Calculation_8470312121221798:nk] / [csv.41709.530460324073].[none:Calculation_2160328153208285:nk])))</rows>
        <cols>([csv.41709.530460324073].[sum:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[sum:Calculation_2640311145556471:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Initial-Plot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Optimization Results</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Energy savings (%)' datatype='real' name='[Calculation_3710312133127667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(106.65-[EnergyTotal])/106.65' scope-isolation='false' />
            </column>
            <column caption='Energy savings for base (%)' datatype='real' name='[Calculation_7130313100558856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -0.5&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Colour-params' datatype='string' name='[Calculation_9520430094845731]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Parameters].[Focus on ERS (copy 2)] = &quot;Breakeven&quot;) then [Calculation_9470403125230887]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Better off?&quot; ) then [Calculation_6170407152248136]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Best-for-homeowner&quot; ) then [Calculation_8750403103901360]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Best+fuel&quot; ) then [Calculation_3690403141636492]&#13;&#10;//elseif ( [Colour by:] = &quot;EstimatedERS -bin&quot; ) then &#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;HVAC system&quot; ) then [GOtag:Opt-HVACSystem]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;DHW system&quot; ) then [GOtag:Opt-DHWSystem]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;DHWR+SDHW&quot; ) then [GOtag:Opt-DWHRandSDHW]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Main Wall &quot; ) then [GOtag:Opt-MainWall]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;PV&quot; ) then [GOtag:Opt-StandoffPV]&#13;&#10;//elseif ( [Colour by:] = &quot;Conserved kWH&quot; ) then [Electricity: total benefit to utility]&#13;&#10;else [Calculation_4130311125228917]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[GOtag:Opt-DHWSystem (copy)]'>
                <bin value='&quot;BaseDHW&quot;'>
                  <value>&quot;BaseDHW&quot;</value>
                  <value>&quot;ElectricStorage&quot;</value>
                  <value>&quot;GasInstantaneous&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[GOtag:Opt-DHWSystem]' />
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExposedFloor]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtBasementWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtLeftSideWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FrontWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-OverhangWidth]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='integer' name='[ID]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9520430094845731]' derivation='None' name='[none:Calculation_9520430094845731:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem (copy)]' derivation='None' name='[none:GOtag:Opt-DHWSystem (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExposedFloor]' derivation='None' name='[none:GOtag:Opt-ExposedFloor:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtBasementWindow]' derivation='None' name='[none:GOtag:Opt-ExtBasementWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtLeftSideWindow]' derivation='None' name='[none:GOtag:Opt-ExtLeftSideWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FrontWindows]' derivation='None' name='[none:GOtag:Opt-FrontWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-OverhangWidth]' derivation='None' name='[none:GOtag:Opt-OverhangWidth:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[ID]' derivation='None' name='[none:ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3710312133127667]' derivation='Sum' name='[sum:Calculation_3710312133127667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7130313100558856]' derivation='Sum' name='[sum:Calculation_7130313100558856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8430311144549035]' derivation='Sum' name='[sum:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' />
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_9520430094845731:nk]' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Good\\Electricity&quot;</bucket>
              <bucket>&quot;Good\\Natural gas&quot;</bucket>
              <bucket>&quot;Bad-point\\Natural gas&quot;</bucket>
              <bucket>&quot;Bad-point\\Electricity&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Good&quot;</bucket>
              <bucket>&quot;Bad-point&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;basefurnace&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
              <bucket>&quot;elec-baseboard&quot;</bucket>
              <bucket>&quot;GSHP&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[Set 1]</column>
            <column>[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' field-type='quantitative' max='0.88' min='-0.050000000000000003' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' field-type='quantitative' major-origin='0.0' major-spacing='20000.0' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' value='p0%' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]' value='p0%' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='16' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='144' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-AirTightness &amp; GOtag:Opt-MainWall (Combined)]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem (copy):nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-DHWSystem (copy) (group)]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-StandoffPV &amp; ERS-int (Combined)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
                <format attr='mark-transparency' value='254' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#70e95f' />
                <format attr='shape' value=':filled/asterisk' />
                <format attr='size' value='3.4806630611419678' />
                <format attr='mark-transparency' value='144' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[sum:Calculation_3710312133127667:qk] + [csv.41709.530460324073].[sum:Calculation_7130313100558856:qk])</rows>
        <cols>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='224'>
            <formatted-text>
              <run fontcolor='#787878'>Base case (ERS 76)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.0</value>
                    <value>0.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='386' y='-44' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Most expensive &#10;option: ERS 96</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                      <field>[csv.41709.530460324073].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>71111.410000000003</value>
                    <value>0.82466159399906247</value>
                    <value>96.637078768207715</value>
                    <value>&quot;[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-252' y='-8' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='243'>
            <formatted-text>
              <run fontcolor='#787878'>Base case: ERS 76</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.0</value>
                    <value>1.2770745428976159e-05</value>
                    <value>0.0</value>
                    <value>76.50698999883673</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='295' y='-41' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='MostAffordable'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Escillation Rate: Gas' datatype='real' default-format='p0.00%' name='[Escillation Rate: Electricity (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.02'>
              <calculation class='tableau' formula='0.02' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Municipal Taxes' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='0.0069646999999999999'>
              <calculation class='tableau' formula='0.0069646999999999999' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Escillation Rate: Electricity' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.0395'>
              <calculation class='tableau' formula='0.0395' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Amoritization period ' datatype='real' default-format='n#,##0&quot; yrs&quot;;-#,##0&quot; yrs&quot;' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25.0'>
              <calculation class='tableau' formula='25.0' />
              <range min='1.0' />
            </column>
            <column caption='Base Case heating fuel type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Fuel neutral&quot;'>
              <calculation class='tableau' formula='&quot;Fuel neutral&quot;' />
              <members>
                <member value='&quot;Natural gas&quot;' />
                <member value='&quot;Electricity&quot;' />
                <member value='&quot;Fuel neutral&quot;' />
              </members>
            </column>
            <column caption='Utilities: Assessment year' datatype='real' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
              <members>
                <member value='0.0' />
                <member value='5.0' />
                <member value='10.0' />
                <member value='15.0' />
                <member value='20.0' />
                <member value='25.0' />
              </members>
            </column>
            <column caption='PV costs ($/W installed)' datatype='real' default-format='c&quot;$&quot;#,##0.000;-&quot;$&quot;#,##0.000' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='3.2000000000000002'>
              <calculation class='tableau' formula='3.2000000000000002' />
              <range max='10.0' min='0.0' />
            </column>
            <column caption='Interest rate (%)' datatype='real' default-format='p0.00%' name='[generation Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.035000000000000003'>
              <calculation class='tableau' formula='0.035000000000000003' />
              <range max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrade CostAdjuster by Fuel type ($)' datatype='integer' name='[Calculation_0000328154041002]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Parameters].[Parameter 2] = &quot;Natural gas&quot; OR &#13;&#10;     ( [Parameters].[Parameter 2] = &quot;Fuel neutral&quot; AND [Calculation_4270328153916499] = &quot;Natural gas&quot; ) ) then 0&#13;&#10;&#13;&#10;&#13;&#10;else 1600&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Cost of ownership --- difference from base case ($/year), no markup' datatype='real' name='[Calculation_0040311143954202]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]+[Calculation_7830311143752081]-([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted ElecFurn cost' datatype='integer' name='[Calculation_1010313135857628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-HVACSystem] = &quot;elec-baseboard&quot; ) then 4950 - 1600&#13;&#10;else 0 &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(6.85*12 +([FuelEleckWh]-[EnergyPVkWh])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Water conservation package ($)' datatype='integer' name='[Calculation_2900312105624061]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([GOtag:DHWLoadScale]=&quot;Low-Flow&quot; ) then 80&#13;&#10;else 0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Cost of Borrowing ($)' datatype='real' name='[Calculation_3730311142712896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(( [Calculation_3950311142640640] * ( 1 + [Calculation_3950311142640640] ) ^ ([Parameters].[Parameter 1] * 12 ) )  &#13;&#10;/&#13;&#10;( (1 + [Calculation_3950311142640640]  ) ^ ( [Parameters].[Parameter 1] * 12 ) - 1 )&#13;&#10;* [Calculation_1760312105551885] ) &#13;&#10;* [Parameters].[Parameter 1] * 12' scope-isolation='false' />
            </column>
            <column caption='MonthlyInterestRate (%)' datatype='real' name='[Calculation_3950311142640640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[generation Parameter]/12' scope-isolation='false' />
            </column>
            <column caption='SHOW-ERS-Filter' datatype='string' name='[Calculation_4250401113310063]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4480331150059234] = &quot;ERS&quot;+str([Parameters].[Parameter 8]) ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Utilities: Adjusted Base case charges ($/year)' datatype='real' name='[Calculation_4380312104008812]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Parameters].[Parameter 2] = &quot;Natural gas&quot; OR &#13;&#10;     ( [Parameters].[Parameter 2] = &quot;Fuel neutral&quot; AND [Calculation_4270328153916499] = &quot;Natural gas&quot; )&#13;&#10;    ) then &#13;&#10;    905*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;    +&#13;&#10;    563.4*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;    2108.43*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Wall-insulation-type' datatype='string' name='[Calculation_4800326161225524]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot;    ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjust ACH cost ($)' datatype='real' name='[Calculation_5080312144736857]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4800326161225524] = &quot;OC&quot; ) then &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then 0&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -3049&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -3260&#13;&#10;    end&#13;&#10;else &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;    end&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Total adjusted bill ($/year)' datatype='real' name='[Calculation_7370312102644552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1130312101746663]+[UTILITIES: Adjusted Electricity Bill  (copy)]' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Annual cost of borrowing ($/year)' datatype='real' name='[Calculation_7830311143752081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3730311142712896]/[Parameters].[Parameter 1]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: PV cost adjustment ($)' datatype='real' name='[Calculation_8190312105315011]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PVSizekW]*([Parameters].[Parameter 7]*1000-4687)' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Electric conservation package ($)' datatype='integer' name='[Calculation_8710312105714395]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [GOtag:ElecLoadScale] = &quot;NGERSNoReduction19&quot; ) then 0 &#13;&#10;else 140&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Main Wall adjust cost (No air sealing credit) ' datatype='integer' name='[Calculation_8710326154745859]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [GOtag:Opt-MainWall] &#13;&#10;  when &quot;BaseR20&quot; then 0 &#13;&#10;  when &quot;DblStud-R37-Wall&quot; then   1350&#13;&#10;  when &quot;DblStud-R52-Wall&quot; then   1350&#13;&#10;  when &quot;Stud-R21-2x4&quot; then       0 &#13;&#10;  when &quot;Stud-R275-Wall&quot; then    619&#13;&#10;  when &quot;Stud-R305-Wall&quot; then    555&#13;&#10;  when &quot;Stud-R275MW-Wall&quot; then   505&#13;&#10;  when &quot;AdvFrm-R20-Wall&quot; then   110&#13;&#10;  else -9000000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Show Fuel' datatype='string' name='[Calculation_9940401113855898]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = [Parameters].[Focus on ERS (copy)] ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='real' name='[FuelEleckWh]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelNaturalGasM3]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[GOtag:Opt-DHWSystem (copy)]'>
                <bin value='&quot;BaseDHW&quot;'>
                  <value>&quot;BaseDHW&quot;</value>
                  <value>&quot;ElectricStorage&quot;</value>
                  <value>&quot;GasInstantaneous&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[GOtag:Opt-DHWSystem]' />
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExposedFloor]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtBasementWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtLeftSideWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FrontWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-OverhangWidth]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:RoofPitch]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[PVSizekW]' role='measure' type='quantitative'>
            </column>
            <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;  (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[UpgradeCostDoll]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4250401113310063]' derivation='None' name='[none:Calculation_4250401113310063:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9940401113855898]' derivation='None' name='[none:Calculation_9940401113855898:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem (copy)]' derivation='None' name='[none:GOtag:Opt-DHWSystem (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExposedFloor]' derivation='None' name='[none:GOtag:Opt-ExposedFloor:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtBasementWindow]' derivation='None' name='[none:GOtag:Opt-ExtBasementWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtLeftSideWindow]' derivation='None' name='[none:GOtag:Opt-ExtLeftSideWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FrontWindows]' derivation='None' name='[none:GOtag:Opt-FrontWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-OverhangWidth]' derivation='None' name='[none:GOtag:Opt-OverhangWidth:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:RoofPitch]' derivation='None' name='[none:GOtag:RoofPitch:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1130312101746663]' derivation='Sum' name='[sum:Calculation_1130312101746663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Sum' name='[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' context='true' />
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_2640311145556471])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Calculation_2160328153208285:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_4250401113310063:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_9940401113855898:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' context='true'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;SizedPV|5kW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[Set 1]</column>
            <column>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1500.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='25000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-AirTightness &amp; GOtag:Opt-MainWall (Combined)]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem (copy):nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-DHWSystem (copy) (group)]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + ([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk] + [csv.41709.530460324073].[sum:Calculation_1130312101746663:qk])))</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Number of records'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Show Fuel' datatype='string' name='[Calculation_9940401113855898]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = [Parameters].[Focus on ERS (copy)] ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9940401113855898]' derivation='None' name='[none:Calculation_9940401113855898:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_9940401113855898:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' context='true'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-BasementSlabInsulation:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='28' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / [csv.41709.530460324073].[EstimatedERS (bin)])</rows>
        <cols>[csv.41709.530460324073].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Pick-the-best-points'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Limit-by-Parameter' datatype='integer' name='[Calculation_4730403095905672]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='index()' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ERS+Fuel' datatype='string' name='[Calculation_9830403103027661]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4480331150059234]+&quot; = &quot;+ [Calculation_4270328153916499]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9830403103027661]' derivation='None' name='[none:Calculation_9830403103027661:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4730403095905672]' derivation='User' name='[usr:Calculation_4730403095905672:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' context='true'>
            <groupfilter from='80' function='range' level='[EstimatedERS (bin)]' to='95' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[csv.41709.530460324073].[ID-string &amp; ERS-int (Combined)]' direction='DESC' using='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' context='true' />
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' context='true'>
            <groupfilter function='level-members' level='[none:Calculation_4270328153916499:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[usr:Calculation_4730403095905672:ok:2]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_4730403095905672:ok:2]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
            <column>[csv.41709.530460324073].[Set 1]</column>
            <column>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[usr:Calculation_4730403095905672:ok:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_9830403103027661:nk] / ([csv.41709.530460324073].[usr:Calculation_4730403095905672:ok:2] / [csv.41709.530460324073].[ID-string &amp; ERS-int (Combined)]))</rows>
        <cols>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Savings from Choosing Gas'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Natural Gas: Savings to the homeowner every year&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Total adjusted bill ($/year)' datatype='real' name='[Calculation_7370312102644552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1130312101746663]+[UTILITIES: Adjusted Electricity Bill  (copy)]' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7370312102644552]' derivation='Min' name='[diff:min:Calculation_7370312102644552:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[csv.41709.530460324073].[Calculation_4270328153916499]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_7370312102644552]' derivation='Min' name='[min:Calculation_7370312102644552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='89' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' scope='rows' value='Savings from heating with Natural Gas ($/year)' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' field-type='quantitative' max='2000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_7370312102644552:qk]' scope='rows' value='Annual utility bills ($/year)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_7370312102644552:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_7370312102644552:qk]' scope='rows' value='true' />
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_7370312102644552:qk]' value='104' />
            <format attr='width' field='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' value='104' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' value='c&quot;$&quot;#,##0&quot;/yr&quot;;-&quot;$&quot;#,##0&quot;/yr&quot;' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_7370312102644552:qk]' value='c&quot;$&quot;#,##0&quot;/yr&quot;;-&quot;$&quot;#,##0&quot;/yr&quot;' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' max='899.80025082902421' min='-30.0' palette='tableau-red-green' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='text-orientation' id='refline0' value='-90' />
            <format attr='text-align' id='refline0' value='center' />
            <format attr='text-format' id='refline0' value='c&quot;$&quot;#,##0&quot;/year&quot;;-&quot;$&quot;#,##0&quot;/year&quot;' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' formula='max' id='refline0' label-type='value' scope='per-cell' value-column='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[csv.41709.530460324073].[min:Calculation_7370312102644552:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[min:Calculation_7370312102644552:qk] + [csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Search'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Escillation Rate: Gas' datatype='real' default-format='p0.00%' name='[Escillation Rate: Electricity (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.02'>
              <calculation class='tableau' formula='0.02' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Municipal Taxes' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='0.0069646999999999999'>
              <calculation class='tableau' formula='0.0069646999999999999' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Escillation Rate: Electricity' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.0395'>
              <calculation class='tableau' formula='0.0395' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Amoritization period ' datatype='real' default-format='n#,##0&quot; yrs&quot;;-#,##0&quot; yrs&quot;' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25.0'>
              <calculation class='tableau' formula='25.0' />
              <range min='1.0' />
            </column>
            <column caption='Base Case heating fuel type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Fuel neutral&quot;'>
              <calculation class='tableau' formula='&quot;Fuel neutral&quot;' />
              <members>
                <member value='&quot;Natural gas&quot;' />
                <member value='&quot;Electricity&quot;' />
                <member value='&quot;Fuel neutral&quot;' />
              </members>
            </column>
            <column caption='Utilities: Assessment year' datatype='real' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
              <members>
                <member value='0.0' />
                <member value='5.0' />
                <member value='10.0' />
                <member value='15.0' />
                <member value='20.0' />
                <member value='25.0' />
              </members>
            </column>
            <column caption='PV costs ($/W installed)' datatype='real' default-format='c&quot;$&quot;#,##0.000;-&quot;$&quot;#,##0.000' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='3.2000000000000002'>
              <calculation class='tableau' formula='3.2000000000000002' />
              <range max='10.0' min='0.0' />
            </column>
            <column caption='Interest rate (%)' datatype='real' default-format='p0.00%' name='[generation Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.035000000000000003'>
              <calculation class='tableau' formula='0.035000000000000003' />
              <range max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrade CostAdjuster by Fuel type ($)' datatype='integer' name='[Calculation_0000328154041002]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Parameters].[Parameter 2] = &quot;Natural gas&quot; OR &#13;&#10;     ( [Parameters].[Parameter 2] = &quot;Fuel neutral&quot; AND [Calculation_4270328153916499] = &quot;Natural gas&quot; ) ) then 0&#13;&#10;&#13;&#10;&#13;&#10;else 1600&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Cost of ownership --- difference from base case ($/year), no markup' datatype='real' name='[Calculation_0040311143954202]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]+[Calculation_7830311143752081]-([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted ElecFurn cost' datatype='integer' name='[Calculation_1010313135857628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-HVACSystem] = &quot;elec-baseboard&quot; ) then 4950 - 1600&#13;&#10;else 0 &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(6.85*12 +([FuelEleckWh]-[EnergyPVkWh])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Water conservation package ($)' datatype='integer' name='[Calculation_2900312105624061]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([GOtag:DHWLoadScale]=&quot;Low-Flow&quot; ) then 80&#13;&#10;else 0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Cost of Borrowing ($)' datatype='real' name='[Calculation_3730311142712896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(( [Calculation_3950311142640640] * ( 1 + [Calculation_3950311142640640] ) ^ ([Parameters].[Parameter 1] * 12 ) )  &#13;&#10;/&#13;&#10;( (1 + [Calculation_3950311142640640]  ) ^ ( [Parameters].[Parameter 1] * 12 ) - 1 )&#13;&#10;* [Calculation_1760312105551885] ) &#13;&#10;* [Parameters].[Parameter 1] * 12' scope-isolation='false' />
            </column>
            <column caption='MonthlyInterestRate (%)' datatype='real' name='[Calculation_3950311142640640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[generation Parameter]/12' scope-isolation='false' />
            </column>
            <column caption='SHOW-ERS-Filter' datatype='string' name='[Calculation_4250401113310063]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4480331150059234] = &quot;ERS&quot;+str([Parameters].[Parameter 8]) ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Utilities: Adjusted Base case charges ($/year)' datatype='real' name='[Calculation_4380312104008812]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Parameters].[Parameter 2] = &quot;Natural gas&quot; OR &#13;&#10;     ( [Parameters].[Parameter 2] = &quot;Fuel neutral&quot; AND [Calculation_4270328153916499] = &quot;Natural gas&quot; )&#13;&#10;    ) then &#13;&#10;    905*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;    +&#13;&#10;    563.4*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;    2108.43*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Wall-insulation-type' datatype='string' name='[Calculation_4800326161225524]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot;    ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjust ACH cost ($)' datatype='real' name='[Calculation_5080312144736857]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4800326161225524] = &quot;OC&quot; ) then &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then 0&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -3049&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -3260&#13;&#10;    end&#13;&#10;else &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;    end&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Total adjusted bill ($/year)' datatype='real' name='[Calculation_7370312102644552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1130312101746663]+[UTILITIES: Adjusted Electricity Bill  (copy)]' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Annual cost of borrowing ($/year)' datatype='real' name='[Calculation_7830311143752081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3730311142712896]/[Parameters].[Parameter 1]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: PV cost adjustment ($)' datatype='real' name='[Calculation_8190312105315011]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PVSizekW]*([Parameters].[Parameter 7]*1000-4687)' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Electric conservation package ($)' datatype='integer' name='[Calculation_8710312105714395]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [GOtag:ElecLoadScale] = &quot;NGERSNoReduction19&quot; ) then 0 &#13;&#10;else 140&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Main Wall adjust cost (No air sealing credit) ' datatype='integer' name='[Calculation_8710326154745859]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [GOtag:Opt-MainWall] &#13;&#10;  when &quot;BaseR20&quot; then 0 &#13;&#10;  when &quot;DblStud-R37-Wall&quot; then   1350&#13;&#10;  when &quot;DblStud-R52-Wall&quot; then   1350&#13;&#10;  when &quot;Stud-R21-2x4&quot; then       0 &#13;&#10;  when &quot;Stud-R275-Wall&quot; then    619&#13;&#10;  when &quot;Stud-R305-Wall&quot; then    555&#13;&#10;  when &quot;Stud-R275MW-Wall&quot; then   505&#13;&#10;  when &quot;AdvFrm-R20-Wall&quot; then   110&#13;&#10;  else -9000000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Show Fuel' datatype='string' name='[Calculation_9940401113855898]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = [Parameters].[Focus on ERS (copy)] ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='real' name='[FuelEleckWh]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelNaturalGasM3]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='real' name='[PVSizekW]' role='measure' type='quantitative'>
            </column>
            <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;  (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[UpgradeCostDoll]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4250401113310063]' derivation='None' name='[none:Calculation_4250401113310063:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9940401113855898]' derivation='None' name='[none:Calculation_9940401113855898:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1130312101746663]' derivation='Sum' name='[sum:Calculation_1130312101746663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Sum' name='[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' context='true' />
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_2640311145556471])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Calculation_2160328153208285:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_4250401113310063:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_9940401113855898:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' context='true'>
            <groupfilter function='member' level='[none:GOtag:Opt-AirTightness:nk]' member='&quot;PassiveHouse&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' context='true'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-BasementSlabInsulation:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' context='true'>
            <groupfilter function='member' level='[none:GOtag:Opt-CasementWindows:nk]' member='&quot;TripleLowEHardCoatKryFill&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' context='true'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-Ceilings:nk]' member='&quot;CeilR70&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-Ceilings:nk]' member='&quot;CeilR80&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' context='true'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-HVACSystem:nk]' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' context='true'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;DblStud-R37-Wall&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;DblStud-R52-Wall&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;Stud-R275-Wall&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;Stud-R305-Wall&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' context='true'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[Set 1]</column>
            <column>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1500.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='25000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + ([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk] + [csv.41709.530460324073].[sum:Calculation_1130312101746663:qk])))</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[batch]' role='dimension' type='ordinal'>
            </column>
            <column aggregation='Sum' datatype='real' name='[generation (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[generation]' />
            </column>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[batch]' derivation='None' name='[none:batch:ok]' pivot='key' type='ordinal' />
            <column-instance column='[generation (copy)]' derivation='None' name='[none:generation (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Avg' name='[win:avg:Calculation_2640311145556471:qk:2]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-5' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[win:max:Calculation_2640311145556471:qk:4]' pivot='key' type='quantitative'>
              <table-calc aggregation='Max' from='-5000' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41709.530460324073].[none:batch:ok]' direction='ASC'>
            <dictionary>
              <bucket>5</bucket>
              <bucket>1</bucket>
              <bucket>2</bucket>
              <bucket>3</bucket>
              <bucket>4</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[win:max:Calculation_2640311145556471:qk:4]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:batch:ok]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='7' y-axis-name='[csv.41709.530460324073].[win:avg:Calculation_2640311145556471:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:batch:ok]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='8' y-axis-name='[csv.41709.530460324073].[win:max:Calculation_2640311145556471:qk:4]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:batch:ok]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[win:avg:Calculation_2640311145556471:qk:2] + [csv.41709.530460324073].[win:max:Calculation_2640311145556471:qk:4])</rows>
        <cols>[csv.41709.530460324073].[none:generation (copy):ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 16'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[batch]' role='dimension' type='ordinal'>
            </column>
            <column caption='generation (bin)' datatype='integer' name='[generation (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[generation]' peg='0' size='25' />
            </column>
            <column aggregation='Sum' datatype='real' name='[generation (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[generation]' />
            </column>
            <column datatype='real' name='[generation]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[batch]' derivation='None' name='[none:batch:ok]' pivot='key' type='ordinal' />
            <column-instance column='[generation (copy)]' derivation='None' name='[none:generation (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:generation (copy):ok]'>
            <groupfilter function='member' level='[none:generation (copy):ok]' member='1.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:generation (copy):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[generation (bin)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[sum:Number of Records:qk]</rows>
        <cols>[csv.41709.530460324073].[none:batch:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Base-or-upgrade' datatype='string' name='[Calculation_4130311125228917]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Calculation_2160328153208285]=&quot;130777&quot; or [Calculation_2160328153208285]=&quot;144923&quot;) then &quot;BASE&quot;&#13;&#10;ELSE &quot;UPGRADE&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='integer' name='[batch]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4130311125228917]' derivation='None' name='[none:Calculation_4130311125228917:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[batch]' derivation='None' name='[none:batch:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;CCASHP&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:batch:ok]'>
            <groupfilter function='level-members' level='[none:batch:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:batch:ok]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[max:Calculation_2640311145556471:qk]))</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 19'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;basefurnace&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
              <bucket>&quot;GSHP&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk] * [csv.41709.530460324073].[min:Calculation_1760312105551885:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 22'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;CCASHP&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;basefurnace&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='35' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 23'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;basefurnace&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
              <bucket>&quot;GSHP&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk] * [csv.41709.530460324073].[max:Calculation_2640311145556471:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 25'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Design Strategies (</run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 6]</run>
            <run>&gt;</run>
            <run> years from today)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EnergyPVGJ' datatype='real' name='[Calculation_9440311154155886]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]*3600/1E06' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyHeatingGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyPlugGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyTotal]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyVentGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelEleckWh]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelNaturalGasM3]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelOilL]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[GOtag:CalcMode]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:DBFiles]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExposedFloor]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtBasementWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtLeftSideWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FrontWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-OverhangWidth]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:RoofPitch]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[ID]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Main_Iteration]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:CalcMode]' derivation='None' name='[none:GOtag:CalcMode:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DBFiles]' derivation='None' name='[none:GOtag:DBFiles:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExposedFloor]' derivation='None' name='[none:GOtag:Opt-ExposedFloor:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtBasementWindow]' derivation='None' name='[none:GOtag:Opt-ExtBasementWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtLeftSideWindow]' derivation='None' name='[none:GOtag:Opt-ExtLeftSideWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FrontWindows]' derivation='None' name='[none:GOtag:Opt-FrontWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-OverhangWidth]' derivation='None' name='[none:GOtag:Opt-OverhangWidth:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:RoofPitch]' derivation='None' name='[none:GOtag:RoofPitch:nk]' pivot='key' type='nominal' />
            <column-instance column='[ID]' derivation='None' name='[none:ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8430311144549035]' derivation='Sum' name='[sum:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9440311154155886]' derivation='Sum' name='[sum:Calculation_9440311154155886:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyHeatingGJ]' derivation='Sum' name='[sum:EnergyHeatingGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Sum' name='[sum:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPlugGJ]' derivation='Sum' name='[sum:EnergyPlugGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyTotal]' derivation='Sum' name='[sum:EnergyTotal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyVentGJ]' derivation='Sum' name='[sum:EnergyVentGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FuelEleckWh]' derivation='Sum' name='[sum:FuelEleckWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FuelNaturalGasM3]' derivation='Sum' name='[sum:FuelNaturalGasM3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FuelOilL]' derivation='Sum' name='[sum:FuelOilL:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Main_Iteration]' derivation='Sum' name='[sum:Main_Iteration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyHeatingGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:Calculation_9440311154155886:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyPVkWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyPlugGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyTotal:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:EnergyVentGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:FuelEleckWh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:FuelNaturalGasM3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:FuelOilL:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:Main_Iteration:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot;Base Case (ERS 76 code)&quot;' />
              <groupfilter from='&quot;ERS 80&quot;' function='range' level='[none:Calculation_8470312121221798:nk]' to='&quot;ERS 86 --- lowest upgrade cost&quot;' />
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot;Money Saver (ERS 76)&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Base Case (ERS 76 code)&quot;</bucket>
              <bucket>&quot;Money Saver (ERS 76)&quot;</bucket>
              <bucket>&quot;ERS 80&quot;</bucket>
              <bucket>&quot;ERS 83 --- lowest upgrade cost&quot;</bucket>
              <bucket>&quot;ERS 83 --- lowest operating cost&quot;</bucket>
              <bucket>&quot;ERS 86 --- lowest upgrade cost&quot;</bucket>
              <bucket>&quot;ERS 86 --- lowest operating cost&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='Upgrade cost ($)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='Annual Savings to Homeowner ($/yr)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0&quot;/yr&quot;;-&quot;$&quot;#,##0&quot;/yr&quot;' />
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='40' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' value='244' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0&quot; &quot;;-&quot;$&quot;#,##0&quot; &quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' max='200.0' min='-200.0' num-steps='4' palette='tableau-red-black' type='interpolated' />
            <encoding attr='color' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <lod column='[csv.41709.530460324073].[:Measure Names]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</rows>
        <cols>([csv.41709.530460324073].[sum:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[sum:Calculation_2640311145556471:qk])</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[generation (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 26'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-DHWSystem:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-HVACSystem:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;basefurnace&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
              <bucket>&quot;GSHP&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='19' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='10'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 27'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Optimization: Total cost of ownership (</run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 6]</run>
            <run>&gt;</run>
            <run> years from today) </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Annual savings to homewoner: Base-case-reference' datatype='real' name='[Calculation_5440312091758636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_4130311125228917] = &quot;BASE&quot; then [Calculation_2640311145556471]&#13;&#10;else -100000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5440312091758636]' derivation='Max' name='[max:Calculation_5440312091758636:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;basefurnace&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
              <bucket>&quot;GSHP&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' field-type='quantitative' fold='true' max='500.0' min='-3000.0' range-type='fixed' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='Net savings for homeowner (including borrowing costs, $/yr)' />
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='63' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='124' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' value='124' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='800.0' min='-3000.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='27' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' max='100.0' min='-100.0' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fb595e</color>
                <color>#f17478</color>
                <color>#e78d90</color>
                <color>#dda4a6</color>
                <color>#d3b8b9</color>
                <color>#cacaca</color>
                <color>#a1a1a1</color>
                <color>#797979</color>
                <color>#505050</color>
                <color>#282828</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='dotted' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='body-type' id='annotation_0' value='edge' />
            <format attr='border-style' id='annotation_0' value='solid' />
            <format attr='border-color' id='annotation_0' value='#1b1b1b' />
            <format attr='border-width' id='annotation_0' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' />
              <text column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
                <format attr='mark-color' value='#62b6d5' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk] * ([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[max:Calculation_5440312091758636:qk]))</rows>
        <cols>([csv.41709.530460324073].[EstimatedERS (bin)] / [csv.41709.530460324073].[EstimatedERS (bin)])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Base case built to code&#10;(approximately ERS 76)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>174.89652876814273</value>
                    <value>0.023144158308923579</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='65' y='142' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Sheet 28'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Optimization: Total cost of ownership by HVAC type (</run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 6]</run>
            <run>&gt;</run>
            <run> years from today) </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='Attribute' name='[attr:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EstimatedERS (bin)]' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='76' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter from='&quot;ElectricHP&quot;' function='range' level='[none:GOtag:Opt-DHWSystem:nk]' to='&quot;GasInstantaneous&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='Total savings for homeowner (including borrowing costs, $/yr)' />
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='75' />
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='136' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='136' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='37000.0' min='-5000.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='48' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0&quot; &quot;;-&quot; $&quot;#,##0&quot; &quot;' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot; $&quot;#,##0;-&quot; $&quot;#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0&quot; &quot;;-&quot; $&quot;#,##0&quot; &quot;' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot; $&quot;#,##0&quot;  &quot;;-&quot; $&quot;#,##0&quot;  &quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' max='100.0' min='-100.0' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fb595e</color>
                <color>#f17478</color>
                <color>#e78d90</color>
                <color>#dda4a6</color>
                <color>#d3b8b9</color>
                <color>#cacaca</color>
                <color>#a1a1a1</color>
                <color>#797979</color>
                <color>#505050</color>
                <color>#282828</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='vertical-align' id='refline0' value='bottom' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <text column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' formula='constant' id='refline0' label='Homeowner breaks even' label-type='custom' scope='per-table' value='0.0' value-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <text column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='font-size' value='14' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <text column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <tooltip column='[csv.41709.530460324073].[attr:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='auto' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='font-size' value='14' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[max:Calculation_2640311145556471:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[attr:GOtag:Opt-StandoffPV:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>77</value>
                <value>-1605.0</value>
                <value>&quot;elec-baseboard&quot;</value>
                <value>&quot;NoPV&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='29' y='-19' />
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[attr:GOtag:Opt-StandoffPV:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>77</value>
                <value>-65.0</value>
                <value>&quot;basefurnace&quot;</value>
                <value>&quot;NoPV&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='5' y='22' />
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[attr:GOtag:Opt-StandoffPV:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>82</value>
                <value>6140.0</value>
                <value>&quot;CCASHP&quot;</value>
                <value>&quot;NoPV&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-43' y='1' />
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[attr:GOtag:Opt-StandoffPV:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>85</value>
                <value>20165.0</value>
                <value>&quot;GSHP&quot;</value>
                <value>&quot;NoPV&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-36' y='0.5' />
          </mark-label>
          <mark-label id='4'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>77</value>
                <value>135.52342322438707</value>
                <value>&quot;basefurnace&quot;</value>
                <value>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='26' y='15' />
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>77</value>
                <value>-500.13164759458152</value>
                <value>&quot;elec-baseboard&quot;</value>
                <value>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='39' y='29' />
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>82</value>
                <value>-422.56918335990497</value>
                <value>&quot;CCASHP&quot;</value>
                <value>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='5' y='-7' />
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>85</value>
                <value>-1012.55382897811</value>
                <value>&quot;GSHP&quot;</value>
                <value>&quot;[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Sheet 30'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cost-effectiveness of Wall systems&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='77' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='78' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='79' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='80' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='81' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='82' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='83' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='84' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='85' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='86' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' />
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <groupfilter function='member' level='[none:GOtag:Opt-DWHRandSDHW:nk]' member='&quot;2-plate-DWHR-4-60&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-MainWall:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;DblStud-R37-Wall&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;DblStud-R52-Wall&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;Stud-R275MW-Wall&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;Stud-R305-Wall&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;BaseR20&quot;</bucket>
              <bucket>&quot;Stud-R21-2x4&quot;</bucket>
              <bucket>&quot;Stud-R275-Wall&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[Set 1]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='Annual Savings to Homeowner ($/year, including borrowing costs, no markup)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='212' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='500.0' min='-500.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='35' />
            <format attr='font-weight' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='bold' />
            <format attr='text-decoration' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='underline' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='24' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0&quot;/yr&quot;;-&quot;$&quot;#,##0&quot;/yr&quot;' />
            <format attr='font-weight' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='bold' />
            <format attr='text-decoration' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='underline' />
            <format attr='font-style' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='normal' />
            <format attr='color' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dotted' />
            <format attr='vertical-align' id='refline0' value='bottom' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' value='240' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' formula='constant' id='refline0' label='Homeowner breaks even' label-type='custom' scope='per-pane' value='0.0' value-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[max:Calculation_2640311145556471:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (What I think it shoiuld be) (bin)]</column>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 31'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Optimization: Total cost of ownership (</run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 6]</run>
            <run>&gt;</run>
            <run> years from today) </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Annual savings to homewoner: Base-case-reference' datatype='real' name='[Calculation_5440312091758636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_4130311125228917] = &quot;BASE&quot; then [Calculation_2640311145556471]&#13;&#10;else -100000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5440312091758636]' derivation='Max' name='[max:Calculation_5440312091758636:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter from='&quot;CCASHP&quot;' function='range' level='[none:GOtag:Opt-HVACSystem:nk]' to='&quot;basefurnace&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' field-type='quantitative' fold='true' max='500.0' min='-3000.0' range-type='fixed' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='Net savings for homeowner (including borrowing costs, $/yr)' />
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='63' />
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='124' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='124' />
            <format attr='width' field='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]' value='124' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='800.0' min='-2000.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='27' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='-90' />
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0&quot; &quot;;-&quot; $&quot;#,##0&quot; &quot;' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot; $&quot;#,##0;-&quot; $&quot;#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='text-format' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' value='c&quot; $&quot;#,##0&quot; &quot;;-&quot; $&quot;#,##0&quot; &quot;' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot; $&quot;#,##0&quot;  &quot;;-&quot; $&quot;#,##0&quot;  &quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' max='100.0' min='-100.0' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fb595e</color>
                <color>#f17478</color>
                <color>#e78d90</color>
                <color>#dda4a6</color>
                <color>#d3b8b9</color>
                <color>#cacaca</color>
                <color>#a1a1a1</color>
                <color>#797979</color>
                <color>#505050</color>
                <color>#282828</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='vertical-align' id='refline0' value='bottom' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='body-type' id='annotation_0' value='edge' />
            <format attr='border-style' id='annotation_0' value='solid' />
            <format attr='border-color' id='annotation_0' value='#1b1b1b' />
            <format attr='border-width' id='annotation_0' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' formula='constant' id='refline0' label='Homeowner breaks even' label-type='custom' scope='per-table' value='0.0' value-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <text column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</run>
                <run fontcolor='#000000'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
                <format attr='mark-color' value='#26794a' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <text column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-orientation' value='-90' />
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[max:Calculation_5440312091758636:qk]))</rows>
        <cols>([csv.41709.530460324073].[EstimatedERS (bin)] / [csv.41709.530460324073].[EstimatedERS (bin)])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Base case built to code&#10;(approximately ERS 76)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>174.89652876814273</value>
                    <value>0.023144158308923579</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='65' y='142' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Sheet 33'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 35'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:CalcMode]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:DBFiles]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExposedFloor]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtBasementWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtLeftSideWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FrontWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-OverhangWidth]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:RoofPitch]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:CalcMode]' derivation='None' name='[none:GOtag:CalcMode:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DBFiles]' derivation='None' name='[none:GOtag:DBFiles:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExposedFloor]' derivation='None' name='[none:GOtag:Opt-ExposedFloor:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtBasementWindow]' derivation='None' name='[none:GOtag:Opt-ExtBasementWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtLeftSideWindow]' derivation='None' name='[none:GOtag:Opt-ExtLeftSideWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FrontWindows]' derivation='None' name='[none:GOtag:Opt-FrontWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-OverhangWidth]' derivation='None' name='[none:GOtag:Opt-OverhangWidth:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:RoofPitch]' derivation='None' name='[none:GOtag:RoofPitch:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter from='&quot;Base Case (ERS 76 code)&quot;' function='range' level='[none:Calculation_8470312121221798:nk]' to='&quot;Gas furnace: Most affordable ERS 80 option&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' field-type='quantitative' max='23611.015828530257' min='-2986.4813097982742' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='818.37518274046829' min='-1594.2413098923873' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' max='100.0' min='-100.0' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#fb595e</color>
                <color>#f17478</color>
                <color>#e78d90</color>
                <color>#dda4a6</color>
                <color>#d3b8b9</color>
                <color>#cacaca</color>
                <color>#a1a1a1</color>
                <color>#797979</color>
                <color>#505050</color>
                <color>#282828</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='75' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' y-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[sum:Calculation_1760312105551885:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 36'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(6.85*12 +([FuelEleckWh]-[EnergyPVkWh])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Total adjusted bill ($/year)' datatype='real' name='[Calculation_7370312102644552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1130312101746663]+[UTILITIES: Adjusted Electricity Bill  (copy)]' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:CalcMode]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:DBFiles]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExposedFloor]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtBasementWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtLeftSideWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FrontWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-OverhangWidth]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:RoofPitch]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;  (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Avg' name='[avg:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:CalcMode]' derivation='None' name='[none:GOtag:CalcMode:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DBFiles]' derivation='None' name='[none:GOtag:DBFiles:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExposedFloor]' derivation='None' name='[none:GOtag:Opt-ExposedFloor:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtBasementWindow]' derivation='None' name='[none:GOtag:Opt-ExtBasementWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtLeftSideWindow]' derivation='None' name='[none:GOtag:Opt-ExtLeftSideWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FrontWindows]' derivation='None' name='[none:GOtag:Opt-FrontWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-OverhangWidth]' derivation='None' name='[none:GOtag:Opt-OverhangWidth:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:RoofPitch]' derivation='None' name='[none:GOtag:RoofPitch:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1130312101746663]' derivation='Sum' name='[sum:Calculation_1130312101746663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7370312102644552]' derivation='Sum' name='[sum:Calculation_7370312102644552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Sum' name='[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[csv.41709.530460324073].[EstimatedERS (bin)]' direction='ASC'>
            <dictionary>
              <bucket>76</bucket>
              <bucket>80</bucket>
              <bucket>83</bucket>
              <bucket>86</bucket>
              <bucket>89</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter from='&quot;Base Case (ERS 76 code)&quot;' function='range' level='[none:Calculation_8470312121221798:nk]' to='&quot;Gas furnace: Most affordable ERS 80 option&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Base Case (ERS 76 code)&quot;</bucket>
              <bucket>&quot;Gas Furnace: Cheapest ERS 80 option&quot;</bucket>
              <bucket>&quot;Gas furnace: Most affordable&quot;</bucket>
              <bucket>&quot;Gas furnace: Cheapest ERS 80 option&quot;</bucket>
              <bucket>&quot;Gas furnace: Most affordable ERS 80 option&quot;</bucket>
              <bucket>&quot;Gas furnace: Cheapest &amp; Most affordable ERS 83 option&quot;</bucket>
              <bucket>&quot;Gas furnace: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;</bucket>
              <bucket>&quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
              <bucket>&quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;</bucket>
              <bucket>&quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;</bucket>
              <bucket>&quot;Electric Furnace: Cheapest ERS 83 option&quot;</bucket>
              <bucket>&quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;</bucket>
              <bucket>&quot;Electric Furnace: Most affordable ERS 86 option&quot;</bucket>
              <bucket>&quot;Electric Furnace: Most affordable ERS 89 option&quot;</bucket>
              <bucket>&quot;Gas Furnace: Most affordable ERS 80 option&quot;</bucket>
              <bucket>&quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;</bucket>
              <bucket>&quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
              <bucket>&quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;</bucket>
              <bucket>&quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;</bucket>
              <bucket>&quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Number of Records:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' value='232' />
            <format attr='width' field='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' value='124' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[avg:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' x-axis-name='[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' x-axis-name='[csv.41709.530460324073].[sum:Calculation_7370312102644552:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' x-axis-name='[csv.41709.530460324073].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:CalcMode:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DBFiles:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[EstimatedERS (bin)] / ([csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk] / ([csv.41709.530460324073].[none:Calculation_8470312121221798:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk] / ([csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk] / [csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]))))))</rows>
        <cols>([csv.41709.530460324073].[avg:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[sum:Number of Records:qk] + ([csv.41709.530460324073].[sum:Calculation_2640311145556471:qk] + ([csv.41709.530460324073].[sum:Calculation_1130312101746663:qk] + ([csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk] + [csv.41709.530460324073].[sum:Calculation_7370312102644552:qk])))))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 39'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Design targets: Winnipeg bungalo</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Base-or-upgrade' datatype='string' name='[Calculation_4130311125228917]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Calculation_2160328153208285]=&quot;130777&quot; or [Calculation_2160328153208285]=&quot;144923&quot;) then &quot;BASE&quot;&#13;&#10;ELSE &quot;UPGRADE&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyCoolingGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyDHWGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyHeatingGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyPlugGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyVentGJ]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[ID-string (Interesting points]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_2160328153208285]' default='&quot;99999&quot;'>
                <bin value='&quot;100567&quot;'>
                  <value>&quot;100567&quot;</value>
                  <value>&quot;65013&quot;</value>
                </bin>
                <bin value='&quot;102332&quot;'>
                  <value>&quot;102332&quot;</value>
                  <value>&quot;107631&quot;</value>
                  <value>&quot;115642&quot;</value>
                  <value>&quot;115943&quot;</value>
                  <value>&quot;131404&quot;</value>
                  <value>&quot;132360&quot;</value>
                  <value>&quot;155642&quot;</value>
                </bin>
                <bin value='&quot;108820&quot;'>
                  <value>&quot;108820&quot;</value>
                  <value>&quot;114270&quot;</value>
                  <value>&quot;122591&quot;</value>
                  <value>&quot;124250&quot;</value>
                  <value>&quot;131290&quot;</value>
                  <value>&quot;148168&quot;</value>
                  <value>&quot;91653&quot;</value>
                </bin>
                <bin value='&quot;130777&quot;'>
                  <value>&quot;130777&quot;</value>
                  <value>&quot;144923&quot;</value>
                </bin>
                <bin value='&quot;130840&quot;'>
                  <value>&quot;130840&quot;</value>
                  <value>&quot;132280&quot;</value>
                  <value>&quot;85933&quot;</value>
                  <value>&quot;86735&quot;</value>
                  <value>&quot;97876&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;100567&quot;' value='GSHP' />
                <alias key='&quot;102332&quot;' value='Cheapest' />
                <alias key='&quot;108820&quot;' value='Durable' />
                <alias key='&quot;130777&quot;' value='Base' />
                <alias key='&quot;130840&quot;' value='Affordable' />
                <alias key='&quot;99999&quot;' value='Other' />
              </aliases>
            </column>
            <column-instance column='[EnergyCoolingGJ]' derivation='Avg' name='[avg:EnergyCoolingGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyDHWGJ]' derivation='Avg' name='[avg:EnergyDHWGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyHeatingGJ]' derivation='Avg' name='[avg:EnergyHeatingGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPlugGJ]' derivation='Avg' name='[avg:EnergyPlugGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyVentGJ]' derivation='Avg' name='[avg:EnergyVentGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4130311125228917]' derivation='None' name='[none:Calculation_4130311125228917:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyHeatingGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyDHWGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPlugGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyVentGJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyCoolingGJ:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyHeatingGJ:qk]&quot;</bucket>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyDHWGJ:qk]&quot;</bucket>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyPlugGJ:qk]&quot;</bucket>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyVentGJ:qk]&quot;</bucket>
              <bucket>&quot;[csv.41709.530460324073].[avg:EnergyCoolingGJ:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EstimatedERS (bin)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[EstimatedERS (bin)]' member='77' />
                <groupfilter function='member' level='[EstimatedERS (bin)]' member='89' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[ID-string (Interesting points]'>
            <groupfilter from='&quot;100567&quot;' function='range' level='[ID-string (Interesting points]' to='&quot;130840&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_4130311125228917:nk]' member='&quot;BASE&quot;' />
              <groupfilter function='member' level='[none:Calculation_4130311125228917:nk]' member='&quot;UPGRADE&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[ID-string (Interesting points]</column>
            <column>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[Multiple Values]' scope='cols' value='Total energy use (GJ/year)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='180' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='16' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='text-format' id='refline0' value='n#,##0&quot;GJ /year&quot;;-#,##0&quot;GJ /year&quot;' />
            <format attr='vertical-align' id='refline0' value='center' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[csv.41709.530460324073].[:Measure Names]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[Multiple Values]' formula='max' id='refline0' label-type='value' scope='per-cell' value-column='[csv.41709.530460324073].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='vertical-align' value='bottom' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[:Measure Names]' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[EstimatedERS (bin)]</rows>
        <cols>[csv.41709.530460324073].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 41'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Water Heating </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[diff:max:Calculation_2640311145556471:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Fixed' ordering-field='[csv.41709.530460324073].[GOtag:Opt-DWHRandSDHW]' ordering-type='Field' type='Difference'>
                <address>
                  <value>&quot;none&quot;</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-CasementWindows:nk]' member='&quot;DoubleLowEHardCoatArgFill&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-DHWSystem:nk]' member='&quot;ElectricHP&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-DHWSystem:nk]' member='&quot;ElectricStorage&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;BaseDHW&quot;</bucket>
              <bucket>&quot;ElectricStorage&quot;</bucket>
              <bucket>&quot;ElectricHP&quot;</bucket>
              <bucket>&quot;GasInstantaneous&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GOtag:Opt-DWHRandSDHW:nk]' member='&quot;2-plate-DWHR-4-60&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-DWHRandSDHW:nk]' member='&quot;DWHR-4-36&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;none&quot;</bucket>
              <bucket>&quot;DWHR-4-60&quot;</bucket>
              <bucket>&quot;2-plate&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;basefurnace&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' scope='rows' value='Effect on annual savings to home owner ($/year)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' scope='rows' value='true' />
            <format attr='height' field='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' value='197' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' field-type='quantitative' max='89.0' min='-459.98848043862517' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' value='116' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' value='-90' />
            <format attr='font-family' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' value='Calibri' />
            <format attr='text-format' field='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dotted' />
            <format attr='text-align' id='refline0' value='left' />
            <format attr='vertical-align' id='refline0' value='bottom' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane id='9'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' formula='constant' id='refline0' label='Homeowner breaks even' label-type='custom' scope='per-table' value='0.0' value-column='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk:2]</rows>
        <cols>([csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk] / [csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 42'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cost-effectiveness of window types</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-CasementWindows:nk]' />
              <groupfilter function='member' level='[none:GOtag:Opt-CasementWindows:nk]' member='&quot;TripleLowESoftCoatKryFill&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-HVACSystem:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;CCASHP&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;GSHP&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;elec-baseboard&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-MainWall:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;BaseR20&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;DblStud-R52-Wall&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;Stud-R275MW-Wall&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='116' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='Upgrade Cost' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='30000.0' min='-1055.3266663793104' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
            <format attr='stroke-color' id='annotation_2' value='#26794a' />
            <format attr='stroke-color' id='annotation_1' value='#297a98' />
            <format attr='stroke-color' id='annotation_0' value='#f1923e' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <text column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <mark-labels>
          <mark-label id='6' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>84</value>
                <value>15561.41</value>
                <value>&quot;DoubleLowESoftCoatArgFill&quot;</value>
                <value>&quot;NoPV&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='18' y='107' />
          </mark-label>
          <mark-label id='8' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>85</value>
                <value>17081.41</value>
                <value>&quot;DoubleLowEHardCoatArgFill&quot;</value>
                <value>&quot;NoPV&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='23' y='80' />
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>Double Soft Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>84</value>
                    <value>15561.41</value>
                    <value>&quot;DoubleLowESoftCoatArgFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-140' y='-10' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Double Hard Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>85</value>
                    <value>17081.41</value>
                    <value>&quot;DoubleLowEHardCoatArgFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-195' y='-49' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Triple Hard Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>86</value>
                    <value>14056.41</value>
                    <value>&quot;TripleLowEHardCoatKryFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-75' y='-217' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Sheet 44'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cost-effectiveness of window types</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-CasementWindows:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-DHWSystem:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-HVACSystem:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;CCASHP&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;GSHP&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;elec-baseboard&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-MainWall:nk]' />
              <groupfilter function='empty-level' member='[none:GOtag:Opt-MainWall:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='116' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='Upgrade Cost' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='30000.0' min='-1055.3266663793104' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
            <format attr='stroke-color' id='annotation_2' value='#26794a' />
            <format attr='stroke-color' id='annotation_1' value='#297a98' />
            <format attr='stroke-color' id='annotation_0' value='#f1923e' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <pages>
          <column>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</column>
        </pages>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>Double Soft Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>84</value>
                    <value>15561.41</value>
                    <value>&quot;DoubleLowESoftCoatArgFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-140' y='-10' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Double Hard Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>85</value>
                    <value>17081.41</value>
                    <value>&quot;DoubleLowEHardCoatArgFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-195' y='-49' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Triple Hard Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>86</value>
                    <value>14056.41</value>
                    <value>&quot;TripleLowEHardCoatKryFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-75' y='-217' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Sheet 45'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[batch]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[batch]' derivation='None' name='[none:batch:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:batch:ok]'>
            <groupfilter from='1' function='range' level='[none:batch:ok]' to='19' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:batch:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols>[csv.41709.530460324073].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 47'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Wall-insulation-type' datatype='string' name='[Calculation_4800326161225524]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot;    ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Main Wall adjust cost (No air sealing credit) ' datatype='integer' name='[Calculation_8710326154745859]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [GOtag:Opt-MainWall] &#13;&#10;  when &quot;BaseR20&quot; then 0 &#13;&#10;  when &quot;DblStud-R37-Wall&quot; then   1350&#13;&#10;  when &quot;DblStud-R52-Wall&quot; then   1350&#13;&#10;  when &quot;Stud-R21-2x4&quot; then       0 &#13;&#10;  when &quot;Stud-R275-Wall&quot; then    619&#13;&#10;  when &quot;Stud-R305-Wall&quot; then    555&#13;&#10;  when &quot;Stud-R275MW-Wall&quot; then   505&#13;&#10;  when &quot;AdvFrm-R20-Wall&quot; then   110&#13;&#10;  else -9000000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column-instance column='[Calculation_8710326154745859]' derivation='Avg' name='[avg:Calculation_8710326154745859:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4800326161225524]' derivation='None' name='[none:Calculation_4800326161225524:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4800326161225524:nk] / [csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk])</rows>
        <cols>[csv.41709.530460324073].[avg:Calculation_8710326154745859:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 51'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41709.530460324073].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols>[csv.41709.530460324073].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 53'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter from='&quot;BaseR20&quot;' function='range' level='[none:GOtag:Opt-MainWall:nk]' to='&quot;Stud-R305-Wall&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 54'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[diff:min:Calculation_1760312105551885:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[csv.41709.530460324073].[Calculation_4270328153916499]' ordering-type='Field' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 59'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols>[csv.41709.530460324073].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 60'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter function='member' level='[EstimatedERS (bin)]' member='86' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ERS 86, elec, cheapest &quot;</bucket>
              <bucket>&quot;ERS 86, elec, durable &quot;</bucket>
              <bucket>&quot;ERS 86, gas, affordable &quot;</bucket>
              <bucket>&quot;ERS 86, gas, cheapest &quot;</bucket>
              <bucket>&quot; &quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter from='&quot;DblStud-R37-Wall&quot;' function='range' level='[none:GOtag:Opt-MainWall:nk]' to='&quot;Stud-R305-Wall&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='762.54008205731122' min='0.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='25000.0' min='3000.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-align' id='refline0' value='left' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#26794a' />
            <format attr='text-align' id='refline1' value='left' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' formula='max' id='refline0' label-type='value' scope='per-pane' value-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' z-order='1' />
            <reference-line axis-column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' formula='min' id='refline1' label-type='value' scope='per-pane' value-column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' z-order='2' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-range-min' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-range-min' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk] / [csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]))))</rows>
        <cols>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[max:Calculation_2640311145556471:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 62'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[GOtag:Opt-DHWSystem]' />
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem (copy)]' derivation='None' name='[none:GOtag:Opt-DHWSystem (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_8470312121221798:nk]' />
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot; &quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk] / ([csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk] / [csv.41709.530460324073].[none:GOtag:Opt-DHWSystem (copy):nk]))))))</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 63'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='SHOW-ERS-Filter' datatype='string' name='[Calculation_4250401113310063]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4480331150059234] = &quot;ERS&quot;+str([Parameters].[Parameter 8]) ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='ERS-int' datatype='string' name='[Calculation_4480331150059234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;ERS&quot;+str(int([Calculation_8430311144549035]))' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4250401113310063]' derivation='None' name='[none:Calculation_4250401113310063:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4480331150059234]' derivation='None' name='[none:Calculation_4480331150059234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]</rows>
        <cols>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 64'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Pathways we&apos;ll look at:</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Energy savings (%)' datatype='real' name='[Calculation_3710312133127667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(106.65-[EnergyTotal])/106.65' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Energy savings for base (%)' datatype='real' name='[Calculation_7130313100558856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -0.5&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[ID-filter (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_8470312121221798]' default='&quot; &quot;'>
                <bin value='&quot;ERS 76, electric, base case&quot;'>
                  <value>&quot;ERS 76, electric, base case&quot;</value>
                  <value>&quot;ERS 76, gas, Base Case, gas heat&quot;</value>
                  <value>&quot;ERS 83, electric, Durable&quot;</value>
                  <value>&quot;ERS 83, electric, cheapest&quot;</value>
                  <value>&quot;ERS 83, gas, Cheapest&quot;</value>
                  <value>&quot;ERS 83, gas, Most affordable&quot;</value>
                  <value>&quot;ERS 83, gas, durable &quot;</value>
                  <value>&quot;ERS 86, elec, cheapest &quot;</value>
                  <value>&quot;ERS 86, elec, durable &quot;</value>
                  <value>&quot;ERS 86, gas, affordable &quot;</value>
                  <value>&quot;ERS 86, gas, cheapest &quot;</value>
                  <value>&quot;ERS 86, gas, durable &quot;</value>
                  <value>&quot;ERS 89, electric, GSHP&quot;</value>
                  <value>&quot;ERS 89, electric, cheapest&quot;</value>
                  <value>&quot;ERS 89, electric, durable&quot;</value>
                  <value>&quot;ERS 89, gas, durable &quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot; &quot;' value='Other' />
                <alias key='&quot;ERS 76, electric, base case&quot;' value='Display' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3710312133127667]' derivation='Sum' name='[sum:Calculation_3710312133127667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7130313100558856]' derivation='Sum' name='[sum:Calculation_7130313100558856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8430311144549035]' derivation='Sum' name='[sum:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot; &quot;' />
              <groupfilter from='&quot;ERS 83, electric, Durable&quot;' function='range' level='[none:Calculation_8470312121221798:nk]' to='&quot;ERS 89, gas, durable &quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Good-point&quot;</bucket>
              <bucket>&quot;bad point&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' field-type='quantitative' max='0.88' min='-0.050000000000000003' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' field-type='quantitative' major-origin='0.0' major-spacing='20000.0' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' value='p0%' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' field-type='nominal' max-size='1' min-size='0.005' reverse='true' type='catsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
            <format attr='border-style' id='annotation_3' value='none' />
            <format attr='border-style' id='annotation_4' value='none' />
            <format attr='border-style' id='annotation_5' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[sum:Calculation_3710312133127667:qk])</rows>
        <cols>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='224'>
            <formatted-text>
              <run fontcolor='#787878'>Base case (ERS 76)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.0</value>
                    <value>0.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='386' y='-44' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Most expensive &#10;option: ERS 96</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                      <field>[csv.41709.530460324073].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>71111.410000000003</value>
                    <value>0.82466159399906247</value>
                    <value>96.637078768207715</value>
                    <value>&quot;[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-252' y='-8' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='243'>
            <formatted-text>
              <run fontcolor='#787878'>Base case: ERS 76</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.0</value>
                    <value>1.2770745428976159e-05</value>
                    <value>0.0</value>
                    <value>76.50698999883673</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='295' y='-41' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>ERS 83 Options</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[ID-filter (group)]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;ERS 76, electric, base case&quot;</value>
                    <value>&quot;ERS 83, electric, Durable&quot;</value>
                    <value>5349.0</value>
                    <value>0.27630993905297707</value>
                    <value>83.237563656582864</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='572' y='0' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>ERS 86 Options </run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[ID-filter (group)]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;ERS 76, electric, base case&quot;</value>
                    <value>&quot;ERS 86, gas, cheapest &quot;</value>
                    <value>17207.0</value>
                    <value>0.3917054477262073</value>
                    <value>86.034040851182695</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='462' y='0' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>ERS 89 Options</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[ID-filter (group)]</field>
                      <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;ERS 76, electric, base case&quot;</value>
                    <value>&quot;ERS 89, electric, GSHP&quot;</value>
                    <value>25490.0</value>
                    <value>0.52038465072667606</value>
                    <value>89.288619098822835</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='386' y='0' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Sheet 66'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(6.85*12 +([FuelEleckWh]-[EnergyPVkWh])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Wall-insulation-type' datatype='string' name='[Calculation_4800326161225524]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot;    ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjust ACH cost ($)' datatype='real' name='[Calculation_5080312144736857]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4800326161225524] = &quot;OC&quot; ) then &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then 0&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -3049&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -3260&#13;&#10;    end&#13;&#10;else &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;    end&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;  (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4800326161225524]' derivation='None' name='[none:Calculation_4800326161225524:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1130312101746663]' derivation='Sum' name='[sum:Calculation_1130312101746663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5080312144736857]' derivation='Sum' name='[sum:Calculation_5080312144736857:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Sum' name='[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter from='&quot;ERS 76, electric, base case&quot;' function='range' level='[none:Calculation_8470312121221798:nk]' to='&quot;ERS 89, gas, durable &quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ERS 83, electric, cheapest&quot;</bucket>
              <bucket>&quot;ERS 83, electric, Durable&quot;</bucket>
              <bucket>&quot;ERS 83, gas, Cheapest&quot;</bucket>
              <bucket>&quot;ERS 83, gas, Most affordable&quot;</bucket>
              <bucket>&quot;ERS 83, gas, durable &quot;</bucket>
              <bucket>&quot;ERS 86, elec, cheapest &quot;</bucket>
              <bucket>&quot;ERS 86, elec, durable &quot;</bucket>
              <bucket>&quot;ERS 86, gas, cheapest &quot;</bucket>
              <bucket>&quot;ERS 86, gas, affordable &quot;</bucket>
              <bucket>&quot;ERS 86, gas, durable &quot;</bucket>
              <bucket>&quot;ERS 89, electric, cheapest&quot;</bucket>
              <bucket>&quot;ERS 89, electric, durable&quot;</bucket>
              <bucket>&quot;ERS 89, electric, GSHP&quot;</bucket>
              <bucket>&quot;ERS 89, gas, durable &quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1200.0' min='-1000.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='28000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='52' />
            <format attr='width' field='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' value='120' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</run>
                <run fontcolor='#000000'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[csv.41709.530460324073].[sum:Calculation_5080312144736857:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / ([csv.41709.530460324073].[EstimatedERS (bin)] / ([csv.41709.530460324073].[none:Calculation_8470312121221798:nk] / ([csv.41709.530460324073].[none:Calculation_2160328153208285:nk] / [csv.41709.530460324073].[none:Calculation_4800326161225524:nk]))))</rows>
        <cols>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + ([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[sum:Calculation_5080312144736857:qk] + ([csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk] + [csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 67'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Pv costs' datatype='real' name='[Calculation_4270312154807625]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Parameters].[Parameter 7]*1000)' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: PV cost adjustment ($)' datatype='real' name='[Calculation_8190312105315011]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PVSizekW]*([Parameters].[Parameter 7]*1000-4687)' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_4270312154807625]' derivation='Avg' name='[avg:Calculation_4270312154807625:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8190312105315011]' derivation='Avg' name='[avg:Calculation_8190312105315011:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[avg:Calculation_4270312154807625:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[avg:Calculation_8190312105315011:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols>([csv.41709.530460324073].[avg:Calculation_4270312154807625:qk] + [csv.41709.530460324073].[avg:Calculation_8190312105315011:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 68'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Base-or-upgrade' datatype='string' name='[Calculation_4130311125228917]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Calculation_2160328153208285]=&quot;130777&quot; or [Calculation_2160328153208285]=&quot;144923&quot;) then &quot;BASE&quot;&#13;&#10;ELSE &quot;UPGRADE&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='ID-filter' datatype='string' name='[Calculation_8470312121221798]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 89542 ) then &quot;ERS 83, gas, Cheapest&quot; &#13;&#10;elseif ( [ID] = 116740 ) then &quot;ERS 83, electric, Durable&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, cheapest&quot; &#13;&#10;elseif ( [ID] = 72736 ) then &quot;ERS 83, electric, Most affordable&quot; &#13;&#10;elseif ( [ID] = 67812 ) then &quot;ERS 83, gas, Most affordable&quot; &#13;&#10;elseif ( [ID] = 148168 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;elseif ( [ID] = 114078 ) then &quot;ERS 86, gas, cheapest &quot;&#13;&#10;elseif ( [ID] = 77934 ) then &quot;ERS 86, gas, affordable &quot;&#13;&#10;elseif ( [ID] = 56512 ) then &quot;ERS 86, elec, durable &quot;&#13;&#10;elseif ( [ID] = 93408 ) then &quot;ERS 86, elec, cheapest &quot;&#13;&#10;elseif ( [ID] = 111479 ) then &quot;ERS 86, gas, durable &quot;&#13;&#10;elseif ( [ID] = 72356 ) then &quot;ERS 89, gas, durable &quot;&#13;&#10;elseif ( [ID] = 84413 ) then &quot;ERS 89, electric, cheapest&quot;&#13;&#10;elseif ( [ID] = 42669 ) then &quot;ERS 89, electric, durable&quot;&#13;&#10;elseif ( [ID] = 70672 ) then &quot;ERS 89, electric, GSHP&quot;&#13;&#10;elseif ( [ID] = 155067 ) then &quot;ERS 83, electric, CCASHP&quot;&#13;&#10;elseif ( [ID] = 90515 ) then &quot;ERS 83, electric, CCASHP 2&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot; &quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4130311125228917]' derivation='None' name='[none:Calculation_4130311125228917:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8470312121221798]' derivation='None' name='[none:Calculation_8470312121221798:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot;ERS 76, electric, base case&quot;' />
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot;ERS 76, gas, Base Case, gas heat&quot;' />
              <groupfilter function='member' level='[none:Calculation_8470312121221798:nk]' member='&quot;ERS 83, electric, CCASHP&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;No-Reduction&quot;</bucket>
              <bucket>&quot;Low-Flow&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4130311125228917:nk] / ([csv.41709.530460324073].[EstimatedERS (bin)] / ([csv.41709.530460324073].[none:Calculation_8470312121221798:nk] / ([csv.41709.530460324073].[none:Calculation_2160328153208285:nk] / ([csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk] / [csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk])))))</rows>
        <cols>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[sum:Calculation_1760312105551885:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 69'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 70'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(6.85*12 +([FuelEleckWh]-[EnergyPVkWh])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='ERS-int' datatype='string' name='[Calculation_4480331150059234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;ERS&quot;+str(int([Calculation_8430311144549035]))' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Total adjusted bill ($/year)' datatype='real' name='[Calculation_7370312102644552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1130312101746663]+[UTILITIES: Adjusted Electricity Bill  (copy)]' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='string' name='[ID-string (Interesting points]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_2160328153208285]' default='&quot;99999&quot;'>
                <bin value='&quot;100567&quot;'>
                  <value>&quot;100567&quot;</value>
                  <value>&quot;65013&quot;</value>
                </bin>
                <bin value='&quot;102332&quot;'>
                  <value>&quot;102332&quot;</value>
                  <value>&quot;107631&quot;</value>
                  <value>&quot;115642&quot;</value>
                  <value>&quot;115943&quot;</value>
                  <value>&quot;131404&quot;</value>
                  <value>&quot;132360&quot;</value>
                  <value>&quot;155642&quot;</value>
                </bin>
                <bin value='&quot;108820&quot;'>
                  <value>&quot;108820&quot;</value>
                  <value>&quot;114270&quot;</value>
                  <value>&quot;122591&quot;</value>
                  <value>&quot;124250&quot;</value>
                  <value>&quot;131290&quot;</value>
                  <value>&quot;148168&quot;</value>
                  <value>&quot;91653&quot;</value>
                </bin>
                <bin value='&quot;130777&quot;'>
                  <value>&quot;130777&quot;</value>
                  <value>&quot;144923&quot;</value>
                </bin>
                <bin value='&quot;130840&quot;'>
                  <value>&quot;130840&quot;</value>
                  <value>&quot;132280&quot;</value>
                  <value>&quot;85933&quot;</value>
                  <value>&quot;86735&quot;</value>
                  <value>&quot;97876&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;100567&quot;' value='GSHP' />
                <alias key='&quot;102332&quot;' value='Cheapest' />
                <alias key='&quot;108820&quot;' value='Durable' />
                <alias key='&quot;130777&quot;' value='Base' />
                <alias key='&quot;130840&quot;' value='Affordable' />
                <alias key='&quot;99999&quot;' value='Other' />
              </aliases>
            </column>
            <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;  (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4480331150059234]' derivation='None' name='[none:Calculation_4480331150059234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1130312101746663]' derivation='Sum' name='[sum:Calculation_1130312101746663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7370312102644552]' derivation='Sum' name='[sum:Calculation_7370312102644552:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Sum' name='[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[ID-string (Interesting points]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[ID-string (Interesting points]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[ID-string (Interesting points]' member='%null%' />
                <groupfilter function='member' level='[ID-string (Interesting points]' member='&quot;97876&quot;' />
                <groupfilter function='member' level='[ID-string (Interesting points]' member='&quot;99999&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[ID-string (Interesting points]' direction='ASC'>
            <dictionary>
              <bucket>&quot;102332&quot;</bucket>
              <bucket>&quot;130840&quot;</bucket>
              <bucket>&quot;130777&quot;</bucket>
              <bucket>&quot;108820&quot;</bucket>
              <bucket>&quot;100567&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_2160328153208285:nk]' />
              <groupfilter function='member' level='[none:Calculation_2160328153208285:nk]' member='&quot;155642&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]'>
            <groupfilter function='member' level='[none:Calculation_4480331150059234:nk]' member='&quot;ERS86&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[ID-string (Interesting points]</column>
            <column>[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#26794a' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#daa800' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[csv.41709.530460324073].[sum:Calculation_7370312102644552:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / ([csv.41709.530460324073].[none:Calculation_4480331150059234:nk] / ([csv.41709.530460324073].[ID-string (Interesting points] / ([csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk] / ([csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk] / [csv.41709.530460324073].[none:Calculation_2160328153208285:nk]))))))</rows>
        <cols>([csv.41709.530460324073].[sum:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[sum:Calculation_2640311145556471:qk] + ([csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk] + ([csv.41709.530460324073].[sum:Calculation_1130312101746663:qk] + [csv.41709.530460324073].[sum:Calculation_7370312102644552:qk]))))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 72'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</rows>
        <cols>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 73'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Avg' name='[avg:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3280402162812085]' derivation='Sum' name='[sum:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='80' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='81' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='82' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='83' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='84' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='85' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='86' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='87' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='88' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good-point&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[EstimatedERS (bin)]' />
              <text column='[csv.41709.530460324073].[EstimatedERS (bin)]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[sum:Calculation_3280402162812085:qk]' />
                <format attr='mark-labels-range-min' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[sum:Calculation_3280402162812085:qk])</rows>
        <cols>[csv.41709.530460324073].[avg:Calculation_2640311145556471:qk]</cols>
        <pages>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
    </worksheet>
    <worksheet name='Sheet 74'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Base-or-upgrade' datatype='string' name='[Calculation_4130311125228917]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Calculation_2160328153208285]=&quot;130777&quot; or [Calculation_2160328153208285]=&quot;144923&quot;) then &quot;BASE&quot;&#13;&#10;ELSE &quot;UPGRADE&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='real' name='[FuelEleckWh]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[ID-string (Interesting points]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_2160328153208285]' default='&quot;99999&quot;'>
                <bin value='&quot;100567&quot;'>
                  <value>&quot;100567&quot;</value>
                  <value>&quot;65013&quot;</value>
                </bin>
                <bin value='&quot;102332&quot;'>
                  <value>&quot;102332&quot;</value>
                  <value>&quot;107631&quot;</value>
                  <value>&quot;115642&quot;</value>
                  <value>&quot;115943&quot;</value>
                  <value>&quot;131404&quot;</value>
                  <value>&quot;132360&quot;</value>
                  <value>&quot;155642&quot;</value>
                </bin>
                <bin value='&quot;108820&quot;'>
                  <value>&quot;108820&quot;</value>
                  <value>&quot;114270&quot;</value>
                  <value>&quot;122591&quot;</value>
                  <value>&quot;124250&quot;</value>
                  <value>&quot;131290&quot;</value>
                  <value>&quot;148168&quot;</value>
                  <value>&quot;91653&quot;</value>
                </bin>
                <bin value='&quot;130777&quot;'>
                  <value>&quot;130777&quot;</value>
                  <value>&quot;144923&quot;</value>
                </bin>
                <bin value='&quot;130840&quot;'>
                  <value>&quot;130840&quot;</value>
                  <value>&quot;132280&quot;</value>
                  <value>&quot;85933&quot;</value>
                  <value>&quot;86735&quot;</value>
                  <value>&quot;97876&quot;</value>
                </bin>
              </calculation>
              <aliases>
                <alias key='&quot;100567&quot;' value='GSHP' />
                <alias key='&quot;102332&quot;' value='Cheapest' />
                <alias key='&quot;108820&quot;' value='Durable' />
                <alias key='&quot;130777&quot;' value='Base' />
                <alias key='&quot;130840&quot;' value='Affordable' />
                <alias key='&quot;99999&quot;' value='Other' />
              </aliases>
            </column>
            <column-instance column='[FuelEleckWh]' derivation='Avg' name='[avg:FuelEleckWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4130311125228917]' derivation='None' name='[none:Calculation_4130311125228917:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[ID-string (Interesting points]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[ID-string (Interesting points]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[ID-string (Interesting points]' member='%null%' />
                <groupfilter function='member' level='[ID-string (Interesting points]' member='&quot;99999&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[ID-string (Interesting points]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4130311125228917:nk] / ([csv.41709.530460324073].[ID-string (Interesting points] / [csv.41709.530460324073].[none:Calculation_2160328153208285:nk]))</rows>
        <cols>[csv.41709.530460324073].[avg:FuelEleckWh:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 75'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Escillation Rate: Gas' datatype='real' default-format='p0.00%' name='[Escillation Rate: Electricity (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.02'>
              <calculation class='tableau' formula='0.02' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Municipal Taxes' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy 2)]' param-domain-type='range' role='measure' type='quantitative' value='0.0069646999999999999'>
              <calculation class='tableau' formula='0.0069646999999999999' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Escillation Rate: Electricity' datatype='real' default-format='p0.00%' name='[Interest rate (%) (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.0395'>
              <calculation class='tableau' formula='0.0395' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Amoritization period ' datatype='real' default-format='n#,##0&quot; yrs&quot;;-#,##0&quot; yrs&quot;' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='25.0'>
              <calculation class='tableau' formula='25.0' />
              <range min='1.0' />
            </column>
            <column caption='Base Case heating fuel type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Fuel neutral&quot;'>
              <calculation class='tableau' formula='&quot;Fuel neutral&quot;' />
              <members>
                <member value='&quot;Natural gas&quot;' />
                <member value='&quot;Electricity&quot;' />
                <member value='&quot;Fuel neutral&quot;' />
              </members>
            </column>
            <column caption='Utilities: Assessment year' datatype='real' name='[Parameter 6]' param-domain-type='list' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
              <members>
                <member value='0.0' />
                <member value='5.0' />
                <member value='10.0' />
                <member value='15.0' />
                <member value='20.0' />
                <member value='25.0' />
              </members>
            </column>
            <column caption='PV costs ($/W installed)' datatype='real' default-format='c&quot;$&quot;#,##0.000;-&quot;$&quot;#,##0.000' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='3.2000000000000002'>
              <calculation class='tableau' formula='3.2000000000000002' />
              <range max='10.0' min='0.0' />
            </column>
            <column caption='Interest rate (%)' datatype='real' default-format='p0.00%' name='[generation Parameter]' param-domain-type='range' role='measure' type='quantitative' value='0.035000000000000003'>
              <calculation class='tableau' formula='0.035000000000000003' />
              <range max='1.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrade CostAdjuster by Fuel type ($)' datatype='integer' name='[Calculation_0000328154041002]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Parameters].[Parameter 2] = &quot;Natural gas&quot; OR &#13;&#10;     ( [Parameters].[Parameter 2] = &quot;Fuel neutral&quot; AND [Calculation_4270328153916499] = &quot;Natural gas&quot; ) ) then 0&#13;&#10;&#13;&#10;&#13;&#10;else 1600&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Cost of ownership --- difference from base case ($/year), no markup' datatype='real' name='[Calculation_0040311143954202]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1760312105551885]*[Parameters].[Interest rate (%) (copy 2)]+[Calculation_7830311143752081]-([Calculation_4380312104008812]-[Calculation_7370312102644552])&#13;&#10;&#13;&#10;//[Utilities: Adjusted Base case charges ($/year)]-[UTILITIES: Total adjusted bill ($/year)]&#13;&#10;//[Base Energy Bill ($/year)]-[UtilBillNetDoll]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted ElecFurn cost' datatype='integer' name='[Calculation_1010313135857628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-HVACSystem] = &quot;elec-baseboard&quot; ) then 4950 - 1600&#13;&#10;else 0 &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(6.85*12 +([FuelEleckWh]-[EnergyPVkWh])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Water conservation package ($)' datatype='integer' name='[Calculation_2900312105624061]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([GOtag:DHWLoadScale]=&quot;Low-Flow&quot; ) then 80&#13;&#10;else 0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Cost of Borrowing ($)' datatype='real' name='[Calculation_3730311142712896]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(( [Calculation_3950311142640640] * ( 1 + [Calculation_3950311142640640] ) ^ ([Parameters].[Parameter 1] * 12 ) )  &#13;&#10;/&#13;&#10;( (1 + [Calculation_3950311142640640]  ) ^ ( [Parameters].[Parameter 1] * 12 ) - 1 )&#13;&#10;* [Calculation_1760312105551885] ) &#13;&#10;* [Parameters].[Parameter 1] * 12' scope-isolation='false' />
            </column>
            <column caption='MonthlyInterestRate (%)' datatype='real' name='[Calculation_3950311142640640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[generation Parameter]/12' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Utilities: Adjusted Base case charges ($/year)' datatype='real' name='[Calculation_4380312104008812]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Parameters].[Parameter 2] = &quot;Natural gas&quot; OR &#13;&#10;     ( [Parameters].[Parameter 2] = &quot;Fuel neutral&quot; AND [Calculation_4270328153916499] = &quot;Natural gas&quot; )&#13;&#10;    ) then &#13;&#10;    905*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;    +&#13;&#10;    563.4*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;    2108.43*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Wall-insulation-type' datatype='string' name='[Calculation_4800326161225524]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot;    ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjust ACH cost ($)' datatype='real' name='[Calculation_5080312144736857]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4800326161225524] = &quot;OC&quot; ) then &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then 0&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -3049&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -3260&#13;&#10;    end&#13;&#10;else &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;    end&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Total adjusted bill ($/year)' datatype='real' name='[Calculation_7370312102644552]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1130312101746663]+[UTILITIES: Adjusted Electricity Bill  (copy)]' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Annual cost of borrowing ($/year)' datatype='real' name='[Calculation_7830311143752081]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_3730311142712896]/[Parameters].[Parameter 1]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: PV cost adjustment ($)' datatype='real' name='[Calculation_8190312105315011]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PVSizekW]*([Parameters].[Parameter 7]*1000-4687)' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Electric conservation package ($)' datatype='integer' name='[Calculation_8710312105714395]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [GOtag:ElecLoadScale] = &quot;NGERSNoReduction19&quot; ) then 0 &#13;&#10;else 140&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Main Wall adjust cost (No air sealing credit) ' datatype='integer' name='[Calculation_8710326154745859]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [GOtag:Opt-MainWall] &#13;&#10;  when &quot;BaseR20&quot; then 0 &#13;&#10;  when &quot;DblStud-R37-Wall&quot; then   1350&#13;&#10;  when &quot;DblStud-R52-Wall&quot; then   1350&#13;&#10;  when &quot;Stud-R21-2x4&quot; then       0 &#13;&#10;  when &quot;Stud-R275-Wall&quot; then    619&#13;&#10;  when &quot;Stud-R305-Wall&quot; then    555&#13;&#10;  when &quot;Stud-R275MW-Wall&quot; then   505&#13;&#10;  when &quot;AdvFrm-R20-Wall&quot; then   110&#13;&#10;  else -9000000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='real' name='[FuelEleckWh]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[FuelNaturalGasM3]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='real' name='[PVSizekW]' role='measure' type='quantitative'>
            </column>
            <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;  (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[UpgradeCostDoll]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3280402162812085]' derivation='Max' name='[max:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' context='true'>
            <groupfilter from='75' function='range' level='[EstimatedERS (bin)]' to='95' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Calculation_2640311145556471])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Calculation_2160328153208285:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[max:Calculation_3280402162812085:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] / [csv.41709.530460324073].[EstimatedERS (bin)])</rows>
        <cols>([csv.41709.530460324073].[max:Calculation_3280402162812085:qk] + [csv.41709.530460324073].[max:Calculation_2640311145556471:qk])</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[Electricity savings (kWh/yr) (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 76'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr) (bin)' datatype='integer' name='[Electricity savings (kWh/yr) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Calculation_3280402162812085]' peg='0' size='1000' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8430311144549035]' derivation='Min' name='[min:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_4270328153916499:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[min:Calculation_8430311144549035:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[min:Calculation_8430311144549035:qk])</rows>
        <cols>[csv.41709.530460324073].[Electricity savings (kWh/yr) (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 77'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Energy savings (%)' datatype='real' name='[Calculation_3710312133127667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(106.65-[EnergyTotal])/106.65' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_3710312133127667]' derivation='Avg' name='[avg:Calculation_3710312133127667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EstimatedERS (bin)]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[EstimatedERS (bin)]' member='75' />
                <groupfilter function='member' level='[EstimatedERS (bin)]' member='76' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <color column='[csv.41709.530460324073].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[avg:Calculation_3710312133127667:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 79'>
      <table>
        <view>
          <datasources>
          </datasources>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 80'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource caption='Sheet1 (LEEP-MB-Good_subset.xlsx)' name='excel.41736.417335405094' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41736.417335405094'>
            <column datatype='string' datatype-customized='true' name='[ID#]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='BAD' />
              </aliases>
            </column>
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel.41736.417335405094].[none:Status:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <join-lod-include-overrides>
          <column>[excel.41736.417335405094].[ID#]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 81'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource caption='Sheet1 (LEEP-MB-Good_subset.xlsx)' name='excel.41736.417335405094' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Energy savings (%)' datatype='real' name='[Calculation_3710312133127667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(106.65-[EnergyTotal])/106.65' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3710312133127667]' derivation='Sum' name='[sum:Calculation_3710312133127667:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel.41736.417335405094'>
            <column datatype='string' name='[Status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='BAD' />
              </aliases>
            </column>
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' />
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[Set 1]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel.41736.417335405094].[none:Status:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[sum:Calculation_2640311145556471:qk])</rows>
        <cols>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 82'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Electricity: total benefit to utility' datatype='real' name='[Calculation_8140403110609232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Electricity: total benefit to utility (bin)' datatype='integer' name='[Electricity: total benefit to utility (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Calculation_8140403110609232]' peg='0' size='1000' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8430311144549035]' derivation='Sum' name='[sum:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
          </pane>
          <pane id='6' y-axis-name='[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * ([csv.41709.530460324073].[sum:Calculation_2640311145556471:qk] + [csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]))</rows>
        <cols>[csv.41709.530460324073].[Electricity: total benefit to utility (bin)]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[Electricity: total benefit to utility (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 89'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Electricity: total benefit to utility' datatype='real' name='[Calculation_8140403110609232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[EnergyPVkWh]+[Calculation_3280402162812085]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Breakeven' datatype='string' name='[Calculation_9470403125230887]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='//if ( [Annual savings, 40% markup ] &gt; 0 ) then &quot;40%+&quot;&#13;&#10;if ( [Annual savings, 20% markup (copy) (copy)] &gt; 0 ) then &quot;Builder markup is 30%+&quot;&#13;&#10;elseif ( [Annual savings, 10% markup (copy)] &gt; 0 ) then &quot;Builder markup is 20%+&quot;&#13;&#10;elseif ( [Cost of ownership --- difference from base case ($/year), no markup (copy)] &gt; 0 ) then &quot;Builder markup is 10%+&quot;&#13;&#10;elseif ( [Calculation_2640311145556471] &gt; 0 ) then &quot;Builder markup is 0%+&quot;&#13;&#10;else &quot;Homeowner won&apos;t break even&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr) (bin)' datatype='integer' name='[Electricity savings (kWh/yr) (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Calculation_3280402162812085]' peg='0' size='1000' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9470403125230887]' derivation='Count' name='[cnt:Calculation_9470403125230887:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8140403110609232]' derivation='Min' name='[min:Calculation_8140403110609232:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9470403125230887]' derivation='None' name='[none:Calculation_9470403125230887:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' filter-group='3'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' direction='DESC' using='[csv.41709.530460324073].[cnt:Calculation_9470403125230887:qk]'>
          </sort>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Natural gas&quot;</bucket>
              <bucket>&quot;Electricity&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;40\%+&quot;</bucket>
              <bucket>&quot;30\%+&quot;</bucket>
              <bucket>&quot;20\%+&quot;</bucket>
              <bucket>&quot;10\%+&quot;</bucket>
              <bucket>&quot;0\%+&quot;</bucket>
              <bucket>&quot;No breakeven&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter from='&quot;2-plate&quot;' function='range' level='[none:GOtag:Opt-DWHRandSDHW:nk]' to='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NoPV&quot;</bucket>
              <bucket>&quot;SizedPV|5kW&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='Electrical savings per home, (kWh/year)' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_8140403110609232:qk]' field-type='quantitative' max='23000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' max='292.33474069876388' min='-1375.6775233655071' num-steps='8' palette='tableau-red-black' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <lod column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[EstimatedERS (bin)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-field' value='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[min:Calculation_8140403110609232:qk])</rows>
        <cols>[csv.41709.530460324073].[Electricity savings (kWh/yr) (bin)]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' mark-type='all' trail-effect='none' />
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyDHWGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[EnergyPlugGJ]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[EnergyDHWGJ]' derivation='Avg' name='[avg:EnergyDHWGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPlugGJ]' derivation='Avg' name='[avg:EnergyPlugGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[csv.41709.530460324073].[avg:EnergyPlugGJ:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[avg:EnergyDHWGJ:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk] / [csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk])</rows>
        <cols>([csv.41709.530460324073].[avg:EnergyPlugGJ:qk] + [csv.41709.530460324073].[avg:EnergyDHWGJ:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 90'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='ERS-int' datatype='string' name='[Calculation_4480331150059234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;ERS&quot;+str(int([Calculation_8430311144549035]))' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_4480331150059234]' derivation='None' name='[none:Calculation_4480331150059234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk] / [csv.41709.530460324073].[none:Calculation_4480331150059234:nk])</rows>
        <cols>[csv.41709.530460324073].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet lock-quick-filters='true' name='Sheet 91'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Base Case heating fuel type' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Fuel neutral&quot;'>
              <calculation class='tableau' formula='&quot;Fuel neutral&quot;' />
              <members>
                <member value='&quot;Natural gas&quot;' />
                <member value='&quot;Electricity&quot;' />
                <member value='&quot;Fuel neutral&quot;' />
              </members>
            </column>
            <column caption='PV costs ($/W installed)' datatype='real' default-format='c&quot;$&quot;#,##0.000;-&quot;$&quot;#,##0.000' name='[Parameter 7]' param-domain-type='range' role='measure' type='quantitative' value='3.2000000000000002'>
              <calculation class='tableau' formula='3.2000000000000002' />
              <range max='10.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrade CostAdjuster by Fuel type ($)' datatype='integer' name='[Calculation_0000328154041002]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([Parameters].[Parameter 2] = &quot;Natural gas&quot; OR &#13;&#10;     ( [Parameters].[Parameter 2] = &quot;Fuel neutral&quot; AND [Calculation_4270328153916499] = &quot;Natural gas&quot; ) ) then 0&#13;&#10;&#13;&#10;&#13;&#10;else 1600&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted ElecFurn cost' datatype='integer' name='[Calculation_1010313135857628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-HVACSystem] = &quot;elec-baseboard&quot; ) then 4950 - 1600&#13;&#10;else 0 &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(6.85*12 +([FuelEleckWh]-[EnergyPVkWh])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Water conservation package ($)' datatype='integer' name='[Calculation_2900312105624061]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([GOtag:DHWLoadScale]=&quot;Low-Flow&quot; ) then 80&#13;&#10;else 0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='SHOW-ERS-Filter' datatype='string' name='[Calculation_4250401113310063]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4480331150059234] = &quot;ERS&quot;+str([Parameters].[Parameter 8]) ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Wall-insulation-type' datatype='string' name='[Calculation_4800326161225524]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot;    ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjust ACH cost ($)' datatype='real' name='[Calculation_5080312144736857]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4800326161225524] = &quot;OC&quot; ) then &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then 0&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -3049&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -3260&#13;&#10;    end&#13;&#10;else &#13;&#10;    if ([GOtag:Opt-AirTightness]=&quot;Typical23&quot; ) then 0 &#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;R2000&quot; ) then -1399.542933&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;Cdn1ACH&quot; ) then -1739.1096&#13;&#10;    elseif ([GOtag:Opt-AirTightness]=&quot;PassiveHouse&quot; ) then -1950.59&#13;&#10;    end&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: PV cost adjustment ($)' datatype='real' name='[Calculation_8190312105315011]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[PVSizekW]*([Parameters].[Parameter 7]*1000-4687)' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Electric conservation package ($)' datatype='integer' name='[Calculation_8710312105714395]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [GOtag:ElecLoadScale] = &quot;NGERSNoReduction19&quot; ) then 0 &#13;&#10;else 140&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Main Wall adjust cost (No air sealing credit) ' datatype='integer' name='[Calculation_8710326154745859]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [GOtag:Opt-MainWall] &#13;&#10;  when &quot;BaseR20&quot; then 0 &#13;&#10;  when &quot;DblStud-R37-Wall&quot; then   1350&#13;&#10;  when &quot;DblStud-R52-Wall&quot; then   1350&#13;&#10;  when &quot;Stud-R21-2x4&quot; then       0 &#13;&#10;  when &quot;Stud-R275-Wall&quot; then    619&#13;&#10;  when &quot;Stud-R305-Wall&quot; then    555&#13;&#10;  when &quot;Stud-R275MW-Wall&quot; then   505&#13;&#10;  when &quot;AdvFrm-R20-Wall&quot; then   110&#13;&#10;  else -9000000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Show Fuel' datatype='string' name='[Calculation_9940401113855898]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = [Parameters].[Focus on ERS (copy)] ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:GOconfig_rotate]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:HRVcontrol]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[GOtag:Opt-DHWSystem (copy)]'>
                <bin value='&quot;BaseDHW&quot;'>
                  <value>&quot;BaseDHW&quot;</value>
                  <value>&quot;ElectricStorage&quot;</value>
                  <value>&quot;GasInstantaneous&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[GOtag:Opt-DHWSystem]' />
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExposedFloor]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtBasementWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtLeftSideWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FrontWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-OverhangWidth]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:RoofPitch]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[PVSizekW]' role='measure' type='quantitative'>
            </column>
            <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;  (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[UpgradeCostDoll]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4250401113310063]' derivation='None' name='[none:Calculation_4250401113310063:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9940401113855898]' derivation='None' name='[none:Calculation_9940401113855898:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:GOconfig_rotate]' derivation='None' name='[none:GOtag:GOconfig_rotate:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:HRVcontrol]' derivation='None' name='[none:GOtag:HRVcontrol:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem (copy)]' derivation='None' name='[none:GOtag:Opt-DHWSystem (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExposedFloor]' derivation='None' name='[none:GOtag:Opt-ExposedFloor:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtBasementWindow]' derivation='None' name='[none:GOtag:Opt-ExtBasementWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtLeftSideWindow]' derivation='None' name='[none:GOtag:Opt-ExtLeftSideWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FrontWindows]' derivation='None' name='[none:GOtag:Opt-FrontWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-OverhangWidth]' derivation='None' name='[none:GOtag:Opt-OverhangWidth:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:RoofPitch]' derivation='None' name='[none:GOtag:RoofPitch:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1130312101746663]' derivation='Sum' name='[sum:Calculation_1130312101746663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Sum' name='[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' context='true' />
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]'>
            <groupfilter count='1' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Calculation_1760312105551885])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Calculation_2160328153208285:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_4250401113310063:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_9940401113855898:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[Set 1]</column>
            <column>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' field-type='quantitative' max='1500.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='25000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:GOconfig_rotate:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:HRVcontrol:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-AirTightness &amp; GOtag:Opt-MainWall (Combined)]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem (copy):nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-DHWSystem (copy) (group)]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:RoofPitch:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + ([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk] + [csv.41709.530460324073].[sum:Calculation_1130312101746663:qk])))</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 92'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(6.85*12 +([FuelEleckWh]-[EnergyPVkWh])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='ID-string' datatype='string' name='[Calculation_2160328153208285]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([ID])' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='SHOW-ERS-Filter' datatype='string' name='[Calculation_4250401113310063]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4480331150059234] = &quot;ERS&quot;+str([Parameters].[Parameter 8]) ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Show Fuel' datatype='string' name='[Calculation_9940401113855898]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = [Parameters].[Focus on ERS (copy)] ) then &quot;SHOW&quot;&#13;&#10;else &quot;HIDE&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Ext-DryWall]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;  (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160328153208285]' derivation='None' name='[none:Calculation_2160328153208285:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4250401113310063]' derivation='None' name='[none:Calculation_4250401113310063:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9940401113855898]' derivation='None' name='[none:Calculation_9940401113855898:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Ext-DryWall]' derivation='None' name='[none:GOtag:Ext-DryWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1130312101746663]' derivation='Sum' name='[sum:Calculation_1130312101746663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8430311144549035]' derivation='Sum' name='[sum:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Sum' name='[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' context='true' />
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_4250401113310063:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_9940401113855898:nk]' member='&quot;SHOW&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[Set 1]</column>
            <column>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <tooltip column='[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]' />
              <tooltip column='[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]' />
              <tooltip column='[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' />
              <tooltip column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <tooltip column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
                <run fontcolor='#000000'>Æ&#10;</run>
                <run fontcolor='#000000'>&lt;[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#000000'>&lt;</run>
                <run fontcolor='#000000'>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</run>
                <run fontcolor='#000000'>&gt;</run>
                <run fontcolor='#000000'>: </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[max:Calculation_2640311145556471:qk] + ([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + ([csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk] + [csv.41709.530460324073].[sum:Calculation_1130312101746663:qk])))</rows>
        <cols>([csv.41709.530460324073].[EstimatedERS (bin)] / [csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 93'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>Pathways to ERS 83: Gas heating</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='UTILITIES: Adjusted Electricity Bill ' datatype='real' name='[Calculation_1130312101746663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(6.85*12 +([FuelEleckWh]-[EnergyPVkWh])*0.0694)*(1+[Parameters].[Interest rate (%) (copy)])^[Parameters].[Parameter 6]' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Better off?' datatype='string' name='[Calculation_6170407152248136]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2640311145556471] &gt; 0 ) then &#13;&#10;str(round([Calculation_2640311145556471]))+&quot; better off&quot; &#13;&#10;else&#13;&#10;str(round(abs([Calculation_2640311145556471])))+&quot; worse off&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column caption='ID-filter (ERS-83-gas notes' datatype='string' name='[ID-filter (ERS-83-gas) (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 82401 ) then &quot;Includes HP water heater&quot; &#13;&#10;elseif ( [ID] = 66514 ) then &quot;Includes gas water heating&quot; &#13;&#10;elseif ( [ID] = 107566 ) then &quot;Improves insulation levels&quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot;other&quot;&#13;&#10;end' scope-isolation='false' />
              <aliases>
                <alias key='&quot;ERS 83, gas, Cheapest &amp; Most affordable&quot;' value='ERS 83 Cheapest &amp; most affodable' />
                <alias key='&quot;ERS 83, gas, durable &quot;' value='ERS 83: Invest in envelope ' />
              </aliases>
            </column>
            <column caption='ID-filter (ERS-83-gas)' datatype='string' name='[ID-filter (copy 2)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [ID] = 130777 ) then &quot;ERS 76, electric, base case&quot;&#13;&#10;elseif ( [ID] = 144923 ) then &quot;ERS 76, gas, Base Case, gas heat&quot; &#13;&#10;elseif ( [ID] = 82401 ) then &quot;ERS 83, gas, Cheapest &amp; Most affordable&quot; &#13;&#10;elseif ( [ID] = 66514 ) then &quot;ERS 83, all gas&quot; &#13;&#10;elseif ( [ID] = 107566 ) then &quot;ERS 83, gas, durable &quot;&#13;&#10;//elseif ( [ID] = 49073 ) then &quot;Gas Furnace: Most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 49664 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 101136 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 68233 ) then &quot;Gas Furnace: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 56122 ) then &quot;Electric Furnace: Cheapest and most affordable ERS 80 option&quot;&#13;&#10;//elseif ( [ID] = 57927 ) then &quot;Electric Furnace: Most affordable affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 57061 ) then &quot;Electric Furnace: Cheapest ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 59952 ) then &quot;Electric Furnace: Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 103159 ) then &quot;Electric Furnace: Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 38426 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 83 option&quot;&#13;&#10;//elseif ( [ID] = 49552 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 52695 ) then &quot;CCASHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;//elseif ( [ID] = 32565 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 86 option&quot;&#13;&#10;//elseif ( [ID] = 44897 ) then &quot;GSHP: Cheapest &amp; Most affordable ERS 89 option&quot;&#13;&#10;else &quot;other&quot;&#13;&#10;end' scope-isolation='false' />
              <aliases>
                <alias key='&quot;ERS 83, all gas&quot;' value='ERS 83: all gas heating' />
                <alias key='&quot;ERS 83, gas, Cheapest &amp; Most affordable&quot;' value='ERS 83: Cheapest &amp; most affodable' />
                <alias key='&quot;ERS 83, gas, durable &quot;' value='ERS 83: Invest in envelope ' />
              </aliases>
            </column>
            <column caption='UTILITIES: Adjusted Gas bill' datatype='real' name='[UTILITIES: Adjusted Electricity Bill  (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [FuelNaturalGasM3] &gt; 1 ) then &#13;&#10;  (14.0*12 + [FuelNaturalGasM3] * 0.2298 )*(1+[Parameters].[Escillation Rate: Electricity (copy)])^[Parameters].[Parameter 6]&#13;&#10;else &#13;&#10;  0&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6170407152248136]' derivation='None' name='[none:Calculation_6170407152248136:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[ID-filter (ERS-83-gas) (copy)]' derivation='None' name='[none:ID-filter (ERS-83-gas) (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[ID-filter (copy 2)]' derivation='None' name='[none:ID-filter (copy 2):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1130312101746663]' derivation='Sum' name='[sum:Calculation_1130312101746663:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2640311145556471]' derivation='Sum' name='[sum:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UTILITIES: Adjusted Electricity Bill  (copy)]' derivation='Sum' name='[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:Calculation_1130312101746663:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[sum:UTILITIES: Adjusted Electricity Bill  (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:ID-filter (copy 2):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ID-filter (copy 2):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:ID-filter (copy 2):nk]' member='&quot;ERS 76, electric, base case&quot;' />
                <groupfilter function='member' level='[none:ID-filter (copy 2):nk]' member='&quot;ERS 76, gas, Base Case, gas heat&quot;' />
                <groupfilter function='member' level='[none:ID-filter (copy 2):nk]' member='&quot;other&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:ID-filter (copy 2):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ERS 83, gas, Cheapest &amp; Most affordable&quot;</bucket>
              <bucket>&quot;ERS 83, gas, durable &quot;</bucket>
              <bucket>&quot;ERS 83, all gas&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:ID-filter (copy 2):nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='Cost to upgrade home above code ($, no markup))' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' scope='cols' value='Annual Savings to Homeowner compared to code-built home($/year, no markup)' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' field-type='quantitative' max='200.0' min='-300.0' range-type='fixed' scope='cols' type='space' />
            <format attr='height' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='91' />
            <format attr='height' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='91' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[csv.41709.530460324073].[none:ID-filter (copy 2):nk]' value='160' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:ID-filter (copy 2):nk]' value='132' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' max='100.0' min='-128.8151537606746' palette='tableau-red-white-black' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='14' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' x-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' />
              <text column='[csv.41709.530460324073].[none:ID-filter (ERS-83-gas) (copy):nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontcolor='#000000'>&lt;</run>
                <run fontalignment='0' fontcolor='#000000'>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</run>
                <run fontalignment='0' fontcolor='#000000'>&gt;</run>
                <run fontalignment='0' fontcolor='#000000'>Æ&#10;</run>
                <run fontalignment='0' fontcolor='#000000'>&lt;</run>
                <run fontalignment='0' fontcolor='#000000'>[csv.41709.530460324073].[none:ID-filter (ERS-83-gas) (copy):nk]</run>
                <run fontalignment='0' fontcolor='#000000'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4d9f6d' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' />
              <text column='[csv.41709.530460324073].[none:Calculation_6170407152248136:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontcolor='#000000'>Homeowner is&#10;</run>
                <run bold='true' fontalignment='0' fontcolor='#000000'>$&lt;[csv.41709.530460324073].[none:Calculation_6170407152248136:nk]&gt;</run>
                <run fontalignment='0' fontcolor='#000000'>&#10;every year</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[none:ID-filter (copy 2):nk]</rows>
        <cols>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[sum:Calculation_2640311145556471:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 94'>
      <table>
        <view>
          <datasources>
          </datasources>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 95'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Optimization Results</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Energy savings (%)' datatype='real' name='[Calculation_3710312133127667]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(106.65-[EnergyTotal])/106.65' scope-isolation='false' />
            </column>
            <column caption='Energy savings for base (%)' datatype='real' name='[Calculation_7130313100558856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then 0.0&#13;&#10;else -0.5&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Colour-params' datatype='string' name='[Calculation_9520430094845731]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Parameters].[Focus on ERS (copy 2)] = &quot;Breakeven&quot;) then [Calculation_9470403125230887]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Better off?&quot; ) then [Calculation_6170407152248136]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Best-for-homeowner&quot; ) then [Calculation_8750403103901360]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Best+fuel&quot; ) then [Calculation_3690403141636492]&#13;&#10;//elseif ( [Colour by:] = &quot;EstimatedERS -bin&quot; ) then &#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;HVAC system&quot; ) then [GOtag:Opt-HVACSystem]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;DHW system&quot; ) then [GOtag:Opt-DHWSystem]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;DHWR+SDHW&quot; ) then [GOtag:Opt-DWHRandSDHW]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;Main Wall &quot; ) then [GOtag:Opt-MainWall]&#13;&#10;elseif ( [Parameters].[Focus on ERS (copy 2)] = &quot;PV&quot; ) then [GOtag:Opt-StandoffPV]&#13;&#10;//elseif ( [Colour by:] = &quot;Conserved kWH&quot; ) then [Electricity: total benefit to utility]&#13;&#10;else [Calculation_4130311125228917]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-AirTightness]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BackWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementSlabInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-BasementWallInsulation]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Ceilings]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[GOtag:Opt-DHWSystem (copy)]'>
                <bin value='&quot;BaseDHW&quot;'>
                  <value>&quot;BaseDHW&quot;</value>
                  <value>&quot;ElectricStorage&quot;</value>
                  <value>&quot;GasInstantaneous&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[GOtag:Opt-DHWSystem]' />
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExposedFloor]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtBasementWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-ExtLeftSideWindow]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FloorSurface]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-FrontWindows]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HRVSpec]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-Location]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-OverhangWidth]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column datatype='integer' name='[ID]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_9520430094845731]' derivation='None' name='[none:Calculation_9520430094845731:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-AirTightness]' derivation='None' name='[none:GOtag:Opt-AirTightness:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BackWindows]' derivation='None' name='[none:GOtag:Opt-BackWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementSlabInsulation]' derivation='None' name='[none:GOtag:Opt-BasementSlabInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-BasementWallInsulation]' derivation='None' name='[none:GOtag:Opt-BasementWallInsulation:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Ceilings]' derivation='None' name='[none:GOtag:Opt-Ceilings:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem (copy)]' derivation='None' name='[none:GOtag:Opt-DHWSystem (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExposedFloor]' derivation='None' name='[none:GOtag:Opt-ExposedFloor:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtBasementWindow]' derivation='None' name='[none:GOtag:Opt-ExtBasementWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-ExtLeftSideWindow]' derivation='None' name='[none:GOtag:Opt-ExtLeftSideWindow:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FloorSurface]' derivation='None' name='[none:GOtag:Opt-FloorSurface:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-FrontWindows]' derivation='None' name='[none:GOtag:Opt-FrontWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HRVSpec]' derivation='None' name='[none:GOtag:Opt-HRVSpec:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-Location]' derivation='None' name='[none:GOtag:Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-OverhangWidth]' derivation='None' name='[none:GOtag:Opt-OverhangWidth:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[ID]' derivation='None' name='[none:ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Sum' name='[sum:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3710312133127667]' derivation='Sum' name='[sum:Calculation_3710312133127667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7130313100558856]' derivation='Sum' name='[sum:Calculation_7130313100558856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8430311144549035]' derivation='Sum' name='[sum:Calculation_8430311144549035:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[Set 1]' />
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_9520430094845731:nk]' />
          </filter>
          <sort class='manual' column='[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Good\\Electricity&quot;</bucket>
              <bucket>&quot;Good\\Natural gas&quot;</bucket>
              <bucket>&quot;Bad-point\\Natural gas&quot;</bucket>
              <bucket>&quot;Bad-point\\Electricity&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Good&quot;</bucket>
              <bucket>&quot;Bad-point&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;basefurnace&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
              <bucket>&quot;elec-baseboard&quot;</bucket>
              <bucket>&quot;GSHP&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[Set 1]</column>
            <column>[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' field-type='quantitative' max='0.88' min='-0.050000000000000003' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' field-type='quantitative' major-origin='0.0' major-spacing='20000.0' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' value='p0%' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]' value='p0%' />
            <format attr='text-format' field='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='16' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='144' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-AirTightness &amp; GOtag:Opt-MainWall (Combined)]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem (copy):nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-DHWSystem (copy) (group)]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExposedFloor:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtBasementWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-ExtLeftSideWindow:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-FrontWindows:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-OverhangWidth:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[GOtag:Opt-StandoffPV &amp; ERS-int (Combined)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
                <format attr='mark-transparency' value='254' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[csv.41709.530460324073].[none:ID:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#70e95f' />
                <format attr='shape' value=':filled/asterisk' />
                <format attr='size' value='3.4806630611419678' />
                <format attr='mark-transparency' value='144' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[sum:Calculation_3710312133127667:qk] + [csv.41709.530460324073].[sum:Calculation_7130313100558856:qk])</rows>
        <cols>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='224'>
            <formatted-text>
              <run fontcolor='#787878'>Base case (ERS 76)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.0</value>
                    <value>0.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='386' y='-44' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='2' fontcolor='#787878'>Most expensive &#10;option: ERS 96</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                      <field>[csv.41709.530460324073].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>71111.410000000003</value>
                    <value>0.82466159399906247</value>
                    <value>96.637078768207715</value>
                    <value>&quot;[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-252' y='-8' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='243'>
            <formatted-text>
              <run fontcolor='#787878'>Base case: ERS 76</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_7130313100558856:qk]</field>
                      <field>[csv.41709.530460324073].[sum:Calculation_8430311144549035:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.0</value>
                    <value>1.2770745428976159e-05</value>
                    <value>0.0</value>
                    <value>76.50698999883673</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='295' y='-41' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Upg cost'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Electricity savings (kWh/yr)' datatype='real' name='[Calculation_3280402162812085]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4270328153916499] = &quot;Electricity&quot; ) then 29196 - [FuelEleckWh]&#13;&#10;else 11856 - [FuelEleckWh]&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades- Adj upg cost range' datatype='real' name='[Calculation_5660403112505970]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max([Calculation_1760312105551885])-min([Calculation_1760312105551885])' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='Best-for-homewoner' datatype='string' name='[Calculation_8750403103901360]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Calculation_2160328153208285] = &quot;174&quot;    ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;4651&quot;   ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;11036&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;22648&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;26221&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;44714&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;49477&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;50515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;51502&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;52540&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;55676&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;57685&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;64851&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65137&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65428&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65738&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;65998&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66311&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66592&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66628&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;66765&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67016&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67203&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67504&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67518&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67621&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67763&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67812&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;67989&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68101&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68348&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;68684&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69070&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69205&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69359&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69456&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69489&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69515&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69612&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69647&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69711&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;69742&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;70050&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71018&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71157&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71375&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71593&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71910&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;71943&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72356&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72736&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72928&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72975&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;72984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73041&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73451&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73752&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;73907&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74133&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74445&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;74924&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;75478&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;76731&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77165&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77225&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77640&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77793&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;77934&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78665&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;78994&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79107&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79223&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;79585&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80012&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80025&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80027&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80135&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80350&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80656&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80725&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80791&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;80983&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81089&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81214&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81526&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81679&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;81984&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82301&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82401&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82565&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82605&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82733&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82882&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;82913&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83002&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83005&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83283&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83373&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83414&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;83857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84297&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;84627&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85074&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85235&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85522&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85534&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;85730&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86069&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86175&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86266&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86422&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86431&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;86760&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87054&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87068&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87314&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87423&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87602&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87841&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87875&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87904&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87933&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;87957&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88528&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88587&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88701&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88706&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88832&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88833&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;88955&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89028&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89237&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89361&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89380&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89453&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89549&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89603&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;89786&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90058&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90818&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;90940&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91474&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;91923&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92199&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92241&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92287&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92329&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92634&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92651&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92672&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92825&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;92965&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93144&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93358&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93408&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93520&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;93911&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94010&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94162&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94197&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94213&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94227&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;94896&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95186&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95564&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95589&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;95857&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96829&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;96908&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97067&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97077&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97228&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97322&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97447&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;97613&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;98846&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99118&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99569&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99609&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99785&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;99925&quot;  ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100519&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100596&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;100955&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101172&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101263&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101274&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101393&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101466&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101491&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101551&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;101908&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102031&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102074&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102127&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102209&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102397&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102451&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102508&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;102825&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;103720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105131&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105781&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105831&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;105898&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;106106&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108088&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;108220&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109346&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109425&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;109461&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;110948&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115431&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;115943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116230&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;116846&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119079&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119203&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;119728&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;120247&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;121593&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;122549&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123932&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;123936&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124260&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;124409&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;125726&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;129555&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131213&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131358&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131435&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131439&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131454&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131513&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131532&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131536&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131611&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131612&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131708&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131718&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131720&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131798&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;131892&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132150&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132179&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132246&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132329&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132373&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132427&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132483&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132608&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132617&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132651&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132745&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132755&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132766&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;132873&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;133083&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134364&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;134434&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136641&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;136924&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;144796&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;149368&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;150943&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;164947&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166242&quot; ) then &quot;Good&quot;&#13;&#10;elseif ( [Calculation_2160328153208285] = &quot;166537&quot; ) then &quot;Good&quot;&#13;&#10;else &quot;Bad-point&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column datatype='real' name='[EnergyPVkWh]' role='measure' type='quantitative'>
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DWHRandSDHW]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;2-plate&quot;' value='2-Plate SHDW system' />
                <alias key='&quot;2-plate-DWHR-4-36&quot;' value='2-plate SDHW system + DWHR' />
                <alias key='&quot;none&quot;' value='Base case' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3280402162812085]' derivation='Avg' name='[avg:Calculation_3280402162812085:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EnergyPVkWh]' derivation='Avg' name='[avg:EnergyPVkWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8750403103901360]' derivation='None' name='[none:Calculation_8750403103901360:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DWHRandSDHW]' derivation='None' name='[none:GOtag:Opt-DWHRandSDHW:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5660403112505970]' derivation='User' name='[usr:Calculation_5660403112505970:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:Calculation_3280402162812085:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41709.530460324073].[avg:EnergyPVkWh:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' filter-group='3'>
            <groupfilter from='77' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[csv.41709.530460324073].[EstimatedERS (bin)]' direction='DESC' />
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]'>
            <groupfilter function='member' level='[none:Calculation_8750403103901360:nk]' member='&quot;Good&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]'>
            <groupfilter from='&quot;2-plate&quot;' function='range' level='[none:GOtag:Opt-DWHRandSDHW:nk]' to='&quot;none&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='level-members' level='[none:GOtag:Opt-StandoffPV:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</column>
            <column>[csv.41709.530460324073].[:Measure Names]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <size column='[csv.41709.530460324073].[usr:Calculation_5660403112505970:qk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' formula='average' id='refline0' label-type='none' scope='per-cell' value-column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='91' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[EstimatedERS (bin)]</rows>
        <cols>([csv.41709.530460324073].[none:Calculation_4270328153916499:nk] * [csv.41709.530460324073].[min:Calculation_1760312105551885:qk])</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Upgrades by hvac'>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[UpgradeCostDoll]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='Attribute' name='[attr:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='Attribute' name='[attr:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UpgradeCostDoll]' derivation='Sum' name='[sum:UpgradeCostDoll:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane id='7'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[csv.41709.530460324073].[sum:UpgradeCostDoll:qk]' />
              <tooltip column='[csv.41709.530460324073].[attr:GOtag:Opt-HVACSystem:nk]' />
              <tooltip column='[csv.41709.530460324073].[attr:GOtag:Opt-MainWall:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols>[csv.41709.530460324073].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Walls'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cost-effectiveness of wall insulation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Fuel Switch' datatype='string' name='[Calculation_0540328160719477]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [Parameters].[Parameter 2] = [Calculation_4270328153916499] ) then &quot;No&quot; &#13;&#10;Else &quot;Yes&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='Wall-insulation-type' datatype='string' name='[Calculation_4800326161225524]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( [GOtag:Opt-MainWall] = &quot;Stud-R21-2x4&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R275-Wall&quot; OR &#13;&#10;     [GOtag:Opt-MainWall] = &quot;Stud-R305-Wall&quot;    ) then &quot;OC&quot;&#13;&#10;else &quot;other&quot; &#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-CasementWindows]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;DoubleLowEHardCoatArgFill&quot;' value='Double Low-E Hard Coat (high gain)' />
                <alias key='&quot;DoubleLowESoftCoatArgFill&quot;' value='Double Low-E Soft Coat (low gain)' />
                <alias key='&quot;TripleLowEHardCoatKryFill&quot;' value='Triple Low-e Hard coat (high gain)' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-HVACSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;basefurnace&quot;' value='Gas Furnace' />
                <alias key='&quot;elec-baseboard&quot;' value='Electric Furnace' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-MainWall]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BaseR20&quot;' value='2x6 Batt (current code)' />
                <alias key='&quot;Stud-R21-2x4&quot;' value='2x4 Batt with external air-sealed insulation (R22.7)' />
                <alias key='&quot;Stud-R275-Wall&quot;' value='2x6 Batt with external air-sealed insulation (R27.5)' />
                <alias key='&quot;Stud-R305-Wall&quot;' value='Stud-R30.5-Wall' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:Opt-StandoffPV]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;NoPV&quot;' value='No PV' />
                <alias key='&quot;SizedPV|5kW&quot;' value='5 kW of PV' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0540328160719477]' derivation='None' name='[none:Calculation_0540328160719477:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4800326161225524]' derivation='None' name='[none:Calculation_4800326161225524:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-CasementWindows]' derivation='None' name='[none:GOtag:Opt-CasementWindows:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-HVACSystem]' derivation='None' name='[none:GOtag:Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-MainWall]' derivation='None' name='[none:GOtag:Opt-MainWall:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-StandoffPV]' derivation='None' name='[none:GOtag:Opt-StandoffPV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_0540328160719477:nk]'>
            <groupfilter function='member' level='[none:Calculation_0540328160719477:nk]' member='&quot;No&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;basefurnace&quot;' />
              <groupfilter function='member' level='[none:GOtag:Opt-HVACSystem:nk]' member='&quot;elec-baseboard&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GOtag:Opt-MainWall:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;AdvFrm-R20-Wall&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;DblStud-R52-Wall&quot;' />
                <groupfilter function='member' level='[none:GOtag:Opt-MainWall:nk]' member='&quot;Stud-R275MW-Wall&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]'>
            <groupfilter function='member' level='[none:GOtag:Opt-StandoffPV:nk]' member='&quot;NoPV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_0540328160719477:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='116' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='Upgrade Cost' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='30000.0' min='-1055.3266663793104' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='text-orientation' field='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f0f0f0' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dotted' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
            <format attr='stroke-color' id='annotation_2' value='#26794a' />
            <format attr='stroke-color' id='annotation_1' value='#297a98' />
            <format attr='stroke-color' id='annotation_0' value='#f1923e' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <text column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4800326161225524:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' formula='constant' id='refline0' label='' label-type='custom' scope='per-pane' value='0.0' value-column='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' z-order='1' />
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <text column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4800326161225524:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <text column='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' />
              <lod column='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' />
              <lod column='[csv.41709.530460324073].[none:Calculation_4800326161225524:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41709.530460324073].[min:Calculation_1760312105551885:qk] + [csv.41709.530460324073].[max:Calculation_2640311145556471:qk])</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <show-full-range>
          <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
        </show-full-range>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>Double Soft Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>84</value>
                    <value>15561.41</value>
                    <value>&quot;DoubleLowESoftCoatArgFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-140' y='-10' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Double Hard Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>85</value>
                    <value>17081.41</value>
                    <value>&quot;DoubleLowEHardCoatArgFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-195' y='-49' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Triple Hard Coat</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                      <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>86</value>
                    <value>14056.41</value>
                    <value>&quot;TripleLowEHardCoatKryFill&quot;</value>
                    <value>&quot;NoPV&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-75' y='-217' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='conservation:Cost'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Conservation: Costs to the builder&#10; </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LEEP-MB-optimization-data (CloudResultsAllData.csv)' name='csv.41709.530460324073' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='csv.41709.530460324073'>
            <column caption='Upgrades: Adjusted Upgrade cost ($, no markup)' datatype='real' name='[Calculation_1760312105551885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([UpgradeCostDoll]&#13;&#10; +[Calculation_8190312105315011]&#13;&#10; +[Calculation_2900312105624061]&#13;&#10; +[Calculation_8710312105714395]&#13;&#10; +[Calculation_5080312144736857]&#13;&#10; +[Calculation_1010313135857628]&#13;&#10; +[Calculation_8710326154745859]&#13;&#10; +[Calculation_0000328154041002]&#13;&#10;)' scope-isolation='false' />
            </column>
            <column caption='Annual Savings to Homeowner ($/year, no markup)' datatype='real' name='[Calculation_2640311145556471]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_0040311143954202]*-1' scope-isolation='false' />
            </column>
            <column caption='HeatingFuel' datatype='string' name='[Calculation_4270328153916499]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ( contains ([GOtag:Opt-HVACSystem] , &quot;basefurnace&quot; ) ) then &quot;Natural gas&quot;&#13;&#10;else &quot;Electricity&quot;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Annual savings to homewoner: Base-case-reference' datatype='real' name='[Calculation_5440312091758636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_4130311125228917] = &quot;BASE&quot; then [Calculation_2640311145556471]&#13;&#10;else -100000&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Filter-gas-options' datatype='string' name='[Calculation_6670331150314929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4130311125228917]+&quot;:&quot;+[Calculation_4270328153916499]+&quot;:&quot;+[Calculation_4480331150059234]+&quot;:&quot;+[GOtag:DHWLoadScale]+&quot;:&quot;+[GOtag:ElecLoadScale]+&quot;:&quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='Heat+DHW' datatype='string' name='[Calculation_7380401093918234]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_4270328153916499]+&quot; / &quot;+[GOtag:Opt-DHWSystem]' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS' datatype='real' name='[Calculation_8430311144549035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [Calculation_4130311125228917] = &quot;BASE&quot; ) then &#13;&#10;100-&#13;&#10;([EnergyHeatingGJ]+[EnergyDHWGJ]*[Calculation_7350403120027264]-[Calculation_9440311154155886]+31.536)&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;ELSE &#13;&#10;&#13;&#10;100-&#13;&#10;(30.096+[EnergyHeatingGJ]+[EnergyDHWGJ]-[Calculation_9440311154155886])&#13;&#10;/&#13;&#10;(&#13;&#10;  (3.6*49*[Calculation_6940311144727088]/6000*(40+[Parameters].[Parameter 4]/2.5))/1000&#13;&#10; + [Parameters].[Parameter 5]+31.536&#13;&#10;)*20&#13;&#10;&#13;&#10;end&#13;&#10;///100-([EnergyHeating]+[EnergyPlug]+[EnergyDHW])/&#13;&#10;///(&#13;&#10;///(3.6*49*[ERS HDD by region]/6000*(40+[ERS House Volume (m3)]/2.5))/1000&#13;&#10;///+[ERS-Equip (mod)]+[ERS DHW (mod)]&#13;&#10;///)*20' scope-isolation='false' />
            </column>
            <column caption='EstimatedERS (bin)' datatype='integer' name='[EstimatedERS (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_8430311144549035]' peg='0' size='1' />
              <aliases>
                <alias key='75' value='ERS 75' />
                <alias key='76' value='ERS 76' />
                <alias key='77' value='ERS 77' />
                <alias key='80' value='80' />
              </aliases>
            </column>
            <column datatype='string' name='[GOtag:DHWLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:ElecLoadScale]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[GOtag:Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ElectricHP&quot;' value='Electric HP' />
                <alias key='&quot;ElectricStorage&quot;' value='Electric strorage tank' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2640311145556471]' derivation='Max' name='[max:Calculation_2640311145556471:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5440312091758636]' derivation='Max' name='[max:Calculation_5440312091758636:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1760312105551885]' derivation='Min' name='[min:Calculation_1760312105551885:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4270328153916499]' derivation='None' name='[none:Calculation_4270328153916499:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6670331150314929]' derivation='None' name='[none:Calculation_6670331150314929:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7380401093918234]' derivation='None' name='[none:Calculation_7380401093918234:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:DHWLoadScale]' derivation='None' name='[none:GOtag:DHWLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:ElecLoadScale]' derivation='None' name='[none:GOtag:ElecLoadScale:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOtag:Opt-DHWSystem]' derivation='None' name='[none:GOtag:Opt-DHWSystem:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]'>
            <groupfilter from='76' function='range' level='[EstimatedERS (bin)]' to='90' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[EstimatedERS (bin)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[EstimatedERS (bin)]' />
              <groupfilter function='member' level='[EstimatedERS (bin)]' member='76' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:Calculation_6670331150314929:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;BASE:Electricity:ERS76:No-Reduction:NGERSNoReduction19:ElectricStorage&quot;' function='range' level='[none:Calculation_6670331150314929:nk]' to='&quot;UPGRADE:Natural gas:ERS75:No-Reduction:NGERSNoReduction19:BaseDHW&quot;' />
              <groupfilter function='member' level='[none:Calculation_6670331150314929:nk]' member='&quot;UPGRADE:Natural gas:ERS76:No-Reduction:NGERSNoReduction19:BaseDHW&quot;' />
              <groupfilter function='member' level='[none:Calculation_6670331150314929:nk]' member='&quot;UPGRADE:Natural gas:ERS76:No-Reduction:NGERSNoReduction19:ElectricStorage&quot;' />
              <groupfilter from='&quot;UPGRADE:Natural gas:ERS77:Low-Flow:NGERSNoReduction19:BaseDHW&quot;' function='range' level='[none:Calculation_6670331150314929:nk]' to='&quot;UPGRADE:Natural gas:ERS92:Low-Flow:NGERSNoReduction19:GasInstantaneous&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]'>
            <groupfilter from='&quot;ElectricHP&quot;' function='range' level='[none:GOtag:Opt-DHWSystem:nk]' to='&quot;GasInstantaneous&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</column>
            <column>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</column>
            <column>[csv.41709.530460324073].[none:Calculation_6670331150314929:nk]</column>
            <column>[csv.41709.530460324073].[EstimatedERS (bin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='71' />
            <format attr='width' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='112' />
            <format attr='title' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='Upgrade cost ' />
            <format attr='subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' field-type='quantitative' max='28000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='27' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot; $&quot;#,##0;-&quot; $&quot;#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='-90' />
            <format attr='vertical-align' field='[csv.41709.530460324073].[EstimatedERS (bin)]' value='bottom' />
            <format attr='text-format' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' value='c&quot; $&quot;#,##0&quot;  &quot;;-&quot; $&quot;#,##0&quot;  &quot;' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Calibri' />
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f7f7f7' />
            <format attr='fill-below' id='refline0' value='#faf2f2' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='vertical-align' id='refline0' value='bottom' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='body-type' id='annotation_0' value='edge' />
            <format attr='border-style' id='annotation_0' value='solid' />
            <format attr='border-color' id='annotation_0' value='#1b1b1b' />
            <format attr='border-width' id='annotation_0' value='1' />
            <format attr='border-style' id='annotation_1' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='7'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' />
              <text column='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.1988949775695801' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</rows>
        <cols>[csv.41709.530460324073].[EstimatedERS (bin)]</cols>
        <mark-labels>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>83</value>
                <value>3842.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-4' y='47' />
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>83</value>
                <value>3472.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.5' y='-48' />
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>86</value>
                <value>17207.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-12' y='51' />
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>86</value>
                <value>9362.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='12' y='-53' />
          </mark-label>
          <mark-label id='10' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>89</value>
                <value>21250.0</value>
                <value>&quot;Natural gas&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-9' y='40' />
          </mark-label>
          <mark-label id='11' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                  <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>89</value>
                <value>16552.0</value>
                <value>&quot;Electricity&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='18' y='-43' />
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='241'>
            <formatted-text>
              <run fontcolor='#787878'>Base case built to code&#10;(approximately ERS 76)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>174.89652876814273</value>
                    <value>0.023144158308923579</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='184' y='68' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='209'>
            <formatted-text>
              <run fontcolor='#787878'>Base case: ERS 76</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                        <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                      <field>[csv.41709.530460324073].[max:Calculation_5440312091758636:qk]</field>
                      <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>76</value>
                    <value>438.57197745607004</value>
                    <value>0.027796040643352171</value>
                    <value>-145.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='215' y='124' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Compare-builders'>
      <style>
      </style>
      <size maxheight='600' maxwidth='1000' minheight='600' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='Sheet 93' show-title='true' w='99600' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Conserve-by-'>
      <style>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='7' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='99556' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='99556' x='0' y='0'>
                <zone h='100000' id='1' name='Concerve kWH: PV' show-title='true' w='71889' x='0' y='0'>
                </zone>
                <zone h='86000' id='8' name='Concerve kWH: PV' param='[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' type='color' w='27667' x='71889' y='14000'>
                </zone>
                <zone h='14000' id='9' type='empty' w='27667' x='71889' y='0'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Conserve:Costs'>
      <style>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='8' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='99556' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='99556' x='0' y='0'>
                <zone h='100000' id='1' name='conservation:Cost' show-title='true' w='99556' x='0' y='0'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='DB-Break-even-with-elec'>
      <style>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='80667' x='0' y='0'>
              <zone h='100000' id='1' name='Electric-break-even' show-title='true' w='80667' x='0' y='0'>
              </zone>
            </zone>
            <zone fixed-size='174' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='19333' x='80667' y='0'>
              <zone fixed-size='57' h='9856' id='11' is-fixed='true' type='empty' w='19333' x='80667' y='0'>
              </zone>
              <zone h='10142' id='7' param='[Parameters].[Parameter 6]' type='paramctrl' w='19333' x='80667' y='9856'>
                <formatted-text>
                  <run>Assessment year</run>
                </formatted-text>
              </zone>
              <zone h='6856' id='8' param='[Parameters].[Interest rate (%) (copy)]' type='paramctrl' w='19333' x='80667' y='19998'>
              </zone>
              <zone h='6856' id='9' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='paramctrl' w='19333' x='80667' y='26854'>
              </zone>
              <zone h='6856' id='10' param='[Parameters].[generation Parameter]' type='paramctrl' w='19333' x='80667' y='33710'>
              </zone>
              <zone h='7285' id='12' param='[Parameters].[Parameter 2]' type='paramctrl' w='19333' x='80667' y='40566'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='DB-economics-of-gas-elec'>
      <style>
      </style>
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99500' x='0' y='0'>
              <zone h='100000' id='1' name='CostOfChoosingNaturalGas' show-title='true' w='49750' x='0' y='0'>
              </zone>
              <zone h='100000' id='9' name='Savings from Choosing Gas' show-title='true' w='49750' x='49750' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='12833' id='6' name='CostOfChoosingNaturalGas' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' w='19125' x='14125' y='9000'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='DB: Bars-red-black'>
      <style>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='7' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='99556' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='99556' x='0' y='0'>
                <zone h='100000' id='1' name='conservation:Cost' show-title='true' w='99556' x='0' y='0'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='DB: Walls'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Walls' show-title='true' w='84000' x='0' y='0'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone fixed-size='307' h='39875' id='6' is-fixed='true' name='Walls' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='filter' w='16000' x='84000' y='0'>
              </zone>
              <zone h='23375' id='7' name='Walls' param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' w='16000' x='84000' y='39875'>
              </zone>
              <zone h='7875' id='8' name='Walls' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='color' w='16000' x='84000' y='63250'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='DB:Conserve-savings'>
      <style>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='8' param='horz' type='layout-flow' w='99556' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='99556' x='0' y='0'>
                <zone h='100000' id='3' type='layout-basic' w='99556' x='0' y='0'>
                  <zone h='100000' id='6' name='Conservation-savings' show-title='true' w='99556' x='0' y='0'>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='10286' id='9' name='Conservation-savings' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' w='18222' x='80778' y='1000'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='DB:SwitchToPV'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_11' value='top' />
        </style-rule>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='85143' id='7' param='horz' type='layout-flow' w='100000' x='0' y='14857'>
            <zone h='85143' id='5' param='horz' type='layout-flow' w='99556' x='0' y='14857'>
              <zone h='85143' id='3' type='layout-basic' w='99556' x='0' y='14857'>
                <zone h='85143' id='1' name='Sheet 30' w='99556' x='0' y='14857'>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='614' h='14857' id='9' is-fixed='true' name='Sheet 30' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='color' w='73444' x='26556' y='0'>
          </zone>
          <zone h='14857' id='11' type='text' w='26556' x='0' y='0'>
            <formatted-text>
              <run bold='true' fontalignment='2' fontcolor='#000000' fontname='Calibri' fontsize='18'>Cost-effectiveness &#10;of wall insulation &#10;systems</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 17'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='90625' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='90625' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='90625' id='11' name='Elec conserv' show-title='true' w='54500' x='45100' y='0'>
              </zone>
              <zone h='90625' id='12' name='Upg cost' show-title='true' w='45100' x='0' y='0'>
              </zone>
            </zone>
          </zone>
          <zone h='9375' id='17' param='horz' type='layout-flow' w='100000' x='0' y='90625'>
            <zone h='9375' id='10' param='[Parameters].[Parameter 9]' type='paramctrl' w='99600' x='0' y='90625'>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style>
      </style>
      <size maxheight='450' maxwidth='1000' minheight='450' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='COST-comparison' show-title='true' w='99600' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 4'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Upgrades by hvac' show-title='true' w='42000' x='0' y='0'>
              </zone>
              <zone h='100000' id='14' name='Sheet 26' show-title='true' w='42000' x='42000' y='0'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='19125' id='10' name='Upgrades by hvac' param='[csv.41709.530460324073].[none:Calculation_3240312153752374:nk]' type='color' w='16000' x='84000' y='0'>
              </zone>
              <zone h='6375' id='13' param='[Parameters].[Parameter 6]' type='paramctrl' w='16000' x='84000' y='19125'>
              </zone>
              <zone h='12625' id='15' name='Sheet 26' param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' w='16000' x='84000' y='25500'>
              </zone>
              <zone h='12625' id='16' name='Sheet 26' param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' w='16000' x='84000' y='38125'>
              </zone>
              <zone h='18125' id='17' name='Sheet 26' param='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' type='filter' w='16000' x='84000' y='50750'>
              </zone>
              <zone h='15375' id='18' name='Sheet 26' param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' w='16000' x='84000' y='68875'>
              </zone>
              <zone h='8875' id='19' param='[Parameters].[generation Parameter]' type='paramctrl' w='16000' x='84000' y='84250'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 5'>
      <style>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='10' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='7' param='horz' type='layout-flow' w='82222' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='82222' x='0' y='0'>
                <zone h='100000' id='3' type='layout-basic' w='82222' x='0' y='0'>
                  <zone h='78429' id='1' name='Initial-Plot' show-title='true' w='82222' x='0' y='0'>
                  </zone>
                  <zone h='21571' id='8' name='Initial-Plot' param='[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]' type='color' w='82222' x='0' y='78429'>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='9' is-fixed='true' param='vert' type='layout-flow' w='17778' x='82222' y='0'>
              <zone h='7856' id='11' param='[Parameters].[Focus on ERS (copy 2)]' type='paramctrl' w='17778' x='82222' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 7'>
      <style>
      </style>
      <size maxheight='600' maxwidth='1000' minheight='600' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='Sheet 39' show-title='true' w='99600' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='28250' id='6' name='Sheet 39' param='[csv.41709.530460324073].[:Measure Names]' type='color' w='19500' x='78600' y='54875'>
        </zone>
      </zones>
    </dashboard>
    <dashboard lock-quick-filters='true' name='Pathway-finder'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='611' h='100000' id='5' is-fixed='true' param='horz' type='layout-flow' w='61100' x='0' y='0'>
              <zone h='100000' id='6' param='vert' type='layout-flow' w='61100' x='0' y='0'>
                <zone fixed-size='752' h='94000' id='30' is-fixed='true' param='horz' type='layout-flow' w='61100' x='0' y='0'>
                  <zone fixed-size='39' h='94000' id='29' is-fixed='true' name='Cheapest' show-title='true' w='5100' x='0' y='0'>
                    <layout-cache type-h='fixed' type-w='cell' />
                  </zone>
                  <zone h='94000' id='90' name='Sheet 91' show-title='true' w='800' x='5100' y='0'>
                    <layout-cache type-h='fixed' type-w='cell' />
                  </zone>
                  <zone fixed-size='121' h='94000' id='28' is-fixed='true' name='MostAffordable' show-title='true' w='12900' x='5900' y='0'>
                    <layout-cache type-h='fixed' type-w='cell' />
                  </zone>
                  <zone h='94000' id='82' name='Search' show-title='true' w='29900' x='18800' y='0'>
                    <layout-cache type-h='fixed' type-w='cell' />
                  </zone>
                  <zone fixed-size='116' h='94000' id='31' is-fixed='true' name='CompareID' show-title='true' w='12400' x='48700' y='0'>
                    <layout-cache type-h='fixed' type-w='cell' />
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='8' is-fixed='true' param='vert' type='layout-flow' w='16000' x='61100' y='0'>
              <zone h='9375' id='24' param='[Parameters].[Parameter 8]' type='paramctrl' w='16000' x='61100' y='0'>
              </zone>
              <zone h='6375' id='25' param='[Parameters].[Focus on ERS (copy)]' type='paramctrl' w='16000' x='61100' y='9375'>
              </zone>
              <zone h='8125' id='91' name='Sheet 91' param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' w='16000' x='61100' y='15750'>
              </zone>
              <zone h='5375' id='92' name='Sheet 91' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' w='16000' x='61100' y='23875'>
              </zone>
            </zone>
            <zone h='100000' id='84' param='vert' type='layout-flow' w='16800' x='77100' y='0'>
              <zone h='7000' id='83' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' type='filter' w='16800' x='77100' y='0'>
              </zone>
              <zone h='6500' id='85' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' type='filter' w='16800' x='77100' y='7000'>
              </zone>
              <zone h='6500' id='86' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='filter' w='16800' x='77100' y='13500'>
              </zone>
              <zone h='6500' id='87' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' w='16800' x='77100' y='20000'>
              </zone>
              <zone h='14875' id='88' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' type='filter' w='16800' x='77100' y='26500'>
              </zone>
              <zone h='14875' id='89' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]' type='filter' w='16800' x='77100' y='41375'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WaterHeating'>
      <style>
      </style>
      <size maxheight='600' maxwidth='900' minheight='600' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='8' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='99556' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='99556' x='0' y='0'>
                <zone h='100000' id='6' name='Sheet 41' w='99556' x='0' y='0'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Windows'>
      <style>
      </style>
      <size maxheight='700' maxwidth='900' minheight='700' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99556' x='0' y='0'>
              <zone h='100000' id='1' name='Sheet 42' show-title='true' w='99556' x='0' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='23857' id='6' name='Sheet 42' param='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' type='color' w='40000' x='15556' y='7429'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 5'>
      <active id='1' />
      <zones>
        <zone name='Initial-Plot'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]</field>
              <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone leg-item-layout='grid' name='Initial-Plot' pane-specification-id='2' param='[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]' type='color' />
        <zone mode='compact' name='' param='[Parameters].[Focus on ERS (copy 2)]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Initial-Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy 2)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 95'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy 2)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9520430094845731:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Pick-the-best-points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card mode='dropdown' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[EstimatedERS (bin)]' type='filter' />
            <card param='[csv.41709.530460324073].[usr:Calculation_4730403095905672:ok:2]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[ID-string &amp; ERS-int (Combined)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9830403103027661:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='DB:SwitchToPV'>
      <zones>
        <zone name='Sheet 30'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[none:Calculation_7860313141128771:nk]</field>
              <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone leg-item-layout='vert' name='Sheet 30' pane-specification-id='2' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='color' />
        <zone forceUpdate='true' name='' type='text' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Windows'>
      <active id='1' />
      <zones>
        <zone name='Sheet 42'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Sheet 42' pane-specification-id='0' param='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 44'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Walls'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:Calculation_0540328160719477:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_0540328160719477:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4800326161225524:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='DB: Walls'>
      <active id='1' />
      <zones>
        <zone name='Walls'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Walls' pane-specification-id='1' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='DB: Bars-red-black'>
      <active id='1' />
      <zones>
        <zone name='conservation:Cost'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
                  </fields>
                  <multibucket>
                    <bucket>83</bucket>
                  </multibucket>
                </node-reference>
                <page-reference>
                </page-reference>
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 31'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 28'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]&#10;[csv.41709.530460324073].[:Measure Names]' type='color' />
            <card pane-specification-id='7' param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[:Measure Names]</field>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
          <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:SimplePaybackYrs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 33'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Batch analysis'>
      <cards>
        <edge name='left'>
          <strip size='255'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card custom-title='true' mode='type_in' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[:Measure Names]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 27'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
          <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:SimplePaybackYrs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 35'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID:ok]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:SimplePaybackYrs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Upgrades by hvac'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_3240312153752374:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID:ok]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:SimplePaybackYrs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 26'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card pane-specification-id='10' param='[csv.41709.530460324073].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[:Measure Names]</field>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID:ok]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:SimplePaybackYrs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 4'>
      <active id='14' />
      <zones>
        <zone name='Upgrades by hvac'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Sheet 26'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Upgrades by hvac' pane-specification-id='7' param='[csv.41709.530460324073].[none:Calculation_3240312153752374:nk]' type='color' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 6]' type='paramctrl' />
        <zone mode='slider' name='' param='[Parameters].[generation Parameter]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Dots-'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card pane-specification-id='4' param='[csv.41709.530460324073].[none:batch:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:batch:ok]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[generation (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:SimplePaybackYrs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card pane-specification-id='4' param='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:batch:ok]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[sum:SimplePaybackYrs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 23'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_3240312153752374:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[generation (bin)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[generation (bin)]</field>
          <field>[csv.41709.530460324073].[none:generation (copy):ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='7' param='[csv.41709.530460324073].[none:batch:ok]&#10;[csv.41709.530460324073].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[generation (bin)]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[none:generation (copy):ok]</field>
          <field>[csv.41709.530460324073].[none:generation:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BackWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='COST-comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' type='color' />
            <card pane-specification-id='4' param='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' type='color' />
            <card pane-specification-id='7' param='[csv.41709.530460324073].[sum:Calculation_3710312133127667:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[generation (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID:ok]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 25'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]' type='color' />
            <card pane-specification-id='4' param='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[generation (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID:ok]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:Calculation_1760312105551885:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 3'>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
          <field>[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 36'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 67'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 47'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4800326161225524:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 7'>
      <active id='1' />
      <zones>
        <zone name='Sheet 39'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Sheet 39' pane-specification-id='1' param='[csv.41709.530460324073].[:Measure Names]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='WaterHeating'>
      <zones>
        <zone name='Sheet 41'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 45'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:batch:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Electric base costs'>
      <cards>
        <edge name='left'>
          <strip size='255'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[EstimatedERS (bin)]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[csv.41709.530460324073].[none:ID (copy 2):nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 51'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:ID (copy 2):nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 53'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_7860313141128771:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 54'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='DB-economics-of-gas-elec'>
      <zones>
        <zone name='CostOfChoosingNaturalGas'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Savings from Choosing Gas'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CostOfChoosingNaturalGas' pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='DB-Break-even-with-elec'>
      <active id='12' />
      <zones>
        <zone name='Electric-break-even'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone custom-title='true' mode='slider' name='' param='[Parameters].[Parameter 6]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Interest rate (%) (copy)]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='paramctrl' />
        <zone mode='type_in' name='' param='[Parameters].[generation Parameter]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 59'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Conserve:Costs'>
      <zones>
        <zone name='conservation:Cost'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='DB:Conserve-savings'>
      <active id='6' />
      <zones>
        <zone name='Conservation-savings'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Conservation-savings' pane-specification-id='5' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 60'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[csv.41709.530460324073].[EstimatedERS (bin)]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[GOtag:Opt-AirTightness &amp; GOtag:Opt-MainWall (Combined)]</field>
          <field>[csv.41709.530460324073].[GOtag:Opt-DHWSystem (copy) (group)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <tuple-selection>
          <tuple-reference>
            <tuple-descriptor>
              <pane-descriptor>
                <x-fields>
                  <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                </x-fields>
                <y-fields>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
                  <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                </y-fields>
              </pane-descriptor>
              <columns>
                <field>[csv.41709.530460324073].[max:Calculation_2640311145556471:qk]</field>
                <field>[csv.41709.530460324073].[min:Calculation_1760312105551885:qk]</field>
                <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
                <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
                <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
                <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
                <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
                <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
                <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
              </columns>
            </tuple-descriptor>
            <tuple>
              <value>34.136364530818923</value>
              <value>13012.0</value>
              <value>&quot;25024&quot;</value>
              <value>&quot; &quot;</value>
              <value>&quot;PassiveHouse&quot;</value>
              <value>&quot;TripleLowEHardCoatKryFill&quot;</value>
              <value>&quot;CCASHP&quot;</value>
              <value>&quot;Stud-R305-Wall&quot;</value>
              <value>&quot;NoPV&quot;</value>
            </tuple>
          </tuple-reference>
        </tuple-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Filter-summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 62'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem (copy):nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='MostAffordable'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy)]' type='parameter' />
            <card type='filters' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 91'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy)]' type='parameter' />
            <card type='filters' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 92'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='color' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]' type='filter' />
          </strip>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card type='filters' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[GOtag:Opt-DHWSystem (copy) (group)]</field>
          <field>[csv.41709.530460324073].[OC-ext-ins-systems]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Cheapest'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
            <card param='[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' type='filter' />
          </strip>
          <strip size='160'>
            <card type='filters' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Search'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='37' type='pages' />
            <card size='377' type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' type='filter' />
          </strip>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card type='filters' />
          </strip>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[GOtag:Opt-DHWSystem (copy) (group)]</field>
          <field>[csv.41709.530460324073].[OC-ext-ins-systems]</field>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='CompareID'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy)]' type='parameter' />
            <card mode='typeinlist' param='[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 66'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4800326161225524:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 64'>
      <cards>
        <edge name='left'>
          <strip size='272'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Number of records'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
            <card mode='compact' param='[Parameters].[Focus on ERS (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[GOtag:Opt-DHWSystem (copy) (group)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9940401113855898:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Ext-DryWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-FloorSurface:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 63'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 8]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:Calculation_4250401113310063:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Pathway-finder'>
      <active id='82' />
      <zones>
        <zone name='Cheapest'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Sheet 91'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='MostAffordable'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Search'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='CompareID'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='slider' name='' param='[Parameters].[Parameter 8]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Focus on ERS (copy)]' type='paramctrl' />
        <zone name='Sheet 91' pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
        <zone mode='checkdropdown' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]' type='filter' />
        <zone mode='checkdropdown' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]' type='filter' />
        <zone mode='checkdropdown' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='filter' />
        <zone mode='checkdropdown' name='Search' param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 68'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8470312121221798:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 69'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 70'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[ID-string (Interesting points]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-AirTightness:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementSlabInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-BasementWallInsulation:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Ceilings:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DHWSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HRVSpec:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 72'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 73'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[EstimatedERS (bin)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>81</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Electricity savings (kWh/yr) (bin)]</field>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 74'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[ID-string (Interesting points]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4130311125228917:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 75'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 76'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Electricity savings (kWh/yr) (bin)]</field>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 77'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]&#10;[csv.41709.530460324073].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[:Measure Names]</field>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 79'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Elec conserv'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='color' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[usr:Calculation_2710403111306845:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ConserveKWHbySavings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='ConcerveKWH-Costs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Concerve kWH: PV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 89'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Electricity savings (kWh/yr) (bin)]</field>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_9470403125230887:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Annual-savings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='6' param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='color' />
            <card pane-specification-id='6' param='[csv.41709.530460324073].[usr:Calculation_8270403112829760:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' size='61' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' size='61' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' size='169' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' size='27' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-Location:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
          <field>[excel.41732.485975347219].[none:Calculation_5270403114305868:nk]</field>
          <field>[excel.41732.485975347219].[none:Markup-string:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Upg cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='color' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[usr:Calculation_5660403112505970:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:Calculation_7380401093918234:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 80'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel.41736.417335405094].[none:Status:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[EstimatedERS (bin)]</field>
          <field>[excel.41736.417335405094].[none:ID#:nk]</field>
          <field>[excel.41736.417335405094].[none:Status:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 81'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[excel.41736.417335405094].[none:Status:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Set 1]</field>
          <field>[csv.41709.530460324073].[none:Calculation_2160328153208285:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]</field>
          <field>[excel.41736.417335405094].[none:ID#:nk]</field>
          <field>[excel.41736.417335405094].[none:Status:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 17'>
      <active id='12' />
      <zones>
        <zone name='Elec conserv'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Upg cost'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone mode='type_in' name='' param='[Parameters].[Parameter 9]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 82'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 9]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[Electricity savings (kWh/yr) (bin)]</field>
          <field>[csv.41709.530460324073].[Electricity: total benefit to utility (bin)]</field>
          <field>[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 90'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[none:Calculation_4480331150059234:nk]</field>
          <field>[csv.41709.530460324073].[none:Calculation_8750403103901360:nk]</field>
          <field>[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Conserve-by-'>
      <active id='1' />
      <zones>
        <zone name='Concerve kWH: PV'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Concerve kWH: PV' pane-specification-id='3' param='[csv.41709.530460324073].[Upgrades: Adjusted Upgrade cost ($, no markup) (bin)]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 93'>
      <cards>
        <edge name='left'>
          <strip size='144'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41709.530460324073].[:Measure Names]</field>
          <field>[csv.41709.530460324073].[none:Calculation_6170407152248136:nk]</field>
          <field>[csv.41709.530460324073].[none:ID-filter (ERS-83-gas) (copy):nk]</field>
          <field>[csv.41709.530460324073].[none:ID-filter (copy 2):nk]</field>
          <field>[csv.41709.530460324073].[sum:Calculation_2640311145556471:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Compare-builders'>
      <zones>
        <zone name='Sheet 93'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 94'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='hidden-worksheet' name='Conservation-savings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 6]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='CostOfChoosingNaturalGas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
            <card pane-specification-id='4' param='[csv.41709.530460324073].[diff:min:Calculation_1760312105551885:qk:2]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='Electric-break-even'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='8' param='[csv.41709.530460324073].[diff:max:Calculation_2640311145556471:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 6]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='Savings from Choosing Gas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
            <card pane-specification-id='4' param='[csv.41709.530460324073].[diff:min:Calculation_7370312102644552:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 6]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='Sheet 30'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41709.530460324073].[none:GOtag:Opt-MainWall:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='Sheet 39'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='37' type='pages' />
            <card size='189' type='filters' />
            <card size='182' type='marks' />
            <card pane-specification-id='1' param='[csv.41709.530460324073].[:Measure Names]' size='97' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:ElecLoadScale:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:DHWLoadScale:nk]' type='filter' />
            <card type='measures' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='Sheet 41'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='9' param='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-StandoffPV:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[EstimatedERS (bin)]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-DWHRandSDHW:nk]' type='filter' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='Sheet 42'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41709.530460324073].[none:GOtag:Opt-CasementWindows:nk]' type='color' />
            <card param='[csv.41709.530460324073].[none:GOtag:Opt-HVACSystem:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
    <window class='hidden-worksheet' name='conservation:Cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='7' param='[csv.41709.530460324073].[none:Calculation_4270328153916499:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 6]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Interest rate (%) (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Escillation Rate: Electricity (copy)]' type='parameter' />
            <card mode='slider' param='[Parameters].[generation Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 7]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Initial-Plot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 95' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pick-the-best-points' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='DB:SwitchToPV' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Windows' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 44' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='DB: Walls' width='192'>
      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
      NtDpZocjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='DB: Bars-red-black' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 31' width='191'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 28' width='191'>
      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
    </thumbnail>
    <thumbnail height='84' name='Sheet 33' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Batch analysis' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 27' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 35' width='191'>
      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
    </thumbnail>
    <thumbnail height='77' name='Upgrades by hvac' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABNCAIAAAB/kPxWAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAD40lEQVR4nO3cf0jUdxzH8Xf7Hi2DsGgjw8xqRcaIlmFEI4gJ
      DYyMYH1I6SBGYaFJEhuRcuClRyjpaAnW+kNoy3HCDowk3YwoA+FQIjHO2sK4jtkvQ47SxG/2
      x07uTiypl3ff+7TX47/v1y/yQp9+704PZ42PjwvRh/rE6gGkNwZEEAZEEAZEEAZEEAZEEAZE
      EJvVA96Pz+ezegJF0SwgEcnIyLB6AoXxIYwg+t2Blh27bPUECuMdiCAMiCAMiCAMiCAMiCAM
      iCAMiCAMiCAMiCAMiCAMiCAMiCAMiCD6/TW+/+R2qydQGO9ABNHvDsR3tSYU/QJK/Le0+ny+
      /89IPoQRhAERhAERhAERZBb/wRQheAciCAMiCAMiCAMiCAMiCAMiiMYBBW//Xl5kV0ope1GV
      py8YOj3QfEz94AmEjgKXy+z5J9qfx27GaH+L62C+Ou2NOBfvDe8yOnDzbOnBffmTv04zNFLb
      gAIeZ0X7gr1nGt3uX09sHWwqr2l7JiIipmlOXGP6PT//9iir5Ej2gtiMGO1vcRUfb7g1OBZ9
      Pp4bpvH0z3N/SE5Z/QV34y9H1/kby+s7hmdypK4B9V5pfpBpP7Ap2RCZvew7e/anvVdvDkRd
      EvTWOZtkt6Mwa16MRgxcOe8eWl9YU7T5bVfEfsN0PtvuOFXw9ZI5hhjJX+V8kz72+MngpEug
      kfq9nUNERAJ3fS/SN3+RNHG8YtVqae33i6SETrz2eypre9aW1OxKM2K2IiW3oiFXRLxdU344
      Lhvey2vTFMOIGoOO1DSgR/8Goo6TkuZGHo50nXXeHd1ZZd0PfmJsiGb2trU+TM/ZkBI+hY/U
      9SHs3eas2bg++eFfzd3B6a/9mDdECnrrfmqdr4pzUyNO4iM1DWjR4tSo4+Hhl2Kzhe/BczcU
      OPIWdtbWXbfu25cIGyaYfk9lbc/S/cWTH6jgkZoGlLIkzfag75/Q6wkx7/n6ZPXK5RFXGGm7
      Du9Zeru+0uM3p/oM8ZAIG0TE9Le5nE2y23F82xTPc8CRmgZkZGZnJ3dfct8ZMsUc+dtz8Zpt
      644tk16DpuaWlmx61uis81p3C7B8g+lvczkbXnzrcr79WTIyUtOAxPhyn2P/591Vh/JU3vcV
      3uXFlQWZ/70mi3yVMS+r8EiO0Xnu4q1XMVnhPa2UUqq6Q6SjWimlqm+MxHvDNHpaLvQMjd13
      /7hXTQj9znNmRvINZQTR9Q5ECYIBEYQBEYQBEYQBEYQBEYQBEYQBEYQBEYQBEYQBEYQBEYQB
      EYQBEYQBEYQBEYQBEYQBEYQBEYQBEYQBEYQBEYQBEYQBEYQBEYQBEeQNwzaBlrwLj00AAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='184' name='Sheet 26' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAC4CAIAAAA6z3T8AAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAWhUlEQVR4nO2dfVgTV9rG7zWRQFAjVCEKWQS1bEnBikRrZVeq
      Lrr6vnhpK4pVSqu7ovVjwWr96oqrVd5Ssbpq8dUqq+5i7SItW21FUdxGxQZRy8b1qyASJKAE
      gyUkcabdP/JBBIIkAxovn98fXsmZPDNnhtsz58zc5zm/+Pnnn0EQztLlSVeAeLohARGcIAER
      nCABEZwgARGcIAERnCABEZwgARGcIAERnCABEZwgARGcIAERnCABEZwgARGcIAERnCABEZwg
      ARGcIAERnCABEZwgARGcIAERnCABEZwgARGcIAERnCABEZwgARGcIAERnCABEZwgARGcIAER
      nCABEZwgARGcIAERnCABEZwgARGcIAERnCABEZwgARGcIAERnCABEZwgARGcIAERnCABEZzg
      P+kKEPZh9XdKL9+4a+jeN/T5gG5uDkQa1acP5XxfB3gFj/3dyCARr9Pq+AtabMWVqDu7dd3+
      ssAZq+YP5yu2L9lUoGFMGwSS8UtSEsK6240s+2zBe9nV0tk7Vkd71eatWbBLaY4EP2hGWmqM
      XyfVmG5hLoVOXV5xp6JcrYPy4PYCDQMIevT2FvJhqDiSmiFvtBuoLrlQDfhLX/AC1KdPKBkg
      4Ldzk96QicCU5nyj7LQak4Bck8prVxoABCd8vGtbxqebZgYDjEKusKsglmUB6A0G6+eAV8a/
      OnzitLH+QMOVa5WdVVESkCsTED7oOQA83/DwAAC1tRp7v/R7/leewN2CI4Va1vxZcw9g6zR1
      AHi8TusEUSfaBSnPSkp6uOSe5i7A9+ntbTdGOm5SUP7+Unn63GJvLz4DGPLTEhWo1+gA38Gh
      4s6qKwnIpRD2FPfurbN+/YVRB4CtyNmX3wDfiZOGe9gP9Yv583rPjE/2FZZp7gAAGJ1GAwh8
      ImYufT2w02pMozDXh9VrtTrWrZt3u0byrF6r1d27fbVWENjvOQ+hSOTeeWN4kIBcDLbmP9/9
      cE/QK/jFgd6OPPdxPpArdAtzKdSnd2/KKgfAFwaOjJ89JbK9cnA6kCs0CnNB+AIBdGX5GSsT
      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
      kIAITvwXwUxmaM31awsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dots-' width='191'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='191'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 23' width='191'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 16' width='191'>
      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
      12xJmTx5gkcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 22' width='191'>
      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
      vR171elmgf8PypHLeqryZbYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='121' name='Sheet 9' width='192'>
      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
      AUJEMECIyP8Dk9T+A4N7neIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='COST-comparison' width='192'>
      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
      KD1W+7kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 25' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      cAn5/25x5z92pj8RAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 19' width='191'>
      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
      B3xX3n7+/wGG8bwwtHaADAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 36' width='192'>
      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
    </thumbnail>
    <thumbnail height='61' name='Sheet 67' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA9CAIAAAB0svGXAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAADMElEQVR4nO3dS0hUYRjG8dfOUChY1JS30SZXTjNmF3ARSBFC
      GyFoMeGERiBlMqRYRIJWgkMILiTCaNGVamOrKBdDFC1cFVqG6QxeK8WURtPMYYZz/FpEzuVU
      UC90zifPbzdnNs8Hf8/xMmCKEIIA/tUaoweA3BAQsCAgYEFAwIKAgAUBAQsCAhaL0QP+TiAQ
      MHoCJJAsICJyOBxGT4AYPMKARb470LaGLqMnQAzuQMCCgIAFAQELAgIWBAQsCAhYEBCwICBg
      QUDAgoCABQEBCwICFgQELPL9NX68tczoCRCDOxCwyHcHwqdaTUW+gKT+SGsgEJB6P+mOgEcY
      sCAgYEFAwIKAgAUB/VeyfwdNuiMgIGBBQMCCgIBFvl8k/jDZ1dz4YGBJtaRl7/f6qovTjR6U
      pPfa0dYXKhER2T3tbYdt+sEmPkI0ePfshfljnbXFRBTuvXmu3T8ToXXrC92XGg/lKfHLSUhl
      cHBQCCFE/43jNXcCqoi8u1XjPv9oyuBZOh8e1ns6euIu6Aeb9QiRqe6OOo/b7b7yUgghxKy/
      2e17tiDUL36f29PRk7RczkfYp5Ghbw5ngUJrnYUOWvi6aPSgJOGx4YmtuTmxC/rBZj3C5NPO
      /p0N3pKVC2PDQbuzIJ2UDS6nXV1YDCcul/MRpmla3KvPoTnDlvza6FCQQhO+yvszlFFy4qJ3
      n36wWY9gK6utJnrVs3JBU9W4t0OhWY3il8sZUCKLRTF6QhJX1e3OKiIibfpx8+mrftephLf1
      g813hN9QFCWhH0l/CttktdLyypewLTvT0DV/oGRmbaGR8ff6wdIcYaN1s6Yt/3yVk52VuFzO
      gFJdRQV9r99GKRocGLLk5WYZPShRuLutsvX5vEYUHR/9aNldtF0/2ORHiMnfsWuu7820ps0H
      g5P2vJyk5ZI+wqwHykubWiuORCxpzvKWPSa7/6fuPXlm+HJd5fUlSss/2NBUkkqkG2zuI8Qo
      RWUVT1rqPffUdRmltV4bJZ4lRUj1z1ZWwQeyVhk5H2FgGggIWBAQsCAgYEFAwIKAgAUBAQsC
      AhYEBCwICFgQELAgIGBBQMCCgIAFAQHLd6UOJ802MGrQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 47' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 7' width='192'>
      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
      AQEs/w9LNyRHDH2ULwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='WaterHeating' width='192'>
      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
    </thumbnail>
    <thumbnail height='61' name='Sheet 45' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA9CAIAAAB0svGXAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAADbklEQVR4nO3cXUhTYRzH8cfOELwQqQX50lCJcMwXSojqSqWI
      QghG9KTiwPAlCNEsxV6kTCFMYYUxKHIpJBjTWCVCCepFFy0Ea9pkQythLSyac85lmEe78GUa
      3dS/7Xjg97mReYTzg315pmwYtrS0xAD+1RapB4C8ISAgQUBAgoCABAEBCQICEgQEJAqpB/wd
      u90u9QTYQGYBMcbUarXUEyAAL2FAIr8TKOFij9QTIAAnEJAgICBBQECCgIAEAQEJAgISBAQk
      CAhIEBCQICAgQUBAgoCABAEBifzejZ9oyJZ6AgTgBAIS+Z1A+FTrpiK/gDbhR1rtdvtmWxWy
      SXgJAxIEBCQICEgQEJCE4R9MAQVOICBBQECCgIBEngG5emoL8jjneQXl9wZ9jLnMVbzK7GKM
      MSZ6Lc3Fxc0WrxiEG4ve/oa81TvNDRlLdZxzriuqe+YUQzhjhW+47UqRjnOuK200O3ySTJJl
      QLbnXV+zrnWY2msyfvY9HpgMXBG9FkOlkZXoyw5ECf/5rqJ31Hyj8u7Qwspjz8vuFzGnjaaO
      +7rEd4+6rRt+NHgzAmymW7a0GqPJ1F6fOdXZYLJJMUmOAU2+H/OrNUkCC9ekqNmMb3bl+4te
      i6G6TVGiL9sXGYTbWrufsBMVPH718cdxR7wmKZIJUcma+IWZ2bnQzAhILmxtOpUQzlh4wsH9
      cX7/dykmye+9MMZEcf0Z/M3tYYwx5n9tqPzwWV1uCNbTlp5/OZ25zIEZCwvrrrrdU2xXKGb8
      ic8xOp15LIWJr0I+SY4n0EYKxfKJPP1j99na45MGfa9bihmCINWM+Ymum/2aq2fSI6SYJMeA
      timVbHHtFIqL2bH8NePoXo227OTcwyazM4i/ua7Zqtwuiourj2JjoqWY4Rs2Xrrj5dValSDN
      JDkGFJGclmR9MzzP5h2jYwrVzujAJUGlrdJFdNa12YL/3CWm7vFY334RRa/D4YpXxa67FJoZ
      orO3vvap6lxjYVqkZJPkGBBTZuUcGtfn8/zrA8ocbfrGPyqUR85XpFpuGwZ9QV4hpGXnR/RU
      5OYWt37K4IfjftsY9BmevgctI86Rlgu5nHPOefOgFJPwXhiQyPIEgs0DAQEJAgISBAQkCAhI
      EBCQICAgQUBAgoCABAEBCQICEgQEJAgISBAQkCAgIPkFcd2X8ZbC+5gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Electric base costs' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO2dd3xb53nv33Ow9yImQQAkwb2HTInay7Ik73gl
      jm6cum1umnHT25s0N7f91B1J0yZN2rSZTprUcmzLlqc2RQ0OieLeADgBECD23ufgjPuH5FiW
      AVWmSMm0zvcv8gB4znvO+Z33fd71PBBJkoCCYkXAd7sAFOsYSj0UK4dSD8XKodRDsXIo9VCs
      HEo9FCuH9sILL6yddZIkAkuWwdGpYBoUSMUkGp8aGbTYfGKFEkr5PTEg5DFz/AxHZiaGJ0yz
      VqsV5vD97ohIJrxB5n7bXBTiCNiMvOdO+iyeDIeIjAwNL/niErmcSYOu/5zIZmasSwVSyUdL
      HXUtJWh8LgMGAAASDzjnB0bG/UmgkIlJND49MjRj9wlkChoSdIZxMZ+V89JDy/ODI5PhLFMp
      E/zhxJHAcjzL5LHpIBXoHV8oKCiAssmpiXGGuJDDAACATMTjCKMSAQcAQBLY/Ny8WCL1Wydd
      abaQgVqdfqlYePV7Mw5v3B9kiqTM929NyOPMABaHSQcAkCTps08Pj06HMpBMKiKz8YmhgRm7
      X6pUZSPuMErj57x1GGKZGJwwzTn9CbmiwG2z4EwRE8rOLdpCoYBIIg07LbYIJOWQ80tumUS8
      tuqJL4+/3WVtbqrxTA2kBLKFno4wX69jR49fmqV5B3qX6EXC7OycDYU5PDI2abHH0gkYxzNo
      oufEOWXz5mKVTMKMnT0/rysRLlrmERpPwEBNk6YEwXYOdC5ztSUFAgJHrJZpb4IUC1nOhZlF
      p4/FF8RcVuf82IUFMj7XBalqBCmXlxCwUh6L3S+UiCPLCzOLToIkO3oGmiq0pilzkmCL+BwI
      Alfv+0B3l0hvFDBpAICIc+pY92x9U41/ui8uLLT2HA/yDIXs6KmeGU50tGOOLBFjM3NWBOZw
      yfiU2YoxOZlwGI0unew2lVWXOwfPerk6OOp0OFwYRB8886qdKKzUSkDA9KNfnyyqq2eELb9/
      +U1N49aEfdrmiXHZUDyFxMMBl9OJMXhDPRe0FcaxE6+ORMTF/MCgJc7FgovOIA+Onuo3R+Zt
      sqo64TUZEKN9F9iqMhGHDgCZXB56q8fdVF/utoxm2MLZ7o6EpFTLCJ7un49aLpmTYjU7NTNn
      zdJ4LCxsmluKJ5MQiadTyc53zhZv38LxT12az/pmuxnKGgk9fbyzK+txCcoqZrvfGFiglajQ
      gUl/dXnRmqqHWBzoAOV7a5R0gsbi0dCRycCOh3YWKjWWgV4WB4vAajUrs2Sb7TO7EjNDKam8
      r/NCSWUtl0mYBvqs/rB7ySYt1DpsPt/ioM0TGR+foyUX5pJC/9I8nIoDjbGkQOA3XTw7k4nP
      9uMFulTANT82YI2nJoZmZDzUmS1o1LPmZuywpNCoYZ083s2nJ4KQGES91tnRqWUMzyYJx9S4
      Lzk9NqEtqxay6QAAQKTGpm31tVV0GAIAWMcuYkXtDRoOTmdxmejkuHfLvl06ldx2+QokA76s
      Qs9DlhZnei1ubHEsyJObfKBCzvYujKckdZsbjBox0jXqmu46K1SIRgYXcDLEUNZUFIpBwmVx
      xwm2lJ20BmKEtrwq5lka772QhEi70zNyZYgroQ2MBxqlaAiC/ahMjgZTaJytNmZDblN/Z4qn
      DcUSHDSrrb2mHhLxjE2nahtKGRAAgLBcPMZufqKygCRpDDaEDc0E9h/codbopgfOQQhCyEpk
      cMLhsFyeDkVnLmeF/P6LfdrKeh4dt0zMN+zbZSwUjF4w44htcsYxP2Nypjl7yth2jB0JsVTs
      UBLJ0gvKi1WCNfV7IDaPF49G0UzSNt3XY/Zw6XgqncWz6RQOZCKRQMR2zMzEUYCmk44o2dzU
      oBLT2QKRkMti8RQHnz506NChUikNgJTPnZSoimoqtAFnvLypZe+OzVzGtdYgGvCoyxvL1DS3
      02OeXyIAlAx7gaCoodIAQ0Bddt9DD+4Vphc7egYBs3DTtr01KtqseT5DAjSLAoJwugNShbKy
      opxFv1ZoLDiDiSoY7zdzbA43GYtnkaTD3H9u0suh42kEw9FMAsByoUAg5C/NmuMoiaYSLj9Z
      t6EBAjSZooDH42KZFEYQiVCUwefyJMq65noehjI5fFZi6fDhl0dsUY66hLk8PLlMK1Lx8Jhn
      asFNg0gEIwEAbKasoqGaSaTKKlSXz48WlFYUKtJTlrSuIDs146TRcAQlbrjXMfsCTVfMufY8
      IZ6QH4uEkXRiceLSFYuXAxNJBMPRBIoxxVKJSEC3WWbjGJRFMs5EtrmuVilksXli0fuORDYe
      w9lcGk+656EnP/vU41ohKKo0zpy7SNOV69Q8y/Sy3qAAANDBGgIVNe6cfufEu4sARVi1zdUa
      Ha3zyGGYxHQte+XM2T6TnZYIRekimCm8zwC9+vLRVCgbclozAiaOhE4eOSxkgJJyA0yTVNaR
      pnkLR16+q834zpHfXhHKyxiZwY733KMFdeVGW/frizB3/wOMk0NhgYDBFRYSjum3zhOQdMPo
      hfcWgjiTyaxsaXMNnv3Nr2dqdu6Jh4KIgE8ycDqT2VRZfmpsnidVtNBoAAAACIfZUdpwEH7f
      VdHWts8cP/nmEsimabX1FUUGuPPNlyGAy5u3FwrtZ2atwmwwBonYdHF1OfOd/zoiqbjPPD6t
      L2vlnz15+KWRLMl5+Mm2o/0n3nvlbYa2pZyeMuOSQ4e2AvfIaADI6TNeVrU+HYBINOTzy/n0
      LAZoMI1Gp0EAotFobG15NjSkVwgZQIFxUQUdj/q9UgkPzaI0Go1Go0Hvl9PqTlVUS9//Dy7Z
      dGDi6LFj0zCKsetbq1QZ+MTvX4KIrH7DfmV8cNC+LIiGokwxjUG0FsqOHD2WCKcr3Ysok04S
      gfcOH6ankYbdj/oHF2EIXC0JrcCIRU8aC8UFSXkSTmu42YkpC/SJmOcicNt0/7B5LkJonnl8
      D48J/fc/+aRBYvbpoWHzgmHzY80a7oc/i/3yJ79/6o//RMJd03d1JZAkaR3vGbEsxmm6px7b
      xfuYBfxkqIckMQzNYgSdwaRf9z6tJ65eQpZgc9jQjRdAomiWwWB85PjdhyRJPItmcYLOYNLp
      tI9bvk+GeijWJ2voNWez2UQisXb2KW6FcDi8dsbXUD0EQWAYtnb2KW6FbDa7dsapmQqKlfOJ
      6wV8XDDEf/bk5NZHdi70npPUt0sxX3fPUJrG37R9F+yfvDQ8jwEg1FeXQoFRmw+CmY1b95Yp
      GFNXumcD+KZt21MLV6KiOiMvNOUk2jZUvn874hfe7vChGFuk2rJts+xDfSXMMjLE0dXrC27o
      WAE8m7QvRx2Lzo3bWln0HK9l1DNn8dNbK5WDF88G2Ya97XVM2h14ezFT30VMXVvM8A572dsa
      deYrXabliKq0sbVadvl0RwABgClt31A6NTQYQyC+0rh3e3PWv3Cud1RS3NRUwr10rjuSBTyF
      ce+2JtaHC7yGY804jmMYxmaz18j+VdDM0ovf/VFc3erpfYtQKS6+d65276O1MnTMFgeeQRen
      5Yn9m0sLhSNnj/NbPrNFGf792dkyOfHWqdHmJr03DvmG33vlorVEnu0ZD9ZXSkcu9y36Ea0G
      eufowMFnnsZnzw/HhIWwv/vKBEOsBDFH3+D46EAfJCjweGNSODy1lOTR4v2XB0JZWmDk+Iun
      xuuMJSoFb3Kwb8YREktEs6MjVuecOwox07YXf/pLK64px03HHaKi8OUlVmWJnLOmNwcAkEyG
      R0+/9taAr0qWPDWdFvt6h5NFD+9p8i6YcRb9xLmpP33+2aryYhBcPD8ZffLJvTMdr8UUG6xn
      f5nQtDMTXgYd7RzxffHZR0wnfxPX3Ifahsfm3KICBYdJA58C9WBoYGDUGXDYkFSMpxR6Y/x9
      W8qWrC6mQARHrb1DM27nQpIpQe3TjhQ94bMBcWlzbVHIOj3tQhvrq8PzA4E4shxMEAw+ah8K
      8ozQwtl5oPSMTsB85rLDoygq7H73LYKJdF5Z9EwNiMtrgovzXAF09oqzQex7dyQSMPUw1GUx
      15JMzJxNiu1jJjY6PxUvUKIzXebIwuXT6rb7Tr52uqS8RCRkRNPCZqNgcHIBJN1BtrG5tGBN
      bw4AIJmMOuZnY+GgO5zMsNXk0pRxz4OitDeM0oR8+ujFC+5gYN4TVwnhoXEzg07al8N1bZtU
      XPxyT79IX6GTgsGBKQ6HtmAPGFTwex1D6cCMJSpsKVeDT4ffQ5OU7atjmp1prkDKyISCaZKV
      XT589DxGkJWb9h86dGhLTSGAYIGIbzFZ9UYdTNIbtx/YYQRHjl8GAGx+4GBscTqezUaiGYVG
      p5FyA6E4RGex8OhSFCqUcSIJvLRmw85NleksUKnUYh4LojMgHEezGCCz0RSmLDQ0NtRIeWwm
      hw8gEA9HRSqNWiWOBqMwLNYZDQJmtkBbYdRLIQB4moqdbXUSobBAKrxDN4jO27Rnu9tiBgAo
      VQK3M0hjMSYunBixBuEC46FDh546sI3HhOlMLki4g5BSI6AxJYannjlg7+2wuGI0JoeZWvbB
      agEeI5jixrZtLWVyt8MRjwXXfd2DZ2Mzc7EHH9nqsCxX79pdIUJ6ewZsrnBxQ5uOmx4dm16Y
      M1t9GS6UVtTu2F7FO9+/WFYk6OrosAXSFU1tfMTNr95XwQtGoKKdbbqhSz1LKeGB+5s9ttC2
      gwclGZspyquXY+MzNo6qtlaOXh42JzJYad0GzDHqTeCwsGRzrbj/ct+iHzWWqU0DA2KhbNvu
      DZb+SwtedNOO9qTHU3pfndO0WN3QANJ+T5xTVcTqPHM2zS3etbWJx1zztzeZjEW8XkVVu54T
      S3CKDuzdaB3snpi1ogx5S3O5Z3po1mafmLDy5IIEwt67fzcyNxDkGcilvvNDMzSRrqlG44/B
      Dz60PzXbk1I1cCJWqzdapNdNdHXS2dk1HC1EECSdTovF4jWyT3Er+Hw+hUKxRsY/DS0Xxd2C
      Ug/FyqHUQ7FyKPVQrBxKPRQrZ93PVKwcHBk8d3zak2Kwpbv271ELcm6NAADgCwOdF01eJg3o
      67fXypHunkFSXLJ3R8PAybccaf6egw8UitZ2VGLVSC///vdncBZTrq/buaWeDedbz5M+8fLL
      QYINs4Vbd27PWEeG5tzGlt3l3EBHzwhHVX3/zlY2DMCnYKx55RDIYGd3w1N/rAz2L2Bahn/s
      ZOflJF1EuCdPnB/gqosx9+TJzj5YpIhaLnGan354s6771EWBUlPe2IrOnnUlsotx9QaZ05JU
      l2sEd/ti8pJMJnk83rV/0s4LY5lDh/Zaus/ztUZz74nuwVllceHg6XcnHQmNSjx9ubNnYllX
      qui+OP7UF56TY9ahxbRMqd6ysebEu8fRYKB4+w7/UDe/pFnCgcA9XfcAQGCxjjdeZqOJxmKS
      zVAZFL6e3stqzKUsrbQtjJvPXeAXKo4eObHFgI33no5PpAhJcYmxgo74J5n6OgmYiXI5XG4q
      lbzb1/ExCFhHj7wayNKkbBhX6Yxu27G+Pt6sHakriYwNdPb2Owt58be6eEjIcfrEsXTEW7Kx
      qaZcFbINF9dswlxDLBaHQScQBAWADe5xvwemC/c9eejRdsPskrX3zLko4LDo9JatO4V4cH7W
      QRNoNu3Ys3/3BhZMK29sLxKxJEpFNursvTRWtnGbTC7hZJIIgksld2rCYTWQFzc9/ezn9ezw
      3PxkZ69FwGVDXPXuzXUB27w7lNSUNex+4MEN5QqmSLXpvnoug1cgYTssQwNL0O72Sgmfi2Yy
      EMzhcq+18vdwy0USAbd1ZGzcHoQ2t7fSEy53HBIpFAo4MrUUq9qwvVyaHh6d5WsMBYwst7Cq
      qbbCMzPqsJstSwG/yyk0tJDOy1NBzqYNtQL2J7cK/1DLhacnh4ct83M0WUVzdZHPNscQK/ly
      dWR+HOWpNrXfhyxPm5yJipryTDRZ07TBoGBOjltscxO+cNQWRFprCq909cKquqYKDR0CYE3X
      NVMzFZ8EqJkKik8olHruJiRJrus9LZR67iaJRCKdTt/tUqwcSj0UK4dSD8XKWb89dqTrrSNu
      WKnipzvOjZSW6q/f5rs8cvK373TPmScWvKhBr2FcNyQfsY1esSMG1Q09QWys72IsSyy7U0r5
      nRu/QVEUhmEG42oEHv9bR3oNFUYG7Sa/wCfPvvHWxVHL9EQkiUzbfOV69c1PkUwmZ3rfm4jx
      iwu4p892FJcY4evuVGz+0k9fOT0/M2W2R/TFOtZ1e5Ez3pmOKX+ZVn6DQdNwdxyWSfhMsJ7H
      momI37Z0aaRUVefxBuJuS0fXkFDftKOtmkWDMrGAuumBJzeI3zj8itdvWBrrdaU4u+7fZrrw
      rjsYJQvruztsFfc1maamqwtoHYOz+rKygTPnSrc/oBKo7OPd3RPO2i37cNtFmy9LV1Q+uLPx
      jtwmxOXw4iQAJG6duHx5ylnRuinhctSVSmdiAiXhJJUNRiUr5nPoWg5t0DLYiOeNAY9/cfTc
      ZZOqtoUW9lSUFc76gYEdigqqarQfvAOR8PLUwkBtyUGPx5sO2s9f6IMLjLu2tvAYMJYM8Us3
      P7uv7Nhrh52usoBlwJlg7dq/y37phN0b9nN0PR2e8raW6YnJZp3gVO+YSlc5dem0ZlthiYoP
      1rN6AMyW1pbwxidsAID+Cz0VOx+3d72zoNOWKjgEgU90v5c2Q1muMWkfuDi0WMBOn3rbHWVW
      HqwJDAYzdptTW19ltVqdM6n9n3nU6w7odFoFj7QvOqYi1s8+u/fIK500zFm3/aClayS8s/HG
      F3BNSXl7Rty7H9z65tsXVRzczCXiPkc4E6nSNiNolgTAZh6hBUV1xXyAJ65csLc8/kTXq69y
      hAyCA8WW40koXrKz9UMG6fy6Gu3EqAkAMNndJWvZj0+cmrTpm3RigiTnBs8e9valoIJiz9j5
      gXkFN3PmTDoU4Dy5peDEVGRpYbmwsc5ms6UWU60PPY67gjFdkVYtu2b4Tt6WVUduqPX0H/Wh
      ci2XJAiCIEjH9GXzMK6i0+q3PbxVNN81z6DTcWPLzv11HLvTdnERJ3CcpDPZMJ5KhBJpIINJ
      HJCZVJq41nGGAEEQBE4CGGIyeVwOm54/NOIaAUGAJAgCBzCtXMwe9aWqOcGRhEZj6h0LAB4A
      9e37turhjNcCAIAAiRMEAcjSAqnZEawpwPvsyh2SGxs/odoIzV68FAfVQoDhBE6QwcXR9yYz
      RglWtmHvg9WZMwNBOg0qbdr+YJPAGQl3egM4jpN0BgsmU4lQPAVUbEAQJIKkceKDIYb16/eQ
      SAaRaUsr9NJklrdtc81wd7eobNP2LW21VRUckIYFmvKycnrUDqsqmCHzmANt3rKTHxq1RllF
      pVXGAmxsJlhk1O9qMpw5119Q2lDEQ2KwQKPSbjAKTp+f3rD3fhmbkKuL6ABS6jT5Vm/cJh/2
      e3D3jGXMPOmIsFpqxVf6pu/bfn+phpUk5EatSKAoaWmur6rUQ5k0T1Ui40IkgSEQv7VBe+V8
      j3HjnrpicRIXl5UqeCLV9V5dMplk0CCRwlBRrkIStPZtrbP93YSybue29oaaSiEDw1iy8rIy
      AeZLC4oFifkRW7qxbbOcsJmXEU1xdXUhGDX5i4xF29uqeju7mKqKcgXdGydisQg7YadmKu4m
      8XicRqNxuTdual5FqJkKik8olHooVg6lHoqVQ6mHYuVQ6qFYOZ9C9aCJ0OvvHPvIYcI5fLx7
      Ng4AyMa8A1ML7x/PjAwMj3WeGV0O3slC3pzR869PuW6ce89EnW+f7Lr6t2liKJxEAQAAEMvT
      fXb7wpsnB9Bbth93Wd453/+Rw9hk93uTzhQAAAksDs15rx5F08GhUdPlN9+yITcGsVvfo4XX
      QyDR7s6zjihRXd+YSCYdU5e6xxZE2rpWPeN89wApKGJ6+gIF5Pz5gEKnQrky4eXZy3Pukvr2
      tGfBOTqVcicilbX1wsAkZtxRo7wrl2Ab77o0aZfoGvjJBDPsOtbbF8K4ex/Ybrp4xpGk6eSg
      75IdirkTXKmInqIzGB3DwzhXWyGJe+ccvaYoGw+03tcwPLm0Z8+mXMljAJ7ynzx+JkLwGytU
      yWTS0t85OOdSV7RXcLwXhix8hcE/1c+NQP3H/Qa9Ii0p7V/oMfnSFfX1Qbd9rrenAKK5a9pl
      sQlE1VJXJAbrebTwRqK2kTfOjbLgjCsGwXjSOTUQpwuWna5M3KdpvL9RJ6ZlfHR1hccZv39r
      +YR5wedDDjz9EJ/MWCZtapmwsKUhueSMBP2qmpYCzh2qkj88WgjeOfyzJF3odXmZdDwddvfP
      hjiIJ5xEvZDm8V2NTDY9ECMK0g79ns8m5ofCvoC4bsd9xRL/4iRPWxlDBFUa0usPZZnSSt0H
      AzzXr2sOTHQcHfSyEV8YYxNowjw2AnH4s3Z/OuRqu/9RXQEfi/qkGo01wH24mT86v+yJcx9+
      eBsNicxa43ImaDzQtmSyxQIhQ22DkAmDT1PLRWewVCX1e+/fVWtQAQBxhIot9+/f1lItE3Dj
      sZDTaksTMIZl6XQmDEOARmMDNBgMWB1eEgAYBgRDUi4Mj8YLSqV3rT7mSzRb9t7f3ljDZ9OY
      HH5xbdv9u7aUFcnJdMLrcXiCKUBgOMlgMmkAACaTnoxGlu3WOEoCCCJwrFRfOLtgL9Lr8tln
      srn66vv27tpmVEsgmCaUaXceONBeVypg0cPRwJJtGSUBhhHMq2qmMxlYKuB1O7wRACAYJklO
      kRq1uFnFSv61mZBPT93DFClEmH9mOV1TVyUW8Ntaa6eGxsTFdQ01pQGrGZeVNlfooglUryvS
      auRsvrylSjE+Olta1yQX8fWlmkyGKeOiKEtbpZfdmQKDj9Q9Oq1ieswkLanRK4TqsmZRcsGe
      Fre2NhWQvnk/Xl9XxyPivKIyrbZQwKIZq+tTrtk0X19drBRpjUw0rtNJrdZU68Y69nV1wvV1
      D1uuYwRnHCleXZVBIFW2VqhGh6eKazc0VBTOTFlEhprKQnGSZBq0Wo1SypTo6jSQaTFcWVst
      FQlLS2TJrJCWDooN1foC/lWD1EzFNbBE4NLgVN2m7VL2ncsHsLozFbOD59KKpnq99PoLWMWZ
      CjRk757ybtq0gfd+giJKPXeT9T7P9aE2PpPJ4Di+Wqaz2SyKosnketqoe4dBEASG4TXdVpHN
      ZtfuEdzoIa74SkgsPdjVMbccK23b21ahgt63tq53nNwZ1voWrZ39D6nndjxcHIUNDdu27U79
      7tWZ9kYjlwYQBAEA8Pn82y3jpxeSJNe65UqlUmv3CFatx05jcov1hcszy5Xtzeybreum+PSw
      amMbJI6aB3t8TP3WatWnZxCJ4qasmnpQJGQ2LSbornQitWtzPYuqfu4BqB773WS999ipRoZi
      5VDqoVg5lHooVg6lHoqVQ6mHYuVQ6qFYOZR6KFYOpR6KlUOph2LlUOqhWDmUeihWDqUeipWT
      b46dCPoDEIlF0lBRkZpBaYwiF3nUk3KdOtvPyQYiOKd13+MNhdT6QIoc5KlVMCQecAZItV7B
      Ikmq5qHITa66J5tyRJk7dmwjGaxUFjIW5NwTTUGRUz3p0PCVC6b5YElpYcjngcXaZt0nN3Mi
      xV0kV6sk1D56f7uisLiuvs6gEBLUjhqKPOTxaWhMPh2fn5sXl22spVxmijzk6XPheDjkSaG8
      cBxRaopKlbzcX6O4t8mjHkHRw/u2mhbdYm1ZUcEartmmWNfkablSjlPdJqFUujzeNe1O3dki
      Uawb8qgHYjGJVCAUSiCATY00U+QhT8vFUzQ3lSMEncOVFck4d7ZIFOuGPPVKxDpky1bWN/BS
      i2Zn7M4WiWLdkEc9HKkgZT9x4sSsDy8Q3aHQcRTrjjzqYUo2b6xhscT1bZu1ojueoIpinZBH
      PQn7qTOXlxFa0NQ94aSCf1HkJo96YDpEoEGP3RtOM2+aZZXiXiZPn4urfexzT5tnHEKNrkhE
      qYciN7nqHjT85n+9+OrbnRk6zTLS74vfmJ2AguIqudQTnIup2j+/v2lkxFK7eW/JHZzkItJR
      +3Jg1aK25oD0OZfiH8nWsYq47LY0tnZXQOIJv90TXbt1DySBO6x29NaiOuVSD0FgBJZBMIHK
      IGURaHYtn+b1oLE3/u3b//uf38iskX2SXJ7ofP5//NmQM7JGZwBI+JmnvzIXvTG9zWqRjXte
      /Jsv/e1LfWv1SIispef1zzz9DR9O3MrXc6lHoC3ILFwcs0uIwMXeK54osspFzEcyoihrFKxl
      hpEkJG8oWcuVbolwk2GN8icDAACZSpbVN4C1C2aPZRFeSbX2VleT5vKahdrHHteuZpluEYmu
      sVh+eNC/VvYhqLyukc9cy06ArISxlnkKmEpjbaEA+NbuBNy6mspbv4Rc6vGZTs2hxUUag0II
      IIjBYNLgO5e6gWIdkSvqJeJ74z9fGgvTyjQSwORv3b3/FleHEWji/Ju/4236400GNlhR1Es8
      E/fHcYVcvHatV9Dr5kjkXOZapVHyu5aFSjWLdktXsIKol1gyFEBYSinvFl/ojxv1kiRwr9sr
      06gZ0H9/hlw3kaV48vk/1fUNesNxobpUI7vFayO89gVfKKREbsnhygmNLVCt8ayaTKleU/ty
      TeGa2qfzpKq17ARDME1VqLnVwuQ+nPZNLSU3b6x2TPVPqQwb9LfiacLqsjrjRFcCgGAwiOM4
      juMczgerO2aXTRl0FTojCrFKJcnxhMKJoMNvu337EATVGZpzfmRemsjit9vbZ9AYVbr6nB99
      68Tf48QqdKeeaXx0Q1HjR4+/0X/y7eGO27dfKFH94LPfBnnVwxJxM66h4VQ6ju8SfOz9XDKZ
      DLzfcv3hYCjuT2YSKyzvdfDYuVfpZ9C0P+q5fftQ/i5NIOZDsdvtgTLpee/nubkejMBu0z4A
      YHvJppzHza75d4bP3r79SnXJ1T/yqIctf/qLzwWDMZ5Yxv0YYd+hwqr7UBk1J3+vkEc9aMwT
      hdRKxcfsaypDQsEAABA5SURBVEGF1Rtvv0wU64W8fs+J94ara/R0Oqu0orpAsIYjYBTrl3xr
      C1WbmvRZFCMhGL6FnhvFvUm+9T1Z++TovD8TcdniGKUeitzkUU/UHQRCiM1T87HlALW2kCI3
      edQjNVYq4OD0pcmwuEYnurNFolg35FEPiSEYyWUzcSyLU0E0KPKQRz0x50Ja9ewXv1gjSVq9
      1E5kitzk6rHHHG92DMZdwaOvWzMItqv6jheKYp2QSz2CwocefmRuYmRmyZOFOTwm1eeiyE0u
      9UAwM+PqnXJXGjUwncVZ0+VUFOuZfFEQCljhhZHxAJMjUBiqlNRmZIpc5JupCLHLd375QBsT
      AhA11kyRh3xL7JiIb/Ll35ogFn/73oNGFRW6kCIHedRD42h1ugyCYTCLTfk9FHnIM97D4Oj1
      xSUlxay0N5Be+UpTik83eeoeJDY2OpTMYKlkWgtTkecocpNLPSRJcBUHH36MJAFMY7DWbPsB
      xXonlzKitpfePo/hZDYVMi8lnv/GNxu0VKYBihzkUo/IcOjZZ6ZHBpfC2P6nNxTJqQ4XRW5y
      +TRJz4s//Y8xR1wmE4c8jmiKisBCkZtcdQ+N1bp1F0GQABAYjhO3FoyD4h4kl3o40tZW6R0v
      CcX6g+qNU6wcSj0UK4dSD8XKodRDsXIo9VCsHEo9FCuHUg/FyqHUQ7FyKPVQrBxKPRQrh1IP
      xcqh1EOxclZt3SCJY+kMAtEZbCaD2sRzj7Bq6lmeOP32QCiZyn75K8+JqG0Y9war1XJll+3u
      rQ9/zshGQvidyqlDcbdZLfVAMAwBQG08vbdYLfXQNDrt3Hh/gC6Q06hm615htfweSFW9pQ6e
      p9c+wGVQ/bh7hQ/lyIlGowiyarnccBzHMIzFuhbr2R/1YPgqhNHnswUCbo5QimkkGUmGb98+
      AEAtzZ2ezBtxEcTt7qyFIVgpuZZGBEVRCIIYjGvR9Y+ZOghyFXbuNhfWFYmvpfJIpVJ/yMEz
      tmSedMzcvn0RR/Bw826QO8PSKrGCDEv3GivIsPRx+bgZlj4WVCtDsXIo9VCsHNoLL7ywRqav
      +j1s9gdxx5I+y0/+6Z9ef/M4oqqvUAshErN0Hf3ukZFdjfJ//Mu/OPzqu5ya1skjP/7J794O
      MDSNpUoAAECjP/x/f0UWlfYf+fmvXn0ryi2r1d9ktxB66fWf/+jXr50f8Wze2sgAIB12/scP
      /jGrqA12/+Zvfv7yxclIlcjz3X/8SUfffM19rUImDABYuPDbfznm0LPsP/zBv54aWG7b3MLO
      /05Fl0Z+9M8/evPdDljXUKrgAzI7dup3/3pmaVMx/N3/952XX363VU/89fd/3jPmamht5DIg
      QBLmU//x711pVXr0h//6s66p6Ia2Otb79lEUhWH4D37PWpBMJnm8tUoHd0frHpgteeyPv/XX
      z7WcPTdGAJDx2XqGJxcdywnXSKBg71f2F3YPTpln/PUNuhmTFQAAADnScXRgxhlDyNodj39m
      s2ZobO7mpyhq3Pe3L3ybMTvgBgAAYB6+Mm42xWOBixfsX/mn7wfGTyxMjzP0DdzYgieCA0Bm
      47Zjb59Z8MY4irJnn30CX5j03HSwk8ZXfu6r3/nqQ6UXLpsAAKnl2d4Rk83l8y8MkRWP/sl2
      rsM0Kq3biHtmggkCADIVnDlx7LzdFxdo677wuYOxmcng3R5MjXhtExNTrlACAECSpG9pdnx8
      KhCOzJmnxsbGJi02DIB0xOMJf5BbDY35nP44CUA66vOEPsgdkEs9OBr+A5Eogq1a/B6OUKmT
      QRcHw597agsMAFtpfGTfLiELkAgCs1hsNjcV8AE2J5HA+XyYAAALjL9+Jd5aKkkgcKlBHUcY
      ePLm+YCZRcbiqHW8YPtBAwAAgOY9TzQbJIAgEBRmcXiATCMZAJA4LBBBBEoS2PH//I1243Y6
      lubLdQI4y5NCvuWbZVbgSwvVvPTgHP7kgVYAAFdb8+iedh4DEAhKY7G5HA6C0YlEhCkSAiJL
      ZpNv/+crVdt3ZNMJibaEgWM8IRb03SxBIomjQb/X6w9lcRIAQGIZr8ftD0VxgiQJPBaOYAAA
      kohFIxhOAgDQVNTlcrlcrmgKiYf9bo8vhd68Yxt+48Xfdp079vff+3UYAJKI/svf/cOJwz/5
      0SvnFufMvWeOfP8X76ajju9//bM/OXGtd0Zk40d/+I3vvjaYiSz9yze/8ON3pv5gK5d6okuv
      vfr7l6/y+ttW36rlqUBj7ld/81vexkc3FglJ4oMtzgy5jp7whcIhnYy1lJYe3LtxYWoSJQgk
      RapkxIR5ZqLv0vE+y+bd+0MOy81OQBKWnrdevxJ57nP7YJL4oDvJ4Oo0sM/l5fC1Tpujevv+
      UnZ4xhEkCFKg1ixNjS5Yprs6TySkjRs0uPWmTzcTsr30m9c0Ox5rVPOJ6y6Bq9SSMZ8/GLWY
      bG37H5FnnTZfFMdJcaF6ZmR4wTx9vuM4w9BeKUosBzM3sW/rf+f7P/7Z97/zzTcGrACQ1nO/
      +tb3fvaVr/6F2ZuKOvo/v++L8wAsXnnriUN/thhAAADBheHXXn3l288femNw+Ht/8Zd/98Kf
      //j1wZs+BMmf/NXffvnZh6RsGABAEtYErfm5p/YG/MkdB/cr6Nw//cYfocFoZXMDEyYBACRJ
      2gZP+XAZACAaSZW3VLOvqztzxu/B0+kMhhMAAEAyVzHTQMQ3b3MFTUd+GQx+FrdeOPC5/8Ut
      0D24ExIU1O+r6DthLf3aNx4JFL71+ttXvvT1L0ydPl90YM83/rxprLGKU7MJGT/1L7+wfu2b
      f3mzE2DRaZM9YA/+8O99Tz3AMLM//0wrt2X7QZlaoXnuiR//9N/2Pff1fZXwS7/5PVny6BPl
      6KUh256nvrxn14xhPL29nv/Kf/4Hrv/MlzYW3OQMPufsste38NIvfAeeDJsvHfqjLws05fu3
      pBTF1a3iFy942r7zfzb+8le/lGx6rk4UGJ5FDj77Zwf3bNGZGVuM+O9+/a+ihi8caJDcxH5x
      +1M/aAdj7/ykN5gAgBwfnn/sK991v/TNJcfCUNdJSVERACBA0vX8a6No6rpdX9Uo/irO/x+a
      +P8y7P76A/RfdFgByJ1Z8tpNSrgOv37+kT96VgIADph0BgkAoDEZySWzmWV8wiCAQa1Bwr5a
      82AR64/+/YhACo8uXGJ86f/qZLzp68bUco33BGfOm4KW0SvxdBawhAc/82xtkfAmpcnHzcd7
      zJPjJTUNrDXzuyLz01FVuZ6/Vg4pieMms6mypo52GzN7Ocd7nJOd71yJfv4Lj4qZ0Hv/9BfE
      o3/nPvytlEA6aU3EzbNP/vsvnq7nfe3Qt77+w5+VK9kA4IP/9b2Fxq8/LRr62kueP3uA/mIn
      +ePvPPMHazeO92QDf/OnX4oUtbU3b2yp4jAVda/+49czGCzY8T/3i0zdwdIvPd4GAOj7r2+f
      YTz9tW2CMBApeHBs6JW/Hin51bcODL/5N6fCB//2T9quGstV90hKt7Rp+Yh3dNYtLqrWylfH
      Yw8ngvh10+9ynToe98U/vh0Oi5szsW0GzSTSsQ/+l8t5eDgQ/fgngECBMPfwWigeuH6sWVmk
      DMdu7oflAIZhqSBv9bY0+OYLP72wZf++ZZfXhyENG6p+fuwNJMb+/LPP70fcv/qHFws1EgBQ
      AAAAiM3sUpZKu8zYM58XQXhlYazzWCdpKH/8Zqen8b/4f7+bwggGS0S6e5a5rf/z//y1K4QU
      GgxMTK8G13JYNzzy50ZIxKNl6BBbyGPztxz6XguDDkH193+1FP8gFFiesebo3G9PzO/d3WQd
      vMite7BFv5IAUDfUPVcsXauSE9mgNJaqKz563B1ympbGb98+BKBdjQdyftQz1bkqOZG31u69
      +vdH657Q8szUrAsHdI2+cHjU9LmHtg0NjcFiXV2lgQFQ++xSQaWRB7Kz5gVtqSHk8BcYlMt2
      V3GJAQbANT82781WN9QX8D/IBHqTseZUKAiJZZzbqP5zZjlxvn32is/qPn3CHYvEdjXk/TGG
      pGKJFIMtYNNwFGJwmXAikebxeVQyyhUjLazYVlgBAMCzWZFAAJjC1vZt73/I1FcaAQAAMMqr
      KgEA3NIiAEBpieHqxxpjo8Z4M+NHB06/O7IKGbULJcrvP/0tkFs9fPX+B5/c/+DVfyAGM2/+
      8KGLxz0ZyBckGtS0RX51O9/V75c8tqcZpsSzIn5w8af4bc/CAgAOVu2pU1d99LhpefbNwdO3
      b79SXZJfPTCNzb6lNTob9z0FSKTj6FEEBwtDnUld4/OfaaGUs2JeG3sXI1ZhGUK1sjynelad
      nDFTl46cuoQgKEyDcRp32+4HihV5HGcSnbrULWnYKfP0sgoM3LjVm9ys4tGCwSCO4ziOczic
      NS09xd0ll8vEU+xsKyNYmp177i+XYMH8seIHjh2+4kyTqUgKpRUVlz+0q/74e50pjJDJZAqF
      Qiqlwtd9yslV99DZCnUROzN1qSecTCBbW/P6PfrGrcIUATM4cu02JZPPF7Ae2u6hU03XPUOe
      lamsgvYW44A1VV9dopPkVY9SV6684YhGs5qlo/hkk6ezn7Cf6xr1Y8z4Qv+Ek8rHTpGbPOqh
      sSAs5XMuOHxJNovaI0GRmzwtF8RpfeCR+liMyePL2JQjQ5GbXOrBw+8d/t2AHxSrRIDO2S4v
      vuOlolgf5Gq5aOKDn3+2vqy4WMnFSTaPu4brJinWNTn9HoiGhOJZbNkLSlWk1b0KU5sUn0ry
      +D0CrVEwTZRWMbLx8sKVLO6huBfIo55keCkYjjt6UZgnL20s4FLZ3ShykEc9wqLPHvoiAOTM
      5ZMpnNrzRZGbPOqJLx89di6ZwWCmcG8DK/d3KO55cqkHiXrSzLqGpixGQBCc8C9neDo2NX1F
      8RFyqQfLhCOxYCCAYgQAAF00xWmSDcWU70xxI7nUgyYvd5+LxlJsLhslGXsPPFKsXsMgDxTr
      l5x7Kkqef3Lnq5fiTxxoWbj8XpRkc1lUSnaKHOQb79HwvL/70T93kkzRE8/mXaFBcY+TRz0p
      nyOKpmNZkRoirq5xJ3Hn3LTVFciSEFesrK2u4FNz7/c8edRDEMqqTaWR+TBJRuIokDHd85NL
      IVxTXM5jwulEZHzSsrG1hpLPPU6+0ULDjiYZwJVL/kyZhgcAUBkbwt4zS16GQS6g85UbjVJq
      DJEi3/oeRoFSCoC04P2FphAAcq12ado27SNZYoNSLaMqHoqcMTTI6/ekwTB8NYY3jsSs83Np
      nJSWSKmhQwqQWz2h2Z/87lj2agQWtujg45+t0QoBAM6lUG1jVRxjIxl8reKsUqwrcnkv0rKv
      fuX51nK9XC6XyyQcxjWFlZQZ1fpyPLCEsQXU+A8FyF33QDAj6bJhXFYWk8jhBHGtmeKIhYu9
      Y5qKGjpXRbnMFCDvngqBolxRVGqgWV0xxvs+ztzIsCPgz2L4+Mj4qgWUp1jP5PSasbDbn+Ww
      yit3iuRWOrgWskkiFUSHp4cHUwJdE9VyUYA86kmNX7nc5yH8VjGDL2svvTZTQdCZZVWNmpKy
      6rJiquWiAAD8f+Qh14xSiE2VAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='61' name='Sheet 51' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA9CAIAAAB0svGXAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAADDUlEQVR4nO3cX0hTYRzG8Z9tCF5E0C4qbLSbcEwTGkR1pRJE
      EQQjejNREEyDiJk1sT9SKyFMYcViUKAlJATTWBFCCOrtYlCoTDa0EGwhkelprcI6rost12oq
      9bs4543ncyOcc/PgvrxnsmFeMpkkgH+1TusBIDcEBCwICFgQELAgIGBBQMCCgIDFqPWAvxOJ
      RLSeAFkkC4iIrFar1hMgA48wYJHvBLKcH9B6AmTgBAIWBAQsCAhYEBCwICBgQUDAgoCABQEB
      CwICFgQELAgIWBAQsCAgYJHv0/jp9kNaT4AMnEDAIt8JhG+16op8AUn6ldZIJPJfLscjDFgQ
      ELAgIGBBQMCSh38wBRw4gYAFAQELAgIWOQOKDbhrq4QQVbWNd0NxoligWTQHYkREpCpBb329
      N6ioGo8kVRlur0rP0ufCHOJjPZdO1Aghak53BKJr/26lDCj8rP9dxZWH/t7Wsm9Dj0ZmM3dU
      JehzdVODx7lng0G7gUSqMhG47rrz4vufN3SyMLew/2a4tLXb7+9tK//Q1+4PZ27lXi5jQLOv
      JhNWW5GB8m0lVvoY/5S+vqQEfS09xgaPc9d6TQcS0ejTx3SkSWzLvqqnhbkV193vPGbJJ8q3
      7N1dmEh8Tl9fcbl8n4URqeqvZ//7uXkiIko897lev7U2+nTx2tirL9opFsi6pq+Fa4lHJxbK
      D5YQvVl1uYwnUDajMXWeLnzdfsp9eNbnGZzTeNFK9L9w2eJ0/41h2+WT9gIiWnW5jAFtNJlo
      afkUKtyyKfWz7MBOm8N59MuDzsCMHt+eSrAwJT7WfeG2Iloc5p9vdVZZLmNABcWlRaMvxxZp
      MToxaTRv3Zy5ZTA7mmsK+q71hPX6Aul8oToz2OZ+Yj7TUVf6+9Mq93IZAyJTReW+KU+1qL46
      Yqp02LP/mDHtP9u0I3jLF4prtG5NOl44P3Sva3xmvOvccSGEEMIbyrqdYzk+CwMWKU8g0A8E
      BCwICFgQELAgIGBBQMCCgIAFAQELAgIWBAQsCAhYEBCwICBgQUDAgoCA5QcwxzSsqfTQtgAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 53' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 54' width='191'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DB-economics-of-gas-elec' width='192'>
      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
      gpcj3FpDE94AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='DB-Break-even-with-elec' width='192'>
      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
    </thumbnail>
    <thumbnail height='61' name='Sheet 59' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA9CAIAAAB0svGXAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAADbklEQVR4nO3cXUhTcRzG8Z9tCF6I1IJ8aahEOOYLNYjqSqWI
      Qggk+qfiwPAlCNEsxV6kTCFMwcIYFLkUEoxprBKhBPWiixaCpTbZ0EqwhUW+zGmGebQLtbmg
      C/vBzk48nxuZx4sH9uV/lDMMWllZIYB/tUXuAaBsCAhYEBCwICBgQUDAgoCABQEBi1ruAZvj
      cDjkngA+FBYQEel0OrkngBduYcCivBMo5mKn3BPACycQsCAgYEFAwIKAgAUBAQsCAhYEBCwI
      CFgQELAgIGBBQMCCgIAFAQGL8p7Gj9WkyT0BvHACAYvyTiB8qjWgKC8gBX2k1eFw/PdrcQsD
      FgQELAgIWBAQsAThH0wBB04gYEFAwIKAgEWZAbk6K3OyhBBZOcX3+jxELmuZKLO6iIhIctsa
      8vMbbG7Jj4Mkd09N1vqChX5zoVEIIYx5Vc/GpQCY5+UZbL6SZxRCGAtrrU4Pf60iA7I/b/+a
      eq3V0lKR/LP7ce+E94rktplKzVRQX3QgTOWnNZJ72Hqj9G7/0trr6ZcdLyJOmy2t942x7x51
      DPj8qP/n+bBbbtmTKswWS0t1ylRbjcXOXqvEgCbej8zr9HEqCtYn6GjWM7f2/WW3zVTerC6o
      L9oX6sc5Ax1P6ESJiF5//XHUGa2PCyVVWLw+eml2bkHeeT7ic5vqTsUEEwXHHNwfNT//nb1W
      ec/CiCRp44H6bXKaiIjmX5tKP3zWFZv8/fYYsi8byGX1zlta2nB1cnKKdsk57y88zuGZlGMJ
      JL3irVXiCeRLrV49Xmd+7D5beXzCVN81KfMiHypVAM5bHGu/2aO/esYQ8seFza9VYkDbNBpa
      /n0KRUXsWP2afHSvPr3o5MLDOuu4PL+hrtqq2S5Jy+uvIiPCiSiA5pFn0HzpjluUp2tVxF+r
      xIBC4pPiBt4MLtKic3hErd0Z7r2k0qaXGUPaqprt8r1HsYl7pgfefpEkt9PpitZGbrgk+zxp
      vKu68qn2XG1u0tq9ibtWiQGRJjXj0Gh9tsi+3qvJSDf4/oWgOXK+JNF229TnkWmdKiktO6Sz
      JDMzv+lTsjgc5XtV1nnT3Q8ah8aHGi9kCiGEEA197LV4FgYsijyBIHAgIGBBQMCCgIAFAQEL
      AgIWBAQsCAhYEBCwICBgQUDAgoCABQEBCwICFgQELL8AUaKX8WJzGCMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Conserve:Costs' width='192'>
      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
      7xmirKrq/AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='DB:Conserve-savings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 60' width='191'>
      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
      LdHb9bVvvHj8/IUL6UKxubE+f1C5ulWZnJp5DPWsLf78wvX2u2/+9C/+p//5wg/+qh+R3Ur7
      +MK4tMftXBD3+8irxdKJoxiDEjEa+X4inRH8EXdtejhG6tmXdCYthJNC8bX60vj0NDbUpKnu
      NHZ010wXppGkBEuDSRpGRNV0Q024MJWbQpSysFrtuMlEQkFoYnomhf2judlefefMmWPb282F
      46cnsm6PQSb1OI3BxNzUGz++kZso1etdxUyQyDs+V7i23sil2cHCmKWCwLptuYYldV2VSOE0
      sAyDf+YtSPdkFDU/EDEYhI7zBEZKIn8gVfOB6XPuHzVLQTvdsFGvEExsR8ea06rXx4vpbohu
      t5ddVfvSwTO/1NXH9/I0qOfXZKbi+u7yTGbcMfbVcdvvKZgkjEd7XqvX6/mPjNiPytPQcw1n
      KqLA6wcsYRu6rgNAGIa6rjdqVcV0EAuNRFoyappmr9NSzYSpq4IzyoSh753JSzBarTUz+YKu
      EgCQgtOYgxSabiB01xz4MTT0G61OJl+UjGKEVF3HCAEAo6EkBo8GQSzTH7nMoijSdT0KPEkM
      ELFhGGEQaObH2bb3bHtWWtsTuaKpEQApOOv3fctxGOciplhRGZcp3VIMy9D2nrQRLAIph3O9
      d3YOBEBYGQwGpbFCEDGCJFFUyritKxxIGARu0sX3bcaeBvUMuXHlko+M7u7GzJFj0cDbrDZ+
      59uvnX//A912jhyaurm01mx3vvObXxv0uqsfXk0UJqy40cLFF07M7Vmb19pe3vbIym2JVCOZ
      cpXoxuK6mUynbCU9drC9s3r63LnbF98dUDWdTZi6ReubNxr+Ky9lP3jjRxFFx84crVfrUkCv
      un7s1T/avHppfGKmvLmkmsnKbrnZ7Xz7m6/evPTO9QpfOFQSXm9rYzd7eOGVs6fv3+fQ+mrY
      uXPL4kj2WuCzYbopIAQyuRJFyn7qobUVEQ0+/S5WBGWargdhPBj0jUQKOAuDMOIKjXzNtK37
      ZgF/etSTzma3b61bprF0/WrAVMs1V1fWEEYYk8Xr1+fPviz54sbq8vLScmF8ZrdcLloswN5+
      tSGATrORMeN6tyfbXRVTIaJ2a9BvdPTUBAi6eHOp06wFIW/UzOxEEXW8dDYLQtjJ3KRlri7f
      bjZapeKEFwkAwFI0mk2v10Sscm25Mj43yeMIkJqxlZ1KlUR+14sLiAHwTrMnMN4v7JFxCOqd
      5CwEg4KBCQQIAIEE6A78tFt6tKsmmGSU08iwbcGoiEMBxLYtxDFGUntQiPY0xD1fSKRotbuZ
      TBoEv7V4PTd1OOveSVGwX9T81+997+W540VVlbDHLUOIKIncfbzMrF+TLJYgh2n2hm9iRV9c
      r5w8efLxTuLpaXu+YCCcyaQBADBZOH7qIQthzVJThcf7QiWxd0GEqo9XIYzUsx+Cs26377hJ
      VRm6ZARjAkAoioYQUEpVTbs3RGE06g28hJuSPKIMbNuUgnteYCecOPS5JJZ5Z7uaOI5VVaFR
      SFSD4Ed4tJZSCs4lo3FMA8qRYJppcxaDYIBVSqnrOhgThPfubiRncrgBJcKACfAYEAIppRCC
      c4RxFPixAB5TJ5mMwoDHsaJqUcxTrrPfEMBIPXvjNTcv3mpZJARQ7HTGIcG1a2tWOpNLWan8
      dG1j6fS5c8uX3/eZkc46hmoE1bWL2+2vv/b12xffAqeQMUSzVvvgyuaf/rf/8vr758cmp8Ne
      00nnt8v1Qbv+1ZdeuHTpIjhjFvjYzBi6MpG1zl9Yev7Vr5j73Kc4jHpNr643k8lyJ4h9JjEA
      xigU0sSIMRkJKLnYsWx9/NieNzuqLYmwDwBAVKzZIugAwlxgrxuV1xqFyVSjWY8YA8b7fhiL
      EJjklFGOku6h/TQ+Us9+yDDwNTJoeZzWW5ZChQxr1XZjZ+XwmbTk0dLyWr1e8Ty6u23lJoqo
      603OTBMExVLp6tJWbJFBpz81NQYIScE8r9es1Mq7u1c3OqcXpkLfU1R9p1ZPW6KzvmPnxhPS
      qFaabc8T+6iHxUxwySUWUjGUGBAiCBAAEYggUBHSAVQsBfVByk/n+b5zQh9FSzwWYQ9gmA5Y
      FRILgWLKHDuhcYaFVEzLDyRSABlYoPs1j6OoeW+klIwxoiiSc4SHXneJMZZSIoxBCi4kvptr
      ByEkJeOcEAVASAkIABACkAhhKcTQHIoQEkIijDCIZrufSbt37zOLvEtXl84+e4YABEHwi1Gz
      FOL/euPvvjJ9Yiapw8dRMwKQww5ouGYUGwlipfZse1ivJuIAAJBiYMPmg9bQq399rXbowBEn
      ZaFHt66O2p69QQjd8Uore10iRD59qRFS77z16bADkY/f+agUzn0yo4VmJl54/uz9jgdjzdTs
      TFJ77KjZ/URBot958lfLvUTmkVO03qnz8YqN+DwgBAeE0T2p7AEAAOGHjsalEEIIKeWwG7v7
      Psb4YSbLRurZG7/XeuOt9+ePLARh5Bh6NBgYubxjJ3q1jdT4YT6oh1JLmBoAijqVhi84D/TE
      pN/Z1TQtl7QZ0jhnlbW1hRfO9cobiVRqEHAZdqs7lakzz0XNzbXlncnJKTNleq16pSefP3uy
      Xd0lViKbcu9/YDwaxK0tkAIAmr0AEY0JSSRXiYxi7ubGQrAKexk/aGN9uA0KYAJCIEXTsrOt
      dptFXrm8axkalYoGTCpGGPjFYuFh9DdSz95Ybiafy9d2t0GR1S1W392RycT0xEzGYIzz5ZW1
      6uoSyk+5mjI7M35rZcsB79nXjr/94ZshGIcm0jeufZjIH9QxYoJurK11Q2HaqsH969ercy+8
      WOl1Yhq988bPM0fmZGUV26WtxlR5bV0i5aWvvHD/A2O96p1HJwAspISASDAJBAw0DKhXS0w/
      s+eNF9QX0T1j6xFwK6WpSixA03TTsmlvIDU1lTB7w804HoKRevZl7uCclAKAXnjv+ktf/5oE
      pppJE4XrG6sTExMHD8/TKDYTyXTCMO0UQeAaynNffplg7PU6L77yDTeZqZYrtqqVJkqH3LQX
      cRl5pZl5QnnCShXPTB2an6/XN1qZudPHj1iuXaV9SJQemL9HcXLDFccA0nU+Cs8l6MNYzS0q
      6t7BL1I0xHWAYdvDkaJhw7WxYpp2JpNBANmshhAChBKJh52lHz1zfe64z0zFbyw8N/64UfN+
      XLt27cSJE49XduSKH/H4jHquvfmUK75Tq5jZMTXuVQcwfo8r/uL7lzO/6Ir320bqXlf8Etdc
      VdFKQ1f8hffsZIEoYJiJUvERfM2maohBgylYMlpv9aWiSc5VIgQoUgiEARSrND6+X3HWb0hO
      kWqAFIAwworkFOuOZJT168TJtZvNmMciFkjTQAiVIEpZLGFyorRfGDRSz9585Iq/2A4p7QZR
      GHENkoaemj3T2LhRb3dYEONksldpZ0tFPwjp+uLF8wPvXlf897+fzmRXNrbudcVn8oXm5sb8
      AfXqdmVyamY/9fyHv/4/++B896tn/93//b25CdNyx8qbW8UXz2p+m8YDADnoSoZAIyAx4gI0
      AlwCRW1RyGFlb78b69dENCBW+h9/+MNmoDS7/SM5KcefnUprtLGmEzUK/QENTawxibDgputg
      TPqt7n2u0kg9+3LHFY/ZtYu3J2ZmiKG6hrLb3NETZqY4jQRVCJgcaBgRRTNMLUnRTG4KaMzC
      aq2TTCVdhZDJ6dkk9o/lZ3v1nWfOHNvebh45fno8m+xxdB9XfDaTqu0MBNJnCtZm3Uv5FTdf
      KrgmiBgQBilSJiAETIKKQEgQCOsIHF17cEJ4TACpJ08e+fDihfEDB5bKLUiXAGFE1FQ64whJ
      KdV1XQjBGdMNvThWHM1UfBaE54X2k0jb9vCueOr3OEHtJkUKZB11ELJmsx0l1SPZfMJygTP4
      lMWHqCAlwgTt/7wm4hAEl4Bu3rqdyuYoR7oMnfzkxsqt40cXMPmFXXAfgqdBPb8mrvhar5m0
      XAXjixuLz8095lPSXYIgYIwlEonHXvgMT0fP9ZErftALmGubH7niA1036tWyaiYQi5CiDrxg
      bKzYbdWMRAZLLgXHhCCiYU5DLp1PbtspGK1U65lC0RgmrxQ8ijmSXNNNhCDwfcP6RBpAGnr1
      ZiebHxMsIhjf44oPJDF51PcpZFKfcsUPJDGkYKZhhL6vWdb9XfFztg0AEQ2v7N58ZeEMSBFE
      sa6rEY05paqmRZRi4IA1gUjSdYfuHckiRDSEsYij4Qj1sI0JA+BxZFlFy7J8P0DAJSIxjTVN
      kQizMFQ0jQmZvO8uhU+DeobcuHLZR0Znd2N24Vg48LZqjd/59msfnL+oO86Rg9Nb1a6gQbGY
      efvnbz//1W82t1dazSqTeqaQrayshIncd7/6lXtr81rbq7v++uqSQJrpplw1urG4brjplE3S
      pYOdnbXT587dvvBOn2qZXMLULNrYXGyGr5zLnX/jxxFFx84cqVfqUqBebeiKvzw+OVPeXNKs
      ZHlnt9Xrfvubr9689O61Cj9yqMS93tbGbu7w/Ctnz9y/95BSRvUV1quG21dAilYArgH9CEwC
      XQYYg0WACgiJ6yQSCkKsW47b28RKa4VDtP4JV3wUShqFLKEqbrHfH2iawmgfYVU39EGvjYC0
      +75t6fBrop50Nrt9e8O2zOXFqwFTrYS5urKGCSZYWbxxff7k6V5fhp4/Ozu5ePXyZD4l7VzQ
      ajc2l6v1Zib56SE4BNBu1LNm3Oz2RaenISpF1O14XqtjpqfQ0BXfagQRb9WN7EQROn4qk5FD
      V7xtri4vt5qtseK4RyVCQEA0Gk2v30K1yvXl6l1XfNZWdqs1Enp9jxUxf6ArHqSUcTR8BQgZ
      iiTozgOXSkBIEAAGAYHv7Is7tGQM//10TZyCBBGHCBPLMpAU2LAE5zSimm4xGqZchz0oqnka
      4p4vJFK0Ot1M+hFc8UMCr/OXP/l//vXLvyvFp5emI0BDmw9xclj9/9s7sxjJrvO+f2e5+61b
      e1V3V+893bMPlyHFXaQkWorXxDYQ20kQx0jy4MBBAAfwU/KSR8MB8hrDgJWHBEhiRAZkWJJl
      S5S4ahYOZ+9lunqt7tr3uutZ8lAzwyHVnO4mRxY57t9TdVXdW2fm/nHud879f9+nAYBkIRs0
      iBHHqsl6NcECGDpTAbU95g+649Pz6BNW+Afh8Zl7vmAgnEoe2hUPAFgzsR5T4iMH+hGqKvG7
      OTo09pGEUcwbRJLPIh04Us8XmgdtPUJIkAITzJjAGCGECdn/MdTQ9yiFBCkAY8E5xkhIACko
      Vfa1+BypZ28Gja23rqyNjOQsjcYSCcIHN25vJtNOMh6PpfLbK7ePP/10baMoFds0FIxwp1Qs
      doKnn3y6ePOyUOOFjNVpNn787s1/+ru/s3LlPc3JJS1qJ1I75XqjsvPCc+evf/C+nZ/RsNBM
      GyOUcvTlpY1jp48r+10wyRnrVbztawDAmOyGQgiIaajjc0oo50JIpmIEREkaGFENJAcpAWHJ
      owctrZHPwcx1mjViOL1u17HUbs8FAC4hZhvuwLOTWcfcZ2Y6Us/eCB6NTMy2V96q6PnqjTtT
      CRBcvP9+OWZFU/NPSc+TAJtbq1vrZS2eTWfieNA38uMqxalU6s5WJRg0W6WtdDpNFYikMpHU
      VpbWBoNbO73oWCHba9a5RNcW10a0zm6dx/O5E1mytu6Onjq+b9VL4fckZzLyAQBLiTgoAIIB
      FiAFIwiQBC6ASC4jJPeKl4dwL0BmTtM0TqiqEIQppTSKQjsWD31XSnkQi8+RevbGiOdxufjU
      V/9Jfbf0TNzuelE06J99Os/crpnICy+xsrgyNTV/4swzPGJ6LIGC7upGyQ+iWCw2O+dYlKH5
      k1IwxNDCbMEHY25uWredar0Td6xY0k66bGrW5lg7ASEmmkmjzvs/4gfoaot1BxEFqcbQ15NU
      ARAChAxDIkUDHkkpQErABEmJqDr8E2Es2HBDVQ4PIIYuAHQ7DgCWlgYA07q3OHcO2hPoaM31
      uePha66AhX/6xv/996//88/4K41GIwiCsU9+Jn8Qjvw9R3x6ju5ce+N2m1eu3144dW7o72nt
      loxcwSBQ2902UyPWA3VJWpVSJJAvBKF25HcopeOFwvCjxm7JzBWMB56KNkolc3TMb9c63TCb
      cjTHYb1GO1RH0odrIMcGTclCkIJx2fNDGXq6prmRoEioBPW9iKoKNVPpzIcOEBEMuNemdlYi
      XG923H4bYVqrVjGlhq67gz4gLBDOpVMHH8aRevbGdFK6qhdvXrzn7wmZKkfGj49aDNmZD979
      4dZmOTU1rWOYLmSvrlQd2V544eu3LvzQB72yvrRUXFfNNBbiK7/2y29993uKHfe5UL3a8mrz
      H//r32vubq9cX3E9mZzJBJUdj2svf/2XVq68S6zEqy9+ad+xSeaH1dXhAkpKGflAEAyCnuCA
      KQwEUAQ8BO71ZDp137MRNjeF3xOhr2ZnMZKU0q7H4zHMAPUHrqaoUnCfiUP9Lx2p5xPJZDNC
      JHI4vHpxce74AlaJk8iYMNgo3omnstmR0X4gEolsLp+Y8UAl2WxMWzh1jlLab9WPHZtP5SbK
      pZJGaDabImYiElJ66pPxMRUBIerpp55qN1oRDqpa7PzJM7pKdQW8KDpQV1tMEdUkD4f5qZYq
      uZAEA8MII9CHLQkFwob5YFNSRHWAPlZNhFAsFmNRGDMxUXSdEokwwQiDVA6pnqOoeV+E70e6
      rj3CM7IoIoqCQPa7HaKahq6ClJ12S7fjmkIOEjX/wVd/G6S4d+2GBX3upTXfu56IKA8mF0sp
      JGeI3N0DfCRR89Hcsy/40UoHAOjdflDIdhJ330IonjxEwIEwASCHcnMhhD/jc4mf5kg9e+MP
      Ols71Ux+TCVgWlbgDqhuYRG4EdjGfTHxzeK6YidE0E9kxyxd6bWbESgi6ClWMm4bACCldPsd
      SXTJ+TBPantjVWLdsi1V0z5mKjoQEiQPRegCAOMyYlEQRCoFAYSFvqrpHFGIfM0wVFVDmErm
      I0V/szzYggAAGxZJREFU0LEqIh+klIINu+YIzrwgZIGvaHoQMooFpaoXhJpKAVPLeFifuSP1
      7I2qW/VqPfJ6bT/kfd93XZqI6SIgmYUs7dc7XcQwcbSlD5affu6JzeLGWKdba/ZazS0RybHZ
      c1P58MaVzdxoYWt7u7tbrDPrtS+duVjpjI7lb73/3onjZ67dvP6QrrZBv/mdNy5Nxljs+Muj
      2uCNi7etoNanKc7hq689y3o1v3QDAHyGmeQRAw+BFIAQDAAIwiEXMQ2EqmDVFH6XOnk1PQUA
      197+a1crbC5eHcvZ7VB94eysCF0BxPU8S8GtdldRqCTI7XewrrTbA8t24KHqOdrv2RtMqGmZ
      fsR0RTabTT+M+r0+VZTyVrFUbbiB6Ljtdr0es0wkkePY1cpuvz9wchPZTC7qN2r1eq8/KK6s
      VNuDeNyePza7tbk1PjlarrTGp+dH0zGJiLJndQ4AACCq0Ws3VMRag1DTrXajqdhpS7TvrK4O
      wg/bbClIIACMQMWgEMAINAIES40ARgCCSxYAgOTR8PsaZVcvXbmztpHKjW9tl0BKyRlRFF1V
      Iy5t28SEKIQYlgESx2x733aCR1HzvkQ7peZYIf/ZT+R2Gh4y0s4+BvvBYGBZ5uLiUj6u11we
      c9LtRs3QlVzCfPv9xRdffu7Pvv/Nf/fKrwMA0Sx+L6f9PkSPDd/Eio4UnXtdaiYRVQCgU11v
      eury7esjmViAY8enR51k+rMUln8c1PMPxBU/hAt+af3mTGY8ZTn08H2yXdc1TRMAgiDgnA9f
      f2oeB/U8ZhwkyeGbb/3lrz75WtpOAIAQXAjJuUBIYkw4FwQDYEr38vfcz1oftgbnXAjOECGC
      86EpCIHElB5wOnp8ouarF98ZgO636yfOnpNReHOl+PpXXvreX31XT6TSBq81hSvC17/2lR9/
      7zvnX3m9XlrrtuuKZqmxZNgo16X2Cy8+8+DZBvWNH72/PpJLGSqNJZNUDG7cXI+nE5lkYujv
      OfXss+XVZUYt21QJJt3S6q1q78XnX1q8elGlSn6yEPihYKK5vTj5zK/s3HobG8lsQlfNeLVc
      qVR2v/zqKysfvFvsmfOTKRIF2xul1LFjZ2dnDngbkVL4pRueYQFAx+WBBCQlRVIAFlJaCvgC
      pwysJMfvWwqDyoqIPNars16N2plGteKkUu12F0SkKGrAIelYbq/nud7oxPgBO+o8PupJZfPV
      1Q0qw+sfXNmp9qanc8XVou97JOKZ6cmllfdyEwUW8YmpiavvXxpJx32k7Ow0xrODW9eXkgsf
      T48SgufGJnobl2pqpr60UXAEgLh5o2Xp/vTxZ2QYBGG4vbO+s1VV7HQ6l8T9Xm5sUleI57kh
      otH21nbxTtxJcyEKEgIG00lrdWOTD25uVV1nJMv9LouQ6LduL9dsRd3c2JXJOMxOcy4OcjeQ
      LJA8lFyVUnJ+v2whIOAYgAtAQkiOWL9+Xz2SRzLyJWesV6OxrKbphKqUYo1a/X5fYNrrdhVN
      BwDOBKEHWk49PneufqfR7DPboJ47sGy70w8mC/lebwBSeG7PiqeazU466XTbjWSuoCI2CCSI
      yB/0BKKKbqTiH3lOySNvtbhVmJpu1apOzOj7LPLceDoTeX3DSQu/W2kNEqai2zEeMdWMoWiw
      WSqPjE8hHlKCXXfAJbYsq12vZAsz0aDR9cEgjGhmq9E2bSOVTJS2tmLxlETy+sW3M1NnJsbS
      McvodfocUHK/CmJ//ta3vjE2ntI/OV0GAQAo8VFi3t2QDOvrkoe318tnz567/+Zn5PFRz2PD
      YeOeQ/FZqvX8NEf7PUd8eh6fuOfR4vdql68XxyanxrJJQohg3k6lSzHL5EYVhW6trY3Pzckw
      AEQwRgDQKK1vNPsnjp+qba10Q3T6+Jzfa16+uvr8qy9uLl5n1J6fHseERBHb2SnNTE0U7ywl
      x47ZGsaYAAAhKAhCTdMOsvsipRQ8DJtbod+WEhqDgDCf6GbEQSdIIBwGXsKx7ka+CIMU2IjL
      yJcs4F6H+z2s2eXStqrpfsgEcyXRPD/IJh0vgsLIITq9HalnbyKvZ2cmSjfevsGMgaDTSVyt
      t3q+SsUP5s69LLrV0bm59978/s5uL5nPWxqlkR/FcxiDoihep/fe2z+u7+62XPrkS8+0BuGp
      BeetH/4Aa9rN1Z2Z0VTSoq1W6/rau7ZodEI7nk6cHtXfurj9C7/1y/u64gEAOGPdKu9nGPcG
      gQwYmBSMMAgCiQh4DCIBgeyrD5bd7dcRUSQLRDAI6+t64ZSmKs1eX1UUBWNPgBQcJDgHdjQP
      OVLP3qhm3F1dnTj1DN2pzMdjA9/LSmU6O4ajXjyTFAZfXlzJZkbGJudZIJKFcTKob9S7YcjC
      MLQsS7dIJlvgUlIgaVvfrnbzI1mqGaA6I5mYacUUIzbv6FSbnggHRIvHHGi1rwYHcMUDAGCC
      VWMYGFsa0hQJAAiBrQBB4BAIOTyQ2YMAJNbse7mnCOs2AFYNc8x2GBMKRWmqhCFDwA677XwU
      Nf9ckJwL8kANecGZF0SmoSOEDhY1f+tXzr2Stg4cNWMMUoCEG7dunTlz9lG1vT2ae34uoAel
      AwCYUMs81LVACNOH1Hra6wg8POwRdkw+Us/euN3mnfXt0YmZoSve63UVy1EwDHodxYipD2ym
      ud0uoijgCAPmPMQYx527uzXuvaPu4/f7xLK473o+UwnSHAcC1+MkZh7CgCal7PV7/+X3fzM1
      cuI//NF/Wrl1xZdao9EsjKTbfX/Qbj754mubqysvPf8s1qz7WhGhKwWXUkrB2+02oSoiRIQ+
      YMIFxG3di8A+zDDgSD2fhOmkomCtvrXc8sOw4waeB5YWS4ymFC8zc25n5YNytZsrjGqaPhpD
      FxbrlmyMnH556cIPfdCfnB8rbu4S1ew3my//yq8uvfcjxU6GAlmye/36xld/67famyvL1+/Y
      TtrOWf1yqenTr/zC6xu3PsBW4qkzJ/cdW6/X+19//t//6sRit33hT/8k+r3f+Y03L1/ptvqr
      qzRv4rMz+bf/8psXlnefnLKM1MT9KghhfV0EfRlKhImhqYOAAQtAAAKCkWw165xYR+p5ZGi6
      FvLA0klto6PpBsY0GY+pYXBnZUl6oWOgSr2RsGIxK69ghklsIm23C1OqqpZ2Sr7bySZzXm9A
      QEYRE0EQcN5tNUzLxAiEhMLkZLlUpqHSG7iTkwteEAVh6LvVVntsX1e8EIKzCAA0CiwK3714
      JZnJCw4T6YTneRcXS6+8/PxYYZsAgPi4y12CFIL13UDTNS4IQkwA55Im01kvOJwlHo6i5gPA
      KpV2/jCFlfel1+3ajoNA7m6tSy0+lkuBlJtrK0ZyLJu0942apZR//K0/3fkf/81ML/zBf/7j
      fOYTDNEIEzN53xjPva7k0e210tmzhyj48nCO5p59oY9WOgAQuxsYodGJe93gEZqcXTjg4Qih
      fC7/b/7nu4d6UkEMBwAQ2j3MSPfhSD1feKQQrucplHAhGWOKogDCkjNF0/e0+MDdlCDKIsZZ
      hAmNmKBYCgmMcdOyDt5r90g9e+N2m9/72x/NL8y7QWAQ4vd61ljBiHoNSM8kodl1KVapCW/8
      9Y9OPfNEqbhx+sknB/1+ae2GK4xMIjkyXuD+IJPN1RqNjcUPAiN/YqbghXJsJP3G9749OXOq
      5w+y+cLTZx8WI9e2llsBXVvbeO2rX7n23g9j6dHt3UbaAp84ABA21t06AwAhZH0gAgkUgY5B
      YORGYGBJFJzUMCDAiqGNHBeBe/PCD8qesrG5++yXno47dqvdQZwTTCKMqOSmnWBRiNAhqu8e
      qWdvTCc1OTE56LWByN2K267XWaUyGtNQki41WhGL+t0WqGYykx/JZAhnS1cvUSvN7Uw68hXT
      oWFrs9wqbpQ6XjCioUEYNss7djZ/fWkzOzoxkXMuLDVTPxXSfozN5ctt5wWd9wcRlEob7tLq
      nar7L379y0Cy4K3yQQsMCwCEkExIQ0FSgM+lo4AfSS7AwAKkBAki6EsWysj/8Ts/6flQmJxt
      85fSqqZSQhXqBaEQxDCMIHCpoh6wM9eQI/V8IqfOnJJSAoS3rhdfeOUlKSKElU67ZccKgCnF
      CGHZa7WRao6Ojh0/fa7X7diWxRgXkUfNeCLbNQx9EDAVC8WMRV5fsCiRRJnEKY2S10cmVVV5
      +AAmj53qFreLDX+ktJlJp3elNzeVLHfF88+OXC2DkprAIABABRh/wOeDEDgOALrfGxkhxUCK
      jhE+efpsueUHQpvImgQglUoDwD5OoofyOKy5GGOPtyv+p9/5zvU3Xzr2lGMcuhttpVLJ5x9B
      fsiQx0E9H+3p+oXnftrDw/nW+393furUZHr04Ge+devWqVOnPsPQPs7jcOdCCCGEisu32p7Q
      KZ6dm0Ugi+sbx48fe+/NtzUnZRIWStrt9uIx3dJoF+JRays9Mt6sN7LZtKWQAFi/LzVdzWSM
      q5eWv/TSc8KtXbi6NjYxkU/FFE2TkbtZamoaSqdzmm5sr61OLiyE/R4QZbiuaZbWN9vuyROn
      d7fWLE2NZTIYkJSyV1nXx8401q+7Qp2fKRCqea5b3t1ZOL5QWr3VJZmcoxiauru5lZqaTlkW
      QoAQ2jcND4alDxAIr83d9vCvWj8ikmkU9wKWsIyACdcLUglLI4C12NDgfJAzH5zHQT1DdF0f
      1Cu12vZOpVwuNzK5pEJRpVKxOZ0+OTmQCgJsKHxtdaVPEn6zzXkYhMgNw4mMdWOtHcNdzcle
      urrp1/n5F55j/iCen9i9/e6StLsRnk6iZqfX6iIV92bPPC+6tcLCwuWLb5ZKbSebi5kqCXyW
      yGEMG6tLQYjy4+m1O0VdNRHiT2XPNDqDMycLly5eRIIXN8pWOjU1kWvVm9fW78RThiJkaauc
      rzZ++bUvH+7fLEVYXwfBACBk0vfA0WDgg4KAuR6PADgEPY9SxAdNaib3Pd9heXzUwzlPJNJj
      uXS/0x4fHesFbG7umKbZIML17Z3C+ER+fMpvlaaOnYoYaCdPqBA6iXjfR4V8QtI1hWCERSxu
      yUlECSJWMlhfnX3ixfJO+UQi1vd8qpizJ8dQ2IulMxDDy4srudzY+MwJFojEyBhxG2uVZhiy
      E2ee1BWl3WufOn02kUiXSxuOBuMjmc1ya3wsj4iqmMl4MkZVi1qx55+dEljc+Mmbk/Onj58Y
      37/TwMdAmBhxPmgCSJWivI2FBJ1yJrGGpYKlLpBKAQCwZgM5YJrNIXgc4p4vKFJKhBBIyYXA
      +EPjxAFbHv3Fpb95Zvr0VPqgBXgQQo/WEg+P09zzheOuXNDHvT6f5iQ/J47UszfM799cXJ2a
      W0jEDAAQPOwNQhChHU8RBM1GI55OP3jN+63a6tbu7PzJqFdreWJ2cpyH7ur67tzCbLO8HYA+
      PpodXud2u52Ixxu1XTM5YnxC7/QDIbjw+1LKYNBtdboUCazoQRBpKhYCWBQm8+O6ercMnfB6
      WLMkC7nfx5rVadWZQJxLRSEAyBv0rZgTRFEumzmUGI/UszdetwpG+saFH3pCQ4adM3mxWEJ6
      HIfN3NzTqF974qWXLr/9d42uzORTjh3HvVpH6hhDqVQaMNour9fKlY2ym5seX93YOXF87idv
      vmEls7eXi5aKXn3x/J2V5S7fMnk7VFIxW5/LW2/9ZOW1X/t67GDPmAQLwtZ2qAKz7Ha13HCj
      mIJ8JjECFwElCEuQtgrqGABE7R3W3qHOCOvXg12ujZ7otNsCqVjKgYIVEble6KTS3A8PO48d
      qWdvCFWrpfVsIuM2uoqI6t3AMDSkm1ZcHculOqy1uLgiJcQdxe24VNVEwKkuw5CZptltuRSB
      HU8vODkMRMV8bXNHStlrlBkomVwaAKhqKCGodlZ220KYANLtD3qDoSn+cBfRUCClIyEhoaNI
      gIpBADABDzlLOpPzw4gLqakKIKzpHgt80zp0IbOjqPnngZR917UfCI1Dr7e6VT0xP3tAVzwA
      /MWF7zw9NjtTWJDMF6EHAAhTkBIQSMERwthwhgXnpBTC62LNvnH92qkT81izj1zxX2QQsj+q
      D9WInVw4XC4VYIJ1GyGEFAMrD5s2EMLDxHVEVaIf8lceypF69kZKKYS4uzOL0LBKxbBPLHx0
      pfPTk/f9T+W9oz7xy3fP/OmXTg+eMIoihZKIcd/3VYUKwColQoqIy4cXr/zUHKlnb7xe+7vf
      f+PYsZlBGOqAvV4vNj4et+JuYyMzc65fLrZckUknCCHEa6zWfMS7zuiZ7dvvRVg/f/pYq9Nn
      Eu2uFZ/7R79aunVZd1IBBwP85Rsr577xi/3tpVvX74zmC7HReL+8vdNBX/val8trS8hIzE0V
      DjFKIfydWzIcwNDl44GlgM8AEGAEhml1cBzpBkFwpJ6/V0wnOTU56bkDTESl2uu1OmG9NjW9
      kFF5tVpu7FbcRnm9lExZ9szMeL2+Y+Hw3DOp+pYTU7XinaX1jY3cxEkGVMqoXm+yZl9g4J3K
      TsV7iuAgCpOJ5OrKclKMs0rJSU9V271SuYZIezSXEgcORKWIhtIBAIyRTuVwBiMAGEHgDrAT
      RwjBz2xP6Chq/kTCMJRSAkRLi5vzC7NSckxUAqzb93RdpVQVghOqqJQEYYgAFFULwwAhFIUB
      IKSomjdwY3HH7XUVTYuYlDwiBFPNbNWr8USCM17ZWe9FyvG5Saood259gMzs1Hg+iljMPuhe
      c0EhIhh8/DMEIAFrFnXyD94Tj/aa//5Q1WFlde3cEw+6GpS09vEQVdO0B1/cOxDURBwAbCcO
      AJoGAHcPzI/c7Uk7u/BhveYTZ88PX3D28WbHD+GA7W1/RhzV7zni03M09+yN222+c+HK8ZMn
      GYtihjFot4xsXmWDqq9OZUw3iCihmLCL73wwOT9VLe2OTc0ZKtkq3nSlaRIZy4ymYrplmd2+
      u7VyE9m5ZCJuGHrcNi/95O1cfmIQuLF4en5m8uHD4JHvBrxeb05Pjdd2t81UXoQ+EqEvP9Jx
      QkRB1C4NrRrNdh+rahgJS6MkM+O2W4qChNfOjE6D4O1mve1G0+OH8JQ9hCP17I3ppJLxRGl9
      JQTud6J2vS4sYySmmONPdHdW+oN+v9NFdiJoDWaJomvK2q3LAZh9NrBZ3Zg5HyeDy1cWEaKN
      TjeJ+5t3Ks+fntr0RIS1QbOZjifWtiuTaP+eI9fe+fa6O1784O1/+0f/cf3WhXU/vr68OJ7A
      8aknIP7h11ivyvv14WsVpOdFFAMJIOiUI66IqC/druTBt//P/85MT43MP3Wknp85E5MTQjJA
      0cV3rp9/8QVAghJSa9STmXwiP6lgQbBslOthEBKqLpx9ulptnMoe50EY+f1QSY+PhFbM6fqR
      jcMnUoV+Y/fYiFVrh6dmXknahppIx+z9DemTc3Pb19xsUl9Zq0rNUiN1qpBVIazXKlb8Q1Mz
      MeK8Xx92LaEUHEVyiRWFWukRRFURun7F414nFCg5NlNeX4VX9+8hdxCO1lyfO/Z8UtFsNJLp
      9IMr7+GaazpziP2h7e3t8fHxRzHGu3wu1BOGYRRFP+9RfF54eKeB+wgpEHz4SPX/Xf7b3zj/
      +sMPuetHe3R8Lu5cqqqqqrpy+zojlqVwxYxVdmrZTCySitupTy6csbX9/VObxZVeiLLpeDrh
      VGvVar0zMjqSyWQIAq9TF0amtnm7H+K0owtEa9XK5LFTIhgEg74es51E0u80uyEU7qWsR173
      +u3i5OyxTMIGAMGCdi9AInSSGYKhVqmk8vkHx9Stl4ul6tzCSbfb1Ci1UymKEMDdn3YbW20f
      js1MDC9do9FIp1Kt2o7Q0wqEjuM0KhUnn7+f33WQp6QPInlU7uxo0gOEu52uJCrjXKVECBkx
      plsxKWUi7iCyTwbZYflcqGfInZU7WHWee+GJW++9OaC5rXbHjpqOGVvarJ+f3z8FaWunOpMz
      v/uDa5O5uOSC6kZxdS07lqNeu1pvnH3tN1dWVhBWM089VVzdyjqaRmG1uOW2dpoynUaNUjuK
      Zcfvq8fv1YmVWbz0Rp+pUrNGbLG+sSOVOA4bowvPon7Nyecv/Phv6m2ezqcdO0YGzS62MIZr
      718IQjQzP766uqESNXRbT3/9n22ub585eeLCOz9WdHt1ZVWq6q9949XN1eUrxfb0TJ73uzul
      amp29pe+/PKnmxrC+jp3W2GtCAAoki4DABAYvEBqKnJ5hMOeMI+Rx1g9EzPzCpHX3r82sXBm
      ebk0OZbg3PbbtelsfP+DAXQFbTbDmbG0oqgUYylFKpfHImRYNe24265lxqYTOm21mvG4o+o0
      6LfStk7jT5B61Wsxx44lHigXTxW9vruWzxWCWlvXSddnMdsmZtJQrLFcqg/dxcUVRVFH8moU
      SVAUhhUVQxiy0YkZW9d26xUnZqWS2equ0CjETfXO2hZVVcRcotmZkTRCGCvGyfkEwwKQ0KzU
      xGj20K74+9xv/SfB52BQYBIoQqoBkQBDQfxnc6E/F3HPP0SkdH3PNEwQ/M6d1fGZOV25eyc8
      oL/nIycT4k++82d/+NXfhqEpQAhACFFNRj4AYD0GggNCCD/itIrP0dzzDwuETMMEAMDk2MJB
      K/d84skwxlQdVuj5CPfb2B6+k9dBOFLP3kjBB66nG+YwVVRKwYUEKQmhCAFjjHy0iRVnkecH
      umGCYEyApqkghB+EuqGzMBCAtXs1DzhnhBAWRZgo+MCVcg46bCkkZxEXgR9omsK4jEJfNywA
      OGAh+kNxpJ696dc33r1ZjekCI2qnUibyrt8o2qlUPu046cJucemJl14qXrvkCSOZtFSqueXi
      hbXqN77+i8uXf4ScsYwpG9XqT64U/+Xv/6ub772bLUzyQctK5XYr9Xat/Norz1+5fAnHCya4
      xExpKh1Lm5cuLz/z6gvGZ7jAkjO/vBgMBj2OhCQRZ4amahD5WHZDVJg9+WiNhXCknocgpIz6
      zU6AN8p1W40Ahbs7jcrm8vyTpuTh+sZWtVbudr2tdStTyKGOO3/ypErR2MTUtaV1Zim9Vnty
      soAQApBRMKhVaqxUurHZfuL4pD/oUVUvlStJU7RWt+zsmMm0SrnVdl35GWYjySMZepSAKqUQ
      TKEAPJQYVII0/DOJbo+i5r2Rgnt+oOk6C0NCCRdSck4VRQhOiCIFDxmnBGFCQEhEKEgeBKGq
      6SAYl4BhWJ5dEkIFjwRgkBxjwhgnBFMMtWY3mXCGZlcALMLBxSuLzzx/ngL4vn/YqBkA/uv3
      vvmHX/9d3q+L0AOMEaaSBVh3hN8FAEQUYqWw8ogdhv8fifuPvqfupnoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='181' name='Filter-summary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 62' width='192'>
      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
      wu/JfwNMryUeLKKHSgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='MostAffordable' width='113'>
      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
      P8RA/psAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 91' width='113'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 92' width='191'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Search' width='113'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 66' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of records' width='192'>
      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
      hND/A2aZGebhJRsVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 63' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pathway-finder' width='192'>
      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
    </thumbnail>
    <thumbnail height='158' name='Sheet 68' width='192'>
      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
      gQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='64' name='Sheet 69' width='192'>
      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
      wQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='181' name='Sheet 70' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAC1CAIAAACGUWciAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAX/klEQVR4nO2de1gTV/rH3zY0SFwKEhQo8oQgGAorRRcvQLBe
      saUtLq1GQ2WlC2xxRYpoRFFcKkIRFBCxoOJKCzU22vKr3dKioKjhUkBxsWhQJLCBFi+AQIWS
      x5HfHwkQclFgwq19P38lZ845OWfmmzlzZr7nnRd6enoAQYbLi2PdAGRigwJCSIECQkiBAkJI
      gQJCSIECQkiBAkJIgQJCSIECQkiBAkJIgQJCSIECQkiBAkJIgQJCSIECQkiBAkJIgQJCSIEC
      QkiBAkJIgQJCSIECQkiBAkJIgQJCSIECQkiBAkJIgQJCSIECQkiho2mDSCQazXYgE5QXMLgC
      QgYcwhBSoIAQUqCAEFKggBBSDEVAjdk8zgB42Y1QlszhZTcOonRXlWB3zNkBORuzeZzkMrW/
      k1wG0HglecsR1c2jTHNOBMc7XtjV+72j7EiQD4fDSb7c+2FwTdS4o1Q2aNgtI47i8fX2/Sju
      nIR4fiGN03gNMLiJ8V7mCgmD7mjL7TJRq8uAJHOveIGanL3JZRVCCTgPsYHaRpz3vc4i9s/F
      V7vYbD0AAFFx/tNlUfz1rGvJHNkHyhg3UZv0Hl/pzRMhkV8Uum1fqPfsAkMVkEaItorMmIPn
      xJ2UaU4+YVvcLSgdlRl7E86JOynT2AG7/9qcxK8HqE/KnseRbOY/ZVNLS0ze9/r5s184guA5
      knMH9mWW3ydodit3bFnzpzzeZgmHB/FCAIhPtnrvzle/Bp7wsweiLNlHYBE/UMEji7hUaOy8
      583W3f++2Mz2oDdm8+KFABCxv41xVQgAEYftBBsZJen7DudLCBrT/aNwn9kG15I58h5uSl/1
      IC7i1E3CzMPNSFZjR2VGbHL+nfZu0J22NPiTD+cCAFH/zS6fgtsg23W9o4LqLh21bhNPCQAD
      06l66trbe1xftlkavH2o10D1/M39Q5jCebY5Pymh3i02Q8BP4VL5cWfERCU/8ZJZQCo/a8df
      RGmf/e+NEC4DGNwQL3MAaLhL98/MDJ4lk29z7tH0B25RWfxU75e+SskRy2qcG8xjA7B5wW+z
      lxhfvV4DAKLKCnOXeaOnHoCqCz+YL3abwlz2JnyfJwYw94rnsYHBTQwLln8IntuceyjhJ4dd
      WYIjodZX45MLWqG/h1O/jTv129sxWRm7bTprAACg+9cXHPwOZAgEWZFLnuYXy+7WNpS2L0nh
      Z0W5PUg/mtusaZeORoflx5f7t6iKORu9Zqppb9PFkzm0tSl8fgqHlnMsR1tDWK2oqruqKnjd
      57KvVjduUO88ns1xNaCAwQefngSAxmyFUjYzrSkUkP+jamuqGS6BllQKuO8UuCvlBADzhYvp
      sTca34frV41ddo6ifojKQiHLxVsPQG++s+HW85Wr/uGgehaorame/vo/WFQAh8ULDMOrasAZ
      5D1srRXdM5/vbEmlgKvr7IMCANA1Y73yU/7p1Opq0fVHMEdeh4OLswGFasB2YXxVUwsWsnqV
      d2nTGqbpSHe5bwirO7M7fNeZ6ENrmErtnTp7vtWpz0NDf1z0xnvJB/6stSEMwHhlzKfvW/d+
      a8y+orWa6c5uf0quqtEVTXYJHE39XCsoeHwtbz0nRfZ9ckmVn4MDyUpb8/eFnoKV3m95O09L
      jXkoT51EparLPHCXjiZUS+f55gLJQ2itVWovxcIrNuP1O8JzX3+3L/jrpdqaxltZsx4W5JS0
      EURbYdIHARm3TGfYTK4oLGwjpHVf8jgROc3PLFtfJKyTEm2FSR98cLRS9dp/itti3fNHLv42
      quNXV3FB2ezgzwRyUv0tr+QWd6nms7JmNVy6UC2FjsqLJY9m2Ssc8Ck2tia9XSusAACAzvb2
      J5auHov//FJ1RQM8JWSdLS241EZI64RF9Sxrq/56B+7SEe7vAKR1xT82mpgYq7a3MZu3if+A
      sWTtZr8lxo87h3oGqudv5vD7vjG4iRzZJ/qKTaGSA2kbuAmUaU7cnd6vUqjTt79x4JMN3IOU
      aU7+YSvo5rdfMzrNP3DGiatcJ33FpqCaPRHrviJoTPfQXQ6UPFm69SxH3dT4pHn8kAV6c13o
      Kd+yQmT6aczmJUHICF9Lt17Jv+nmFdo3CaEv9XLjn77Y7Kmm+aGSfXvXcQga8/XgLYumwLW+
      bcxV2/zvRoev+4+Z5yIWAACYOrnZfZPu5y1wXOe5zCCv4WdgAIA9TRTmk/bYyMk/bAUdzvbX
      q7hLR7K3vfQeXx2amaPvtlVMAB2l9pp7BS+PivDldALNbEHgzgnyMFVakfrh14z9UR50AADo
      uPBZHmv9KE7GEE1MhDvRTWe3r0uoeXP9Cro8oeu/D6aM6mQM0cgEOQMh45WJcAZCxjFDuYhu
      zOZt5tcrJDC4ifHzShUTdWhM99Bdvg76ANK6nKREwfVfOp/o0MwcV/5zgxdLH/rvTvfeWyXu
      Xz6855jwPtFfEplI9Ayehq+3rt76dcMzErvFp8O4Qadqe3p6ak8FccNOi7t7enqe/O/01tW+
      6T/19Fw9zPVNLG7veXInK2h1ZG5LT8/D73b5JgofPenpFmUEyUoiEwkt3kgEhdtPwGxtbtZl
      zHiFCgAUi1XxglUAAGI6HX6R59Wh0SZB65Wy5mXvuxpQAFjrDx3SamOGBnrAhwep+0BsniD4
      FcWt0jphUb2JkzEAzPHZ/vreBD9fA2tH53nL2ItfnT6JAsyV/3wjMtaPk6Bn9V5EJFsPah7c
      oz8ujwncfb2dOrZDmK2t7Rj98sRmKLOwxmze5iIXpWdhAy+MdJWeG0tb7pRfyv8h93KN4ep9
      0Qtv7d103jYmeo1F14X4oHN2sbHTv/GOvbU4fO/fZ0HJoZB0/a0n/Oy11TVkNNDKLIzBTRQI
      BFlxnJm6xgyGocLzRqqRjYtX4J54f/vaovKmWlGV6XwXSypQDFgs09qiq00mZuZg4+hoQKEY
      WDKMH4tuD8aahowjtDiNp1quCvvQKG//ibIOAPGXmzgByYUtUgAgfmvr6NaZNtXIyprV8GNR
      nRSItrr6hwa2Nqbmjk4mN4rLOuQp9rZ4e3CCMdQhbMA0HhjcxBBIUhzXiKrjgdF33omPfeul
      kvSDGcXils4noDvN6d1NG7xY+sT9kvQDaZfEnZRpTtytIR6WVCAGmslYOI2fWOCdaM0M+MP0
      /QmGWElZMkdgMeC6UTVlnKDYXx2amaP31kG4ILU7jf/90WewailMC/s4mhIf6znuDrw2GTtP
      9O8cqpFrgM+V9acKajxn5nDigScInguN2bzNEo4gGBQ90B0p+0/K7r/brY2K8ARlx7NFb5XS
      upyk/fzycXkPfvCeaBTQoNGbwWI8lLSq39hwlx6TmcmEDnG5x46j20wpbediA86XN3lOB2go
      bQ9M5e9uPbNz29Hcv0RNBQAAoioz+vspG1P4jnqSL3eGpwmP89jP+bOPBv33+Uzdw6P6PNE+
      VgbEzRMhkcWiDy1+OZlDW5vGX07Jjw0Yuica0YDM5Q2GTNuWH787kX275qoIptjJtg10PMsE
      1HRb1HavPibgvCyLTuUtYM/RUPcoMpae6N87XXer6xmsV4A2eTI81pTpVubWqOuzfda8tcRW
      h5cjT9TgeIY5QZ899xpjjBh1T/TvHWlL4bHMSvvlC83B0MgYJPUSmYVZOd+v7W2Gs5e6z7No
      +O9PQBBPAUC949l0hs3kypzv6qQgrfuS5x2Vr2FsHCNGzBP9R0PRI7zyX6HudABY6LkgN3WL
      T56jux1DOb+t89IXkyO4eRYevm/ZlzY0EqqOZ5ljmuLA3b469VDEOgFBY7rzwhdNGd2OaeD3
      6olGxis4hCGkQAEhpEABIaRAASGkQAEhpMBpvBz0RA8PnMYjpMAhDCEFCgghBQoIIQUKCCEF
      zsKeCXG/JDOVX1A9cIW/2nX/Sqvmet2Krygaq3XGofmwn2F5ovEM9Aw6yg7vPC5x8E/IEAj4
      /9678oWcj9OEXQDi7ANZLW6RGQKBIDPK7QE/VlD1zHpk6+YEAn5qgNml2DShmjh544XepmZs
      c6xL/6Lw+S3FM5BmxDmfCy25x71m6QMATJq+xH/Dg1yiE0Dtuv9BLImkGLi6zj4oeNACMM6d
      +eiJ1gJdEvE9hp3iOp4pc9asBQCgq1v3D6AcQRLYSjVKWy4XVuhMm2M00k0fPuiJHhn6Lw9k
      pmEH330Z3rJ1/ynbMg1X74v2ehEGRNFuzOZtlshL9x0V3Zdtlm7fPh7M85pAT7T20LNgmjRW
      3+0Ac30w94oXeMnWBPZtpxrZuHjZuCybGe33fXmT1zzNNalEZx//oCdaCzA9/rbg7rF9X95o
      kQKA9Nf6wuI7ABrW/Y9tU7UOeqK1gf7cjft3nD1yfJufpL0bdF+2mftu5K4V5gYQEfroYEao
      70H5uv9/bWDrDeYiegKAnmhkdMEhDCEFCgghBQoIIQUKCCEFCgghBQoIIQUKCCEFCgghBQoI
      IQUKCCHFUATUmM3jeH98rlnhq8Kb4xXoqhLsjjk75IdDZckcXvb4eqQkbSo8stPfh8PhePuG
      HSm5TwBAWTJHQ7+1zDB347BpzOZxevH2/SjunET19ccqDPkMVH36i7LnGR1bbpeJWgfx4+Od
      5nOfhGa0L408xhcIMhI8u4/vzKgaxW6NxW4ccUur+YpFncdPVs3xs+93WyuZHt9uSOLXA9Qn
      ZVu6FH0i95nLo2vPK+VtvmnBrhOK3ffvYV1Q8koqQUjORkWcukkYLZ1rli+xS4z3MpWcOzAg
      iK5hlaK9Ustu9Zof/q969vrjS6ZPAgCKkWtAmE4ZdEAnAHQUHwlKzm+h2K2NivC0oKhE7CWU
      G/riWd7m+vnrHn6TdRssPHiRvg76KoU6BnhFl9/t3Y3zRt9MNHhL65DPQC8v8vG4k6l4YpWZ
      HjMEgqzIJU/zi0XmXiFcBjC4IV7T1NZQ1emYwN//rolSMZV84jNxWY/fjMnKiP7z0xpZUke3
      gceOoycF/GO+NjevlDc1XTyZQ1ubwuencGg5x3LEQ+3MM2mtrXlobs3stw/qWc9faG0IAAB1
      MOeTzOOBtrdPfftfecRe/xS+ICNyTlVsmrBLpaEAAFBaLvU/zj8WaHEp9kRZt0ohpc5I+3bj
      aKqnnr+Zw+FwuH+Lqpiz0Wum6tEFpWYOww9k/pb/rK2Zl5f5yL/rmimZHp9XnjVDn0IBynOK
      td4R3WO4sC2pFHB1nX1QAKAaRFfJXmk69M48g0mTdDVum+U8Vx9gBsv8iYRQG7H3NTXRfuf9
      1auvNw03VQqFvqPUmcbrWu3PoBgVSyvF+l1v2rYTpQtkX1vzlUyPfdAm/0lzLZqLaUY5iK6S
      vfLjY76vDqM/GtCzYJo01oi7wFx+EiKqsrZdtol2UpdZKWLvrQw10X6fVwjmDOzMci11ZDiM
      sKVVb+4Hqzu//k42jqmYHvuyTZkyBR7WSzqItsLCCuU6NBeTF7axNakvEtZJFUorB9FVsldq
      eb0Vc9k7rIrPUi40/EYASFvKMo5dYjg5TFLJpyZir+Zov0RbYWHFZJsZdiqFRrYzQ2TELa36
      C33e/XYzHwDA1EnJ9AgLbF8zOs0/cMYp3mOV0ccJfr4WnotYyjWoFlOKmctctW3drYjwdf8x
      83CzliUpB9E13TTAXvkaQFkyp9hZEKxyQT4s6O47Yihpqbv+ntb5RIfGfD0weuNcPVCZwauJ
      2NupHO0XAMB0kijeN62WwnQP3eWgq89UKmQASp2ZpiffjQmrLFQbNzIM2dI6lLc2jxFPHhUf
      9OfGXekcVGZRRlbpSLdoGKh94/XvgXFsqm/Mj4vLlM2Eme68cOdBraYSV096dSyvHf5woKke
      IQU+C0NIMZQhTOWdqQyu7N5yf6JC/BJ1IVCg72Zr3+vBifuXD+85JhyXr11DBsEQrpfUXggO
      SOwWnw7jBp2q7enpqT0VxA07Le7u6el58r/TW1f7pv/U03P1MNc3sbi958mdrKDVkbktPT0P
      v9vlmyh89KSnW5QRJCuJTCS0exHdd/sJmGpDoIjpdPhFnleHRpsErVfKmpe972pAAWCtP3RI
      q40ZGhjmd3gMVUADApiweYLgVxS3SuuERfUmTsYAMEddCBTmyn++ERnrx0nQs3ovIpKtBzUP
      7tEfl8cE7r7eTh3bIczW1naMfnliM9T3xisEcetP7L8G0u27tpEhlYVAyb1cY7h6X/TCW3s3
      nbeNiV5j0XUhPuicXWzs9G+8Y28tDt/791lQcigkXX/rCT97bXUNGQ20MguTmUiy4jgzdY0Z
      DEOFsHpUIxsXr8A98f72tUXlTbWiKtP5LpZUoBiwWKa1RVebTMzMwcbR0YBCMbBkGD8W3R5f
      fjLkuWhxGk+1XBX2oVHe/hNlHRpCoFhZsxp+LKqTAtFWV//QwNbG1NzRyeRGcVmHPMXedmJF
      0UGGPIQNmMYDg5sYAkmK4xpRdTww+s478bFvvVSSfjCjWNwiD4GyaYMXS5+4X5J+IO2SuJMy
      zYm7NcTDkgqE5NyBfZnl9wma3codW9awcBo/scA70c+jOSdiQ9bLwX2vde8oO7IjOf9+NzuI
      pytIzr/fzeYN6uGt3JOpag9T2dAbIVg7T4QHD4b5HQnEed/rLGL/XHy1114hKs5/uiyKLwjW
      6/0w2gd6JMEwv1pGXCo0dt7zZuvuf19sZnvQG7N58UIAiNjfxrgqBICIw3aCjYyS9H2H8yUE
      jen+UbjPbINryRz+Uza1tMRkU/qqB3ERp24SZh5u8ih4qh5jAKL+m10+BbdBNoft/VMTbRWZ
      MQcH3LcfLUbQE/3HourCD+aL3aYwl70J3+eJAcy94nlsYHATw4LlH4LnNuceSvjJYVeW4Eio
      9dX45IJWAICGu3T/zMzgqd/Gnfrt7ZisjN02nTJft4rHGACgobR9SQo/K8rtQfrR3N5lU835
      SQn1brEZAn4Kl8qPO6Ndx7cGhuyJRgE9A6KyUMhymasHQJ/vbPjD+Uq1a2xqa6qnv76ERQV9
      h8ULDG9UyYRiM9OaQmmvFd0zn+9sSaUYuLrOBgCZg7yz6HRq0idHLj3qq8PBxdmAQrVkuzCq
      a2p76xVVdVd9HryOww04WPT4XsWNppHtLQD0D2FZcQtr4nadEau2d+rs+VbVn4eG7s0mViYf
      WINDmGaIawUFj6/lreekyL5PLqnyc3AgWal6K/gkKlVdZuOVMZ++b03yF4cFhvklT1dxQdns
      4M8EclL9La/kFqu5qrSyZjVculAthY7KiyWPZtkrHHA1vm71VvDSgktthLROWFTPsrbqr/dh
      QU5JG0G0FSZ9EJBxa4T7OwAM80ua1iv5N928Qvt8kPSlXm780xebPZUz0ldsCpXs27uOQ9CY
      rwdvWTQFrvVtY67a5n83Onzdf8x6XeHqreD2NFGYT9pjIyf/sBV0ONtf74G0DdwEyjQn7k5v
      LS440QyG+UVGFxzCEFKggBBSoIAQUqCAEFKggBBS4DReDnqihwdO4xFS4BCGkAIFhJACBYSQ
      AgWEkAJnYZoZsIigb2HAECtRtUJrNEePNcPyRKOAnk1f0MmWwrSwj6Mp8bGe4+7Aa5O+/t48
      ERL5RaHbgBiO6kABDQ6qkWuAz5X1pwpqPGfmcOKBJwie27d8AhQ90B0pAwJEg7LjuS9anUqc
      6DHsnjKD90SjgAaN3gwW46GkVf3Ghrv0mMxMJnSIyz12HN1mSmk7FxtwvrzJczpAQ2l7YCp/
      d+uZnduO5v4laioAgDy49MYUvqOe5Mud4WnCvnVDY0p/7ANT9/CoPk+0j5UBcfNESGSx6EOL
      X07m0Nam8ZdT8mMDhhUnGlGHzUxrCkU1kjUA9DqeDdgujK9qakEmIHXBpZ8fY3vEGZU40X9Q
      uu5W1zNYrwBt8mR4rCmTciRrANDoeFaJEz2OQE+0lpG2FB7LrLRfvtAcDI2MQVIvkVmYlfNp
      DhCt5HhWE1x6PIGeaC2h6BFe+a9QdzoALPRckJu6xSfP0d2OoZxfOZI1oep4ljmm1QSXHg+g
      JxoZXXAIQ0iBAkJIgQJCSIECQkiBAkJIoXEajx5hZDDgNB4hBQ5hCClQQAgpUEAIKVBACClQ
      QAgpUEAIKVBACClQQAgpUEAIKVBACClQQAgpUEAIKVBACClQQAgpUEAIKVBACClQQAgpUEAI
      KVBACClQQAgpUEAIKVBACClQQAgpUEAIKVBACClQQAgpUEAIKVBACClQQAgpUEAIKVBACClQ
      QAgp/h9Mzms8VdiglgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='141' name='Sheet 72' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 73' width='191'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 74' width='192'>
      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
    </thumbnail>
    <thumbnail height='101' name='Sheet 75' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 76' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAZPklEQVR4nO2dSWxjyXnH62185OPyyMdVoiSKrX3rTd2t3iY9
      Hg8c2GPESAzkkgA+OA6QAFmQSw65OEGAXJNTjOQUJwGS2M4kXjKGZ8bT7p7uVm8atfbWSlEi
      RYk7qbdvOTDpUZNsScNNFFW/w0Bdeqwqvvmrqr6q+r4P0XUdQCAVgZ50ByCnGKgeSOVA9UAq
      B6oHUjlnRT2ywCUSiUQizQucoh38jS4KgqYDTVV4UQIAAKBxnCAIwuHWhCqLoqy+4Ze6LIn7
      LKfrusDzmqbv53Oaru3nsryoAABURZZk5dXTklRoV1ckieU4Xdc1RRIk5dVvm9auwb773e+e
      dB8awdqTn91bzuGqsr3yGNi6YpurhNmWimwk8vxH//0+Sjtz8WiKk4XUTl5Rt1bXf/Hzn9O+
      gAkRWAU34urK4qKMU2wivLWbk2XRaMDCqwtpVknEd3kVQ4T0diSlStmt3ZzdQQOFn34x++mD
      xx0+55PHj2wu+w/+6V/bAp6f/vv7i3GOcTj2I/PzEdFrw2J7qZ3deHx7FXe0GRFlenpmauqB
      qhlwXYgmMsn43r4EhPhaSqPtZuKkX2EZzop6kuHFlzu8wWA0gfzqy+Wp2dnFpbWsCHCVT8ST
      0dVlW0fb1svp9RRqRPKrqwlZzMmqmN0K4e29ZnbtX/7rAUZZDVL27r17Yp4TgTA/u7ifii0l
      pd2N0Mry4nZMWF58mtoX2zuDSHZ9W6BTK5N7Mt3vMkWiIaOnN7WxbPe5swrYXg3hmrrPZ9nd
      0MrmVkKx9bcRkSTCkNnQHpYNz1tc1tnpBS63O7XNprdCI2NDK6vhrg7vSb/CMpyVmQugWEew
      f7ivXVUAglNXb925MhIEuqrrgCRJoJMutw0gCNA1VVV1hDAZDYMdnvk8FrDhgLBdHg1sri3c
      n5xz2MwD53s//Xh6YKALAITxtpsxFACg6Xr/2Lic2krtSwAguq7jNp9JTLo63Q+exW6OB5Yi
      +V63xeXzmzAhr5O3BtqebWv9HsrlcqK6DhAEIIiu6xoAuqYBBAEA2F1tFhLRNR0A5KRfX3mQ
      M7JbyGX2NiJxAADj8tisVHQ74u3s5pMRiaBNKs+pwONlOF4WMnvA7DDoqKbsZ6KrUaL37fOd
      QFdDqysmZ7uWj0sY5fG4s6kkYzPmOUk3UIgoxtafP1kH7315JLuvBrs7UFWYml5o7+qkTTgg
      zfl0zudl4vE0bSbyKq6JOYKghb2Z2bTz9pBLwsyRpan20Ws0rj5/Pu3r9En7ktvnkiVJQU2Y
      KnCJsOYaDriMJ/0Ky3BW1FMBIs9hpAlHj/67F7h9HTMYScP/P6orsoLhBPLmj4oChxJGAkMB
      ALIsEwRR+BSKE0UNyrKME0RzDj6fq0eSJEVRDn8aAjkI/uonBEFQtKplUC6Xs9lsVXcJcmr4
      XD0EQRBEVWYhz/NGYzNOz5A6cWZsLkgdgOqBVA5UD6RyoHoglYMf/UgLoeu6ruuapr36GQCg
      aVrhBxzHcRxHDtmlgbzOmVCPoijpdHpvby8ajUqSJEmSpmmapomiCAAQRVFVVRRFaZp2OBxu
      t5umaYZhTCZTlUZoy1PLveZ0Ou1wOGpVW/Xs7+9Ho9FIJLK3t8eyrM1m8/v9JpMJx3Gj0Yii
      KEmSAACDwYBhmCAI2Ww2kUhks9l0Oq3rusFgMJvNHo8nGAy63W44JpXSaurRNC0ej6+trYXD
      4cL+k9/vd7lcgUCAoigAwOEiKLwNXddzuVw6nY7H44lEYm9vz2KxjI6O+v1+q9XaoG9yGmgp
      9WSz2RcvXqytrXm93o6Ojvb2drvdjuPVzs7pdHpjY2NlZUUUxd7e3q6uLp/PV321LUArqEfX
      dUmSpqenl5aWnE7n5cuXvV4vhmG1bUWSpFgstrCwsLOzY7PZ+vr6vF4vRVGFiQ/5f8BRw1sr
      cerVw3Hc8vLy3Nycw+G4ePFie3t7vf/n5XK5tbW1jY0NnudlWS6ckFutVgzDCgvt/v7+jo6O
      uvahSTit6tF1neO4lZWVxcVFHMcvXLgQDAYbaSIVdCNJUuG/LMuqqsqybDab3d7eHh8fHx4e
      rvLUufk5BZN3YYdGURSe57PZ7N7eXiqVSqVShT/64eHhwcHBgvXUSAqHyoWVeFFvl5aWJicn
      M5nMjRs3aj6BNhXNPvZks9m5ublkMpnL5WRZpiiKoiiXy+V0OhmGoWm6Obdk9vb27t696/F4
      rl+/3sL3DppXPZIkTU1NvXz5kmEYv9/v8XhsNhtJkgRBnIoZIZ1Of/DBBxRFvfPOO6167akZ
      1VNY0MzMzFAUNTEx4ff7T6kVw3Hc/fv30+n0V77yFYZhTro7tae51KMoyuLi4uzsLABgfHz8
      3LlzzTkxHR9FUSYnJzc3N2/evNnd3X1K/wzeRFOsmnVdV1V1d3f30aNHoiiOjo729/cbjcYW
      eNc4jl+/fh3DsLt3746Pjxe2vDEMOxWT75Gc5Nij63o+n08kEuFwOBKJoCg6NDQ0ODjYksvM
      zc3Nx48fcxyHYRjDMAzDeDwep9NpNBpJkjylfycnoB5d15PJ5O7ubigUSiQSmqZ1d3d3dXW1
      tbWVGsCthCiKgiCkUqlMJhOLxfL5PMuyJpPJ7Xb7fL5gMHjqvn5D1SMIwtLS0tLSkiiKJpMp
      EAgEAgGGYQiCOKV/fBVTuFTEcVw2my0MvRzHeTye/v7+9vZ2kiRPxdTWIPWoqrq+vj41NYXj
      +NDQkNfrdTgcp+IFNQZZllOpVCgUCoVCsiz7fL6urq6Ojo4mH43qrh5d1xOJxNTUVCwWGxkZ
      GR4ebvI3crKIophIJFZXV9fW1gwGA03Thd1qgiAMBsOrxywWy9DQ0Im/yarUw2aSGUH1etwF
      d90i9RRG5oIF7vP5rl+/fuK3f04RiqJsbW1lMpnCPVpFUWRZfvXb3d1dVVWvXLkSDAZPcNKv
      Rj3qT3/0QwTo525+bajNBl5Xj6Zpm5ubDx8+NBqNly9fDgQCcJ6qIbIsP3nyZH19vbu7e2Ji
      4uCw1Eiq2e+RFcwy7DakeSGdVgEAiqKsrKwAAHAcD4VC4XDY6XQGg0EAwM7ODgCA53ld11EU
      LdjkhQvFCIKYTCZwwJHeZDIhCKIoSiGoVuEWqaZpgiAAAAwGA47juq7zPF9oq/DuCpVjGFY4
      MX1T5YXR/piVv/KvLapcEARN0w5Wns1m3W43x3GlXXrT9y2c0h/z+wIAiir3eDyiKG5vb8fj
      8dHRUQzDirpUwcs8/vctVF6NekizQQ6lpJ5+s8NhBgCk0+m+vj4AQOHO+fj4eKue7zQJfX19
      giA8e/bsyZMnQ0NDFy9ebPCRflXrHi6XTO4r7T4PVm7dA2kMmqaFw+FHjx5RFHXnzh273d6w
      ppvrnAtSMdls9unTp+Fw+L333vN6GxSmDq5kWwSapt9+++2BgYEHDx4U/NQaAFRP64Dj+KVL
      l/L5/Pr6emNCwkH1tBQmk2l4eHhmZubg5lD9gOppKRAEGRwclCRpfX29Ac1B9bQaFotlcHCw
      McMPVE+rgSDIhQsXVFVdXV2td1tQPS2IwWAYGRmZn5+vt/EF1dOaDA8P4zg+OztbV+OrRD2a
      ks3twwDgpx0cx8fGxhYWFuq6+ilRjyp89NP3/+eDDx6+WKlfq5AG0NXVZbVanz59Wr/hp0Q9
      OHVtfMzf1uF2taD/0ZmCIIgLFy6srq5mMpk6NVGiHoWd+WxqMyvOvvisTk1CGkZ3d7fZbF5Y
      WKjT8FNm7OnqbAvPPm8P9NejPUgjQVH00qVLKysruVyuLvUXF2jybpr3t7t5br8e7UEaTFdX
      l9PpLLjn1pwyNtdePG2kKKPhdLsAQwoQBHHp0qX19fV6DD8l6kHwobGx3r6BoZ4zEf3qLOD3
      +51O58zMTM1XPyXqQXESSLPTz6fmG3HMBmkACIIMDAxEo9Ga7/2UqEfXJUVlnC7KeDLX9CH1
      wOVy7e/vsyxb22pL1aOEVhZ+9av7eeVsuQa3NoXAHfVXj6agdOA7v/etXGyjti1BThAcxxmG
      SSaTta22RD2EebDDfPfuw/7hC7VtCXKCIAjCMEw8Hq/twrl05pL3olHa0x7Z2alhM5CTBUEQ
      t9udTCYLfs21osQbUFMzmcymgnoa5NQBaRB2u51lWUVRaugxWDL2YOTIpcuEmPO1tdWqDUgz
      YLFYSJJMpVI1rLP0hoa4tL4zcn7Ubm7B8G9nGaPRaLFY4vF4Dessmbl0nc3nUaMFt0g1bAZy
      4qAoarfba2t2lZ5UoEYDLgqCJCs1bAbSDHi93kKgyFpVWLruMQT8HjafN5rNtWoD0iTY7XZB
      EAqRXGpCiXpkfjMpv3XnVmT9Za3agDQJdrtdluVsNlurCkvUYzBfHe1eWd64evVardqANAmF
      hXMNr2oUq2fu8Sc/+fDubiK5GtquVRuQ5sHlcu3u7tZqx7nY5hqdeEcEeNfQhNvW6IxXkAbA
      MEwoFFJVtSZ5VYvHnvknn7xc3bz38Qf3ni9VXzuk2XC73SzL1uqiT7EAh6/eGboCAACgXBzX
      hz/5wZ7Rc3PI/bMPpyh3l0OL7mXk2+99s9sJQzCfDmialiSJ5/lC/MoqKR57EAC2V2Y//ujj
      jVgZJyBWU0lNjofX+2+8Q/CxlGy71uvby7Ecx3EcV9sTOEg9IEnSarXWase51GJnp5ejY+eH
      X0w9O1iciix/9ODpubHrgx48llV4lkUNNiOpi7puNhgKKYPOWq6J0wiO4zRN1+q0q4w/V6+P
      un9/Mtg3dLCY8fe/e+sKpec3Oeutd79qy28OXRq/ORpMAmePz0aSZGuk02p5Xl3VqEltxeue
      0OzDD58snev0xXb3QH+RWwXS1jPW1gMAANfefhcAAIDb012TbkAaB8MwMzMzqqpWf1WjWD2B
      sZu/P3DVcEoyx0IqwG63IwiSy+WqD49crB4EAWvLS7nkLuEduDrcXWXtkCbEbDYTBJFIJKpX
      T2kUBO7l/FQooWyH1qqsGtKcYBhmt9trsnAu2XDETIP9g6wCVNLJS4rJ0BRpbyG1xePxRKNR
      XderNHTKRH9aWttGUWxh8he/mlqupmpI0+J0Omuy41zmfk87Q62ubfSMXevyNi5fBqSROBwO
      lmX396sNk1LGE1lRVQCAhFJD3fBifGtiNptxHK/+ok+Z+D2xFBcInvN7HHD3r1VBUdTtdld/
      XlGsnlA4YjVqczMvVjZjVVYNaWZomq7eObDYpPJ6fLngQN9lHwMzbbUuhfOKra0tTdOq2RYu
      /qTJbGHstrXpT3/5FN7vaWUcDgfHcVWaXaUWuzT16F4ojfR0uqupF9LkmM1mkiSrXPqUid+j
      GExAFEKhzWrqhTQ5JElaLJZ0Ol1NJSVbybjxwvkbqZ1llnJWUy+kyUFR1OVyJRKJqiop+nc2
      lXC4GRUhz3XBqJctjtPprNLsKlbPk2fPExvzHOmam4Gx4lscu90uimI1rqXF6qEx5dFy/HyA
      lnQYr7nFYRhG07RqslgUr3uuvvsb4xpAdeVrX+qsrm+QZocgCJvNlkqlOjoqXKUUq2d17ulW
      nAUAWL3dV0fOVdtBSHPjcrmqMdqLZy6Xr8NmxASB5/kGZYSHnCB2uz2XyylKhdF2itXjoG1b
      sUh0O5lOVWXLQU4FXq83n89XnL601CPHeH7s+vlBD824qu0apOmhadpoNFacvrT0hoYaCc1v
      RFKpTF0yOkGaCpIkb926tbCwEI1GK/h4mchzLo+vo8OvijWLMAVpZtra2i5evHj//v0KTPdS
      9WAWsxnFDaPDg7XpHaS5QVH04sWLFEU9ffpUVdUv9tniApV/NjWHEQYAYFrtswKKordv347F
      YnNzc1/sg8UFCGaj8Ghkey9Zs+h2kOaHYZiJiYnp6elY7AvcKS0fcVfgeRFG3D1j9PX1dXd3
      P3z48PiJmMrcit9Jced6+zp98IbG2QJBkBs3bqAo+vjx42Ma8KX+XKY7d26bMWljC+bIOXMY
      DIaJiYmtra319fXjCKhYPevzz6bnXn7y9OWdGxfr00NIU9PW1nbt2rX79+8fJ8ZPsXqMlBXH
      ANDkfRaec51RBgYG2tvbJycnjzz/QkoHKF3TeC4X2cv3nfv8koaqyIqOIKrESarVQrG5PG6k
      MF0WZN1qMaMoAgBIp9PVB/WANAMsy/74xz++cOHC8PDwIY+VCZGBoChlsfdZPndi13Xx3n/9
      mxx4S4s8Zjk1OBiYW05gBGXRk4qkjX35G/1ea+2/AeTkMJvNwWAwGo0erp4yfuy6rgNd29gM
      HyjFAsEuFAAeGC71tW2vh3ouThjVDI/QYwFvmuUzmUw6nYYxU1sJp9N55NWfkrFHlZ48esDJ
      OsF0BgNAU8Tnk/eZniuUyQBYYCWJSEoI9AY3t0Mo5bEh+RgrtJkpmjYDAKq54whpNux2uyRJ
      LMua35wtqczMhRMGqxEv5HZDcfLq7XcBAKJ15JJqIHuorQTf29NpW3lp8nSZtXwkLXW7zTBe
      QuthsVhQFE0mk19EPQgQconVaMYRGDtYTFrsJAAAUEMMAAAEB0cAAABYB+EtoBbFaDQajcZM
      JtPV1fWmZ8rMXLzBRls0XcrXt3eQ5gZBkLa2tsOdTYvVs89L5zq6eXtCs/jr2TfIKYCm6bW1
      tUPibBSXPv3wR//6w/dnlsM5Ft4OO+u43e58Pn+Iu2Cxer70ze/8we98HfDZeArOXGcdu92u
      KMoh6imeuT7+4T883uACXX6P01bnvkGanYK7YDqd9ng8ZR8oVs+1d785IioAAMIIcyKfdVAU
      dTgc8Xi8v7+/7KZMsXqsDhc8dIAUQBCEYZhwOPymuOAwlQnkMBwORyqVetNteageyGHYbDZd
      1990VxWqB3IYZrOZoqg3nWBC9UAOgyCIQ/KYQvVADqMQ2RmqB1IhDMNks9myC2eoHsgR2O12
      WZbLJtSB6oEcgcPhQBCk7GE7VA/kCFAUpWk6ny9z7gnVAzkau91eyERZVA7VAzkaj8fDsmyp
      exdUD+RoXC5XPp+XJKmoHKoHcjQURem6Xmp2QfVAjsZgMNjt9tKUKFA9kKPBcdxut5fGRYDq
      gRwLhmHg2AOpELfbnc1mizJRQvVAjoXFYsFxvGjhDNUDORYmkwnDsJ2d1yLKQfVAjgWO416v
      N5d7LYMAVA/kuNA0nUqlDpZA9UCOi9PpzGazBxPqQPVAjovX6+V5/uANeageyHExGo0EQRy8
      qgHVAzkuCII4nc7d3d1XJWVih5VF5HKcgiN8Mhxne3q7ImvrZk8npWZ3ckpvT9CAwdhhrU/h
      hnwymXzlWnos9ega+9EP/w0fehcNPwvc+DUxMrOwo4uLn+Io7yJR3ewc8dN17jmkKWAYJhQK
      qaqK4zg4cubSNTUei+QF/PKVEQwAf9C/8Oknc8vbro4AoXEKoNoc1n1JSqfTMGbqWcBqtWYy
      GZ7nC/88at2j62w+J0gFbwxdECSjkaTbu7ZePNYtPsYozEfSXpvF4XA4HI43RZiCtAwF19JX
      e4ZHzFwIhnf3DQEAVMtVRkcRtY2XNauF6gkOYCSFA5mTNKvFWPdeQ5oDk8lkNpvT6bTf7wfH
      t7kw3EASuMFI0VYLiqAWG20iCYIs/BMumc8KKIo6nc5XGeDgXAP5Yrhcrlcn7ce12CGQAr29
      vTT9fyY2HHsgXwyCINrb2ws/Q/VAKgeqB1I5UD2QyoHqgVQOVA+kcj632FmWLXVU/kIcEpIe
      0pKUyWpbMTCr7VkDzlyQyoHqgVQOVA+kcqB6IJUDT0khxyXFSqr2mo0F1QM5Ln/5k/ndnHCw
      BFrskNeY3c7+2X9MFxX++I9umwis9GGonjPKf09HPgu/lvlmuN3221c6dV3XShSBIuBYuQEh
      LcaHC7EiMVzqdLit5FCbjTEbDpa7LCQAAEGQ4zvnQfW0ArKqicpr7lAIAGYSBwBMhTPgdfn0
      uC1uK9nvtfZ7q00iCmeuVuCXi7t/+/HKwRK7ifj+tyfq3S5Uz2niL96fnYtkD5b81uWOb93s
      PqHuQPU0H1lO/t69taLC37sddFpIXlKLdlwIHCHxMtZQY4DrnhMjnGTDKf5gidWIX+i0G3D0
      Yqe96GGSwAAAJsOJCaUsUD11Ry8Z3hEAEARZi7N3X+4dLO9gqAuddpMB+/URXyN7WDFw5qo7
      v/OPk7t58WDJn77b9/Xz7SfVnxoC1VMb5iPZv/7ZYlHh9799jcBa+RwaqueLEcsKP3i+VVT4
      nbfOoQiS4Yrv9bqtZNkt2pYBrnvKE05xidenG5oietwWA452OKiih1EEMeCox3bmYolA9ZTn
      aSg1ufZaSpiRdluP28KYDb95yX9SvWo2Kpm55PT6P//nfXtHn4nbSGTlW1//7XMuCjTxzMVJ
      Spp9LT0HgoB2uwkA8NW/uye9vsf/V98YvdXramj/Ti2VjD26qgEMI3CFA46JfiKRZ70mXdf1
      po0892Ir+/d3Vw+WUCT+vd8dBwB88Ce/dkKdagUqUU9yey145a3s0meAIHhNs5AGgiAAAFW6
      g1XPn/9o5lnotVD43xzv+MO3e2/0OG/0OE+qVy1MRTaXKj6ffGwPjtJqfCkqXL1ynsQQ0KiZ
      K8fLf/PBUlHhH3+5t4021btpSBHNa7Gv7OZfxl7LIE9TxFt9bknRPttKFz085qcpA7QAGs3/
      Ak08552Lvci4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 77' width='191'>
      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
      9f+HjevasVu6IQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='144' name='Sheet 79' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAACQCAIAAAAeHsdkAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAABQElEQVR4nO3SMQHAMAzAsKz8OWePObSHhMCHv90dmDm3A3iF
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFcgP9eEEHcxAtUgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Elec conserv' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='ConserveKWHbySavings' width='191'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='ConcerveKWH-Costs' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Concerve kWH: PV' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 89' width='191'>
      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
      KA1548fOhCPJbHGphwan/psPrXWaNRQCq0H1d/etXtm4ZLegKIt7oiE/ohl5mdJSgePFx144
      unP/GJcV6xz6r392zcb8tad5cvP62k90ufzRjN2oNusrcio+T5T5HoZlBo4f2Xf4eImsubS8
      8tHoC7vPpDlRwjDiT37tVx8XpmoM2rz/N2NB5mYKk45tdRstBlWFTqbmiTL16PVGV1W1quCO
      zKXB3r68spOxYGrEL981+8fb2qb1gAD+5Ka2xbGtPFGsA0pvbVYvzdpC2YiMMcg2LQDAHVfU
      69TMyx+NShLetq7mtk11i2hg2aFMPeFo7MzxvV7s2LRxY4kMKh0YY1HCvCixNFV0rQxC6Ma1
      NTeune9O76WNMvUY9TpXfXubqyIPa+4ZDv/wlb4Rf3KF2/jw7V2d9fI9uab8xSaGRjr10hyj
      Fwpl/4LJaCgQCg8MnimRNaVjMpR65Kl9e/v8E8HUrmPeR366LxSXj793XtnA5mT2NrU7Gl1l
      XV5zyVGmHqPV7nTXNdUWM4+9tLx31BuIzchlPJja0ycvzd7QZv/en2xY02JrcOnv3dz42P/c
      QMqVZuf/A7B2i5n0HcsLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Annual-savings' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Upg cost' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 80' width='192'>
      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
      4eilXZoxrfj/MsW0R+XB+kcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 81' width='191'>
      iVBORw0KGgoAAAANSUhEUgAAAL8AAADACAIAAADa/CVFAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nO29aXBk2XUeeO7ylnwvdwCJfakCat+runpvkr2Q
      7DbJJmWJnHGERVGUZM9YMyOOZsJj2ZalcYzsGIet8MhWjETOeMQRHZTEoS3K3JoUSfVC9lZV
      3V1VqA2oAlCFNYHc8+3v3js/HgqNwpoAHhJZ6PoiugOVeO+8i8wv7z333HO+g4QQ8AAPsCng
      nR7AA9zHeMCeB9g8HrDnATaPB+x5gM3jAXseYPN4wJ4H2DwesOcBNo8H7HmAzeMBex5g86AL
      P7muu4PjeID7Ee+zhzG2g6cWgz/78R1fP9YbO//2pdb9J3JjN+R097NPnEIA1Wo1Go2ufXs2
      m81kMuEOyfM8SZI+gDY550IIQsi6V77PnkgkEuIINoqK48T1ZHFu7pGPPPGj77569LEPT49c
      tz2PCIExppSufXst12wCH0ybQgjO+cbYs6MQA0fPlMauTrhUKRYTza2ObRBFSSUSGKBYLMqy
      vPb9lNJ1r9kEPpg2OeeMsVrmswbxmlFUEl6q/+knHvNt8fFPfKwtwk6eOVv74EzT3MbRPcAq
      aJC5B9Ide9IdAACnH34EAOLHT2/o9u34Qj/AumgU9mwRiqJsn3EhhBCAECCEtu8p9yN2CXvC
      XbmEEI7Ppgumzw1NkSzXtxyfCyFTko6puiIVDdtyWVyTU7pCCIa73BJCcC4EAMHog0C1XcIe
      xlgodrgQ+Ypdtd2q7TkeA4CS+X4YzGPccDwEAAiEgJLpZIumIhGPcYniiEQlivMVWwBkElpT
      TN31BNol7InFYlu5nQth2J7jsbLllgwneGW1i8X8fwAAjs8cnwGA5UIZXACQKEaAbs+WBUBS
      kyW6/r73/sUuYY/v+5u4Swhhe6xsOo7HLNd3POYxvsWReP68hduz5WmKO9PRpK5WLLdiu7oi
      RSQkhNg1c9IuYY9lWRu6XgjBuCgazlShSjC2XB8j9P6UEhJcn49my7GILQB8xgsVmxCkSJRi
      HIvIMU12XF8IMF1fkbDrc59xRSIYoVhEpqRBgilrYZewZ909lxDCY9xnXKaEYOT6bDRbNl2f
      c4GAw5pL1VYgAMqWSzGOKNT1metyy2UAkKvaMsWUYMvxMMacC4SAcwEAEZnOla2+TEKijU6g
      XcKeteM9QoBhe9mSSQn2uUhHlbmyhRAE53p1ONvzOa9Y9xxCCyEcj7keAwDOORcAAjACAJAo
      tlw2ki1pCs0kNLmBPaddwh7DMJa8wrnwORcCMEYYoZmSGddkivF00RjLOkyIeESuB3HWRPD8
      hVmPC4C7uzzXZ57PqpY30J5s2FVsl7BncXaAENzz/MmiWbV9zgUlWFelqu1VbU9wgTBiQoC4
      ZyvemMAYAYiK5aai6k6PZWXsEvZEo9HAs0Fmjr75h/709VRqPxz/ewZRXZ/ZZZ8QDEJwEIIJ
      ghEHseMTz7qwXQYAhu0ldAU35DatEdlTnB69MDhy4tGnmvRah+e67mTeyFet1nf+QGnuKz/1
      i8nR76mDX/dO/EpEpmXTZYz3tMRLhlM0HcY3QBzEXMnKRvJXtcIVzBxX7xQIS1YWCS4EYO5i
      7npK2mw+UWk9K0iYByZcCIyQ5fpl00nqjTj9NCJ7bly70t2cvnBj8qOnemq8pWJ7nNt7W5OS
      PT4c/7lIpGWu+eHYe/+X43pUkrgQAmCqUN3odCNXbve8/b/Fpl7H3Fn7SgFgpo840W4uRRF3
      BJa9SKbY85zZdBRg89OGACFAVG2vMdmDGlAF4dyr329KN9302s7uiQshqtWq67q6rjuOE/wA
      AIZhyLKsKIppmpxzw0dE0WWv3DX1UnFmrNzzXNPt71nNJ7LdzyMAxpiqKtz3XcapJPHa5h7E
      3P6f/P341E839+ELAC+Sufn0H5lNRzdlYMEMItxVuZVKJnzftyxLVVVJkiqVCiFE0zTDMDjn
      uq4LIUzTDN4WwzCEENFo1HVdx3EikQghpFqtUkojkYhlWb7vR6NRxphlWYqiyLJcrVYRQrqu
      27Zt23Y8HgcAwzAkSVJV1TRNxlgsFvM8z7btSCRCtyPPbevYs3fg7feGTz11MhGbT1BKJpNr
      3zI2PlXysZZuy0U/57t/2TPz15FDH6r0fTw/a1KCmuPxVFSdKhhzZQsjBKim6I5kzsRm3tr0
      vIEAJCubGvv+1tiDAIBhWUsmWlvii3/R2toa/OC6bigJKgsGa88Oa0T2NHUOPN85sKFbfMfc
      09GdLZoIy+7BXyhEJDmlM9OlBMU1JVexHZ+VTVeRiO/zVR1mIbTcpczVr0pOzkoMaPmriHtb
      +UMQAHGLW7EQACM0V7HakrosNVbsp87sEZwLhMLPXsBB7D8iA4DpeDeniyXL9RmPa4rPeFtS
      Lxi267N0VPXo0sDdAqid67rwr9XCNeqW4lM/C2VgTrRW120NCCEEQK5qtafWqQ6oM+rHHt+u
      Xhm8UqhaGEt9Bw51Z1IhGtc07f2fFelgZ9pwfEUiZdORKKEEW64PAFXbXZW4QqTGvhvNvo1E
      OMkeACAAnFgY7AHA2/CV2zrqxx5M5T39e+2rN5q6+ptiIddvLClGkyhJUgIAns/zVbtquwQj
      gpHPBBcrn6ITp9By4+sQHnUAgFNta07P+1AkEvqbtnXULwSOqTxy5aLe2nX54ntaJOT9p+Os
      vKPWFBqcKFGCMwktCPmv+B1WqhNKdSLcUSHuyiHZjEdkqfHOK+o6oEQyduPiO65VefPSzXAt
      L165FiCEmCmalGCZYsvxPcaFEC3xCFlpDeA0wmkk3CwNxH0tfwX5FrXzcuWOZEzBZt1wQnAD
      xlbq6jXLEV2LKNmq9Mix/nAtr1i65vrc9VlPSzypK3dmKyXDySS0TELTFGk8V2FcIAQIEABw
      Iex4X27Pi5lrXw13YG2DX266+U3iValTFEQudH90/Mw/4vKGMyELhi0R3GjZrvWfDFHopbgA
      UKlUlr+IERIAjHFNoTFN7sskWpMaEyKuye0pHSOEAAGI4EAAE6nU9TSXooBC2xUjAMnOacUb
      ijFJfJM4xebhb6TGvr8JU6pESqZTtbcUQQgddZ17OGOtba2iGP7h9ophT0pQUlfG81UEoEgk
      qkpFwylUbUDgM9GW0nWFlkxntmRRgjzG45OvltqfjM28JTn50EcYAAFsznjF9ChBVcuNqlLj
      TD/1Y49VmLw0PD42MtZz9GzoxlcswkcIpXQlFpEFFxLFPuMFw+5qjhGMxnPViuX6jJcMVwC4
      PkcgMHPjM28if2NJrrUj+MyxbyPfRsCxZ6rlWwIRV++gdh6BsBL9gq68sfI5F4DyVVsAYIzS
      UbURssbqxx412d6TGd935LiuruDhbhG2ba/4OkJIIggIAAAXgAFRjBEChRLD9ubKJkYYI8SF
      IF5VsmerzScSEy+HPrzFaB38StPwXyAhEHeJZwhAnEYwcwDAV5LV1rPl9icLPR9b7hsJAY7H
      ZsumrkiG7fVlEgTv8CRUP78HIdTe1jR85fKFwRuhG/e89R0CmWJK8VShmi1ZhuPJlBCM97Yl
      YhEZAQgBAtFC7/OAMGxnuirmrmzNSvYcdctIMCx86lWCTA/ZyqZHv9P7+j/ue/23lk+BQaaA
      z0TJdA3bs933y0gs1x/Nlm5NF6v2vFcghLBcf65sGba3fZu1uvo9t27evH3zFs70hm45OHhf
      Gwih9lS0YrmM8+7mWMl0qrZbNh3T8QQAk6LF7uc63vn9cAOGm0Ns6vVIcchsPr7aBR7jlutJ
      FGOEbI/dzpUVSlyf3ZgsSIRoCo3I1HL9mCpNF41UVE3pihBguh4AaLKEQ5q06sqezq59Wip1
      dXKZ1yzcd15/E1JdLVL1Vl6c3Jt+Z3Dk5COPJ9SQl3aCUVKfT+BKR9WK5c0UzeAzQBhxSVOM
      CTsxgH1DNqbCffRGIDB39bmLsjGFhI+YU25/0o+0LIly3p6rEGxQjBgXXIioKpmOJwT4jFcs
      t2y6EYWaru/6bLpg6AqdzBtV2xMgoqrU15IIhUB1ZU+1MnPh4g2udyx53S9nL98pPHfgxDtv
      DsYc5yflyKHm5FvXJj56stZDouVZ8euCYNzbEgMA2/E94QsAtXQLhJCsOcRsACyA74hbgQAQ
      c3re/ucLr7iR1uFnv2KlDi6+LCCKf3eizFXmPT8uBAhAALbru3frG6/cyQOIVFS1XFYynJLu
      hJIrXd8zds8Ssp6I3bPKjF1/L+9Hnnvq1NuvvYZkIksUAZJlBRwolUpCCN/319VUFEJsTnex
      Na6MzHqAAATYXU/w9yLEqwiEEXABWIAAEDu+P5atmZZrf3r7sd+r/RYBwLhgd/23IJ8pV7EJ
      RkJAvmJGJLRarnSgHVaLt1RX9pSrdltHRyLRtPjF3gMnOsz8629cyPTsTUB+aMY7u7/twrtD
      pz58LJGQoTbtsHg8vrkMKRlAV+zgFKkAfUbLCSXZId36oXBKQZVgg4D44YiEBDndVdvPVd2O
      dHTF0FGDZocdOftUxbQRWfoxS1r6Q888F/x8CAAAPtFzYEOWN1qJvBgJTZ3IVzRF4kSttj0K
      1RGJ+wBIAAIQCITAFLi/szOQldzYG7IaEAIhgBBcMJxUVNWULcX963pS4VbmXnvllcvD46Fb
      3pwKQoCkrnSkox7jAqG5g78ozV1lUpQpCV9NAyCOJY5lQHgrye1bR/PQnxGntHU7wXKU0lWM
      kLHlc4+6sufm8K3eQ0fmpsdCt7yuJO8awBglNEUmOB1VpYjuR5rd1P7S3hedWLegCiKy2f5I
      EATaQQLJ5rRaHg3L2nTRsF3/Tq5ybSJfNp1NB4Tqyp7DJ0/kb9/q6t1YznIt4HxLPorPOMZI
      ADQlYsWjX5BLtyRjKkjN4WoCAYDgAKIuNe8rg8kJO94Xrs1MQnN9Np6rLqjGbBR19XsGL5wn
      sSaZhP8N3qLyXKBWwbkom67f8+xY+mBm/KVKci8gnLzyNX3iVRAAmAIA8M0vkVvBXP/fZkoi
      TIuBA4Sxz7jH+Oby7evKnqaW5omb0w4Lf8LbYkkKRqg9Fc1XLC6ERKkW69f3/2bZsKfzZc68
      5sH/Z37WCaiDCfC7YZbFP4eNYKJDAJyopa6nQzYuIFsyKUZcbL4qu67s6Tl4uufg+pdtAlvU
      TEUIKRJpT9/jPOkK3deV4TeS0DyA7DIwF8wcAMD+52HsZ2AVAADuWTFD148Kzt/A1dp8tWn9
      yzcOARBRqGF7UXUzX78dSJWdGB0anZwN1+Y2qX1TgmXhoIOfBCJBtG3ed77xElgFQBioClSB
      zGGQNCFFWDTDtWaBSFj+EZo3gyUrK5nTYZhc9giEPJ9tWlyxruy5df1qxfHae/r7OlrCtRyW
      ZuoKOPwZmBkETMGtAEKAMHAGCAORoP8ZiLbCY78OXQ9BtBWbOWTmrNR+d9lRzCYgAATCxe6P
      zhz+ZU9tTt7+4dZtLgECYJwndSWhbXLdryt7dIm99Fd/+c3vvxq65S1qpq6FzjNw+guQ7IHH
      /js49XnIHAI1AVSFA5+AmctgF+Had+D45+CXvj376D/JHf4l2cwKIjM5Ie5u77cyD2HumunD
      xDfRKoVEWwFCqLcl3tUUI3iTNKir35OdnS3k8hIJ/5PeSrRwHSAE42/Ck78Jez4E73wNRl+F
      n/sj+N4/hOEfQstBiLXDE78BXQ8BIoUjX0iaI54wR/b98t6/+QeIu9i30abIIwCCVTI29dNo
      9gIncqHnYyH/XQAYI13ZUp5rnStyOh595Kgih98VYCsnFesj0Q3ZK2CXYfivoeMkJLuheR/s
      /zh88SXoewo8M9jMN8cj1UqZUU0t3ZTMLKcRgTBsKsKIAASirtZutJyutpwcefL3K+2Ph/1X
      gc/4VMHYitxnXdkTUcWNO+We1jBrkAOo6nbK2xz/HJTG4bv/ExRGoeUQCAGVGYh3gGeBXQAl
      BgAIoXRUbd9/miPSfP1rnMjYd5xYL1slT3l9CE6dgmxM2fE9rt66TWHukumYjr/pWDP53d/9
      3VDHsxZuXr10dWzcddmxQ/sXXsxP3uGqNvTe+ZIvecXxwdG5lOKff/dKKtMuUwQAtm2vSw7L
      srZyWLEiGGPzZWJUgT0fgp7H4chnYPQ1uPKXoMbALsPNH0G6Hw59Kph7EEJA5HHtsIMiavkm
      Ekw2pzFzNvexI+CYe9QtR+feS95+ycic9rS2u78LjUmqRD3GErqyeP0SQtTYG7Cu6k9Ttwbf
      Hhw5fPqx/s6mYLC2kfvGV/7fs5/51PhkuTo9hRURt+1KUutPxKakPc+e6AKAYrG4rn7PzZs3
      +/tDrjBcWRdHcOAMEAIjB8KHaOt8DBoAACzXny4YZdPB1en45CtqeTQz+JVQPmqOJS7p2LcE
      IDfaaaUOTB/9b6zkgS0yKaUrrs+a41pSVxaUWRsxQ0MIEU0kMXOvvvPGTLb/sWN73z33evvB
      R/b3d3HGZFWVCOIYaQotcojqOrNY7dlhnueF3pV3TU9cgJICAPA5wKLncsE5pxjZWmtu32eb
      b/w5QJDoB5tznxeAuYedeSmgSOlmpHQzNv2GmToMCLt6e6X14UrbI766NHt1XRQMJ6pS1/Nv
      z9odKS3IF2vE7DCnNPPy6++07z28b2CPKmFMpdOPfhgAis2ZdGvn9NDL0fbeJpS/PuM+MtB+
      4d2hUx85kkgoUFt2WCqVaoSOjUKITBKNZkvBP2KTrwEiINh2+CySnU9MvRb83Dz0506sd+yx
      36u2PrxRO67P0/FItmhywKoswUbmnvqtXJx5xVJlfPjSaFl+8bnHar+xlpXrzp073d3dWxvg
      UmxC0Y1xcXu2nNSVyXzVNwr7f/h5NX+Vx7tJ+Xa4Y1sOAbjU9ZGbT//RJu7VVQkA+lriqkyh
      MVeu0viV167njELJ9R3TOaspYT56NQWWOoNxLgB0VVIkomkKUxKAKa7WozwDAcfehksDAgRp
      YrNlqzMd3VCtRf127GoyQ2zz6WefPnLksO+F7KPsbDvwBRCMEYBhe0KAR6P8zBeZmhZUvbvf
      3t7kMi5vcteJADBG2ZJ5c6ZYqNq1L0f1Y4+kJnq7W69dftesVKtOyKHhBhF/xQja03rV9ijB
      lOBc10fN/+ob6OyvQHovAGx3cplaHEZss19LAQBg2l62ZJZr7sFQvzedKtrRUw8FtA5dBaJS
      qSwIxu4gEEKKRLuaFs8BSZRsgtwQHHgBLnwVnBWUYsKCXJ3Q597dhOMs7jb68Lmo2p7rs4G2
      RC3p8nWNNQ8PXporG5YTvgJLLaGt+gABoHsBc0OQOQyP//eghpocuPzRwo9PvApbPk91fT6e
      MzyfrbuE1ZU9ybj62o9++Nr5wdAtr6g81yhI9cHcEPzwd6AUfjHJvUBqZQyFkTtbttzrE4Wi
      sU7CfF3Zk52ZqTDkVMLXVmqQPdfKSPXC3qfh4p9v/5MEk6IiJO0zx2djs+Wy6a5BoPrOPcmk
      mZ8WdH29i40i9EBzmEAY4m1AJEBIbFyxsHYIogDwEE/BOBf56srCSAHqyh7O/aZU03Z0AG3c
      lUsIKE+Ba0IkDYiAu41eM2KOq3eGGBdY93OqK3umJ8blWGKJCkIowJvNjtt2lO7AD/4JzA1B
      91noOIWoApIGNPwMJwAQRCFuOcS5B+7WKq2Gur7pbZ09hDv+lnueL0e1Wg3dZji49A04/Gn4
      8D+E5/930Jt5z+PgmeBvi5eGmMvkKIQ6tVcs11+9IVVd2YO4W7ZER1tz6JYbJFq4AqgKrgG5
      m/Cd34Tbb0Dxzt1fbEvcOVK8iXiYLqDl+PnKqq7PUvZY5dkL5869c/n65NTM4jIF16qUDQe4
      N5PNA4Bg/sxcdi5X2NBQaCSW1tClq8OLXyxlp03fH7p88cbo1NzEyHvXbpnluXffvWS6G5ii
      GuSkYgUc+yyMvAL/8echfws+/i9RLMjwQuGuLwEEokyOhjsjCADTWVX5cOlXdnbkylheOrZf
      u3j+3KGj/WMT5YN7W98bHJWdqTnU0pJQFK1lZuSyG2kBa/yNN24/9+nnZbfaNXBArmHMzLWK
      ZSve3rbwim3k/urrf/bk3/ncuWt3PvKR3rfefJsa9uRUrFWW37yefvpYZ41/5GqaqTuPaAY+
      8o/gq5+Cn/tj6DjJjDwd++l8x8iw4emtM4e+IHDI07Dl+lwIshLdV3gSZ4wxDuC9+pPX4qmW
      Hw8NP/aZF6pX3UquYuKm0uRVDJkzJ9QL183W1vbZ8RHfY337a1KXKeaLTR3ts7lZABDMu3jh
      rdb9Z/bv7QQpefZY75s/fR1LtEWTx13e3J6aNbzas8MMw6hvdthGoDbTtpP83T/j5Rly/bt8
      38fx8A+ECF+VrNzxpJ3cv/51G4Tt+cWKFYuscHSxlD1yRPfN6YnxSUlP7ktF54rs8PHWcz96
      pbszDcJKxWMu73QL4+evOIlkM1Sqaalitj1S41y59/Cxmbcvnzl1AgAA0yOnHsaYziWS2Ddu
      jU0kWtoSkB+ewY8cbL/w7tCJpw8nEircV9lhq5mBF/8P/Mq/gnNf9g+/SE58Dr728yg/AlYh
      lHNTcbcCWi0Og+B3xWJCgxBQcfx0XFt+Orm17DDuXTh/6eiZ07UsWwBw/rWfXJ8zdIl++hPP
      1/6QWrLDpqam2tvba7dZC8Lq97nUpiTB5W/Cf/p7AGKLZ1ICUYEpYjYgDEJwol5//utW+nBY
      ow2AACIKPdCZXq5zuDWeYun02VqpAwAHDuw1Jm8xOfyKnE1opu4YjDkY/M/QfnwrUR9x9/++
      mgYAAOxHmrmk6XMXQxnjkme5PltR46euO/axkZGWrr5QkwrnsR19d7YLpTsQ74TH/4etOM7z
      yWaCAfcFplZyX6nzIwIRM+yJJwBGaEGF/p7Xt+Nhqw5C+C5D2xEX3t5qwHCR6ILKJGhNoG0p
      7jXf7/2ZL0+e/E25OhHNnps88RthNbJcAp+JFTsT1jXIJgSSFUmWwn/o9lYihwu9BT7yj+Gn
      /xbsLTXbRgCFvhfM9CErMRAp3pg+8mt2YmA7wkgBVlRpqevc09nb51VKYaUQLMY2qiCEDoSg
      9TC8+O+hqR+WiQ/X/uYIRFOj39WzF2IzbyHuuXrH9lFHAOy83zNya2zg+MnS3GTolrdRgWWb
      UJ0GAFBiIN2THVB7P2830uxprb1v/k588pXJ0/8zUWPbl3MvhCiZDlsmLVo/9nDm9x8+Dmbl
      5KnToRvfRvWnbYIcBVkHNXm3kBktnHwJhGtxpyWnIBnT2YO/NH7mt1y9kwtBCKYE61sT8F4N
      2ZK5PNenfuxxq7nzP/vRG1cnJqZmQje+Tcpz2wg1AZIOZg5ibdB2DGQdkt3zBKotCISYg4BX
      M6cpwYCAc8EY51xY7nYt4oXq0tSAOlbkaIkj+/d09A0c7q+1803t2KLq5c4gkoSjPw9f+A6c
      +WUAITzzrkhqrf6LpzZzos6n4CAIChHbkvNLYegLWdBSbnGcoX57LmZXR4uoQzFHJ2ea0yFX
      F2zHMcX2AmE48wX4L78B3IfiGNAIGDlASCCKaujZLgAQgJ0ccPV2cJlEMELI9ZnpeJbjLVwT
      LjCCbMnsbo4tMLN+7JFjzWcfShcLRUUP38O9n2LNARCC3sfhmd+G974OagKa+iHVB9OXQImB
      lVs3kIgABML5vk8Fp1oem28lJgQoMvHDLra8O2S0JFGsrvGeoffevDVnVhz0C594JlzL9VQh
      Cg0Iw+FPw8BzgBBc/x5668ui51GYOA9CAMJAFMF94N5qC9DdbJ67xhASQnAhzO2hDgAIgOb4
      PVHZOivPqa7rLPZRfMcYun69ajt3bg1NzZWK2YkbIxN2tXD9+pDtbeAEMXThsDoBIVCiIOtw
      +NNw7LPIt1GiCxABrQn6ngBlrT8Kczc+9bNFL4jAXaIrBYVDQUKTo6q8+KS9fnOPaxVeP39Z
      S6ari+LC5XwWsPPSt76lNrXalWFZclDZGe2MxzjM+NEPHan12LyWnsgNDSLB2V+F05+Hb/+P
      ULwNVgEm30WBHP0qEvQCID7xyvSRX+VSFAC4CMpYYTvSxgNYrs+5WCyyUT/2SGrymY+/oMdi
      lEoAIJh3/cql5t5DMDt7YP/egtBEdYRjuS0u7lj8YF/7FcOpPTusXC43bnZY7TZ9l84NQXqA
      Hf4MffMPAWG+7+Nk6KUV3SCBCPENpXJ7ISVDABCEAtEvdPcVCK8Bgu2yYtWMqu/Hk+rHHoSQ
      zM2rV28bLPLkmUOASXffwNTNc69fzZ45faRy/RpNdzWh/PA0f/hY27mLQ8ee/lQiocE2d5Zc
      G/W2yUywi5Dei9/7GjhV0FvI7NUVLxSICKICQKBLTzDiXEgUu3fPEwQARvOsowR7W56QgkgU
      YLJ4/HX1mm9cu3JptKAkknDmEEJYj8UHTj41cBIA4MiB+fYnZwEAoP/gmQ1Zvp8yNNaArEPH
      yUDrG7gLegac0vLgoQBgSgK7leyhX2JKEgAYFxih4CChMx11fTZbtrgAhCAiS6YTwrIuAIRY
      ujupq9fc29fb0d7SHNOzxZA32I1bz7UhEAke/W9h8D9DZQoQhuwgFG8DwtB2Ysl5KnbK2YOf
      nxv4LAAgBBghhIAQhACqttue0mWKAYBg7Hihrb8IoHpvM8r6ZoeNTrR195YL2fMX3gnXcuiC
      QDsAIcA14ad/ANyDE/81PPQr81t3TGHmEtwr6+RGu2aO/n2BpeA+LkQsImOEMEZl070xWQiW
      Kp9xtnot34YHCKDe2wSuruzZf7D/yvm3tJY9p46EnPqv6+FXN9cbzIVv/gpc/StAGN75jzA3
      BCAAUyAykKXrsmJM9s7+WMJCorgtGelujpVMh2IUi8ixiOz6vLspJhG8PBN5K1+yeERujt9T
      N1fvzNR4S6um0LbWTLiWG1pDo0ZMX4KRl2H/84AJMBdu/QT2vwC/+tfQ/fDyymWhxvWrf6Hf
      eRkDkgnRFAoCKMFtSb27OSZTLFHsc04wAoDFHNrQRITuytJjBJmEtrctsaSbTl29ZkWWPbfs
      bMMhcEPr92/oUxoAABcISURBVNQIKgMgaDsOiS44/yfgu/DQF6DtOBz9Bbj5k6Wfu28bsT3x
      ydfM3memiibBqCURqVhewbBNx0tHVY8JAOBCIAAuBEZIbCQev7Dh35tJYIQIwbpCl7sH9WOP
      kZ+8PTU3Pj7bhMJXS2ncSuTakTkMD30R3vpjwBJ0PgTJHvjx78HY63Dt20Ak4P77my9EIL03
      NvqD4of+175MYipf0VWlI607HiuZTltSj0XkiVw1pasl05mvvhDzVV+UICFgXWcIIQBAGAHB
      OL5677f6sUdPdzz8yKN69NK1bPhVw42rglA7MIVn/xkc/xy4JrQeBiLBhT+F6Uvw6K/D6/8O
      zBw4lXkCCY6yV3IDn7UGPiUJIQASugwAqkwDue7gZ992MUIcRJC54THueIzzWs8EuRAYYDJf
      JTimrTTxQJ1XruLcxGyVPPuhh0K33CCaqVsFkaDt2Pv/fPjXAACEgBvfA6cSrCfzLQcRsc7+
      es4SJbccU6XpgtnTEpMXJa6no+pcxUIIyRJpiUcmctWAMjVKbwVzExfg+OzWTOlAZ0re8az4
      UrE8fXvoR6+9GbrlxtFMDR9WHirTYBUgSHmWNK6mgPsw8gpwLgDSUSUVVZYk/jEuOBeB11wy
      XQCQCE5FVbIRKXiEgDHuMW67Kyf+1pU9sWT7Iw8f2Y7egI2rPLd15EfAtyG9F4gMCCPmYLsA
      gDrf/hdNQ3/u+9zyGOdiCSvyFSsWkYQQBKOK5RKCfc6FEB3pKMWoxnYCQsynoVGy8vX1Y49T
      zc45OD89lYzHwze+C/Zcq6FpAGQdBIe+p0AI4L6bHLCSA8XeF1qvfVUA5Mp2xfZS0XsybzzG
      k7q6ty0pUyJTfLAz1dUUKxnOeK6iylRXpIhck9OCESIYuf5Ozz1Gbsrnhhc7KPml0I3vhnjP
      aogk4cV/B61HYeKckKMCS9QtErcSm3jZk+ISwapMVIksWZLimjxXtizH8xknGE8XzWzJFAAI
      kOl4puPVEpynBLelNImS1fZo9WNPon3ALxQeOtGbaQ8/K343xJrXQOtR+IX/AF+6DJ//SxZt
      x+Yc8SrUKQpJC04Pyqa7xBuOReTWpOYxHlUly/XnypbjMYniWETSVZlx4Xjr1DChIJG5aHLO
      tVWqfOq35yKy/sTTzwBAatHKlR29fH7wVqprb3ZoqPvISXv62siMe+pY25XB0aNPfeJAe60Z
      g7vhnGsNIASIAKbozf+TupXs0V9V89dka0Yys4zxmZIlAM0UjUxSX5iBEEKaImmKNJGraAqV
      CDEcTyZEAERVybh72InQqinUBCNdkUzXlyhZccMF9WSPmbv90ivnAYDE2158dr67W6bv6IcT
      sTfP33IxOI6Ts9i+KLs8ln3k+L7BidmeJAm6HK6bqFUul5ubQxbTZIyFniC2JZuVLLaKKJJM
      zF0w1TZp7uLsvs8hhBASGGCuYhmO19O0tMGW4CKqSq7HdYWWTJdgVLXc5pjKuMhVnTX270HH
      Ey644PzWdLG3Jbr81Kx+7ImkOk/tn/nJmxcpigEA9913z72uN7WNjc2cOXm4YjqX371MZFJ0
      SKZVm8uX4umuYB8+3ytkTUjSlrrSr4hanltPmyjagrRmKE/J6S555BVXSeb7PokQcAGqRGSK
      ZUoM149H7gkNN8UjE/kq48JjvDWhMSF0hQohJvLrJ8l4jCc0uTMdnchXq7afWBZ0rmNuISb5
      sre3K3OjaAMApvLpRz9cmB6rJLWyA8wonXrsCZ2Xx0t8X2f8+vDEmX0tMkEAYJrmuuEcTdNC
      D/m831G7QWwSHZ79bXjryzB1sdr1oak9P+82HQr8WddnmYRmuT4lZIn9CCF7WhOOxyRKAhUV
      n/Gr4/kaMzcYF5SSgPTLR17Xjtr5ybGRqRkb9CfOHKn9rlqU50ZHR/v6+rY0uGXYLuW5rdgU
      AgQXgg1PlUxfpHRVkchEvkoxjqqSLJGO9NL1RQjh+tz1mSIR0/FzFYsLUTFdqPm8XVMoxXj5
      ATvU+aRCikTi8eTNwRuwEfbUgvtJgWUrQAgQqVrM9IAJka/alGCJ4N5MQqZYoWT5sli1vTtz
      ZYIx40KiuKc57nh+1fKWH1loMgUEC+VgBKNgfpIp6W2JL6cO1Jk92bHBb3z7p3r3sfUv3SDu
      13quTWGubLUmNdvzK5br+WxPJhZTV3X7pgtGZ1MsHpHnylbJdBnnc2WLEMR9gRCAmJ+BdEWy
      XH9xTDmgDiU4FpFXqxGrK3vKVfb8z312O2LNfJm0zC4GxogL0dMcL1vOZN5YccpZwIJQNyXY
      cr2JfDWqykwIVQLT8QDNZ9QHS1sQU168jdcUmtJXPVmqK3s6ujreeOfKnVjr3u6Q1XHvPwWW
      LSCT0May5bLpMs7b0/raB58tCe3OXEVTJcN2WxP6XMVyPL+3JW443q3p+QA9F4Iz4TNOCVYU
      Yjo+RtCW0oMoEVm9OLWu7Jmdnpb0uB4Lf5W5/zQ0tgBVIv1tSdvzJYIViaxdR5vSFZli0/Gb
      4xFNprJEClW7aDglw1Ek0pHSJ/LVoApMAPiM+4wH1WEJTZEILluuEGI1TZi6skdVFM8tOW74
      VcP3pX7PZoEQohQpQGpJ1kEIRVU5qs5/uxKaLFNsuX4yquYrFkIoECQkBDE2b44S7HI2UzQl
      iqMKXR4kXEBd2dN//BG9aexWNny1lA/UyiWEyJbNuZIFCMVUKRPfwDdn4QSDc5GvWMHRKQAw
      Nk9EiWDfZ4qEBQhdkRK6soZTVceTirmxl346GJX97uMfDt34/adbuAU4HpsrWXvbkgShkWzJ
      dKm68ZkXY7SnNTFdMJYU+DHOuYCYLPW0xOl6ytr1O2OPpDuP7+uwHWd8fCJ04/efZuoWEOyS
      VIlIFCsS8dkm470yJapMCUZBEk/wogCgGHWm9HWpA/U9qaD9h0/uPXTCMMJfZT4o0UIAAFAk
      Qgm+PVchGJmO3xzdvM+H4J4zdoRAIkRT1thm3YN6N4NFCEWj4efi3E9a8VsGJbgvk5AJBoA9
      rQl5zcaza0AI4XMeRI+C2GBEpppC09Fa2zbc/4UsAPAB23MBgERxe3o+8LHpvErHY7bLDnWl
      q5aXq1qqRDGCaESOKpRzHnDLdpm0yhkI7Dh7ClPDb7w92HPk5J2r7+FEZwrlR6bdU0fbBgdH
      jj71wkCm1lnqAxXvCQtBHEciOBVVqo6XiqqBspPnM8PxiS8mchVAiDHekY4mV9p87TB7Eq19
      vc3XR27ciHX0l26PTEjQp7rvjUw9fHjvldvZ7kRHkB227paqUqmEnh1Wy3Pva5uUAAYYz1UQ
      QowxhSLGmO2xiVxVpqhs+SldaU9pVdubLFSj6gqBn3r7PQvgvnvhjZdv3LrTduS0NTvlOS6m
      iipRk9N0TK2YpqZF7ksl1PsHGKH2tB7XlJgqd6ajQa17rmK1xCPtSU1XaCA7TzASYuV8jrrm
      9yyHZ5fffWdw38kz2aFLtLkvIYojeX60L/Xe4Oixh85oFEFt+T0zMzOh15I2Yn7PNtsUQkzk
      qlFVkggyXDaZr6Z01XS9dFTNJELvS1oX1MKe8fHxrq6ucJ/b4J/0dtgUQpiOP5ItcS4QgqSu
      KhSrMo1F5Eb0msNC4/Zjv6+AELJdP6UrukIpJdmS1Zlemma/GLuEPbtBgaUx4HOuSERXKMJE
      iIVa5JWxS9izGxRYGgMJTRnPVXzGHZ9HVWmNA3bYwT1XuNglmqkNAEUi3U0xjCAdVVtW8pQX
      Y5d8Zbejz/IHEwghieKUrlBKAzVWhFYt1d0l7NnNCiw7hNmSOVu2AEFrQl8ilbqAXcKe3ayh
      sROwXD9fdfrbkgJgNFuKRiR1pT7ou4Q9u1m/ZyfgeEyRSaCCKBHs+VxdSUVjl7DnwcoVLqIR
      ea5amSmaQgifC20Vqahd4mw+8JrDBcWotyXueL7LWF9LfLVssV0y9zzYsYcOTZF6WtbpPLTD
      7MlP3Hj9rfc6jpwZfedC3/EzxsTl0Wn3xLG261fHDj31ySOdtVadPogW7gh2eMJPdw70d8Tm
      pmaRKpmGWXTRgSS6NpF/+OTB21O52u08OKnYEezYVzZQf4qkO9S2vcb5ocPHj1y/MizJeNbC
      7Z361Mxcsr3H8zwhRJAgtrY1y7JCL2Wv5bm70maQllqLzR3O0PBd89at2x179ubHR5VUR0RU
      Ziq8NxMbuTPTNzDAHEsI4ThOfD3hhJs3b/b394c7Ns/zQm85eF/YDNhTi0rV++wJWsiGOIgN
      YejyYM/RI5XxYRfRO5PFdEuLUSocOLgPCcEYU9V1svynp6fb2trCHRLnPPSt3H1hM5jva7H5
      /sqVSCRCHMFGgZF97tWfxqLQ3b/v9vC5RKa7mC/GEgkKYJrmumOzLGvdDLKN4r6YJ7bDJuec
      c17LRqRBtipCiyXUfJlGMsODV7v2H85N3sR6QldVBGDb9rqzaC3XbBQNp1tYL5vBmWgtNhuE
      PWjvwIGWrn2phFbIF+OptFUukEi8dnHRXdIT+X5Dg7AHFC2maAAAzS0tACCnN1Zes65j9ADb
      gV0S4P9AVSI3DnYJez5QKgiNg13Cng+UZmrjoFH8ni1io8FWIYTHOOdCnhdCB5jXmBUIobVT
      wR9gAfc5ezwLLn8TCqOgH4H2TwPCQT2b5fqaQiOytEADj/G5ssUYT8fUiExny+ZEzuBCRGSa
      0JQg4JYtm5yLWERuSUR8X1DEJUl+QKQ1cD+zh/vwg38K178PgrVaJZh9FZ78UsV0pybvmHo3
      qPGkrrSndIlgxsVotux4vs/EbNmiBHmMB4XZlutbi/rDY4QqlluxXABAAHLBaolrqZgCABTj
      GhsyfnBwf1YiCwHXvwPnvwojL8OZL8CVv/KpTgvDQm/hHBiidrxv7LF/4UY7JYIJRsEiJVEc
      SMtuFIH6dVSVuppW7S1dIxq8EjlAIMpRSwjt/mTP8A/hL74AejMURgEQYBr0/pj/LaIC4WL3
      c6NP/CtBwnxbEUAyqhCEIrLUFIsgBIBg9XqVFbDL2HN/rlyD34JE513FPQHcg8XlssIHAbGZ
      NxMTLxd7PhriYwXA3cbVdq5qSwRRgptiEV2Vwm/ldT/g/mSPEoPZ62v8HgFgZkcKV4vdz62m
      c75FBI1hFUrKphtRaEJTmmLqio1kdjHuT/bUsNpiz9DyV5DwBVplBuZ+8/BfNN36FmIOJxEk
      GHHLS9t0IiSwXM2cnTj5JS4vFfUVAhyfAUDZdMumW6jaqkS5EC2JiK6E36uwAdGI7JkYfu/C
      5ZFjT36sr3mVOht5fT1DBBCdeRu7FaamgbP41GvJ2z8gbhkJDgCAMHUK0ZlzCNb3o7XCtWj2
      nBPtDP4psDy7/+9UWx8GhBZzrWp7puMBoLLp9GTiKX33H701InvG79w5tr/r2li2M9EphPB9
      v1qtUkoZY0HeiZToJQCwavONeWDmIAAQom3wj9sv/iHmm++PoRWuaoWrC/9MTL4y/MwfVzNn
      l1zGBQAILuDObIUigQUnhPi+L4SQJIlzbllWPB63bTvInvF9H2McXAMAi//GJb9dsBDkY2CM
      Pc9DCFFKbdt2HGfdWxBCC79deIoQYrlB3/c9zwsOntceQyOyR5YVx/VURQnymn3fN01TURTP
      83zfVyjC5/4Ex7tQZRLEWjMHUxLUziHutg7+31uhznIQr9p54d9c/9ifAl55WXR9Np4tNutU
      lmXXdRljkUiEMWYYhqZphmGoqhok3UqSFDAAAFRVDT45RVEQQkHS0hILwQ6LEGLbNkJIUZSF
      ewODlFJJkhzHEUIsGJRlGWO8xKCqqpxz13UXxhAYdF03qOwOxrDE4OIxNOKO3SzNXLh46+Sj
      j0allXQLfQe+9rehMAalO2vbERDs3hHiXug+iEBk6JmvVDMP3Q0KoCUzIcXoQGdavbcKc5ft
      2BuRPUuwlD1CwOv/Hn7wT3duRABBNyu1yZcTgsgAqJo5PXniS0yJLw4dtKf09pS+2H3eZeyp
      88olHNsmskq3EvJHCGQdJB288Ds1bWAUAJKdk+z5orNI4apkzY08+fuCvP+mTxcMAdBxL4F2
      E+rHHtcovHvxKkOYeV6mb//+7i0I5MY7dpY6y4EAEuM/1nIXjcyZhRcFwEzBiCpSYvXWnvc1
      6hfdkrTkwb3tuWwWRTP7ujJbsmUWQImDmgiWiQZZejH3Mte/tuRFAXAnV/E2db7W+KgfexBC
      N4dudh84PDVyJVfcmmjBnqdA0kDSQG9Z/PIqiub1A/ZXEP51PDY0VTCd8Ptp7jjqGllv7+qc
      m7idSjWVqltr0RXvhM/+CTTvA3MueKFBph8nurLiuOX6IzMlz99tDQzryh5KZVWRb0/n+rfi
      9AAAQtDzKPzd/wSP/wbMb5QRI4qV3M/kxA4yiXgGtWaV0i3ilEDwxax2GZ/IG42/w90Q6rrn
      sq1qqVRONbWsf+m6QAiIBB0nuJq0mw6XM2djYz+cOfJrTqyn/2/+gWxOh/CIjSM1+u3ExMvY
      N3wlWc2cmTzxJTfWFThnnIuiYac0ups6idV57pFUVQmzh2jTgJ/oIVTWp97A3Ku0Pmymj5Q6
      PxSa/Q2CMFuyZ4lvKsZk08h/6X3znyE2L8cZdJopGLtKnbN+7LHyE29dGsrl8u6a3ec3hsxh
      dvqLnChMSUye/S1fbQKEXC1kOYRNI5K/QtxK8DPjQgjBBOymxat+K1ck3dnbdHXWT+ux8PqS
      YkLP/N3pzo+WTMcl82bdVVzX+gMzh/iGD3frYhFYrs+FILsleFjXlWvPwD7CvHD72VBCOjs6
      ohHlYFc6FpEBwErsa5BvN/ZNLXd54Z9CgOOx0Ww5V7Ecz98Fk1BdveZrQzfzM9OWHmbdZ1CN
      pUpEU6SkplQs107uc6NdSnU8xKdsGthfWiJdMpyi4WCEmuMRTaEAkNQVjO7L1Na6sufgwCE1
      qg5NLwu8cvMnL72S7DsgGRO3Zr1TBzOXBkeOPfFcd6rWBKtAMzUVVfKGbdgwc+iL3W//8wb4
      NJAXWRpVDyYcLkS2NB/0UiXSkY4mdOW+q0KsK3vu3L5+a6qsxJa+oV45NzZXyOyXR0eKGd99
      +7pxak/rlVvTHSe7a9QtJIRwzglGezPxiu2pow1yMiAwW1+ewfbYyEwprimdTVGJYIRWb4i1
      4jPC1i0MltRabNaVPQSYzUT83tTxsevv5RzpxRf/1ut/86pQqI+4HpF9xmRZtiyrxp7IkiQF
      1yCAuEpx++Ft/DNqBgKIzbxlJQYw95mk+2oTJ+qKCZECoGQ6ZdPBCCSCm+NqSlcAISEEgnVK
      fkLvs1w7HevKHsaEqqqKfE/iSO+BE92+9e6583uPn0nw/NCc//hAy4WLw6cfb4sqGACKxeK6
      uSZL81Ey+0COgmvs+BlG840/axr6/xBwgQiTovk9n5w+9utsWYJ9AAHABDCfT+RN0+UIQdl0
      VZl2NUUj8qpViEHCaIhjbtDsMM4Y4xwQkjYizl1LV9vh4eGBgYHFT4KvfgrGfrbj7FkCAXDn
      7G/PHvzFDd0lU9wS11JRVaZ4OYd2MDusrjv2mZHBb33rW999+e3QLev6vTEkTODD/wtIEaCN
      VdiAANTy6Ebvcn0+ka8OTRUWl9w3Auq6cpULRT2ZLlZK9XhY7+Nw4AXwTLj1N+A1kLKYUr2N
      mCPQ3Xce4RrrFR2PTeSrEZlGVTmuyY2wQasrezr7+0dff6etvSd0y4axLNWQSPDs78DP/gC6
      H4FqFrJXQn/o5hCffPX4Nx6zUgeR4AJQYc8n5wY+W2O9fdl0XY+VDJdxLR1VdzxEVFf23Bi8
      0tw3kIzV2rukdqy88Kd64eP/EpgLr/5rKN4G34FQ63I2ByQ49aqx7Lngn9G5d9XiUKH3BV9N
      y+Y0o5qVPrza1gwAMEaU4JLhpKM7vyj//zuzIosNC+hbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 17' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 82' width='191'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 90' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Conserve-by-' width='192'>
      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
      wl3x/wD1KcCN9G3CSAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 93' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Compare-builders' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='Sheet 94' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAACQCAIAAAAeHsdkAAAAA3NCSVQICAjb4U/gAAAACXBI
      WXMAAA7EAAAOxAGVKw4bAAABQElEQVR4nO3SMQHAMAzAsKz8OWePObSHhMCHv90dmDm3A3iF
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWIFYgViBWI
      FYgViBWIFYgViBWIFcgP9eEEHcxAtUgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
